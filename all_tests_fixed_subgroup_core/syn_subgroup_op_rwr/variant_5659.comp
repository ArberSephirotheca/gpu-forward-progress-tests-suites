#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true)))) && _GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(faceforward(-6.3, 933.022, -4859.9019)))))), true, false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asinh(-4.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3343.0561)), bool(false)))))) / sqrt(abs(1.0)))), 0.0), vec2(1.0, 0.0))) * _GLF_IDENTITY(((injectionSwitch.y)), max(((injectionSwitch.y)), ((injectionSwitch.y))))))))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.y), bool(true)))), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.y), bool(true)))), bool(true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.y), bool(true)))), bool(true)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.y), bool(true)))), bool(true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), false), true))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)))))).y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)))))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(0.7))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)))))).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7.3)), float(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(true)))), 1.0)))))).y)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), false), false), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(false)))))), true, false, false))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(1.6, -27.36)) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (! (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(uintBitsToFloat(workgroup_size)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), bool(bvec4(! (true && (false)), true, true, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u) + subgroup_local_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(122001u))) + subgroup_local_id), _GLF_IDENTITY(uint(uvec2(1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(122001u))) + subgroup_local_id), 1u)), (_GLF_IDENTITY(uint(uvec2(1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))) - 0u) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(122001u))) + subgroup_local_id), 1u)), max(uint(uvec2(1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(122001u))) + subgroup_local_id), 1u)), uint(uvec2(1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | 0u)) - 0u) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(122001u))) + subgroup_local_id), 1u))))) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), vec2(_GLF_IDENTITY(mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))[0], _GLF_FUZZED(-1.4)), vec2(_GLF_FUZZED(-5448.2431), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9907.8967), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5.7 * -833.890))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))))))))))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(vec3(min(injectionSwitch, injectionSwitch), 1.0)))))).y, true)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(2.1))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))))))))))))), false, true), true)))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)))), subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))) - 0.0), injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))) - 0.0), injectionSwitch.y))))))))), false, true)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))) - 0.0), injectionSwitch.y))))))))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(((virtual_gid)), max((_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid))))))), ((virtual_gid)))), max(~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid)))), (~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid))))) | (~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid)))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid)))), (~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid))))) | (~ _GLF_IDENTITY(((virtual_gid)), max(((virtual_gid)), ((virtual_gid))))))))))), 0u + (~ ((virtual_gid)))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))) / 1u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), 1u * (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))))))))) / 1u))) | 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u) + (~ ((virtual_gid)))))) | 0u))) - 0u) - 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (_GLF_IDENTITY(~ ((virtual_gid)), (~ ((virtual_gid))) | 0u))))), clamp(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), 0u + (~ ((virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))), ~ (~ (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ _GLF_IDENTITY(((virtual_gid)), (((virtual_gid))) | (((virtual_gid)))))))))))) | 0u), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))), _GLF_IDENTITY(0u, max(0u, 0u)) + (~ (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ _GLF_IDENTITY(0u, (0u) + 0u))) / 1u)))))))) | 0u)) - 0u)) / 1u)) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), clamp(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))))))) : _GLF_FUZZED(next_virtual_gid)))) >> 0u))], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((virtual_gid)), (((virtual_gid))) - (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (((virtual_gid))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))), 0u, 0u), (_GLF_IDENTITY(uvec4(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) | (uvec4(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) ^ 0u)))) << 0u)), _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), min(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))))))))), (0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(max((virtual_gid), (virtual_gid)), 0u ^ (max((virtual_gid), (virtual_gid))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), min(_GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid)))) + 0u))), _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid)))))))))) - 0u)))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ _GLF_IDENTITY(((virtual_gid)), (((virtual_gid))) | 0u))))) | 0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid))))), 0u | (~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ _GLF_IDENTITY(((virtual_gid)), 0u ^ (((virtual_gid)))))))))) | 0u, 0u | (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | 0u))), clamp(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), min(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))))), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), min(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))))), 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), min(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))))), 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), min(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))), _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) | ((~ ((virtual_gid)))))))))), 0u))))) | 0u), 0u ^ (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (_GLF_IDENTITY(~ ((virtual_gid)), (~ ((virtual_gid))) / 1u))))) | 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | 0u), (0u ^ (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | 0u)) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid), ((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)) * 1u)))))) + (~ ((virtual_gid)))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec2(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), 0u + (~ ((virtual_gid)))))) | 0u, _GLF_IDENTITY(1u, (1u) | 0u))))) ^ 0u))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), uint(_GLF_IDENTITY(uvec2(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u), min(uvec2(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u), uvec2(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) - 0u)), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << (0u ^ 0u)))))))), 0u | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) | (_GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) | (clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))))), 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ 0u)) ^ 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u << _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(atomicMax(subgroup_size, subgroup_id)))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), uint(_GLF_IDENTITY(uint(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), min(uint(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), uint(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) ^ 0u), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))), 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), ~ (~ (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(3403u)))) >> 0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), 0u ^ ((0u))))) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), max(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u)) | 0u)), 0u)))))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(3403u)))) >> 0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), 0u ^ ((0u))))) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), max(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u)) | 0u)), 0u)))))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(3403u)))) >> 0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), 0u ^ ((0u))))) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), max(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u)) | 0u)), 0u)))))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) | ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(3403u)))) >> 0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), 0u ^ ((0u))))) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), max(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u)) | 0u)), 0u)))))))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))), ~ (~ ((_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))))) << 0u)))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), clamp(0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))) >> 0u), 0u))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))), max(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))) / 1u), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))) / 1u), 0u)) : _GLF_FUZZED(subgroup_local_id)))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))))))]) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ _GLF_IDENTITY(((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), _GLF_IDENTITY((((4))), ((((4)))) | 0) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((_GLF_IDENTITY(4, 1 * (4)))), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) ^ 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4))))), ((4)) ^ 0)) / 1)) | ((4)), min(((4)) | _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), _GLF_IDENTITY(clamp(((4)), ((4)), ((4))), 0 ^ (clamp(((4)), ((4)), ((4)))))), _GLF_IDENTITY(((4)), 0 ^ (((4)))))), ((4)) | ((4)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((4), (0 ^ 0) + ((4))), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | 0))) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | (_GLF_IDENTITY((4), ~ (~ ((4))))), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))))), (_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((4)) | ((4)), ~ (~ (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))))), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), _GLF_IDENTITY(((4)), (((4))) / (1 ^ 0)) | ((4))))))))))) ^ ((0 >> _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(8), int(8))), ((_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | _GLF_IDENTITY(((4)), ~ (~ (_GLF_IDENTITY(((4)), ~ (~ (((4)))))))), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (_GLF_IDENTITY(((4)), _GLF_IDENTITY(0, clamp(0, 0, 0)) | (_GLF_IDENTITY(((4)), (((4))) / 1))) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec3((4), 1, 1))), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec3(87918, -77232, 22784).r) : 4)))))) | ((4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4)))), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | (_GLF_IDENTITY((4), min((4), (4))))) | (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) >> (0 << _GLF_IDENTITY(int(2), int(2))))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int(~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), (((4))) | (((4)))) | ((4)))), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(((4)) | ((4)), ((4)) | ((4))))))))) | ((_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), ((_GLF_IDENTITY((4), ((4)) | ((4))))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | (_GLF_IDENTITY((4), ((4)) * 1)), (((4)) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)), ((_GLF_IDENTITY((4), ((4)) ^ 0))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))), 0, 0, (0 << _GLF_IDENTITY(int(5), int(5))))), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)), ((_GLF_IDENTITY((4), ((4)) ^ 0))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))), 0, 0, (0 << _GLF_IDENTITY(int(5), int(5)))))) / 1)) | ((4)), min(((4)) | ((4)), ((4)) | ((4)))))))))), (_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(((4)), (((4))) | (((4)))) | ((4)), clamp(_GLF_IDENTITY(((4)) | ((4)), (_GLF_IDENTITY(((4)) | ((4)), ((_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), 0 + ((4)))))) | ((4))) | (((4)) | ((4))))) >> 0), ((4)) | ((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) ^ 0)) | ((4)), min(_GLF_IDENTITY(((4)) | ((4)), 0 + (_GLF_IDENTITY(((4)) | ((4)), (true ? ((4)) | ((4)) : _GLF_FUZZED(64787))))), ((4)) | ((4))))))))))) ^ ((0 >> _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), int(8)))) << 0)) >> 0)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, false))), _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec3(true, false, false)))) || false, bool(bool(_GLF_IDENTITY((! (bool(bvec3(true, false, false)))) || false, ((! (bool(bvec3(true, false, false)))) || false) && true)))), bool(bvec3((! (bool(bvec3(true, false, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) || false)) || false)), true && ((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), false, true))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.2) : injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.2) : injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) * 1), 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(160982u))) + 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) < injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-1217.6445 + 3.4))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-3.8 / 6.9)))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-1217.6445 + 3.4))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-3.8 / 6.9)))))) > injectionSwitch.y, false, false, true))))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))))), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (! (_GLF_IDENTITY((false), false || ((false))))) || false)))) && true)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED((false ? -68.63 : 587.399))), float(_GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x)))), bool(true))) + 0.0) > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float((32936u >> 118485u)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, read_1))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), true, false)))) ? uint(read_1) : _GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), true, false)))) ? uint(read_1) : _GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id)))) - 0u)))))))), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), clamp(clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1), _GLF_IDENTITY(clamp(read_1, read_1, read_1), clamp(clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1))))))))) / 1u) + 1 == read_2) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(91637u, _GLF_IDENTITY(2401u, (_GLF_IDENTITY(2401u, clamp(2401u, 2401u, 2401u))) >> 0u), 38001u, 98545u), (_GLF_IDENTITY(uvec4(91637u, _GLF_IDENTITY(2401u, (_GLF_IDENTITY(2401u, clamp(2401u, 2401u, 2401u))) >> 0u), 38001u, 98545u), (uvec4(91637u, _GLF_IDENTITY(2401u, (_GLF_IDENTITY(2401u, clamp(2401u, 2401u, 2401u))) >> 0u), 38001u, 98545u)) / uvec4(1u, 1u, 1u, 1u))) * uvec4(1u, 1u, 1u, 1u)).b) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(uvec2(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) / uint(_GLF_ONE(1.0, injectionSwitch.y))), read_1, read_1)), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : read_1)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, min(read_1, read_1))))) | (read_1)), clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, min(read_1, read_1))))) | (read_1)), clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1)))))) - 0u))) / 1u) + 1 == read_2) + 1, uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), min(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), _GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u, ((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u), read_1))))) / 1u, (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, max(read_1, read_1)), 1u, 0u, 0u), clamp(uvec4(_GLF_IDENTITY(read_1, max(read_1, read_1)), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(read_1, max(read_1, read_1)), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(read_1, max(read_1, read_1)), 1u, 0u, 0u))))))))), min(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), _GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) ^ 0u)))))) / _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), (0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) << 0u))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u), read_1))))) / 1u, (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u))), uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u), read_1))))) / 1u, (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u))), max(((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u), read_1))))) / 1u, (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u))), ((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u), read_1))))) / 1u, (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) / 1u))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) + 1 == read_2) + 1))))), 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, 64))), min((64), (_GLF_IDENTITY(64, (64) | (64))))) * _GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64))))))))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), bvec2(bvec3(bvec2(bvec2(false, false)), false))), false)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), bool(bvec2(false, false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false)))))))))), false)))), true), bvec2(bvec4(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false)))))))))), false)))), true), true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), vec2(_GLF_IDENTITY(mat3x4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(exp(0.0)), 1.0, 0.0), mat4(1.0) * (mat3x4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), 0.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(exp(0.0)), 1.0, 0.0)))))).y)) ? _GLF_FUZZED((workgroup_base | 124332u)) : _GLF_IDENTITY(5u, (5u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) ^ (read_1)), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | (5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((5u) | (5u)))), (_GLF_IDENTITY(5u, (5u) | (5u))) / 1u)))) ^ (read_1))), uint(uvec4((_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | (5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((5u) | (5u)))), (_GLF_IDENTITY(5u, (5u) | (5u))) / 1u)))) ^ (read_1))), 0u, 1u, 0u))) * 1u))) + 1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), 0u | (read_1))) | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), (5u) | (5u))))) ^ (read_1), ~ (~ ((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), (5u) | (5u))))) ^ (read_1))))))) + 1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))) | (read_1))) | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : 5u, ~ (~ (false ? _GLF_FUZZED(subgroup_id) : 5u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u))), (uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u)))) * 1u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u)))), 1u * ((uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u)))))) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(subgroup_id) : 5u), uint(uvec2((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(subgroup_id) : 5u), 0u))))), (uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u)))) * 1u))), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u))), (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-997.814)) : injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : 5u)))) * 1u), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / (0u ^ 1u))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_base))), 5u, 5u))) | (5u))), max(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_base))), 5u, 5u))) | (5u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_base))), 5u, 5u))) | (5u))), 0u ^ (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_base))), 5u, 5u))) | (5u))))))), min(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | (5u), ((5u) | (5u)) << 0u))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))))) ^ (read_1)))) + 1) - 0u))) == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) | 0u) ^ 0u), clamp(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) * 1u) ^ 0u), max(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, (read_2) ^ 0u)))) << 0u)))))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))) || false)))) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((bool(_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((bool(_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false)))), bool(bvec2(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4((! ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))) && true)))))) && true), true, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(18.97, -4602.6885)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(3.4, 584.137)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)))) || false))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))) && (false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4449.3802)), bvec2(true, false))).y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_IDENTITY(false, true && (false)), true))))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true))))))))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))))))))))))), ! (! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true))))))))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true, false), true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), bool(bvec2(false || (! (false)), true))))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false) && true))))))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
