#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, true, true)), ! (! (bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, true, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id, subgroup_id)), subgroup_id)))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | ((subgroup_local_id) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, false))), ! (! (! (bool(bvec4(false, true, true, false))))))))), false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, uint(_GLF_IDENTITY(uvec3((subgroup_id) * 1u, 0u, 1u), (uvec3((subgroup_id) * 1u, 0u, 1u)) * uvec3(1u, 1u, 1u))))), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, _GLF_IDENTITY(2u, ~ (~ (2u))), _GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(2u, max(2u, 2u))))))), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)) * subgroup_size)), uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), 1u, 0u), uvec3(uvec4(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, ~ (_GLF_IDENTITY(~ ((subgroup_id) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_id) * 1u), (~ ((subgroup_id) * 1u)) ^ 0u)), (~ (_GLF_IDENTITY(~ ((subgroup_id) * 1u), (~ ((subgroup_id) * 1u)) ^ 0u))) - 0u)))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), subgroup_id)) * subgroup_size, 1u, 0u), 0u))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)), uint(uvec4(~ (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)), 0u, 0u, 0u)))))))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(96275) : 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.1)), bool(false))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(floatBitsToUint(4.1)))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u)), ~ (~ ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) | (read_2))) | 0u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))))))) == read_2), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((mat4x2(21.37, _GLF_IDENTITY(274.109, mix(float(_GLF_IDENTITY(274.109, float(_GLF_IDENTITY(mat2x3(274.109, 0.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat4x3(mat2x3(274.109, 0.0, 0.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(float(38425))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -3.1, -73.73, -107.256, -0.6, 0.3, 3003.3731) , workgroup_id)) : _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))), (false ? _GLF_FUZZED((mat4x2(21.37, _GLF_IDENTITY(274.109, mix(float(_GLF_IDENTITY(274.109, float(_GLF_IDENTITY(mat2x3(274.109, 0.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat4x3(mat2x3(274.109, 0.0, 0.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(float(38425))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -3.1, -73.73, -107.256, -0.6, 0.3, 3003.3731) , workgroup_id)) : _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) - 0u)))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ (-70405 & 0)), _GLF_IDENTITY(1, (1) | 0))) == _GLF_IDENTITY(read_2, (read_2) / 1u))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)))), 1u, 1u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(floatBitsToUint(4.1)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) - 0u), (true ? read_2 : _GLF_FUZZED(floatBitsToUint(4.1))))) | (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(floatBitsToUint(4.1)))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u)), ~ (~ ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (_GLF_IDENTITY(read_2, 0u | (read_2))) << 0u)) | 0u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 1 * (1)))), (~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0))))), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0))))), (false ? _GLF_FUZZED(17916) : (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), _GLF_IDENTITY(1, 1 * (1))))) >> 0))))))))))) / 1)) == read_2), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), max(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true && (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true && (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), true, true)))))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))), 0u, 0u))))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ (-70405 & 0)), _GLF_IDENTITY(1, (1) | 0))) == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))))), max(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(4.1), (_GLF_IDENTITY(floatBitsToUint(4.1), (false ? _GLF_FUZZED(subgroup_size) : floatBitsToUint(4.1)))) >> (0u | 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u)), ~ (~ ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> 0u)) | 0u)), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, num_workgroup, read_1)) : read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1))))) == read_2), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1))))) == read_2), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), min(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ (-70405 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (false ? _GLF_FUZZED(58876) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0))))), _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0))))) == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + _GLF_IDENTITY(1, 0 | (1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(floatBitsToUint(4.1)))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u)), ~ (~ ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) | 0u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1))))) == read_2), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), max(_GLF_IDENTITY((uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ (-70405 & 0)), _GLF_IDENTITY(1, (1) | 0))) == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))))), ! (! (read_1 + 1 == read_2)))), (uint(read_1 + 1 == read_2)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))))))) : _GLF_FUZZED(workgroup_size))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | (64)), (64) | (64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))), true, true)), false, true)), (bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))), true, true)), false, true))) && true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0]))) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7139.1486)), float(0.0), bool(true)))), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0), vec4(mat3x4(vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), mix(float(_GLF_FUZZED(9673.9697)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))))), bool(true)))), injectionSwitch[1])).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0]))) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7139.1486)), float(0.0), bool(true)))), vec4(1.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0), _GLF_IDENTITY(vec4(mat3x4(vec4(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-3540.3310)), bool(false))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec4(mat3x4(vec4(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-3540.3310)), bool(false))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec4(mat3x4(vec4(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-3540.3310)), bool(false))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec4(mat3x4(vec4(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-3540.3310)), bool(false))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), mix(float(_GLF_FUZZED(9673.9697)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (transpose(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0)))))), bool(true)))), injectionSwitch[1])).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), false, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || false))) && (false)), (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), false, true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec3(bool(bvec4(false, true, false, true)), true, true)))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), mix(float(_GLF_FUZZED((-629.812 - 5952.2105))), float(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(70409u))) + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), false || (true)) ? _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) * 1u))) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size & virtual_gid, 0u + (subgroup_size & virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)), 0u | (_GLF_IDENTITY(true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)), min(true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)), true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size))))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u), ((read_2) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) | 0u)), (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_IDENTITY(_GLF_FUZZED((read_1 * subgroup_size)), (_GLF_FUZZED((read_1 * subgroup_size))) | (_GLF_FUZZED((read_1 * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) ^ 0u)), (true ? _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) << 0u) : _GLF_FUZZED((_GLF_IDENTITY(read_1 * subgroup_size, (read_1 * subgroup_size) ^ 0u)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((read_1 * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, (1u | 1u), 1u, 0u), (false ? _GLF_FUZZED(uvec4(17596u, 192811u, 137488u, 63846u)) : uvec4(subgroup_size, (1u | 1u), 1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(subgroup_size, (1u | 1u), 1u, 0u), (false ? _GLF_FUZZED(uvec4(17596u, 192811u, 137488u, 63846u)) : uvec4(subgroup_size, (1u | 1u), 1u, 0u)))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-5.1) : _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-5.1) : _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), min((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-5.1) : _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-5.1) : _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? read_2 : _GLF_FUZZED((read_1 * subgroup_size))))) / 1u)))) >> 0u))))), bool(bool(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) / 1u, ((read_1) / 1u) | (_GLF_IDENTITY((read_1) / 1u, clamp((read_1) / 1u, (read_1) / 1u, (read_1) / 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(70409u, (true ? 70409u : _GLF_FUZZED(next_virtual_gid)))))) + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) ^ 0u), (true ? read_2 : _GLF_FUZZED((subgroup_size & virtual_gid)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) ^ 0u), (true ? read_2 : _GLF_FUZZED((subgroup_size & virtual_gid)))))), _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((_GLF_IDENTITY(read_1 * subgroup_size, (read_1 * subgroup_size) >> 0u))))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.7)), bool(false))))).x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0))))), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))) + abs(vec2(0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(20.64)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0))), min(1.0, 1.0)), 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(tan(vec2(0.0, 0.0)), max(_GLF_IDENTITY(tan(vec2(0.0, 0.0)), mat2(1.0) * (tan(vec2(0.0, 0.0)))), tan(vec2(0.0, 0.0))))).y))))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
