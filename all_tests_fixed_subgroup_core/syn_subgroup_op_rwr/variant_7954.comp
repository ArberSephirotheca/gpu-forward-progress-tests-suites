#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(7.1)), bool(false))), _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)) ? _GLF_FUZZED(871.788) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(4.7)), bvec2(false, false))).x)) > injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), false, false)), false || (bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), false, false))))))))), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true)) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(26.19)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0))))))).x, injectionSwitch.x))), float(_GLF_FUZZED(26.19)), bool(false))) + 0.0)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9345.7309, mix(float(_GLF_FUZZED(8.7)), float(-9345.7309), bool(true)))), _GLF_FUZZED(0.6)), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(-9345.7309, mix(float(_GLF_FUZZED(8.7)), float(-9345.7309), bool(true)))), _GLF_FUZZED(0.6)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9345.7309, mix(float(_GLF_FUZZED(8.7)), float(-9345.7309), bool(true)))), _GLF_FUZZED(0.6)), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(-9345.7309, mix(float(_GLF_FUZZED(8.7)), float(-9345.7309), bool(true)))), _GLF_FUZZED(0.6)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))).y), float(_GLF_FUZZED((-9.7))), bool(false))), 1.0, 0.0, exp(0.0), 1.0, exp(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)))), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-29.51), float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-29.51), float(vec4(_GLF_FUZZED(-29.51), 1.0, 0.0, 1.0))), 0.0, 1.0))) : 0.0)), (false ? _GLF_FUZZED(7442.0765) : _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-29.51), float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-29.51), float(vec4(_GLF_FUZZED(-29.51), 1.0, 0.0, 1.0))), 0.0, 1.0))) : 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), (sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0))) / 1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), max(float(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), max(float(vec3(0.0, 0.0, 0.0)), float(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(min(float(vec3(0.0, 0.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0))), mix(float(min(float(vec3(0.0, 0.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)))), float(_GLF_FUZZED(-4567.4745)), bool(_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(vec3(vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(2.0), (vec3(vec3(vec3(0.0, 1.0, 0.0))))[1], _GLF_FUZZED(-244.202)), vec3((vec3(vec3(vec3(0.0, 1.0, 0.0))))[0], _GLF_FUZZED(-2486.5042), (vec3(vec3(vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, false, true))))), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), max(float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, exp(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))), min(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(6.2)), float(dot(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), vec2(0.0, 0.0))), bool(true)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-39.16)), vec2(_GLF_FUZZED(-862.392), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.1)), min(float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)))), float(0.0), bool(true))), exp(0.0), 1.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2263.1227)), float(1.0), bool(true)))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-5929.9847))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(8.9) : 0.0), (_GLF_IDENTITY((false ? _GLF_FUZZED(8.9) : 0.0), 1.0 * ((false ? _GLF_FUZZED(8.9) : 0.0)))) + determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) + abs(0.0))), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / cos(0.0))))), 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID)))), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (0u | 0u))), 0u | ((_GLF_IDENTITY(1u, (1u) | (0u | 0u))))) << 0u), 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), (clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), clamp(uvec3(2u), uvec3(2u), uvec3(2u)))))) * (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))), uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))))) | (uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))))))) * (gl_WorkGroupID))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u))) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u))))), uvec3(uvec3(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)))))))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), max(~ (~ (1u)), ~ (~ (1u))))), 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) ^ 0u) : _GLF_FUZZED(subgroup_id))), 1u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), (uint(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), 1u))) / 1u), uint(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), 1u))))), 1u) * _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))), 0u), uvec4(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u))), 1u) * (gl_WorkGroupID))), 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), min((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), _GLF_IDENTITY(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))))))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))))))))))))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), min(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), _GLF_IDENTITY(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), _GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), ~ (~ (_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u))))))), clamp(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_WorkGroupID), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID)), clamp(~ ((gl_WorkGroupID)), ~ ((gl_WorkGroupID)), ~ ((gl_WorkGroupID)))))))))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (gl_WorkGroupID))))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), _GLF_IDENTITY(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), min(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), _GLF_IDENTITY(min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u)), (min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u))) << uvec4(0u, 0u, 0u, 0u)))))))))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), 0u), min(uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uvec4(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), 1u) * (gl_WorkGroupID))), 0u))))))) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(90.34)), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u)), (min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(1u)))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))))) / 1u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), vec2(_GLF_FUZZED(20.29), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, exp(sqrt(0.0)), 0.0, 1.0, abs(0.0), 0.0, exp(log(1.0)), _GLF_IDENTITY(determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(clamp(int(0), int(0), int(0)), 0 | (clamp(int(0), int(0), int(0)))))))))), 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))))) && true), bool(bool(! (bool(bvec3(false, true, false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(false, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))))), (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))), bool(bvec3(true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))), false, false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.1)), bool(false)))))))) || (true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))))))) || false))))) && true), _GLF_IDENTITY(bool(bool(! (bool(bvec3(false, true, false))))), ! (! (bool(bool(! (bool(bvec3(false, true, false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) || false)))), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-71181)))) << 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) * _GLF_IDENTITY(1, (1) / 1)), 1), _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) * 1), 1)) - 0, (_GLF_IDENTITY((min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) * 1), 1)) - 0, max((min(_GLF_IDENTITY(1, (1) * 1), 1)) - 0, _GLF_IDENTITY((min(_GLF_IDENTITY(1, (1) * 1), 1)) - 0, clamp((min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) * 1), 1)) - _GLF_IDENTITY(0, (0) >> 0), (min(_GLF_IDENTITY(1, (1) * 1), 1)) - 0, _GLF_IDENTITY((min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) >> (0 | 0)))) * 1), _GLF_IDENTITY(1, (1) ^ 0))), min((min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (true ? _GLF_IDENTITY(1, (1) * 1) : _GLF_FUZZED(-65933))), 1)), (min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) | ((1) * 1))), 1)))) - 0))))) ^ 0))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), vec2(mat2(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-407.185)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec2(_GLF_IDENTITY((! ((false))), ((! ((false)))) && true), _GLF_IDENTITY(false, false || (false)))))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, 0u | (read_1)) + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1) == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, _GLF_IDENTITY(false, ! (! (false)))), true, false)))), false, false))))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec4(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(read_2)))) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec3(read_1 + 1, 0u, 0u)), ~ (~ (uint(uvec3(read_1 + 1, 0u, 0u)))))) == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false)))), false))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) >> 0u, _GLF_IDENTITY(uint(uint((read_1) >> 0u)), (uint(uint((read_1) >> 0u))) / (1u ^ 0u)))) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false)))), false, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false)))), false, false, true)))), (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false)))), false, false, true))))) && true)))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), min(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)))) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + _GLF_IDENTITY(1, (1) >> 0) == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), min(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, (read_2) ^ 0u))), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, _GLF_IDENTITY(false, (false) && true))))), false, false))))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), min(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)))) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + _GLF_IDENTITY(1, (1) >> 0) == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), min(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, (read_2) ^ 0u))), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, _GLF_IDENTITY(false, (false) && true))))), false, false))))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false))))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false))))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false))))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1, min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) * (0u ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))) + 1 == read_2, false), true, false)))), false, false))))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62558))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 1u)) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)))), false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), true, false)))), false, false))))) + 1))) + 0u))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (~ (4))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false, true))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (1)) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(121125u))) == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec3(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bvec4(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))) && true, true, true)), ! (! (bool(bvec3((! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(121125u))) == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec3(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bvec4(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))) && true, true, true))))), _GLF_IDENTITY(false, true && (false)) || (bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (bool(read_1 + 1 == read_2)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1, read_1)) + 1 == read_2))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) + 0u) + 1 == read_2))))))), false)))))))))) && true, true, true))))))))) + 1, 4, _GLF_IDENTITY(64, (64) + (0 | 0)), 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(102.909)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1])).y))))))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1])).y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-13.72)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
