#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 uint virtual_gid;
 float _f0;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 float _f1;
 uvec3 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 _GLF_struct_15 _f1;
 bool _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 uvec2 _f1;
 vec4 _f2;
 int _f3;
 mat2x3 _f4;
 uvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 uint read_1;
 _GLF_struct_14 _f1;
 bvec4 _f2;
 _GLF_struct_17 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_10 {
 bool _f0;
 bool _f1;
 ivec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 ivec2 _f1;
 mat2 _f2;
 bvec3 _f3;
 mat2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 bool _f1;
 bool _f2;
 mat2x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 ivec3 _f1;
 float _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
 uvec2 _f1;
 ivec2 _f2;
 bool _f3;
 uvec3 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 float _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_1 _f0;
 uint workgroup_base;
 _GLF_struct_8 _f1;
 mat3 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 _GLF_struct_11 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), (((injectionSwitch.x > injectionSwitch.y) || false)) && true)))))))))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), (((injectionSwitch.x > injectionSwitch.y) || false)) && true))))))))))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(float(95284))), vec2(_GLF_FUZZED(46.57), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))) && _GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))) && _GLF_IDENTITY(true, false || (true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))) || false))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)))))) || false))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1949.3366), _GLF_FUZZED(5.1)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1949.3366), _GLF_FUZZED(5.1)), bvec2(false, false))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1949.3366), _GLF_FUZZED(5.1)), bvec2(false, false))).x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), false))), false)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))), false))), false)), true)))))))))))), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(96.58)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8203.3327)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-539.752)), float(float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))), bool(true)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(8.3, 35.61), _GLF_IDENTITY(vec2(mat4x3(vec2(8.3, 35.61), determinant(mat2(1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(626.270)), bool(false))), 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(mat4x3(vec2(8.3, 35.61), determinant(mat2(1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(626.270)), bool(false))), 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED((1.2)), (vec2(mat4x3(vec2(8.3, 35.61), determinant(mat2(1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(float(0.0)))), float(_GLF_FUZZED(626.270)), bool(false))), 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))[1]), bvec2(false, true))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), (false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((false ? _GLF_FUZZED(vec2(8.3, 35.61)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-7601.8463)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0))))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(8.3, 35.61), max(vec2(8.3, 35.61), vec2(8.3, 35.61)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))), injectionSwitch)))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_1(_GLF_struct_0(vec4(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min(_GLF_IDENTITY((1.0), max((1.0), (1.0))) / 1.0, _GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(77.79) : 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-240.090) : 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)))), uvec3(1u)), 1.0), _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u * (~ (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) * workgroup_id, _GLF_struct_8(ivec3(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-28606)))), _GLF_struct_2(mat2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0))), _GLF_struct_3(1.0, uvec2(1u), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), bool(bool(true))), uvec3(1u), ivec2(1), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-801.521))))), _GLF_struct_4(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((7.2 / -5991.3730))), float(1.0), bool(true)))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true))), mat4x2(1.0)), _GLF_struct_5(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), true, true, mat2x3(1.0), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, cos(0.0) * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0), float(vec3(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0), 0.0, 1.0))))) / 1.0))))), _GLF_struct_6(mat4x2(1.0), ivec2(1), mat2(1.0), bvec3(true), mat2(1.0), uvec3(1u)), _GLF_struct_7(ivec4(1), mat2x3(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(770.743)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_FUZZED(175.158)), float(0.0), bool(true))), tan(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0)))), mat2x3(1.0), mat4x2(1.0))), mat3(1.0), mat3x2(1.0), ivec3(1), _GLF_struct_11(_GLF_struct_9(mat4x2(1.0), mat4x3(1.0), mat3x4(1.0)), _GLF_struct_10(true, true, _GLF_IDENTITY(ivec2(1), min(ivec2(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), ivec2(1))), vec3(1.0)), mat2x3(1.0)), uvec4(1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), false, true))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, true, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, true, false)))))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_DEAD(false))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))) && true)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))) && true))))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))) && true)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))))) && true))))))) || false))))))), true && (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_replacement_12.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1.0);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_12.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))))) >> 0u), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))))), max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) * _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u)))), subgroup_id))) >> 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) >> 0u), subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u), subgroup_id))) / 1u), uint(uint(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u), subgroup_id))))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u), subgroup_id)))))) : _GLF_FUZZED(subgroup_id))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(mat2x3(1.0), atomicLoad(buf[_GLF_struct_replacement_19.virtual_gid], 4, 64, 0), _GLF_struct_14(_GLF_struct_13(mat3x4(1.0), uvec2(1u), vec4(1.0), 1, mat2x3(1.0), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), (0u + (1u)) / _GLF_IDENTITY(1u, max(1u, 1u))))), 1.0)), bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), _GLF_struct_17(mat2(1.0), _GLF_struct_15(uvec3(1u), uvec3(1u)), true, _GLF_struct_16(uvec3(1u), 1.0, uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), true)), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1)))) << ivec4(0, 0, 0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false)))))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_struct_replacement_18.read_1 + 1), (uint(_GLF_struct_replacement_18.read_1 + 1)) << (0u | 0u)), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) >> 0, _GLF_IDENTITY((1 ^ 1) ^ ((int(4)) >> 0), clamp((1 ^ 1) ^ ((int(4)) >> 0), _GLF_IDENTITY((1 ^ 1) ^ ((int(4)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(ivec4(ivec3(0, 1, 0), 1)))), (int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(ivec4(ivec3(0, 1, 0), 1))))) | 0))), (true ? _GLF_IDENTITY((1 ^ 1) ^ ((int(4)) >> 0), (true ? (1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), ~ (~ ((int(4))))) >> 0), max((_GLF_IDENTITY((int(4)), ~ (~ ((int(4))))) >> 0), (_GLF_IDENTITY((int(4)), ~ (~ ((int(4))))) >> 0))) : _GLF_FUZZED(-55604))) : _GLF_FUZZED(-58034))), (1 ^ 1) ^ ((_GLF_IDENTITY(int(4), ~ (~ (int(4))))) >> 0)))))), (int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, (0 << _GLF_IDENTITY(int(8), int(8))), 0))), (0 | 0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) / ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(int(int(0)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0)))))), 1, (0 << _GLF_IDENTITY(int(8), int(8))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, ((int(4)) ^ 0) | (_GLF_IDENTITY((int(4)) ^ 0, clamp((int(4)) ^ 0, (int(4)) ^ 0, (int(4)) ^ 0))))), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) | ((0 << _GLF_IDENTITY(int(8), int(8))))), 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (int(4)) ^ 0)), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (int(4)) ^ 0)), max(~ (_GLF_IDENTITY(int(4), (int(4)) ^ 0)), ~ (_GLF_IDENTITY(int(4), (int(4)) ^ 0)))))))), 1, (0 << _GLF_IDENTITY(int(8), int(8))), 0)))))))) >> 0))) << _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), (4) - 0)) ^ 0)) ^ 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-928.868))))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-0.6) : injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y) && true), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_19.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1 + 1, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1 + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, _GLF_IDENTITY((_GLF_struct_replacement_18.read_1), (_GLF_IDENTITY((_GLF_struct_replacement_18.read_1), 1u * ((_GLF_struct_replacement_18.read_1)))) + 0u) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1), min((_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((_GLF_IDENTITY(num_workgroup, 0u | (num_workgroup)) << num_workgroup)))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, max(_GLF_struct_replacement_18.read_1, _GLF_struct_replacement_18.read_1))) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + _GLF_IDENTITY(1, (1) >> 0)), ((_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) + 0u))))) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) + 0u))))) + 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) + 0u))))) + 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) + 0u))))) + 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << num_workgroup)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.read_1, (_GLF_struct_replacement_18.read_1) | (_GLF_struct_replacement_18.read_1)) : _GLF_FUZZED((num_workgroup << _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) + 0u))))) + 1)))))) ^ 0u)))))))))) == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) + 0), 1, _GLF_IDENTITY(1, 0 | (1)))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) - _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) << 0)), (~ (_GLF_IDENTITY(4, (4) << 0))) ^ 0), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, ((4) << 0) | ((4) << 0)))), (~ (_GLF_IDENTITY(4, (4) << 0))) ^ 0)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(794.937)), bool(false))))), 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-423.965)), (_GLF_IDENTITY(float(_GLF_FUZZED(-423.965)), (_GLF_IDENTITY(float(_GLF_FUZZED(-423.965)), (float(_GLF_FUZZED(-423.965))) + 0.0)) / 1.0)) + log(1.0)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))), (false ? _GLF_FUZZED(abs(1615.0436)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-423.965), clamp(_GLF_FUZZED(-423.965), _GLF_FUZZED(-423.965), _GLF_FUZZED(-423.965)))), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))), (false ? _GLF_FUZZED(abs(1615.0436)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-423.965), clamp(_GLF_FUZZED(-423.965), _GLF_FUZZED(-423.965), _GLF_FUZZED(-423.965)))), bool(false)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.9) : 0.0))) + 0.0))))), float(_GLF_FUZZED(-423.965)), bool(false)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))) / 1.0)))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(1615.0436)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(406.265)), float(injectionSwitch[1]), bool(true))))).y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(406.265)), float(injectionSwitch[1]), bool(true))))).y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4917.4413)), float(0.0), bool(true))), 0.0))))))), float(_GLF_FUZZED(-423.965)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(false)) || false)))), false)))))))), ((false ? _GLF_FUZZED(abs(1615.0436)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(406.265)), float(injectionSwitch[1]), _GLF_IDENTITY(bool(true), (bool(true)) || false))))).y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(406.265)), float(injectionSwitch[1]), bool(true))))).y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), float(_GLF_FUZZED(-423.965)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (bool(false)) || false)), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2((_GLF_IDENTITY(bool(false), (bool(false)) || false)), true)))))), false))))))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), clamp(min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat3(1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))), float(_GLF_FUZZED(-423.965)), bool(false))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), float(_GLF_FUZZED(-423.965)), bool(false))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, abs(1.0)), (mat4x3(injectionSwitch, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, abs(1.0))) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, abs(1.0)), (mat4x3(injectionSwitch, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, abs(1.0))) * mat4(1.0)))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_18.read_1, _GLF_IDENTITY(0u ^ (_GLF_struct_replacement_18.read_1), (0u ^ (_GLF_struct_replacement_18.read_1)) ^ 0u)) + 1 == read_2) + _GLF_IDENTITY(1, (1) ^ 0), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
