#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_38 {
 ivec3 _f0;
 mat4 _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_35 {
 bvec2 _f0;
 int _f1;
 mat3 _f2;
 mat3x2 _f3;
 int _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_34 {
 bool _f0;
 mat4x3 _f1;
 mat2 _f2;
 int _f3;
 bool _f4;
} ;

struct _GLF_struct_33 {
 mat3x4 _f0;
 bool _f1;
 bvec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
} ;

struct _GLF_struct_36 {
 uvec3 _f0;
 mat3 _f1;
 _GLF_struct_32 _f2;
 int _f3;
 _GLF_struct_33 _f4;
 _GLF_struct_34 _f5;
 _GLF_struct_35 _f6;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 bool _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_28 {
 ivec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_37 {
 _GLF_struct_29 _f0;
 uint next_virtual_gid;
 _GLF_struct_31 _f1;
 _GLF_struct_36 _f2;
} ;

struct _GLF_struct_25 {
 bool _f0;
 bool _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 bvec3 _f1;
 vec2 _f2;
 int _f3;
 mat4 _f4;
 vec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 uint _f1;
 bvec2 _f2;
 ivec3 _f3;
 mat2 _f4;
 mat2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 mat2 _f1;
 mat2x4 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_20 {
 mat4 _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 bool _f1;
 ivec4 _f2;
 bool _f3;
 bvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 mat4 _f1;
 uvec3 _f2;
 bvec2 _f3;
 vec2 _f4;
 vec4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 mat4x2 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat3 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 mat2 _f1;
 bvec3 _f2;
 ivec4 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_24 _f3;
 uint subgroup_local_id;
 mat4 _f4;
 _GLF_struct_26 _f5;
 int _f6;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 vec4 _f1;
 uint workgroup_base;
 bool _f2;
 uvec4 _f3;
 vec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 _GLF_struct_12 _f1;
 vec3 _f2;
 ivec3 _f3;
 _GLF_struct_13 _f4;
 ivec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 ivec2 _f1;
 bool _f2;
 mat2x4 _f3;
 bool _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 uint _f1;
 mat2 _f2;
 float _f3;
 int _f4;
 bool _f5;
} ;

struct _GLF_struct_7 {
 uint read_2;
 uvec2 _f0;
} ;

struct _GLF_struct_10 {
 bool _f0;
 vec4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_4 {
 int _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 float _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 uvec4 _f2;
 mat2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 bvec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 _GLF_struct_1 _f3;
 uint workgroup_size;
 mat2x4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 vec4 _f1;
 bvec4 _f2;
 bvec2 _f3;
 ivec4 _f4;
 _GLF_struct_5 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false), false)))), false, true, false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(uvec4(1u), _GLF_struct_17(uvec2(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))), mat2(1.0), bvec3(true), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0)), min(ivec4(1), ivec4(1))), _GLF_struct_16(mat4x2(1.0), mat3x2(1.0), mat3(1.0), uvec3(_GLF_IDENTITY(1u, 0u ^ (1u))), bvec4(true), mat4x3(1.0), 1u)), _GLF_struct_21(_GLF_struct_18(mat3(1.0), mat4(1.0), uvec3(1u), bvec2(true), vec2(1.0), vec4(1.0), ivec2(1)), mat4x2(1.0), _GLF_struct_19(uvec4(1u), true, ivec4(1), true, bvec2(true), ivec3(1)), _GLF_struct_20(mat4(1.0), ivec2(1), bvec2(true), mat3x4(1.0), uvec4(1u), true)), _GLF_struct_24(uvec2(1u), mat2(1.0), mat2x4(1.0), _GLF_struct_22(vec4(1.0), 1u, bvec2(true), ivec3(1), mat2(1.0), mat2(1.0), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(687.101))))))) + (mat3(1.0)))), _GLF_struct_23(bvec3(true), bvec3(true), vec2(1.0), 1, mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-43.51) : 1.0))), vec3(1.0), 1u)), gl_SubgroupInvocationID, mat4(1.0), _GLF_struct_26(_GLF_struct_25(true, true), mat2x4(1.0), bvec3(true), mat4x2(1.0)), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))))))))), false || (false))))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))))[0], _GLF_FUZZED(654.802)), vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z = _GLF_struct_replacement_27.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(1, bvec3(true), bvec2(true)), mat4x3(1.0), mat2x3(1.0), _GLF_struct_1(mat4x3(1.0)), gl_WorkGroupSize.x, mat2x4(1.0)), vec4(1.0), bvec4(true), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(true), false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(true), false)), true, true)), false, true))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(true), false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(true), false)), true, true)), false, true))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))), ivec4(1), _GLF_struct_5(_GLF_struct_3(mat3(1.0), 1.0), _GLF_struct_4(1, 1.0), uvec4(1u), mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2x4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0 ^ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9545.5967)), bool(false))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-82.17)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9122.2343)), bool(false))), 1.0)))), 1.0))))), bool(true)), max(mix(float(_GLF_FUZZED(-82.17)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-82.17)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3645.4358)))))), bool(true)), (mix(float(_GLF_FUZZED(-82.17)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))))) / 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-82.17)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), 1.0))))))), _GLF_struct_12(ivec4(1), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.28)), float(1.0), bool(true)))), min(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(41.16)), bool(false)))), vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)), 0.0 + (1.0))))))), _GLF_struct_replacement_6._f0.workgroup_size * workgroup_id, true, _GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(1u))))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(vec3(4.4, 619.661, -4.8).x), (vec4(1.0))[1], (vec4(1.0))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(2370.1598), _GLF_FUZZED((- vec4(-1.5, _GLF_IDENTITY(-7.5, float(mat4x2(-7.5, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), -737.358, 572.821).p)), _GLF_FUZZED(-43.56)), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), 1u), vec3(1.0), ivec3(1), _GLF_struct_13(mat2x4(1.0), mat3x4(1.0), mat2x4(1.0), uvec3(1u)), ivec2(1), bvec3(true)), bvec4(true));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))))))) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 + (_GLF_IDENTITY(0, (0) / 1)))], injectionSwitch[_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), ~ (~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))))))))))])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 0.0, 0.0))).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 0.0)), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch, cos(0.0), 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), vec2(vec4(injectionSwitch, cos(0.0), 0.0))))).y) || false)))))
    barrier();
  }
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) >> 0)), mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true))), 1.0))), _GLF_struct_replacement_15._f0._f1.workgroup_base + subgroup_id * GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(floatBitsToUint(-2155.5205)))), 0u, _GLF_IDENTITY(0u, max(0u, 0u))) + (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))))[1])), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[2], GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, clamp(3, 3, 3))))) << 0)])), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))).z, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) + _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size), uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size), min((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size), (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))))))))[1])), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[2], GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, clamp(3, 3, 3))))) << 0)])), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))).z, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))))[1])), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[2], GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size[_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, clamp(3, 3, 3))))) << 0)])), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)))).z))) << 0u));
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(_GLF_struct_29(_GLF_struct_28(ivec4(1), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | 0u) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_struct_replacement_15._f0._f1.workgroup_base + subgroup_id * GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w + (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(3242u) : _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w, ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (0u) + 0u)), ~ (~ (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w, (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1), clamp((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1), (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1), _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1), ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.z + 1)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) + uvec4(0u, 0u, 0u, 0u)).w) | _GLF_IDENTITY(0u, (0u) + 0u)))))))), _GLF_struct_31(_GLF_struct_30(bvec4(true), true, bvec2(true)), bvec3(true)), _GLF_struct_36(uvec3(1u), mat3(1.0), _GLF_struct_32(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(167756u, 177911u, 25493u, 153806u)) : _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(1u)))))), 1, _GLF_struct_33(mat3x4(1.0), true, bvec3(true), 1u), _GLF_struct_34(true, mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(5.6, -0.3, 957.811).g)), bool(false)))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), _GLF_IDENTITY((mat2(mat4x3(mat2(1.0)))), ((mat2(mat4x3(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1, true), _GLF_struct_35(bvec2(true), _GLF_IDENTITY(1, (1) + 0), mat3(1.0), mat3x2(1.0), 1, uvec3(1u))));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_38.virtual_gid], (buf[_GLF_IDENTITY(_GLF_struct_replacement_38.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_38.virtual_gid, (_GLF_struct_replacement_38.virtual_gid) ^ 0u)) / 1u)]) - 0u), 4, 64, 0);
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x = read_1;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))))))) || false))));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)) * vec2(1.0, 1.0))))).x < injectionSwitch.y)), true, false))), false || (false))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-15070) : 2))), int(2))))), (true ? ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-15070) : 2))), int(2))))) : _GLF_FUZZED(-12295))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 | 0))) + 0) > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))));
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   do
    {
     atomicStore(buf[_GLF_struct_replacement_37.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, max(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1), clamp((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1), _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1), ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1)) + 0u), _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1), ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1)) * 1u))) >> 0u), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size), min((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size), (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size))) + uvec4(0u, 0u, 0u, 0u)).x + 1, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1)), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1)))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size))) * uvec4(1u, 1u, 1u, 1u)))).x, 0u ^ (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x)) + 1, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1)), GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) ^ 0))))))) << 0u)), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) && true))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) && _GLF_IDENTITY(true, (true) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && ((false) && true))) && true, false || ((_GLF_IDENTITY((false) && true, true && ((false) && true))) && true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(! (! ((true) && true)), (! (! ((true) && true))) && true))))), true, false)))) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(true, vec4(1.0), _GLF_struct_7(atomicLoad(buf[_GLF_struct_replacement_38.virtual_gid], 4, 64, 0), uvec2(1u)), _GLF_struct_8(mat3(1.0), 1u, mat2(1.0), 1.0, 1, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), (true) && true)), _GLF_struct_9(uvec3(1u), ivec2(1), true, mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED((-0.7))), bool(false)))), true, ivec4(1), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), bvec2(true)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.1) : injectionSwitch.x))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0, 1.0, 1.0))), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), float(mat3x2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.6))), 1.0))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(9.0, -2.5, -938.604).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)))), bool(true))), injectionSwitch.x)))) : _GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.1) : injectionSwitch.x))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0, 1.0, 1.0))), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), float(mat3x2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.6))), 1.0))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(9.0, -2.5, -938.604).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)))), bool(true))), injectionSwitch.x)))) : _GLF_FUZZED(-1.7)) - 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(-1.7))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(-1.7))) > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y = _GLF_struct_replacement_11._f0._f2.read_2;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5932.2618)), vec2(_GLF_FUZZED(93.14), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, false))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), sqrt(0.0)))).x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-6.6 + -4.0)), _GLF_FUZZED(485.185)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-4179.4305 / -9.9))), float(injectionSwitch.y), bool(true))), false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (false) && true), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), false || (! (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false));
 if(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))))), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))))))) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size)).z + 1 < GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.w)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[_GLF_struct_replacement_37.next_virtual_gid], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))).x, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, 0u | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) - uvec4(0u, 0u, 0u, 0u)).x, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, 0u | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size) - uvec4(_GLF_IDENTITY(0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (0u)), 0u, 0u, 0u)).x, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, 0u | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x))))) ^ 0u) : _GLF_FUZZED(read_1)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(bitfieldInsert(_GLF_struct_replacement_27.subgroup_local_id, _GLF_struct_replacement_38.virtual_gid, 6328, 61526)) : ~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, min(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, 0u | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x))) - 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))) | (GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x))) - 0u) - 0u))))))))) + 1 == _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y, clamp(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) ^ 0))), (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) / 1), (4))), int(ivec4(_GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) / 1), (4))), 1, 0, (0 << _GLF_IDENTITY(int(6), int(6)))))))) ^ (0 & 80919)), 64, 4);
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - 0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / 1)) << 0)))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       subgroupAll(_GLF_IDENTITY(false, (false) || false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_37.next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.x + 1 == GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_13read_1read_2subgroup_local_idsubgroup_size.y) + 1, 4, 64, 4);
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0))))) + 0.0), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0))))) + 0.0), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0))))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false))))))) && true)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(true);
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
