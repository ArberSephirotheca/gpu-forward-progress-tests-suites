#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)))
  barrier();
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size;
 uvec4 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup;
 uvec4 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.9)))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
 uvec3 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true))) && true), false), false, true))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false, false, true))) && true), false), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((-2.5 / 520.875))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED((-2.5 / 520.875))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-2.5 / 520.875))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-2.5 / 520.875))), bool(false))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_IDENTITY(float(_GLF_FUZZED((-2.5 / 520.875))), (false ? _GLF_FUZZED(-5565.5115) : float(_GLF_FUZZED((-2.5 / 520.875))))), bool(false))) > injectionSwitch.y)))) || false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5557.0153, -544.602)) : injectionSwitch)).y))))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), (_injected_loop_counter) - 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(93.52)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(93.52)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true)))) && true))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
  }
 uvec3 GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && true))));
 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size)).y;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x) ^ (0u ^ 0u), (_GLF_IDENTITY(true ? (gl_NumWorkGroups.x) ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y), (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y), 0u | (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y))))))) << 0u), (true ? (gl_NumWorkGroups.x) ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y) << 0u)), (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y)) << 0u)) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), max((vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) - vec2(0.0, 0.0))))).y))))
  barrier();
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.w = num_workgroup;
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.y = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
  return;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.x = GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || _GLF_IDENTITY(false, (false) || false))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.w = workgroup_size;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.w;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, false || (true)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3715.3824)), float(0.0), bool(true)))) / 1.0), 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 0.0) : _GLF_FUZZED(mat2(-1.4, -7144.1941, _GLF_IDENTITY(286.164, float(mat3(_GLF_IDENTITY(286.164, (286.164) * 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0))), -548.684))))), max(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 0.0) : _GLF_FUZZED(mat2(-1.4, -7144.1941, 286.164, -548.684))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 0.0) : _GLF_FUZZED(mat2(-1.4, -7144.1941, 286.164, _GLF_IDENTITY(-548.684, _GLF_IDENTITY(float(mat4x3(-548.684, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), 0.0 + (float(mat4x3(-548.684, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))), true, true, false))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false, true)), bool(bvec3(bool(bvec4(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false, true)), false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) || false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) || false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 else
  {
   do
    {
     GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y = _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z)))) * _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, clamp(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y), 0u | (~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y))))), GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y)), (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z)))) * _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, clamp(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y), 0u | (~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y))))), GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y))) | (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, max(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.z)))) * _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, clamp(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y), 0u | (~ (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y))))), GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y, GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.y))));
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), _GLF_IDENTITY(false, false || (false)) || ((! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))))))))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.4))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
            barrier();
           continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     continue;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, false || ((false) || false))))))))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), false, _GLF_IDENTITY(false, ! (! (false))), false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)) || false))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), false || ((false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), ! (! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true && (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), (! ((! (! (false))))) && true)))))))))), ! (! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))))))))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z) + 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(88846u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u))))) + GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z;
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(0 | (0 & 87348), ~ (~ (_GLF_IDENTITY(0 | (0 & 87348), min(0 | (_GLF_IDENTITY(0, (0) >> 0) & 87348), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), int(ivec2(max(0, 0), 0)))) & 87348))))))), ((_GLF_IDENTITY(0 | (0 & 87348), ~ (~ (_GLF_IDENTITY(0 | (0 & 87348), min(0 | (_GLF_IDENTITY(0, (0) >> 0) & 87348), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), int(ivec2(max(0, 0), 0)))) & 87348)))))))) / 1) ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), 0 | (_GLF_IDENTITY(int(0), 0 | (int(0)))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), 0 | (_GLF_IDENTITY(int(0), 0 | (int(0))))))) >> 0)) | (0 >> _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), 0 | (_GLF_IDENTITY(int(0), 0 | (int(0)))))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), 0 | (_GLF_IDENTITY(int(0), 0 | (int(0))))))) >> 0)) | (0 >> _GLF_IDENTITY(int(7), int(7))))) - 0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y), true, true, true)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), vec2(mat4x3(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, abs(0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y), true, true, true))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false), false)))))))), _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((bool((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3((bool((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((bool((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z + subgroup_id * subgroup_size + ((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1) % subgroup_size);
 do
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))) / 1.0))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0)))))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(882.223)))), float(_GLF_FUZZED(float(192997u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED((-1852.2890 / 7941.2199))), bool(false))))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) || false)), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))) / 1.0))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), sqrt(1.0), determinant(mat3(sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * mat4(1.0)))))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(882.223)))), float(_GLF_FUZZED(float(192997u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED((-1852.2890 / 7941.2199))), bool(false))))) - 0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) || false)), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), min(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat4(injectionSwitch, sin(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(505.177)))), float(_GLF_FUZZED(-826.270)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4507.6950), (true ? _GLF_FUZZED(4507.6950) : _GLF_FUZZED(step(step(60.97, 3134.0243), -0.8)))) : 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(505.177)))), float(_GLF_FUZZED(-826.270)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4507.6950), (true ? _GLF_FUZZED(4507.6950) : _GLF_FUZZED(step(step(60.97, 3134.0243), -0.8)))) : 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-245.692)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-86.66)))), bool(true))), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-979.248) : 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0) : _GLF_FUZZED(mat4(941.599, 3.6, -33.27, -8.9, -94.51, 9.3, -2.7, 680.236, 4.9, -4.9, 4261.9167, -5112.6959, -35.22, 580.388, 832.587, 7.1)))) : _GLF_FUZZED(mat4(-5.8, -7.9, _GLF_IDENTITY(9.3, float(_GLF_IDENTITY(mat2x4(9.3, 0.0, tan(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x4(9.3, 0.0, tan(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0)))))), 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2((1.0), sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0))) / 1.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, tan(abs(0.0)), 1.0, 0.0))), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-378.541)), bool(false))), 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((32.89))), bool(false)))))) - 0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.3)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.7))))), 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (true ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(59.18) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(59.18) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.8)))) * 1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0)))), clamp(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))))), vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0)))), vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0)))))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, cos(sin(0.0)) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(1.0), bool(true))), abs(0.0), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, exp(0.0)), mat3(mat4(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(1.0), bool(true))), abs(0.0), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, exp(0.0))))))), 1.0))) - 0.0, clamp((_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0, float(mat4x3((_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-5.8, -7.9, 9.3, 4.5, 3930.8317, -964.073, -2.3, 75.92, -788.928, _GLF_IDENTITY(79.04, (_GLF_IDENTITY(true, false || (true)) ? 79.04 : _GLF_FUZZED(8.8))), 87.60, -4.4, 8.3, -66.69, 3.7, 42.13))))) / _GLF_IDENTITY(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.z], (buf[GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.z]) * 1u), 4, 64, 0);
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.x = read_1;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz, clamp(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz, GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz, uvec3(uvec3(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz))))).x], uint(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.x + 1), _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(4, ~ (~ (4))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0)))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0)))) > injectionSwitch.y), false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2, (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2) - uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) + (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2, (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2) - uvec4(0u, 0u, 0u, 0u)))).xyz.z], 4, 64, 0);
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x = read_2;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
  }
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.w = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x, min(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.7)))) / sqrt(1.0)) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.5)), vec2(_GLF_FUZZED(-1.1), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-1506.0552)))), float(_GLF_IDENTITY(_GLF_FUZZED(-954.866), (_GLF_FUZZED(-954.866)) - length(0.0))), bool(false)))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), bool(bool(bool(bool(false)))))))))))
          continue;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-71.46, 4.1)) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         return;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y = GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.w;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * cos(vec2(0.0, 0.0))).y), true && ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)) * mat2(1.0))).y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) | 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)) | 0))
  {
   if(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
       continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0))).x)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), 0.0, 1.0, abs(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ (false ? -443.688 : 361.859), clamp(+ (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859)))))), float((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ (false ? -443.688 : 361.859), clamp(+ (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859)))))), float((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ (false ? -443.688 : 361.859), clamp(+ (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859)))))), float((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ (false ? -443.688 : 361.859), clamp(+ (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859)))))), float((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ (false ? -443.688 : 361.859), clamp(+ (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859), + (false ? -443.688 : 361.859)))))), float((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0))))) - 0.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4620.1990)), bool(false))), injectionSwitch.x)), 0.0, 1.0, abs(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))) && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -20.30 : 19.68))), vec2(_GLF_FUZZED(64.73), (injectionSwitch)[1]), bvec2(false, true))), max(injectionSwitch, injectionSwitch)))).y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        continue;
       do
        {
         atomicStore(buf[GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz.x], uint(_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.x + 1 == GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.x + 1 == GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y, true && (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup, (_GLF_IDENTITY(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup, uvec4(0u, 0u, 0u, 0u) + (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup))) | (GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup)).xyz.x + 1 == GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y))) && true)) + 1, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false))))) && true))))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.y), bool(true))), true && (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.y), bool(true))), true && (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false, true))))))))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(19.07)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-4074.7455) : _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-78.28))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-3.0)))))))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), bool(bool((_GLF_DEAD(false))))))), true, true, _GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     for(int _injected_loop_counter = (0 & 11818); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.8)), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED(-7133.2862), (injectionSwitch)[1]), bvec2(false, true))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.3)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED(-7133.2862), (injectionSwitch)[1]), bvec2(false, true))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.3)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED(-7133.2862), (injectionSwitch)[1]), bvec2(false, true))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.3)))))))) - vec2(0.0, 0.0)).y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) + 0.0), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10291))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.5, -46.76)))).x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                barrier();
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), true, true, true)), true && (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), true, true, true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      break;
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz))))))), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u), ~ (~ (uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u)))), _GLF_IDENTITY((uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u)) ^ uvec4(0u, 0u, 0u, 0u), ~ (~ ((uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))), (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid) : uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), uvec3(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), ~ _GLF_IDENTITY((~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))), ((~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz))))) | ((~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u), (uvec4((_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), max((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), max((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz), (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))), ~ (~ (uvec3((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)))))))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidread_2.xyz)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))))).x], uint(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_6_1_1_12_2_1_14read_1workgroup_idworkgroup_sizenum_workgroup.xyz.x + 1 == _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) : GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[2])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) >> 0u), 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[2])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), clamp(uvec3(6u), uvec3(6u), uvec3(6u))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u))))))), (min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], min(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1])), GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[2])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) ? 0u : _GLF_FUZZED(num_workgroup))), 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u)))))))) / uvec3(1u, 1u, 1u))) << uvec3(0u, 0u, 0u))).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) >> uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, min(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, ~ (~ (2)))))])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), ((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(uvec3(0u, 0u, 0u))), (uvec3(uvec3(uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_local_id % uvec3(41897u, 69377u, 182067u)))))) | uvec3(0u, 0u, 0u)), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u)))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[2])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u)))))))).y) | 0u, ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[0], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[1], GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id[2])), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), max((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), clamp((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u) >> 0u))), 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) | uvec3(0u, 0u, 0u)))))))).y) | 0u) - 0u))) >> _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), 0 ^ ((1) << (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false)))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-80.24), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(510.174))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3(! (! (_GLF_DEAD(false))), false, true))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(2049.0751)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y) || false)))))
        {
         subgroupAll(true);
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), false), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), false)))), true, false))))))))
      continue;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
