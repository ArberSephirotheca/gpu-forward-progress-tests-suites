#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), true)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-28.98 + float(true)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9848.3247)), vec2(_GLF_FUZZED((260.435 / (-4.2 / 17.15))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9848.3247)), vec2(_GLF_FUZZED((260.435 / (-4.2 / 17.15))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9848.3247)), vec2(_GLF_FUZZED((260.435 / (-4.2 / 17.15))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (! (false))), true)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), cos(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true))))), _GLF_IDENTITY(true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), (_GLF_IDENTITY(true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), clamp(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(next_virtual_gid) : read_1)) + 1), _GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1))), (uint(read_1 + 1)) | 0u)) - 0u)) / 1u), uint(read_1 + 1))), _GLF_IDENTITY(4, (4) << (1 ^ 1)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(1, int(int(1))), 1)))), 0 | (clamp(64, 64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), (_GLF_IDENTITY((64) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), 0 + ((64) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1))))) ^ 0)))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, ~ (~ (1))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1)))))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1)))))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-7227.9830, 2.9, 7.6, -9.1, -2.7, 1.5, -8453.5851, 44.08)))))), _GLF_FUZZED(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(-2.1) : -2.1)))), vec2(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) * 1), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))), (~ (0)))))], _GLF_FUZZED(-2.1)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)))))), 1.0))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0)), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, ~ (~ (0))))), min(int(int(_GLF_IDENTITY(0, ~ (~ (0))))), int(int(_GLF_IDENTITY(0, ~ (~ (0)))))))) ^ 0))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1)))))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1))))) : _GLF_FUZZED(59.10)))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-7227.9830, 2.9, 7.6, -9.1, -2.7, 1.5, -8453.5851, 44.08)))))), _GLF_FUZZED(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(-2.1) : -2.1)))), vec2(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) * 1), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 1))), ~ (0), ~ (0)))))) / 1)], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))), (~ (0)))))], _GLF_FUZZED(-2.1)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)))))), 1.0))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-21.25) : 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1)))))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), 1.0), (true ? mat2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(-27.07, -6.4, 6.7, -9.1)))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))), float(_GLF_FUZZED(-9.4)), bool(false))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-7227.9830, 2.9, 7.6, -9.1, -2.7, 1.5, -8453.5851, 44.08)))))), _GLF_FUZZED(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(-2.1) : -2.1)))), vec2(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) * 1), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), min((_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))), (~ (0)))), ~ (~ (~ _GLF_IDENTITY((~ (0)), min((_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))), (~ (0))))))))], _GLF_FUZZED(-2.1)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-2.1)))))), 1.0))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(631.325)), bool(false))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(15601u)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.9)), bvec2(true, false)))) / cos(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), injectionSwitch)).y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), (_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), clamp(_GLF_IDENTITY(7673.6052, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), max(_GLF_IDENTITY(_GLF_FUZZED(-5.4), clamp(_GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4))), _GLF_FUZZED(-5.4))) : 7673.6052)), _GLF_IDENTITY(_GLF_IDENTITY(7673.6052, min(7673.6052, 7673.6052)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_IDENTITY(_GLF_FUZZED(-5.4), min(_GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4)))) + 0.0) : 7673.6052)), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052))))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(8.0)), (float(_GLF_FUZZED(8.0))) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(false)))))), min(_GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052))), float(_GLF_FUZZED(8.0)), bool(false)))))), _GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(_GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true))))))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), max((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))))), float(_GLF_FUZZED(8.0)), bool(false))), min(_GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true))))))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), max((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))))), float(_GLF_FUZZED(8.0)), bool(false))), _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true))))))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), max((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) / 1.0) : _GLF_IDENTITY(7673.6052, clamp(7673.6052, _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0), _GLF_IDENTITY(7673.6052, mix(float(_GLF_FUZZED(-2878.3983)), float(7673.6052), bool(true)))))))))), float(_GLF_FUZZED(8.0)), bool(false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), (_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(_GLF_IDENTITY(7673.6052, max(7673.6052, 7673.6052)), (_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-6495.7703) : 7673.6052))) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(radians(3.7)))))))), clamp(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0))), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052))))) * 1.0)), float(_GLF_FUZZED(8.0)), bool(false)))))), min(_GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), (_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.4) : 7673.6052, mix(float(_GLF_FUZZED(5.3)), float(false ? _GLF_FUZZED(-5.4) : 7673.6052), bool(true))))), clamp(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0))), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052))))) * 1.0)), float(_GLF_FUZZED(8.0)), bool(false)))))), _GLF_FUZZED(determinant(mat3(_GLF_IDENTITY(-5191.9811, _GLF_IDENTITY(float(mat2(-5191.9811, 1.0, 0.0, 1.0)), mix(float(float(mat2(-5191.9811, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-4.5)), bool(false)))), _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), -8.6, _GLF_IDENTITY(460.573, mix(float(_GLF_IDENTITY(460.573, float(mat3x2(460.573, log(1.0), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(504.420)), bool(_GLF_IDENTITY(false, ! (! (false)))))), -4.5, -441.816, 672.519, _GLF_IDENTITY(-4826.8428, clamp(-4826.8428, -4826.8428, -4826.8428)), _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), clamp(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0))), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), clamp(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(7673.6052, (7673.6052) - 0.0))), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052)), _GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(7673.6052, (_GLF_IDENTITY(7673.6052, 1.0 * (7673.6052))) - log(1.0))))))))) * 1.0)), float(_GLF_FUZZED(8.0)), bool(false)))))))), min(_GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(_GLF_IDENTITY(acosh(-7.5), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(acosh(-7.5), max(acosh(-7.5), acosh(-7.5))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat3(_GLF_IDENTITY(acosh(-7.5), max(acosh(-7.5), acosh(-7.5))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - 0.0))))), -8.6, 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, (false ? _GLF_FUZZED(-5.4) : 7673.6052))), float(_GLF_FUZZED(8.0)), bool(false)))))), _GLF_FUZZED(determinant(mat3(-5191.9811, _GLF_IDENTITY(_GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5)))), _GLF_IDENTITY((_GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(_GLF_IDENTITY(0.6, max(0.6, 0.6)), 0.6)) : _GLF_FUZZED(acosh(-7.5))))) * 1.0, ((_GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, min(0.6, 0.6)) : _GLF_FUZZED(acosh(-7.5))))) * 1.0) / 1.0)))), _GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, min(-8.6, -8.6))) / _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), 460.573, -4.5, -441.816, 672.519, -4826.8428, _GLF_IDENTITY(7673.6052, mix(float(_GLF_IDENTITY(7673.6052, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-5.4) : 7673.6052))), _GLF_IDENTITY(float(_GLF_FUZZED(8.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(8.0)), (false ? _GLF_FUZZED(vec4(24.13, -409.469, 2.8, -5.8)[1]) : float(_GLF_FUZZED(8.0))))) + 0.0), bool(false))))))))) / 1.0) : _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-90.10, -428.425))))).x), mix(float(_GLF_FUZZED(-2.3)), float(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(301.661)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.9) : 1.0))), bool(true))), 1.0)))))))).x), mix(float((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0)))))).x)), float(_GLF_FUZZED(6622.3738)), bool(false)))), bool(true)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY((read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY((read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), max((read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), (read_1) << _GLF_IDENTITY(0u, min(0u, 0u)))), (read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), (read_1) << _GLF_IDENTITY(0u, min(0u, 0u)))), (read_1) << _GLF_IDENTITY(0u, min(0u, 0u)), (read_1) << _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(read_1))), 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(read_1))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) * 1u))))))))) + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1, (1u ^ 1u) | (read_1 + 1)) == _GLF_IDENTITY(read_2, 0u + (read_2))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u)) >> 0u)))) + 1) | _GLF_IDENTITY(0u, 0u + (0u))), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 | (64)))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0))))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-32.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(102530u)), _GLF_FUZZED(2716.6881)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-32.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(102530u)), _GLF_FUZZED(2716.6881)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-32.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(102530u)), _GLF_FUZZED(2716.6881)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
