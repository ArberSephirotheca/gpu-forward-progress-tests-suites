#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bvec2 _f0;
 mat4 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 ivec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 int _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 mat4 _f3;
 mat4x2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat3x2 _f1;
 float _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 vec2 _f2;
 _GLF_struct_6 _f3;
 mat3 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 vec2 _f1;
 bvec4 _f2;
 vec4 _f3;
 uint read_1;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec4 _f3;
 int _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 vec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_8 _f3;
 mat3x4 _f4;
 bool _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1, gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(9.6)), bool(false))) > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0)), min(float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0)), float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0))))))), float(_GLF_FUZZED(9.6)), bool(false))) > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, bool(bvec2((_GLF_DEAD(false)) && true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)), 0u, 0u, 0u))) + _GLF_struct_replacement_0.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), mix(float(_GLF_FUZZED(float(186473u))), float(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x)), bool(true)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x), mix(float(_GLF_FUZZED(float(186473u))), float(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x)), bool(true)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ceil(vec2(-63.63, -6899.9654))) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-60.77) : injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) > injectionSwitch.y))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, abs(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3x4(mat3x4(mat3x4(injectionSwitch, abs(0.0), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-6.8)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(mat3x4(5.3, 6383.2134, -3.1, 6.6, 15.00, -1352.1455, -0.5, 5.3, 67.20, 8.5, -82.23, -8856.3597)) : mat3x4(mat3x4(mat3x4(injectionSwitch, abs(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, (true) && true))) && true))), false, false, false)), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | (subgroup_size), ((subgroup_size) | _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED((num_workgroup * subgroup_size)) : (subgroup_size)))) ^ 0u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size)), clamp((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (7u)))))) + subgroup_id * subgroup_size)), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size)), min((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size))))))) + ((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(5333.7271))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), clamp(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), clamp(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(mat2x3(87.02, -1.0, 285.500, 96.48, 15.63, 965.990)) : transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), clamp(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-936.134)), float(injectionSwitch[1]), bool(true))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y), bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(15104u, _GLF_IDENTITY((false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u))), min((false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u))), (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))))), 100949u), clamp(uvec2(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))), 100949u), uvec2(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))), 100949u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(workgroup_size) : 15104u)), (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(workgroup_size) : 15104u)), (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))), _GLF_IDENTITY(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(workgroup_size) : 15104u)), (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))), _GLF_IDENTITY(_GLF_IDENTITY(15104u, (false ? _GLF_FUZZED(workgroup_size) : 15104u)), (false ? _GLF_FUZZED(17309u) : _GLF_IDENTITY(15104u, max(15104u, 15104u)))))), 100949u)))) : uvec2(1u))), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(15104u, 100949u)) : uvec2(1u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), clamp(~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), clamp(0u, 0u, 0u)), 0u))), max((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), clamp(0u, 0u, 0u)), 0u))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), clamp(0u, 0u, 0u)), 0u))))), ~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))))))), (uvec3(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(15104u, 100949u)) : uvec2(1u))), 0u)) | (uvec3(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(15104u, ~ (_GLF_IDENTITY(~ (15104u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (~ (15104u))))), 100949u)) : _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3681.0717)), float(injectionSwitch.y), bool(true))))) * (uvec2(1u)), max(_GLF_IDENTITY(uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0), (vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0)) * vec2(1.0, 1.0))), min(float(_GLF_IDENTITY(vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0), (vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0)) * vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0), (vec2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0)) * vec2(1.0, 1.0))))))))) * (uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY((uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((uvec2(1u)), ~ (~ (_GLF_IDENTITY((uvec2(1u)), ~ (~ ((uvec2(1u))))))))), ~ (~ ((uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((uvec2(1u)), ~ (~ (_GLF_IDENTITY((uvec2(1u)), ~ (~ ((uvec2(1u)))))))))))) << uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec2(1u)), (uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec2(1u))) - uvec2(0u, 0u))))))), 0u))))), vec4(1.0), _GLF_struct_3(mat3x4(1.0), _GLF_struct_1(mat3(1.0), vec2(1.0), bvec4(true), vec4(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0), mat4x3(1.0)), _GLF_struct_2(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1))), bvec4(true), 1, mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-9.7))))), _GLF_struct_8(_GLF_struct_4(1.0, mat3x2(1.0), 1.0), _GLF_struct_5(uvec4(1u), uvec3(1u), mat3x4(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_6(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) << uvec2(0u, 0u))), 1, mat3x2(1.0)), mat3(1.0), _GLF_struct_7(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3x4(1.0), mat2x3(1.0), mat4x3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0)), bvec3(true))), mat3x4(1.0), true, ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(40794, 17197, -62277)[1]) : _GLF_IDENTITY(1, int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0)))) / _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0, max((_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ ((_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0, max((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))) | 0, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) - 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, (4) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), 64, _GLF_IDENTITY(0, (0) | 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1))), min(min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1))), (min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)))) >> 0u), min(_GLF_IDENTITY(min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1))), (min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)))) >> 0u), _GLF_IDENTITY(min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1))), (min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)))) >> 0u)))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_struct_replacement_9._f2._f1.read_1) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, clamp(_GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1)))) + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_struct_replacement_9._f2._f1.read_1) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, clamp(_GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1)))) + 1, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_struct_replacement_9._f2._f1.read_1) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, clamp(_GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1)))) + 1, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, clamp(_GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1)) + 1, _GLF_struct_replacement_9._f2._f1.read_1 + 1)), 0u))))), min(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u))))), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u), min(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_size % uvec2(53887u, 94556u))) : uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (true ? _GLF_struct_replacement_9._f2._f1.read_1 : _GLF_FUZZED(subgroup_size)))) * 1u) + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, ~ (~ (1))), 0u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, ~ (~ (1))), 0u)))), (false ? _GLF_FUZZED(read_2) : uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, ~ (~ (1))), 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))))))))))), ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, min(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, clamp(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_struct_replacement_9._f2._f1.read_1 + 1)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uint(~ (0u))), (uint(uint(~ (0u)))) | 0u))) - 0u))))), (uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uint(~ (0u))), (uint(uint(~ (0u)))) | 0u))) - 0u)))))) | (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uint(~ (0u))), (uint(uint(~ (0u)))) | 0u))) - 0u))))), (uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uint(~ (0u))), (uint(uint(~ (0u)))) | 0u))) - 0u)))))) ^ 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) - 0), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, max(1, 1)), uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))))))))))), max((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, min(_GLF_struct_replacement_9._f2._f1.read_1, _GLF_struct_replacement_9._f2._f1.read_1))) << 0u) + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))))))))))), ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) | 0), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (_GLF_struct_replacement_9._f2._f1.read_1 + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (_GLF_struct_replacement_9._f2._f1.read_1 + 1) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))))), 0u + (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))))), min((~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))))), (~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))))))))) - 0u)))))))))) | ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, ~ (~ (_GLF_struct_replacement_9._f2._f1.read_1 + 1))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u))))))))))))))))))) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) >> 0u))))))), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), (_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0)) / (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), (uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u))))))) - 0u))))), min(uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), clamp(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), (uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))), min(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u))))))))) - 0u))))), uint(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), max((0u), (0u)))))))), clamp(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))) ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), (uint(uvec2(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u * (0u))))))) - 0u))))))))) - (177510u & 0u))))) == read_2, (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | (read_2)), read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), false, true))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), false, true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || _GLF_IDENTITY(false, ! (! (false))))), false, true))))))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (_GLF_IDENTITY(! (_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2), ! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (false ? _GLF_FUZZED(1726u) : _GLF_struct_replacement_9._f2._f1.read_1 + 1)) == _GLF_IDENTITY(read_2, min(read_2, read_2))) && true), ! _GLF_IDENTITY((! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), false || ((! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), _GLF_IDENTITY(true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))), true && (true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, ~ (~ (_GLF_struct_replacement_9._f2._f1.read_1 + 1))) == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, ~ (~ (_GLF_struct_replacement_9._f2._f1.read_1))) + 1 == read_2))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), false, true, true)), (bool(bvec4(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), false, true, true))) || false))) || false)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), (bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8737.2472) : injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, 0u | _GLF_IDENTITY((_GLF_struct_replacement_9._f2._f1.read_1), ((_GLF_struct_replacement_9._f2._f1.read_1)) >> 0u)))) + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! _GLF_IDENTITY((_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) && true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2))))))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), true && (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false))) || false))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) >> 0u), min(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2)), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))), bool(bool((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), bool(bvec3(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), true, false))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(read_2, (read_2) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false)), (bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) | (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (true ? _GLF_struct_replacement_9._f2._f1.read_1 + 1 : _GLF_FUZZED(next_virtual_gid))) == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true, false))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_2, 1u, 1u), (true ? uvec3(read_2, 1u, 1u) : _GLF_FUZZED(uvec3(88099u, 122300u, 56225u))))), (uint(_GLF_IDENTITY(uvec3(read_2, 1u, 1u), (true ? uvec3(read_2, 1u, 1u) : _GLF_FUZZED(uvec3(88099u, 122300u, 56225u)))))) | (uint(_GLF_IDENTITY(uvec3(read_2, 1u, 1u), (true ? uvec3(read_2, 1u, 1u) : _GLF_FUZZED(uvec3(88099u, 122300u, 56225u)))))))), read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2, (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1, (_GLF_struct_replacement_9._f2._f1.read_1) >> 0u) + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, (_GLF_struct_replacement_9._f2._f1.read_1 + 1) >> 0u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1, 0u ^ (_GLF_struct_replacement_9._f2._f1.read_1 + 1)))) == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))), false || (_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)))), _GLF_IDENTITY(true, false || (true)), false))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))), false || (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))))) || false)), true, false)), (bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0))) == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false))) || false), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), _GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), (! (_GLF_IDENTITY(! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2), true && (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))) || false)))), (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))))))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))))))))))))), false || (bool(bool(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), bool(bool(_GLF_IDENTITY(! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)), ! (! (! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))))))))))))))))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false)), (bool(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ! (_GLF_IDENTITY(! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))), false || (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, ~ (~ (read_2))), read_2, read_2))))))))), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2))))), true && (((_GLF_IDENTITY(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), min(read_2, read_2)), ! (! (_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)))))))) || false)), true, false))) || false))))))), false, true, false))))))))))))) || false)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, (1) | (1))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 + ((64))) ^ 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2) + 1, min(_GLF_IDENTITY(uint(_GLF_struct_replacement_9._f2._f1.read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, (read_2) - 0u)) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2), _GLF_IDENTITY((uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)) - 0u, ~ (~ ((uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2)) - 0u)))) + 1, ~ (_GLF_IDENTITY(~ (uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2) + 1), 0u | (~ (uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2) + 1))))))), uint(_GLF_struct_replacement_9._f2._f1.read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED((ivec3(-71895, _GLF_IDENTITY(60214, clamp(60214, 60214, 60214)), 88427) >> -62555)) : ivec3(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), max(int(_GLF_IDENTITY(ivec3(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED((ivec3(-71895, 60214, 88427) >> -62555)) : ivec3(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), int(_GLF_IDENTITY(ivec3(4, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2528.5250) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.9) : 1.0)))), injectionSwitch.y))), (false ? _GLF_FUZZED((ivec3(-71895, _GLF_IDENTITY(60214, (true ? 60214 : _GLF_FUZZED(26472))), 88427) >> -62555)) : ivec3(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))))) / 1))) - _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), _GLF_IDENTITY(0, min(0, 0))), 0 | (_GLF_IDENTITY(max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), _GLF_IDENTITY(0, min(0, 0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), _GLF_IDENTITY(0, min(0, 0))), (max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), _GLF_IDENTITY(0, min(0, 0)))) << 0), max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(-1.3)), bvec2(false, false)))).x)) + (0)), _GLF_IDENTITY(0, min(0, 0))))))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_DEAD(false)) && true)) && _GLF_IDENTITY(true, false || (true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}
