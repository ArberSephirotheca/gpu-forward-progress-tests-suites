#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec3 _f0;
 uint workgroup_size;
 mat4x3 _f1;
 vec4 _f2;
 vec4 _f3;
 mat4x3 _f4;
 bvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat2x4 _f1;
 bool _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 mat2x4 _f1;
 _GLF_struct_7 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_struct_0(mat2x3(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))), true, false))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), false, false)))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), false, false))))))))) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), false, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false))), false, false)), true))))), _GLF_struct_1(vec2(1.0)), _GLF_struct_2(uvec2(1u)), ivec2(1)), mat2x4(1.0), _GLF_struct_7(_GLF_struct_4(vec4(1.0), mat2x4(1.0), true), mat4(1.0), _GLF_struct_5(mat3x2(1.0), uvec4(1u), ivec2(1)), _GLF_struct_6(_GLF_IDENTITY(vec3(1.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))) / vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), gl_WorkGroupSize.x, mat4x3(1.0), vec4(1.0), vec4(1.0), mat4x3(1.0), bvec2(true), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec4(! (! ((false))), true, true, _GLF_IDENTITY(false, true && (false))))))) && true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY((false), ! (! ((false))))) && true, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(42.83)), clamp(float(_GLF_FUZZED(42.83)), float(_GLF_FUZZED(42.83)), float(_GLF_FUZZED(42.83)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.1)))), bool(true))) < injectionSwitch.y)))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec4(! (! ((false))), true, true, _GLF_IDENTITY(false, true && (false))))))) && true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY((false), ! (! ((false))))) && true, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(42.83)), clamp(float(_GLF_FUZZED(42.83)), float(_GLF_FUZZED(42.83)), float(_GLF_FUZZED(42.83)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.1)))), bool(true))) < injectionSwitch.y))))))))))) && true) || false)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(! (! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false, false)))))), true, true, false)))) && true))) && true)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec4(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false, false)))))), true, true, false)))) && true), (_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! ((false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! ((false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! ((false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! ((false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))), false, false, false)))))), true, true, false)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true)) || false)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec4(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false, false)))))), true, true, false)))) && true))) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec4(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false, false)))))), true, true, false)))) && true), (_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec4((_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), ! (! ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! _GLF_IDENTITY((! (! ((false)))), ((! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, false)))))), true, true, false)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x < injectionSwitch.y))))) && true))) && true)) || false))))))) && true))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true), true)), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_8._f2._f3.workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), vec2(0.0, 0.0))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(1.0))))) + (injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) - 0u)) | (1u)) * (5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))) | (uint(5u))))) / 1u))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), clamp(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), uint(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), 0u, 0u, 0u))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (1) ^ (46772 & 0))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), max((_GLF_IDENTITY(64, min(64, 64))), (_GLF_IDENTITY(64, min(64, 64))))) | 0))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), min(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))) - 0.0)), 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), min(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))) - 0.0)), 0.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), min(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))) - 0.0)), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), min(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))) - 0.0)), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), min(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y)), float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))) - 0.0)), 0.0, 1.0, 0.0, 0.0)))))) / 1.0), 1.0, 0.0, log(1.0), sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))))), 0.0, tan(0.0)), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, tan(0.0)), mat4(1.0) * (vec4(0.0, 0.0, 0.0, tan(0.0)))), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0))), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), mix(float(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-10.58)), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-2.8)), ((true ? 0.0 : _GLF_FUZZED(-2.8))) - 0.0)), log(1.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.4, _GLF_IDENTITY((-3.4), float(vec4((-3.4), length(0.0), 1.0, 1.0))) + 0.0), 8631.6095)) : injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.4, (-3.4) + 0.0), 8631.6095)) : injectionSwitch : _GLF_FUZZED(injectionSwitch))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))).y))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), ((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0))) * mat3(1.0)) * vec3(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, log(1.0), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), float(mat4(sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.06)), float(1.0), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)) - 0.0), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))))), 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, tan(0.0)), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0))), mix(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-10.58)), bool(false)))), 0.0, log(1.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))), vec2(vec3(injectionSwitch, 1.0))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.0, 7.7)) : injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.4, (false ? _GLF_FUZZED(4.2) : -3.4)), 8631.6095)) : injectionSwitch)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), ((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0))) * mat3(1.0)) * vec3(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, log(1.0), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), float(mat4(sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.06)), float(1.0), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)) - 0.0), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))))), 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, tan(0.0)), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0))), mix(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-10.58)), bool(false)))), 0.0, log(1.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))), vec2(vec3(injectionSwitch, 1.0))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.0, 7.7)) : injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.4, (false ? _GLF_FUZZED(4.2) : -3.4)), 8631.6095)) : injectionSwitch)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), ((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0))) * mat3(1.0)) * vec3(1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, log(1.0), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), float(mat4(sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.06)), float(1.0), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)) - 0.0), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))))), 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, tan(0.0)), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0))), mix(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-10.58)), bool(false)))), 0.0, log(1.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))), vec2(vec3(injectionSwitch, 1.0))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.0, 7.7)) : injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.4, (false ? _GLF_FUZZED(4.2) : -3.4)), 8631.6095)) : injectionSwitch)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y)), true), true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, (1u ^ 1u), 0u, _GLF_IDENTITY((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u)))), ((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u))))) | ((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u))))))) - 0u, ~ (~ ((_GLF_IDENTITY((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u)))), ((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u))))) | ((0u & _GLF_IDENTITY(179484u, uint(uvec3(179484u, 0u, 1u))))))) - 0u)))))))], uint(read_1 + 1), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false))), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), 0u + (subgroup_local_id + 1))) - 0u) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) ^ 0)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(0u, 0u | (0u))))) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec2((1), 1))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) ^ 0)))) ^ 0u) == read_2), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, int(ivec2(0, 1))))), min((read_1 + _GLF_IDENTITY(1, (1) ^ 0)), (read_1 + _GLF_IDENTITY(1, (1) ^ 0)))) ^ 0u) == _GLF_IDENTITY(read_2, (read_2) | (read_2)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, int(ivec2(0, 1))))), min((read_1 + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))) - 0))), (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0)))) ^ 0u) == _GLF_IDENTITY(read_2, (read_2) | (read_2)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))), (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0)) | (_GLF_IDENTITY(1, (1) ^ 0)))) ^ 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0)) | (_GLF_IDENTITY(1, (1) ^ 0)))) ^ 0u)) | (_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0)) | (_GLF_IDENTITY(1, (1) ^ 0)))) ^ 0u))) == read_2), (uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, int(ivec2(0, 1))))), min((read_1 + _GLF_IDENTITY(1, (1) ^ 0)), (read_1 + _GLF_IDENTITY(1, (1) ^ 0)))) ^ 0u) == _GLF_IDENTITY(read_2, (read_2) | (read_2)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1u) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, int(ivec2(_GLF_IDENTITY((1) << 0, ((1) << 0) >> 0), 1))))), ((_GLF_IDENTITY(1, (1) << 0))) | ((_GLF_IDENTITY(1, (1) << 0)))) | _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), ((1)) >> 0), (1)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))), true, true, false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) + 1, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | 0), 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) || false))))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(83.87) : injectionSwitch.x)) > injectionSwitch.y) && true))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), clamp(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)))), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))).x > injectionSwitch.y))) && true)) && true)), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(8.9, -2.6), step(vec2(8517.9591, -9727.6773), injectionSwitch))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(8712.2112)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false))))).x > injectionSwitch.y))) && true)) && true))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(83.87) : injectionSwitch.x)) > injectionSwitch.y) && true))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), clamp(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)))), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))).x > injectionSwitch.y))) && true)) && true)), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(8.9, -2.6), step(vec2(8517.9591, -9727.6773), injectionSwitch))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(8712.2112)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false))))).x > injectionSwitch.y))) && true)) && true))) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(83.87) : injectionSwitch.x)) > injectionSwitch.y) && true))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), clamp(vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)))), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))).x > injectionSwitch.y))) && true)) && true)), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(8.9, -2.6), step(vec2(8517.9591, -9727.6773), injectionSwitch))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(8712.2112)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(7120.5826), _GLF_FUZZED(4543.9144)), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false))))).x > injectionSwitch.y))) && true)) && true))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
