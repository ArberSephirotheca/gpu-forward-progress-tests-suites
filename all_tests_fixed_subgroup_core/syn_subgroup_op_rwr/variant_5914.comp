#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.z = subgroup_id;
uint subgroup_size = 16;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.x = GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.z * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.z * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 0);
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 0);
 GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.y = read_2;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z = GLF_merged3_0_1_13_1_1_6_2_1_11num_workgroupread_2subgroup_id.y;
 if(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y + 1 == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y + 1 == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
