#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, false, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, false, true)))), ! (! (! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))))), true, false, true)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))), true, true), true)))))))))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-18.78) : injectionSwitch.x)) < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)) | (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)), uint(uint((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-18.78) : injectionSwitch.x)) < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)) | (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED((false ? -1.3 : float(true)))), bool(false))) > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, ! (! (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, clamp((subgroup_id) * 1u, (subgroup_id) * 1u, _GLF_IDENTITY((subgroup_id) * 1u, ~ (~ _GLF_IDENTITY(((subgroup_id) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))), (((subgroup_id) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) | (((subgroup_id) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))))) * subgroup_size) >> 0u) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (! (false))))), ! (! ((! (false))))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))), ! (! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), true, true)))))))))))), false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false)))), true, true, true)), bool(bvec2(bool(bvec4(false, true, true, true)), true))))), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))), true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false || (false))), false || ((! (false || (false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(2866.7719)), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-2161.2941, 45.23)) : (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(atan(vec2(-3.7, -8.7)))))))[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) + 0u), 0u + (_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size - workgroup_base), uint(uvec2((workgroup_size - workgroup_base), 1u))), uint(uvec3((workgroup_size - workgroup_base), 0u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) + 0u, ~ (~ ((uint(4u)) + 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 1u)))))))))), ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))) ? workgroup_base : _GLF_FUZZED((workgroup_size - _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) + 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) | (0u & 125504u))))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) | ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)) + subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_size - workgroup_base), (~ (workgroup_size - workgroup_base)) - 0u))))))) + 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_size - workgroup_base), (~ (workgroup_size - workgroup_base)) - 0u))))))) + 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, (1u ^ 0u), 0u, 1u))) - workgroup_base), (~ (workgroup_size - workgroup_base)) - 0u))), ~ (~ (_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_size - workgroup_base), (~ (workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) - 0u)))))))))) + 0u))) >> 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_size - workgroup_base), (~ (workgroup_size - workgroup_base)) - 0u))))))) + 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, (1u ^ 0u), 0u, 1u))) - workgroup_base), (~ (workgroup_size - workgroup_base)) - 0u))), ~ (~ (_GLF_IDENTITY(workgroup_size - workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_size - workgroup_base), (~ (workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) - 0u)))))))))) + 0u))) >> 0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), (_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)), 0u ^ (true ? workgroup_base : _GLF_FUZZED((workgroup_size - _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), workgroup_base)))))))) >> 0u)) + 0u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)), (true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)), (true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))) ^ 0u))))) + 0u)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((workgroup_size - workgroup_base)) - 0u))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))), workgroup_base, workgroup_base))), ((workgroup_size - workgroup_base)) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, (true) && true)))))) && true) ? workgroup_base : _GLF_FUZZED((workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true) ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))))))) + 0u)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), _GLF_IDENTITY(((workgroup_size - workgroup_base)), (_GLF_IDENTITY(((workgroup_size - workgroup_base)), 0u | (((workgroup_size - workgroup_base))))) | _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_size - workgroup_base)), max(((workgroup_size - workgroup_base)), ((workgroup_size - workgroup_base))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_size - workgroup_base)), max(((workgroup_size - workgroup_base)), ((workgroup_size - workgroup_base))))), max((_GLF_IDENTITY(((workgroup_size - workgroup_base)), max(((workgroup_size - workgroup_base)), ((workgroup_size - workgroup_base))))), (_GLF_IDENTITY(((workgroup_size - workgroup_base)), max(((workgroup_size - workgroup_base)), ((workgroup_size - workgroup_base)))))))))) - 0u))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), (_GLF_IDENTITY((workgroup_size - workgroup_base), uint(uvec4((workgroup_size - workgroup_base), 0u, 0u, 0u)))) - 0u)), (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), (_GLF_IDENTITY((workgroup_size - workgroup_base), uint(uvec4((workgroup_size - workgroup_base), 0u, 0u, 0u)))) - 0u))) | 0u))), (_GLF_IDENTITY(uint(uint(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u)))), min(_GLF_IDENTITY(uint(uint(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u)))), (uint(uint(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u))))) * 1u), uint(uint(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u))))))) | (uint(uint(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), ((workgroup_size - workgroup_base)) - 0u)))))))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size - workgroup_base, 0u | (workgroup_size - workgroup_base))), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) - workgroup_base)) - 0u))), _GLF_IDENTITY(((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u, 0u ^ ((_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), (_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) << 0u)) | 0u)) + 0u)))) + subgroup_id * subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(-49843)), (_GLF_FUZZED(uint(-49843))) | 0u) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true))) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - workgroup_base), ((workgroup_size - workgroup_base)) - 0u))), ((true ? workgroup_base : _GLF_FUZZED((workgroup_size - workgroup_base)))) + 0u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))))) | 0u) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(clamp(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, min((virtual_gid) / 1u, (virtual_gid) / 1u)))], (false ? _GLF_FUZZED(subgroup_size) : buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), (virtual_gid) - 0u)) / 1u)])), buf[virtual_gid]))), (clamp(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size)), ~ (~ (_GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size)), ((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))) >> 0u))))), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], (false ? _GLF_FUZZED(subgroup_size) : buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), (virtual_gid) - 0u)) / 1u)])), buf[virtual_gid])))) | 0u)), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) / 1u) + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-6219.0225 * 41.01)), _GLF_FUZZED(7332.3455)), bvec2(false, false))), injectionSwitch)).y)), true)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1) == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))) == read_2), true && ((read_1 + 1 == read_2)))), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), true && ((_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))) == read_2)))))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)), ! (! ((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)))))))))))) || false)))))))), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false)))) || false))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false))), true && (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) && true), bool(bvec4(! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) == read_2)), true, false, false)))) || false))) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), true && (_GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), bool(bvec4((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), false, false, true))))), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false)))))))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | (1)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), bool(bvec4(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), true, false, true)))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | _GLF_IDENTITY((1), ((1)) >> 0))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1) == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))) == read_2), true && ((read_1 + 1 == read_2)))), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), true && ((_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))) == read_2)))))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)), ! (! ((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)))))))))))) || false)))))))), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false)))) || false))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false))), true && (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) && true), bool(bvec4(! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) == read_2)), true, false, false)))) || false))) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), true && (_GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), bool(bvec4((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), false, false, true))))), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false)))))))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | (1)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), bool(bvec4(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), true, false, true)))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | _GLF_IDENTITY((1), ((1)) >> 0))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1) == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))) == read_2), true && ((read_1 + 1 == read_2)))), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), true && ((_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))) == read_2)))))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)), ! (! ((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)))))))))))) || false)))))))), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false)))) || false))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false))), true && (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) && true), bool(bvec4(! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) == read_2)), true, false, false)))) || false))) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), true && (_GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), bool(bvec4((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), false, false, true))))), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false)))))))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | (1)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), bool(bvec4(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), true, false, true)))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | _GLF_IDENTITY((1), ((1)) >> 0))))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1) == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))) == read_2), true && ((read_1 + 1 == read_2)))), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), true && ((_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))) == read_2)))))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true)))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)) && true))))), false || (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)), ! (! ((_GLF_IDENTITY(! (read_1 + 1 == read_2), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), true && (! (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2)))) && true)))))))))))) || false)))))))), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false)))) || false))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false))), true && (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)), (! (! (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2))) && true), bool(bvec4(! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) == read_2)), true, false, false)))) || false))) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! _GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), true && (_GLF_IDENTITY((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), bool(bvec4((! (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) == read_2)), false, false, true))))), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false)))))))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | (1)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), bool(bvec4(_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false, false))))))), true, false, true)))) || false))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))) | _GLF_IDENTITY((1), ((1)) >> 0))))) * 1u)))) / 1u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false), false, true)), false, true)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)))), mix(vec3(_GLF_FUZZED(3.4), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)))))[1], (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)))))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)))))[0], _GLF_FUZZED(5.6), _GLF_FUZZED(51.97)), bvec3(true, false, false))))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7165.9500), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))).x > injectionSwitch.y))))), false), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7165.9500), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))).x > injectionSwitch.y))))), false), true)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7165.9500), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), bvec2(true, false))).x > injectionSwitch.y))))), false), true))))))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))) || false), false, true, true))))) && true))))))))), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), true))), false)))), false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(2522.3537))))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), vec2(1.0, 0.0))), 1.0), vec2(1.0, 0.0)))))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), false), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), true))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, cos(0.0), 0.0))), injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), true))), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) && true), bool(bvec2((true) || false, false)))), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(true, ! (! (true)))))))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) && true), bool(bvec2((true) || false, false)))), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(true, ! (! (true)))))))) && true))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) && true), bool(bvec2((true) || false, false)))), false, true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(true, ! (! (true)))))))) && true)))) && true)))))))))), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(true, false || (true))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(true, false || (true))))), false), true)))))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec4(((injectionSwitch.x > injectionSwitch.y)) && true, false, false, false))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
}
