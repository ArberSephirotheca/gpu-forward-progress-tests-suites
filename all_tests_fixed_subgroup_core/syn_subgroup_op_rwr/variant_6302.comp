#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(68494) : 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) >> 0)))) >> _GLF_IDENTITY(int(4), int(4))) & 1) | 0)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false)))) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u), _GLF_IDENTITY(gl_WorkGroupID.x, (0u & 24137u) + (gl_WorkGroupID.x)), gl_WorkGroupID.x));
 GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.z = workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) << 0) & ivec2(93975, 99753).y); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED((-765.882))), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, ~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))) + subgroup_local_id, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, ~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))) + subgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, ~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))) + subgroup_local_id));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 1)); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y) | (0u | 0u))), min(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, (1u & 1u) * (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)), 0u, 1u))), _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id, (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id) ^ uvec3(0u, 0u, 0u)).y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y, (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y) | (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)))))))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), min(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 1u))), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)))))), (_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), min(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 1u))), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))))))) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), min(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, clamp(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y) - 0u), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)), min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 1u))), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))))))), 0u ^ (uint(_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), min(~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 1u))), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y) >> 0u), 0u, 1u))), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y))), ~ (~ (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)))))))))))))))))) + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x = next_virtual_gid;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.z], 0u ^ (buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.z])), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, 0 + (0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(-6.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
      {
      }
     else
      {
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x], uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))), 4, 64, 4);
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(38.93)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x = read_2;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, 1 * (1)) < GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.y)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), false, true)))) || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 52.69)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true), bool(bvec2(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true), false)))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, sin(0.0), 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x], _GLF_IDENTITY(uint(read_1 + 1 == GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x) + 1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), read_1 + 1), (clamp(read_1 + 1, read_1 + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), read_1 + 1)) ^ 0u)) == GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x), 0u | (uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), read_1 + 1), (clamp(read_1 + 1, read_1 + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), read_1 + 1)) ^ 0u)) == GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x))) + _GLF_IDENTITY(1, (1) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) | (64))) >> 0), 4);
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)).x, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x) ^ 0u)) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), max((_GLF_FUZZED(subgroup_id)), (_GLF_FUZZED(subgroup_id)))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4x3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))))))), min(float(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4x3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))))))), float(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), mat4x3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))))))))))))))))))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidsubgroup_sizevirtual_gidworkgroup_base.x))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(32854)))), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) * (1 | 0)))))) * 1), 1u * (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max(_GLF_IDENTITY((1) * 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(49058) : 1))))) * 1), int(ivec2(~ ((1) * 1), 1))))), (1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1)) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) * (1 ^ 0))), ~ (_GLF_IDENTITY(~ ((1)), 0 ^ (~ ((1)))))) * _GLF_IDENTITY(1, (1) << 0)), (read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u))) == GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) ^ 0))), (1) * 1), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * (1 ^ 0)), min(0, _GLF_IDENTITY(0, (0) * (1 | 0))))), min(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * (1 ^ 0)), min(0, _GLF_IDENTITY(0, (0) * (1 | 0))))), _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * (1 ^ 0)), min(0, _GLF_IDENTITY(0, (0) * (1 | 0)))))))) * 1), 1u * _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (~ ((1))))) ^ 0) * 1, ~ (_GLF_IDENTITY(~ ((1) * 1), int(ivec2(~ ((1) * 1), 1))))), (1) * 1)))), ~ (~ ((read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max(_GLF_IDENTITY((1) * 1, ~ (_GLF_IDENTITY(~ ((1) * 1), int(ivec2(~ ((1) * 1), 1))))), (1) * 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, (false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1) | (false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1)), false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, _GLF_IDENTITY(uint(uvec2(false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec2(false ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : read_1, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) - ivec3(0, 0, 0))))) * (1 ^ 0))), ~ (_GLF_IDENTITY(~ ((1)), 0 ^ (~ ((1)))))) * _GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u, ~ (~ ((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u))), (_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u, ~ (~ ((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u)))) ^ 0u)))) == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, uint(uvec4(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, 1u, 0u, 1u)))) ^ 0u)) || false)) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-76663))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0)) / 1), (1) * 1), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 1 * (_GLF_IDENTITY(1, (1) * 1))), 1u * (read_1 + _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(virtual_gid) : read_1)) + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), ~ (~ ((1))))) | ((1)), 1 * ((_GLF_IDENTITY((1), ~ (~ ((1))))) | ((1))))) * 1)) >> 0u))) == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id)), GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id)).x) + 1, (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) * 1) : _GLF_FUZZED(8792)), ((20450 ^ 9181) & 0) + ((true ? _GLF_IDENTITY(1, (1) * 1) : _GLF_FUZZED(8792))))), _GLF_IDENTITY(1u, min(1u, 1u)) * (read_1 + _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u, ((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u) | ((read_1 + _GLF_IDENTITY(1, (1) * 1)) >> 0u))))) == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id, uvec3(uvec4(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 1u), clamp((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 1u)))))).x) + 1) / 1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)) / 1)))) ^ 0))), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) << 0))), (1) * 1)) >> 0), 1u * (read_1 + _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, (1) * 1)) * 1u), 0u, 1u)))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, (1) * 1)) * 1u), 0u, 1u)))) << 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, (1) * 1)) * 1u), 0u, 1u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, (1) * 1)) * 1u), 0u, 1u)))) << 0u), (true ? _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1), (read_1 + _GLF_IDENTITY(1, (1) * 1)) * 1u), 0u, 1u)))) << 0u) : _GLF_FUZZED(workgroup_size)))))))), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((_GLF_IDENTITY(1, (1) >> 0)), (1), (1))), (_GLF_IDENTITY((1), clamp((_GLF_IDENTITY(1, (1) >> 0)), (1), (1)))) << 0), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))))) * 1)) >> 0u))) == GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x) + 1, (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), ((1)) << 0) * 1), 1u * (read_1 + _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(2), int(2))))), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) << 0))) >> 0u)), (min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(((1)) << 0, (((1)) << 0) | 0)) * 1), 1u * (read_1 + _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(2), int(2))))), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) << 0))) >> 0u))) + 0u)) == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, min(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x, ~ _GLF_IDENTITY((~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x)), (true ? (~ (GLF_merged3_0_1_6_1_1_11_2_1_12read_2subgroup_idworkgroup_id.x)) : _GLF_FUZZED(uint(true)))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))) >> 0u)) >> 0u)) + 1) * 1u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-57095))) ^ 0), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ (0 ^ 0))), max(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ (0 ^ 0))), ~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ (0 ^ 0))))), (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ (0 ^ 0)))) ^ (0 | 0)))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (true) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       subgroupAll(true);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-1964.3223 / 799.191)), mix(float(_GLF_FUZZED(float((148164u * 143880u)))), _GLF_IDENTITY(float(_GLF_FUZZED((-1964.3223 / 799.191))), max(float(_GLF_FUZZED((-1964.3223 / 799.191))), float(_GLF_FUZZED((-1964.3223 / 799.191))))), bool(true))), abs(cos(0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-1964.3223 / 799.191)), mix(float(_GLF_FUZZED((-1964.3223 / 799.191))), float(_GLF_FUZZED((2.1 + -630.688))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float((148164u * 143880u))), clamp(_GLF_IDENTITY(_GLF_FUZZED(float((148164u * 143880u))), float(vec3(_GLF_FUZZED(float((148164u * 143880u))), 1.0, 0.0))), _GLF_FUZZED(float((148164u * 143880u))), _GLF_FUZZED(float((148164u * 143880u)))))), _GLF_IDENTITY(float(_GLF_FUZZED((-1964.3223 / 799.191))), max(float(_GLF_FUZZED((-1964.3223 / _GLF_IDENTITY(799.191, (799.191) / 1.0)))), float(_GLF_FUZZED((-1964.3223 / 799.191))))), bool(true))))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-60.04)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-805.214), _GLF_FUZZED(8.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), bvec2(true, true))))).y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)) * 1.0, mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.6)), bvec2(true, false))).y, (injectionSwitch.y) / 1.0)) * 1.0), bool(true)))) + 0.0), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)), determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4057.3172))), 1.0, 0.0))), 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-22.37)), float(0.0), bool(true))))), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0), mat3x4(mat3x4(mat3x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.8)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec4(-311.385, -1589.2282, 44.87, 6530.4713), vec4(70.08, -8.9, 3.4, -5578.1553)))))) / 1.0)) * 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED((704.508 / -9.6))), mix(float(_GLF_FUZZED(float(-95523))), float(float(_GLF_FUZZED((704.508 / -9.6)))), bool(true))), bool(false))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0))).y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED((-1964.3223 / 799.191)), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY((148164u * 143880u), ((148164u * 143880u)) - 0u)))), _GLF_IDENTITY(float(_GLF_FUZZED((-1964.3223 / 799.191))), max(float(_GLF_FUZZED((-1964.3223 / 799.191))), float(_GLF_IDENTITY(_GLF_FUZZED((-1964.3223 / 799.191)), max(_GLF_FUZZED((-1964.3223 / 799.191)), _GLF_FUZZED((-1964.3223 / 799.191))))))), bool(true))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-60.04)), bool(false)), clamp(mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-60.04)), bool(false)), mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-60.04)), bool(false)), mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-60.04)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0))))) - 0.0) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), max(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))))), _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))))))), (injectionSwitch.y))) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), max(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))))), _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))))))), (injectionSwitch.y))) / 1.0))) / abs(1.0)) * 1.0, mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2x4(-7950.0130, -67.75, -569.101, 98.45, 619.666, -9.4, 9.4, -2860.7521)) : mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)))), clamp(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2x4(-7950.0130, -67.75, -569.101, 98.45, 619.666, -9.4, 9.4, -2860.7521)) : mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2x4(-7950.0130, -67.75, -569.101, 98.45, 619.666, -9.4, 9.4, -2860.7521)) : mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)))), mix(float(_GLF_FUZZED(-495.224)), float(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2x4(-7950.0130, -67.75, -569.101, 98.45, 619.666, -9.4, 9.4, -2860.7521)) : mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))))), bool(true))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2x4(-7950.0130, -67.75, -569.101, 98.45, 619.666, -9.4, 9.4, -2860.7521)) : mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)))))))) + 0.0) / 1.0)) * 1.0), bool(true)))), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), (injectionSwitch.y))) / 1.0)) * 1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)), (mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true))) - 0.0), mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)))), mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true)))))), mix(float((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7445.4248))), (injectionSwitch.y))) / 1.0)) * 1.0, mix(float(_GLF_FUZZED(-4.8)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))) + 0.0) / 1.0)) * 1.0), bool(true))))), float(_GLF_FUZZED(-1.8)), bool(false))))) + 0.0), float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0)))) + 0.0), 1.0, 0.0))), 0.0, 0.0, 1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), 1.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.8)), bool(false))), (injectionSwitch.y) / 1.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.8)), bool(false))), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / sqrt(1.0)), (injectionSwitch.y))) / 1.0)) * 1.0), float(_GLF_FUZZED(-3.4)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(704.508, min(704.508, 704.508)), (704.508) / abs(1.0)) / -9.6))), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)))))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0))).y))))) || false)));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    barrier();
  }
}
