#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 int _f0;
 uint read_2;
 mat4 _f1;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 mat2x4 _f1;
 mat2 _f2;
 vec3 _f3;
 bvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 mat4x2 _f1;
 uint _f2;
 bvec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_18 {
 mat2x4 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 mat3x4 _f3;
 _GLF_struct_17 _f4;
 ivec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 mat3x2 _f1;
 uint _f2;
 mat2 _f3;
 mat4 _f4;
 vec4 _f5;
 int _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 int _f1;
 uint workgroup_size;
 mat2x4 _f2;
 float _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_13 _f0;
 mat4x2 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_18 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_7 {
 int _f0;
 float _f1;
 bool _f2;
 ivec4 _f3;
 mat3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3 _f1;
 int _f2;
 vec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bvec3 _f1;
 mat4 _f2;
 vec2 _f3;
 float _f4;
 mat4x2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_8 _f2;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_6_1_1_13read_1subgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged2_0_1_6_1_1_13read_1subgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x2(1.0), _GLF_struct_2(_GLF_struct_0(true, mat3(1.0)), bvec3(true), ivec2(1), _GLF_struct_1(mat3(1.0), ivec4(1), vec2(1.0))), _GLF_struct_8(_GLF_struct_3(ivec4(1), bvec3(true), mat4(1.0), vec2(1.0), 1.0, mat4x2(1.0), vec4(1.0)), _GLF_struct_4(bvec2(true), vec3(1.0), mat4x2(1.0), mat3x4(1.0)), _GLF_struct_5(mat2x3(1.0), mat4x2(1.0)), _GLF_struct_6(uvec3(1u), mat3(1.0), 1, vec4(1.0), uvec2(1u)), _GLF_struct_7(1, 1.0, true, ivec4(1), mat3(1.0), ivec4(1))), gl_NumWorkGroups.x);
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_13(_GLF_struct_10(mat3x4(1.0), mat3x2(1.0), 1u, mat2(1.0), mat4(1.0), vec4(1.0), 1), 1, gl_WorkGroupSize.x, mat2x4(1.0), 1.0, _GLF_struct_11(bvec2(true), ivec3(1), ivec2(1), uvec4(1u)), _GLF_struct_12(bvec3(true), mat3x2(1.0), mat2x4(1.0))), mat4x2(1.0), _GLF_struct_14(bvec4(true)), _GLF_struct_18(mat2x4(1.0), _GLF_struct_15(bvec2(true), mat4x2(1.0), 1u, bvec2(true), vec3(1.0)), _GLF_struct_16(mat2x3(1.0), mat2x4(1.0), mat2(1.0), vec3(1.0), bvec3(true), mat2(1.0)), mat3x4(1.0), _GLF_struct_17(bvec4(true)), ivec3(1), uvec4(1u)), mat4x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - (1 ^ 1)))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
    }
  }
 else
  {
  }
 uint workgroup_base = _GLF_struct_replacement_19._f0.workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_6_1_1_13read_1subgroup_size.y + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_6_1_1_13read_1subgroup_size.y + ((subgroup_local_id + 1) % GLF_merged2_0_1_6_1_1_13read_1subgroup_size.y);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged2_0_1_6_1_1_13read_1subgroup_size.x = read_1;
  }
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_1_6_1_1_13read_1subgroup_size.x + 1), 4, 64, 4);
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(1, atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], 4, 64, 0), mat4(1.0));
 if(subgroup_local_id + 1 < GLF_merged2_0_1_6_1_1_13read_1subgroup_size.y)
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_1_6_1_1_13read_1subgroup_size.x + 1 == _GLF_struct_replacement_20.read_2) + 1, 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(false);
    }
  }
 else
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_1_6_1_1_13read_1subgroup_size.x + 1 == _GLF_struct_replacement_20.read_2) + 1, 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(true);
  }
}
