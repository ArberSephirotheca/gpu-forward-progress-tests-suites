#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))) || false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.2))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-531.476)), float(0.0), bool(true))), 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.4)), float(0.0), bool(true))) : _GLF_FUZZED(0.9))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), dot(_GLF_IDENTITY(vec4(0.0, tan(0.0), 0.0, 1.0), _GLF_IDENTITY(min(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0)), (_GLF_IDENTITY(min(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0)), min(min(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0)), min(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0))))) - vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, sqrt(1.0)), mix(vec4(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), clamp((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), 1.0 * ((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))))))), 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) : _GLF_FUZZED(43.16)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(43.16)), clamp((true ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0)))) : _GLF_FUZZED(43.16)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16)), 1.0 * ((true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))))))), 0.0, 0.0, sqrt(1.0)))))[1], _GLF_FUZZED(-2797.9508), _GLF_FUZZED(3.7)), vec4((vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), sqrt(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0)))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch))))), min(0.0, 0.0)))))) : _GLF_FUZZED(43.16))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(vec3(0.0, 0.0, 1.0))), sqrt(1.0)))[0], _GLF_FUZZED(64.10), _GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | 0)], (false ? _GLF_FUZZED(asinh(-28.84)) : (vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | 0)])), (vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - tan(0.0)))) : _GLF_FUZZED(43.16))), 0.0, 0.0, sqrt(1.0)))[3]), bvec4(true, false, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861)))), bool(true))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), min(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(exp2(144.214), (exp2(144.214)) / 1.0)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))))), max(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))))), min(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9609.3473)), bool(false))), 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, sin(0.0), length(vec2(0.0, 0.0)), 1.0, tan(0.0)))), 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(exp2(144.214)), (_GLF_IDENTITY(_GLF_FUZZED(exp2(144.214)), min(_GLF_FUZZED(exp2(144.214)), _GLF_FUZZED(exp2(144.214))))) / 1.0))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), float(mat4(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(8.5)), float(cos(0.0)), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), min(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-98.30)), float(1.0), bool(true))), determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(mat3x4((0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(5.0)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3x4((0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(5.0)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(7.9) : dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(0.0), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), float(mat3x4(_GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), mix(float(_GLF_FUZZED(94.69)), float(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))), bool(true))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(52.16))), 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(144.214)))), (true ? 0.0 : _GLF_FUZZED(-479.861))), abs(0.0), 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -2.3))), bool(false)))), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), min(float(mat2(sqrt(1.0), 1.0, 1.0, 1.0)), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))))))))), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))))))))))) / 1.0))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true))))) || false), true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))) && true) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), true && ((true && (false)))), bool(bvec4(! (true && (false)), false, false, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), bool(bvec4(! (true && (false)), false, false, true)))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ((true && (false))) && true), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))) && (false))))), false, false, true)))), ! (! ((_GLF_IDENTITY(! (true && (false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true) && (false)), false, false, true))))))))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec4(! (true && (false)), false, false, true)))), bool(bool(! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec4(! (true && (false)), false, false, true)))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (_GLF_IDENTITY(! (bool(! (true && _GLF_IDENTITY((false), ((false)) && true)))), false || (! (bool(! (true && _GLF_IDENTITY((false), ((false)) && true)))))))))), false, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true))))), false, true))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))))))))), false, false, true))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))), false || (! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))))), false, false, false))))))))), false, false, true))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true)))))))), (bool(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))))) || false)))))), false, false, true))))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), (! (true && (false))) && true))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))), ! (! (bool(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, true))))))))))))), false, false, true))))), false), true, true)), true, true)))), true))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(bool(bvec3(! (true && (false)), false, true)), bool(bool(bool(bvec3(! (true && (false)), false, true)))))))))), ! (! (bool(! (true && (false)))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), false || ((false)))))), bool(bvec2(true && _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), false || ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (_GLF_IDENTITY(true, ! (! (true))) && (false)))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))))), false), true, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), true), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), true), true))), true)))))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (_GLF_IDENTITY(true, false || (true)) && (false)))))))), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true))), ((bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))) && true))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((true && (false)), true && (_GLF_IDENTITY((true && (false)), bool(bool((true && (false)))))))), ! (! (bool(! (true && (false)))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), false || (true && (false)))), false || (! (true && (false)))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! _GLF_IDENTITY((! (bool(! (true && (false))))), bool(bvec2((! (bool(! (true && (false))))), false)))))), false, false, true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), bool(bvec4((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), false, true, false)))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), bool(bvec4((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), false, true, false)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), bool(bvec4((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), false, true, false))))))), ! (! (! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), bool(bvec4((! (bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(! (true && (false))), ! (! (bool(! (true && (false)))))))), false, false, true)))), false, true, false)))))))))))), false, false, true)))), false), true, false)))))))) || false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), true, true))), false || (true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), true, true))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))), _GLF_IDENTITY(bool(bvec4(! (true && (false)), false, false, true)), (bool(bvec4(! (true && (false)), false, false, true))) || false))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(2920.2184)), bool(false))))))) && (false)))), bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (false)))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true)), (bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true))) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (false)))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true)), (bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true))) && true)))))) || false), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && (false)))), bool(bvec4(! (true && _GLF_IDENTITY((false), false || ((false)))), false, false, true))))))) || false), true, _GLF_IDENTITY(false, true && (false)), true))))))))) && true)))))), true && (bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(float(mat3(injectionSwitch.x, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-956.931), _GLF_FUZZED(-2.2), (vec4(1.0, 0.0, 0.0, 0.0))[2], (vec4(1.0, 0.0, 0.0, 0.0))[3]), vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(7.7), _GLF_FUZZED(-1.8)), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(30.41)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.9)), float(0.0), bool(true)))), bool(true))), abs(1.0), 1.0, 0.0, 1.0)), max(float(mat3x2(float(mat3(injectionSwitch.x, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-956.931), _GLF_FUZZED(-2.2), (vec4(1.0, 0.0, 0.0, 0.0))[2], (vec4(1.0, 0.0, 0.0, 0.0))[3]), vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(7.7), _GLF_FUZZED(-1.8)), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(30.41)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.9)), float(0.0), bool(true)))), bool(true))), abs(1.0), 1.0, 0.0, 1.0)), float(mat3x2(float(mat3(injectionSwitch.x, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-956.931), _GLF_FUZZED(-2.2), (vec4(1.0, 0.0, 0.0, 0.0))[2], (vec4(1.0, 0.0, 0.0, 0.0))[3]), vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(7.7), _GLF_FUZZED(-1.8)), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(30.41)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.9)), float(0.0), bool(true)))), bool(true))), abs(1.0), 1.0, 0.0, 1.0)))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), true && (bool(bvec2((_GLF_DEAD(false)), false))))) || false))))))))), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), ! (! (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true) || _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true))), true && (bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))) && true))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true))))))))))), (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, true, false)), false, true)))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, true, false)), false, true)))), (false) && true)) || false) || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) || _GLF_IDENTITY(false, ! (! (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (1)))))), subgroup_local_id + 1, subgroup_local_id + 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), (1u * (0u)) >> 0u)), 0u))) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, 0 + (7)), 0)))) ^ 0), ~ (~ (7)))) >> 0)))) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), (false ? _GLF_FUZZED(43366) : 0 | (64)))), clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1))), 0u + _GLF_IDENTITY((uint(read_1 + 1)), 0u + ((uint(read_1 + 1))))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) | 0u) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (1 | 1)), _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(78898), (_GLF_FUZZED(78898)) | (_GLF_IDENTITY(_GLF_FUZZED(78898), (_GLF_FUZZED(78898)) << 0))) : _GLF_IDENTITY(~ (~ (1)), int(ivec4(~ (~ (1)), (0 | 0), 1, 0)))))) >> 0)))) == read_2, false || (read_1 + 1 == read_2))) + 1, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, clamp(0, 0, 0))), 4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, ((64) - 0) / 1)) | 0)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1902.8062), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(false, false || (false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, log(1.0)))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.0))), injectionSwitch.y, injectionSwitch.y))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) - 0u)))) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, max(0, 0)))) ^ (1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((1), ((1)) ^ 0), int(ivec2(0 ^ (1), 1)))), _GLF_IDENTITY((int(0 ^ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))))) / 1, ((int(0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1) >> (0 << _GLF_IDENTITY(int(6), int(6)))))))) / 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(6309))))), _GLF_IDENTITY(0 ^ (1), (_GLF_IDENTITY(0 ^ (1), int(_GLF_IDENTITY(int(0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY((int(0 ^ (1))) / 1, ((int(0 ^ (1))) / 1) + 0), (_GLF_IDENTITY((int(0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))))) / 1, ((_GLF_IDENTITY(int(0 ^ (1)), (0 >> _GLF_IDENTITY(int(1), int(1))) | (int(0 ^ (1))))) / _GLF_IDENTITY(1, 0 | (1))) + 0)) - 0))))) / 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))) + 0), clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(56958) : 1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) * 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) * 1) ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)))) | (1))) - 0)))), (_GLF_IDENTITY(0 ^ (1), int(_GLF_IDENTITY(int(0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)))), (int(0 ^ (1))) / 1)))) / 1)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | (read_1 + 1)) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false))) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bool(true))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(39.31) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.366)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8992.6964)), bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, 0.0 + (1.0)) * (injectionSwitch.x)) > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
