#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 uvec3 _f0;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 uint next_virtual_gid;
 mat2x4 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 mat3 _f3;
 mat4x3 _f4;
 vec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 vec4 _f1;
 int _f2;
 ivec2 _f3;
 vec3 _f4;
 uvec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 uint virtual_gid;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 int _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 vec4 _f4;
 mat4x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 int _f0;
 bool _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 ivec4 _f1;
 uint read_2;
 _GLF_struct_5 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 mat2x4 _f1;
 uint _f2;
 vec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
 mat3x4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(_GLF_struct_8(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(1.0)), _GLF_struct_9(ivec4(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), mat3x4(1.0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), max(~ (1), ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))))) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (1), ~ (1)), max(max(~ (1), ~ (1)), max(~ (1), ~ _GLF_IDENTITY((1), ((1)) >> (0 >> _GLF_IDENTITY(int(6), int(6))))))))), ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (1), ~ (1)), max(max(~ (1), ~ (1)), max(~ (1), ~ _GLF_IDENTITY((1), ((1)) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))))))) | 0))))))), mat3x2(1.0), vec4(1.0), mat4x3(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(((-2978.9743 - -457.261)), (((-2978.9743 - -457.261))) + tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), float(1.0), bool(true)))))), gl_SubgroupSize);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(tan(-4.7)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-5585.3699)))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)) * mat3(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), (mat4x3(injectionSwitch, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.7) : 1.0)), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), min(_GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(587.368)), float((determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)))), bool(true))), (determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), (determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))))), (determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0))))), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))) + mat4x3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.3)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2074.3433)), float(0.0), bool(true))), 0.0, 0.0))), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, -8.8, 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095)))), mat4(1.0) * (_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.1), (_GLF_FUZZED(-0.1)) / 1.0)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-6.0)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, abs(1.0))))) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, _GLF_IDENTITY(-8.8, (false ? _GLF_FUZZED(-84.10) : -8.8)), 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-75.91)), bool(false))), clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), vec3(mat3x2((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), exp(0.0), 1.0, 1.0)))), vec3(mat4x2(vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))))), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), (mat4x3(injectionSwitch, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))) / 1.0), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(198.387) : 0.0)), 0.0)), 0.0, 0.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_FUZZED(135.928)), float(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0)))), bool(true)))), float(_GLF_FUZZED(-3503.2687)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))) + mat4x3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-27.26 / 4.0)), (_GLF_FUZZED((-27.26 / 4.0))) * abs(1.0))), float(float(_GLF_FUZZED(-0.8))), bool(true))), bool(false))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.9))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))))), 0.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0), 0.0))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, -8.8, 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095)))), mat4(1.0) * (_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.1), (_GLF_FUZZED(-0.1)) / 1.0)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-6.0)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, abs(1.0))))) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, _GLF_IDENTITY(-8.8, (false ? _GLF_FUZZED(-84.10) : -8.8)), 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-75.91)), bool(false))), clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), vec3(mat3x2((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), exp(0.0), 1.0, 1.0)))), vec3(mat4x2(vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))))), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), (mat4x3(injectionSwitch, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))) / 1.0), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(198.387) : 0.0)), 0.0)), 0.0, 0.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_FUZZED(135.928)), float(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0)))), bool(true)))), float(_GLF_FUZZED(-3503.2687)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))) + mat4x3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-27.26 / 4.0)), (_GLF_FUZZED((-27.26 / 4.0))) * abs(1.0))), float(float(_GLF_FUZZED(-0.8))), bool(true))), bool(false))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.9))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))))), 0.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0), 0.0))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, -8.8, 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095)))), mat4(1.0) * (_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.1), (_GLF_FUZZED(-0.1)) / 1.0)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-6.0)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, abs(1.0))))) : _GLF_FUZZED(mat4(274.479, -18.74, 948.558, _GLF_IDENTITY(-8.8, (false ? _GLF_FUZZED(-84.10) : -8.8)), 7.5, -9.5, -11.34, 67.21, -93.64, 7536.5393, 4.3, 93.78, 85.54, 5238.9796, 45.72, -514.095))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-75.91)), bool(false))), clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), vec3(mat3x2((vec3(0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0)), exp(0.0), 1.0, 1.0)))), vec3(mat4x2(vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))))), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), (mat4x3(injectionSwitch, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))) / 1.0), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(198.387) : 0.0)), 0.0)), 0.0, 0.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), mix(float(_GLF_FUZZED(135.928)), float(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0)))), bool(true)))), float(_GLF_FUZZED(-3503.2687)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))) + mat4x3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-27.26 / 4.0)), (_GLF_FUZZED((-27.26 / 4.0))) * abs(1.0))), float(float(_GLF_FUZZED(-0.8))), bool(true))), bool(false))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.9))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.6)), float(0.0), bool(true))))), 0.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0), 0.0)))))) * mat2(1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(bvec3(true), 1, _GLF_struct_16(mat2x3(1.0), _GLF_struct_12(uvec2(1u), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), 1, ivec2(1), vec3(1.0), uvec2(1u), bvec3(true)), _GLF_struct_13(mat3(1.0)), _GLF_struct_14(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(0, 0) | ivec2(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36254) : 0)))), (_GLF_IDENTITY((ivec2(0, 0) | ivec2(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36254) : 0)))), ivec2(ivec2((ivec2(0, 0) | ivec2(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36254) : 0)))))))) ^ ivec2(0, 0)) + (ivec2(1)))))), workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + subgroup_local_id, _GLF_struct_15(mat4(1.0), mat2x4(1.0), ivec3(1), mat3(1.0), mat4x3(1.0), vec4(1.0), true)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat2x4(1.0), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), (1u & 1u)), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u)) * 1u), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), (subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) * 1u), uint(6u)))))), uint(uint(~ (_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u), uint(uint(_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u)))), uint(6u))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u), ((_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u)) >> 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ ((_GLF_IDENTITY(1u, ~ (~ (1u))) & 1u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(max(subgroup_local_id, num_workgroup)) : (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), _GLF_IDENTITY((0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u)), clamp((0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u)), (0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u)), _GLF_IDENTITY((0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u)), ((0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u))) | ((0u & 25547u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u * (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ (0u | 0u)) >> 0u)))))))))), (1u & 1u)), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) / 1u), uint(6u)))), (1u & 1u))), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) / 1u), uint(6u)))), (1u & 1u))), clamp(~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) / 1u), uint(6u)))), (1u & 1u))), ~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) / 1u), uint(6u)))), (1u & 1u))), ~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) / 1u), uint(6u)))), (1u & 1u)))))) | uvec2(0u, 0u))))))))) + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_struct_replacement_11.subgroup_size), mat2x4(1.0), _GLF_struct_18(uvec3(1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_17._f2.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_19.next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-11.37)), float(1.0), bool(true)))) * (injectionSwitch)).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-5.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0), (mat2x3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0)) * mat2(1.0)))).x), abs(1.0), 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) * vec2(1.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(35.11)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-23.30)))), bool(true))), clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-567.461, _GLF_IDENTITY(_GLF_IDENTITY(-9591.9898, (_GLF_IDENTITY(-9591.9898, (_GLF_IDENTITY(true ? -9591.9898 : _GLF_FUZZED(6030.2774), clamp(true ? -9591.9898 : _GLF_FUZZED(6030.2774), true ? -9591.9898 : _GLF_FUZZED(6030.2774), true ? -9591.9898 : _GLF_FUZZED(6030.2774)))))) / 1.0), float(mat3(-9591.9898, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0))), 151.243).r)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7661.8974) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 0.0)))))), _GLF_struct_0(ivec4(1), mat2x4(1.0), 1u, vec4(1.0), uvec2(_GLF_IDENTITY(1u, min(1u, 1u)))), vec2(1.0), mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_struct_2(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), _GLF_struct_1(mat4x3(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23629) : 0)) + (1))))), vec2(1.0)), mat4x2(1.0), bvec3(true), vec2(1.0)), _GLF_struct_3(mat3x4(1.0), mat3x2(1.0)), _GLF_struct_6(_GLF_struct_4(1, true), ivec4(1), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_struct_replacement_17._f2.virtual_gid)))), _GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u))), ((~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))) << 0u), (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))) | (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))) | (_GLF_struct_replacement_17._f2.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_struct_replacement_17._f2.virtual_gid))) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((+ workgroup_id))))))))), (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))) | (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (true ? _GLF_struct_replacement_17._f2.virtual_gid : _GLF_FUZZED((read_1))))) ^ 0u))))))), max(max(_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, 0u | (_GLF_struct_replacement_17._f2.virtual_gid)))), _GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))), min((~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))), (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))))) | (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (true ? _GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) << 0u) : _GLF_FUZZED(163684u)))) >> 0u), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (0u) - 0u), 0u)) | (_GLF_struct_replacement_17._f2.virtual_gid)))), _GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u))), (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))) | (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f2.virtual_gid, (_GLF_struct_replacement_17._f2.virtual_gid) ^ 0u)))))))))) >> 0u))], 4, 64, 0), _GLF_struct_5(uvec4(1u), mat3x2(1.0)), mat3x2(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_11.subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_11.subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_11.subgroup_size, bool(bvec4(subgroup_local_id + 1 < _GLF_struct_replacement_11.subgroup_size, true, true, false)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_19.next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_7._f6.read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))), 0 ^ _GLF_IDENTITY((clamp(4, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (true ? _GLF_IDENTITY(0 | (4), 0 | (0 | (4))) : _GLF_FUZZED(-38243)))))), (_GLF_IDENTITY((clamp(4, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) | (4)), _GLF_IDENTITY(4, 0 | (4)))), (0 >> _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY((clamp(4, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) | (4)), _GLF_IDENTITY(4, 0 | (4)))), ((clamp(4, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) | (4)), _GLF_IDENTITY(4, 0 | (4))))) ^ 0)))) | ((clamp(4, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), (int(7)) >> 0))) | (4)), _GLF_IDENTITY(4, 0 | (4)))))))), min(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec2(65101, 29816).s) : 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), 4, _GLF_IDENTITY(4, (4) - 0))))), 64, 4);
   subgroupAll(_GLF_IDENTITY(false, bool(bool(false))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (false)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (false)), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))) / 1.0)))) - 0.0), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)))), 1.0, abs(1.0), 1.0, 0.0, cos(0.0))), mix(float(_GLF_FUZZED(-865.765)), float(float(mat3x2(injectionSwitch.y, 1.0, abs(1.0), 1.0, 0.0, cos(0.0)))), bool(true))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))) && true)), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                return;
               return;
              }
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-52.91)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_19.next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_7._f6.read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)) && (false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, true)))), false || (bool(bool(bool(bvec2(false, true))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
