#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 bool _f0;
 mat3 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_11 {
 float _f0;
 vec2 _f1;
 bvec4 _f2;
 mat4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_13 {
 mat4 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 bool _f1;
 bvec2 _f2;
 uint _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 uvec2 _f1;
 _GLF_struct_9 _f2;
 bvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_8 _f0;
 uint next_virtual_gid;
 _GLF_struct_10 _f1;
 int _f2;
 mat3 _f3;
 ivec4 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat4x2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 ivec3 _f1;
 mat3 _f2;
 mat4x2 _f3;
 float _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 _GLF_struct_2 _f1;
 mat4 _f2;
 ivec2 _f3;
 mat2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 int _f1;
 mat2 _f2;
 float _f3;
 bvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 float _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 uint workgroup_id;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(719.821), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(36.45)), bvec2(true, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, true)))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(-5.1), _GLF_FUZZED(907.185)), vec3(_GLF_FUZZED((true ? 2972.1429 : 1.5)), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))[2], ((vec3(injectionSwitch, 1.0))[2]) / 1.0)), bvec3(false, true, true))), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(vec2((vec2(vec3(injectionSwitch, 1.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)))[1]), vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))), bvec2(false, false)), vec2(mat4x2(mix(vec2((vec2(vec3(injectionSwitch, 1.0)))[0], (vec2(vec3(injectionSwitch, 1.0)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))), clamp(vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))), vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))), vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))))), vec2(_GLF_FUZZED(38.04), _GLF_FUZZED(float(76167))))), bvec2(false, false)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))) / 1.0)), float(_GLF_FUZZED(-8.6)), bool(false))), 1.0))))).x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, 1.0)), _GLF_struct_0(vec3(1.0), 1, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(-918.134))), bvec2(true), true)), _GLF_struct_3(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_2(mat4(1.0), ivec3(1), mat3(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - length(vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(8.5)), bool(false)))), 1.0), mat4(1.0), _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 0, 0)))))))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat3x4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))), (uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))) | (uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))))))), 1u * (_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))), (uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))) | (uint(uint((~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))))))))), _GLF_struct_4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), ~ (~ (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u))))))))) / 1u)), mat4x2(1.0), ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) - 0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)) && true)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)) && true)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (false ? _GLF_FUZZED(2.7) : max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))))), true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_struct_replacement_5.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.y)) : _GLF_FUZZED(8.2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_8(mat4x2(1.0), _GLF_struct_6(mat2x4(1.0)), _GLF_struct_7(ivec2(1), ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(((subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (118941u & 0u), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (118941u & 0u), ~ (~ (((subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (118941u & 0u))))) << 0u, ((_GLF_IDENTITY(((subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(118941u, (_GLF_IDENTITY(118941u, clamp(118941u, 118941u, 118941u))) | 0u) & 0u), ~ (~ (((subgroup_local_id + 1) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) + (118941u & 0u))))) << 0u) << 0u))))) % subgroup_size), _GLF_struct_10(vec3(1.0), uvec2(1u), _GLF_struct_9(uvec3(1u), true, bvec2(true), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(39417u, 0u + (39417u)), 48164u, 45329u), clamp(uvec3(39417u, 48164u, 45329u), uvec3(_GLF_IDENTITY(39417u, ~ (~ (_GLF_IDENTITY(39417u, (39417u) + 0u)))), 48164u, 45329u), _GLF_IDENTITY(uvec3(39417u, 48164u, _GLF_IDENTITY(45329u, min(45329u, 45329u))), (uvec3(39417u, 48164u, 45329u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u)) * (uvec3(1u, 1u, 1u)))))))), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(39417u, 48164u, 45329u), clamp(uvec3(39417u, 48164u, 45329u), uvec3(_GLF_IDENTITY(39417u, ~ (~ (_GLF_IDENTITY(39417u, (39417u) + 0u)))), 48164u, 45329u), _GLF_IDENTITY(uvec3(39417u, 48164u, _GLF_IDENTITY(45329u, min(45329u, 45329u))), (uvec3(39417u, 48164u, 45329u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u))))))))), uvec3(uvec3(~ ((true ? _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(39417u, 48164u, 45329u), clamp(uvec3(39417u, 48164u, 45329u), uvec3(_GLF_IDENTITY(39417u, ~ (~ (_GLF_IDENTITY(39417u, (39417u) + 0u)))), 48164u, 45329u), _GLF_IDENTITY(uvec3(39417u, 48164u, _GLF_IDENTITY(45329u, min(45329u, 45329u))), (uvec3(39417u, 48164u, 45329u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u)))))))))))))))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec4((_GLF_IDENTITY(true, (true) && true)), true, true, false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, true && (true)))), bool(bvec4(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, true && (true)))), true && (true && (! (_GLF_IDENTITY(true, true && (true))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (! (bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) || false)) && true))), ! (! (true && (true))))))))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))) && (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true), true, true, true)))), true)), false || (bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))))) || false), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, true && (true)))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))) && true), true && (! (_GLF_IDENTITY(true, true && (true)))))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! _GLF_IDENTITY((! (true && (true))), bool(bvec3((! (true && (true))), true, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (true), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (true)))), ! (! (_GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true))))))))), (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (true)))))))) || false))))))), (! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (true)), (_GLF_IDENTITY((true && (true)), ((true && (true))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), (! (true && (true))) || false))), ! (! (true && (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), ! (! (! (true && (true))))))), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))) || false))))))), (! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (true)), (_GLF_IDENTITY((true && (true)), ((true && (true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5203.3686), _GLF_FUZZED(52.12)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y)), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), (! (true && (true))) || false))), ! (! (true && (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), ! (! (! (true && (true))))))), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))) || false))))))), (! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((true && (true)), (_GLF_IDENTITY((true && (true)), ((true && (true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5203.3686), _GLF_FUZZED(52.12)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true && (true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ivec2(1)), 1, mat3(1.0), ivec4(1), _GLF_struct_13(mat4(1.0), _GLF_struct_11(1.0, vec2(1.0), bvec4(true), mat4(1.0), vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))))), _GLF_struct_12(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat3(1.0), ivec2(1), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / abs(1.0))), uvec4(1u)), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(7750.1092, 4.1))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(7750.1092, 4.1)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))) + vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, false, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, false, false)))), false))))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! _GLF_IDENTITY((! (bool(bvec3(true, false, false)))), bool(_GLF_IDENTITY(bvec2((! (bool(bvec3(true, false, false)))), false), bvec2(bvec2(bvec2((! (bool(bvec3(true, false, false)))), false)))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, sqrt(1.0), 0.0, 1.0, 0.0))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY((! (bool(bool(_GLF_DEAD(false))))), ! (! ((! (bool(bool(_GLF_DEAD(false)))))))) || false))))), true && (bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false))))))))))))), false, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(injectionSwitch, asin(vec2(-83.97, 50.08)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3694.5060), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-872.269)), bool(false))), _GLF_FUZZED(-25.04)), bvec2(true, false))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.5))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), true && (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) || false)))))), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_14.next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, (64) | 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))) && true))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_14.next_virtual_gid, (true ? _GLF_IDENTITY(_GLF_struct_replacement_14.next_virtual_gid, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_14.next_virtual_gid, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u), (uvec4(_GLF_struct_replacement_14.next_virtual_gid, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u)) / uvec4(1u, 1u, 1u, 1u)))) : _GLF_FUZZED(workgroup_base)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))) && true)), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5497.3744)), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), false || ((_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0))))).y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), true && (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(430.540)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_14.next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) + 0u), ((40232u & 0u) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, max(7u, 7u))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), uint(uint(read_1 + 1))) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), read_1 + 1)) == read_2) + 1)), min(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0)))) | (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) + 0), 1, 0))))) == read_2) + 1, max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), min(_GLF_IDENTITY(read_1 + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | 0u))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(-36557))), 1))))), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (read_1 + 1))) | 0u))), ((~ (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | 0u)))) >> 0u), (~ (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) | 0u)))))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (1 & 1)), int(ivec3(1, 1, 0))))) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | (read_1))))) << 0u) + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))), int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0)), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(read_1, 0u ^ (read_1)))), read_1)) + 1)) == read_2) + 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) << 0)) / 1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), 0))))) == read_2) + 1, max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), clamp(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), 0u | (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))))))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, (read_1) | (89099u & 0u)) + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, _GLF_IDENTITY(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), min(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)))))) + 0u), (true ? _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)), (_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1))) >> 0u) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(bitCount(3997)))), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289)))), (int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289))))) ^ 0)))))))) + 0u) : _GLF_FUZZED(workgroup_base))))), uint(_GLF_IDENTITY(uint(clamp(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) << 0)) / 1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), 0))))) == read_2) + 1, max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), clamp(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), 0u | (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))))))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, (read_1) | (89099u & 0u)) + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, _GLF_IDENTITY(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), min(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)))))) + 0u), (true ? _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)), (_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1))) >> 0u) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(bitCount(3997)))), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289)))), (int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289))))) ^ 0)))))))) + 0u) : _GLF_FUZZED(workgroup_base)))))), uint(uint(uint(clamp(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) << 0)) / 1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), 0))))) == read_2) + 1, max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), clamp(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))), 0u | (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 0u, 1u)))))))))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, (read_1) | (89099u & 0u)) + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, _GLF_IDENTITY(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), min(1u * (_GLF_IDENTITY(read_1, min(read_1, read_1))), 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)))))) + 0u), (true ? _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)), (_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1))) >> 0u) == read_2) + 1), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1)) / 1u), max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(bitCount(3997)))), min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + 1), 0u | (max(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1)) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289)))), (int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(73289))))) ^ 0)))))))) + 0u) : _GLF_FUZZED(workgroup_base)))))))))))))))), 4, _GLF_IDENTITY(64, (64) - 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))).x, injectionSwitch.x)) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.8, 31.90)) : injectionSwitch)).y, round(length(normalize(abs(vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.8, 31.90)) : injectionSwitch)).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
