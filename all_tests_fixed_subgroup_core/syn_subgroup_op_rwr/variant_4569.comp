#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y) && true, true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y) && true, true))) && true))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(uvec3(uvec3(gl_NumWorkGroups)))), (false ? _GLF_FUZZED(uvec3(151721u, 36464u, 93264u)) : uvec3(uvec3(uvec3(uvec3(gl_NumWorkGroups))))))), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), _GLF_IDENTITY(47893u, min(47893u, _GLF_IDENTITY(47893u, (47893u) * 1u))))) : uvec3(uvec3(gl_NumWorkGroups))))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u))))))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec4(uvec3(gl_NumWorkGroups), 0u))), uvec3(gl_NumWorkGroups)))), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(41502u, clamp(_GLF_IDENTITY(41502u, (false ? _GLF_FUZZED((true ? subgroup_size : subgroup_local_id)) : 41502u)), 41502u, 41502u)), _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u))))))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec4(uvec3(gl_NumWorkGroups), 0u))), uvec3(gl_NumWorkGroups)))), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(41502u, clamp(_GLF_IDENTITY(41502u, (false ? _GLF_FUZZED((true ? subgroup_size : subgroup_local_id)) : 41502u)), 41502u, 41502u)), _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))).x))) >> 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED((~ uvec3(73909u, 13801u, 142964u))) : uvec3(uvec3(gl_NumWorkGroups))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u)))))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, _GLF_IDENTITY(49621u, _GLF_IDENTITY(uint(uint(49621u)), _GLF_IDENTITY(uint(uvec3(uint(uint(49621u)), 0u, 0u)), (uint(uvec3(uint(uint(49621u)), 0u, 0u))) | (uint(uvec3(uint(uint(49621u)), 0u, 0u)))))), 47893u)) : uvec3(uvec3(gl_NumWorkGroups))))))).x)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(0u, 0u, 0u) ^ (uvec3(2u))), uvec3(2u)))))), (false ? _GLF_FUZZED(uvec3(40844u, 13726u, 52288u)) : uvec3(uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3(gl_NumWorkGroups))))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, 49621u, 47893u)) : _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (uvec3(uvec3(gl_NumWorkGroups))))))))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(0u, 0u, 0u) ^ (uvec3(2u))), uvec3(2u)))))), (false ? _GLF_FUZZED(uvec3(40844u, 13726u, 52288u)) : uvec3(uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3(gl_NumWorkGroups))))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, 49621u, 47893u)) : _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (uvec3(uvec3(gl_NumWorkGroups))), (uvec3(0u, 0u, 0u) + (uvec3(uvec3(gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(2u), ~ (~ (uvec3(2u)))))), uvec3(2u)))))), (false ? _GLF_FUZZED(uvec3(40844u, 13726u, 52288u)) : uvec3(uvec3(gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3(gl_NumWorkGroups))))) | (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(41502u, 49621u, 47893u)) : _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (uvec3(uvec3(gl_NumWorkGroups))))))))))))).x)), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), (_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) | (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))))))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), (max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) << 0u)))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))) | (virtual_gid))]))), max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))) | (virtual_gid))]))), max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))) | (virtual_gid))]))), max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ _GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[virtual_gid]))))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), max(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), ~ (~ (buf[virtual_gid])))))))))))))) >> 0u), 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(64, 1, 0), (ivec3(64, 1, 0)) * ivec3(1, 1, 1)))), 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + (64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))), max(uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY(max(uint(subgroup_size), uint(subgroup_size)), uint(_GLF_IDENTITY(uvec3(max(uint(subgroup_size), uint(subgroup_size)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(max(uint(subgroup_size), uint(subgroup_size)), 0u, 0u))))))), uint(uint(subgroup_size))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)))), (read_1 + 1) ^ 0u)), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), (false ? _GLF_FUZZED(78309u) : (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (_GLF_IDENTITY(read_1, 0u + (read_1)) + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2346))), _GLF_IDENTITY(1, 1 * (1))))) | 0)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), 0u + (_GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) * 1u), (read_1 + 1))))), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u)), (0u & 172900u) | (_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), clamp((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (0u))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ _GLF_IDENTITY((read_1 + 1), max((read_1 + 1), (read_1 + 1)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u)))) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u))))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))), _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) << 0u)) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, (0u) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) / _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))) * 1u)), max((_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | ((read_1 + 1)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, (0u) + 0u) + (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, uint(uint(8u)))) - 0u)), (uint(8u)) | 0u)))))) / 1u))), ((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(0u, (0u) + 0u) + (~ _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | (_GLF_IDENTITY((read_1 + 1), min((read_1 + 1), (read_1 + 1))))))))) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), 0u | (0u ^ (0u))))) + 0u), (0u) + 0u) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, (0u) + 0u) + (_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (1) * 1)), (~ (read_1 + 1)) ^ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_base)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | 0u), 0u | (_GLF_IDENTITY(uint(8u), (uint(8u)) | 0u))), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))))) / 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(read_2) : (read_1 + 1))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, clamp((0u) + 0u, (0u) + 0u, (0u) + 0u))) + (~ (read_1 + 1)), (_GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1)), 0u ^ (_GLF_IDENTITY(0u, (0u) + 0u) + (~ (read_1 + 1))))))))) * 1u)))))) + 0u))), (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) - 0u) + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1))), (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))) - 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))))), (true ? ~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1), 0u + (~ (read_1 + 1)))))) : _GLF_FUZZED(uvec3(107111u, 76728u, 190082u)[2])))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) - 0u) + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1))), (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))) - 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))))), (true ? ~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1), 0u + (~ (read_1 + 1)))))) : _GLF_FUZZED(uvec3(107111u, 76728u, 190082u)[2])))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) - 0u) + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1))), (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))) - 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))))), (true ? ~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1), 0u + (~ (read_1 + 1)))))) : _GLF_FUZZED(uvec3(107111u, 76728u, 190082u)[2])))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) - 0u) + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1))), (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))) - 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), 0u + (~ (read_1 + 1)))))), (true ? ~ (_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1), 0u + (~ (read_1 + 1)))))) : _GLF_FUZZED(uvec3(107111u, 76728u, 190082u)[2])))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), min(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), uint(_GLF_IDENTITY(read_2, max(read_2, read_2)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054)))), ((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))) | ivec2(0, 0)))))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))), ~ (~ (true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))))), ((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))) | ivec2(0, 0)))))) ^ 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054)))), ((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))) | ivec2(0, 0)))))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))), ~ (~ (true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))))), ((true ? _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (ivec2(1, 1))) : _GLF_FUZZED((ivec2(11160, -47418) << ivec2(88756, 90054))))) | ivec2(0, 0)))))) ^ 0)) / 1)) << 0), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, min(64, 64))), _GLF_IDENTITY((min(64, _GLF_IDENTITY(64, min(64, 64)))), (_GLF_IDENTITY((min(64, _GLF_IDENTITY(64, min(64, 64)))), ((min(64, _GLF_IDENTITY(64, min(64, 64))))) - 0)) / 1) | (min(64, _GLF_IDENTITY(64, min(64, 64)))))), _GLF_IDENTITY(4, (4) | 0));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 0 + (max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 0 + (max(0, 0))))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 0 + (max(0, 0))))))))); _injected_loop_counter --)
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = (int(55320u) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), int(int(int(6))))) / 1), int(6)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 subgroupAll(false);
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat3x4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)))))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 barrier();
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2))))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.9) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -17.66))), bool(false))), injectionSwitch.y))))) - 0.0)))));
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(dot(vec2(608.938, -36.24), vec2(vec4(3624.1223, _GLF_IDENTITY(-7863.4574, (-7863.4574) * 1.0), -730.805, -6.2))), (true ? dot(vec2(608.938, -36.24), vec2(vec4(_GLF_IDENTITY(3624.1223, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(1.6) : 3624.1223)), _GLF_IDENTITY(-7863.4574, (-7863.4574) * 1.0), -730.805, -6.2))) : _GLF_FUZZED(-4.8)))) : injectionSwitch.x)) > injectionSwitch.y))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), int(ivec4(int(int(4)), 0, 0, 0)))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(0 ^ 0, min(0 ^ 0, _GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0))))) | (4)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         subgroupAll(true);
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
