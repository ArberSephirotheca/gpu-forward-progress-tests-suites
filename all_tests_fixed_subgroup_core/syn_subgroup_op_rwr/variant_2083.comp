#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), true, true))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(mat3(-8.0, -2.1, -7931.2854, 8.6, 19.42, 33.09, -176.039, -508.282, 86.18))) : injectionSwitch.x))) * 1.0) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), bool(false)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || false), true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))))), 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)), transpose(transpose(mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), (_GLF_FUZZED(vec2(7495.6274, 8.8))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), mix(vec2((_GLF_FUZZED(vec2(7495.6274, 8.8)))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-1.6), (_GLF_FUZZED(vec2(7495.6274, 8.8)))[1]), bvec2(false, true))), _GLF_FUZZED(vec2(7495.6274, 8.8)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), (_GLF_FUZZED(vec2(7495.6274, 8.8))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), mix(vec2((_GLF_FUZZED(vec2(7495.6274, 8.8)))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-1.6), (_GLF_FUZZED(vec2(7495.6274, 8.8)))[1]), bvec2(false, true))), _GLF_FUZZED(vec2(7495.6274, 8.8)))), vec2(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), (_GLF_FUZZED(vec2(7495.6274, 8.8))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_FUZZED(vec2(7495.6274, 8.8)), mix(vec2((_GLF_FUZZED(vec2(7495.6274, 8.8)))[0], _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(-1.6), (_GLF_FUZZED(vec2(7495.6274, 8.8)))[1]), bvec2(false, true))), _GLF_FUZZED(vec2(7495.6274, 8.8)))), 0.0, 0.0))), 1.0, sqrt(0.0), 0.0, 1.0))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8))))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8))))) * mat2(1.0)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7495.6274, 8.8), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(7495.6274, 8.8), (vec2(7495.6274, 8.8)) / vec2(1.0, 1.0))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-9.1, 7.8)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8))))) * mat2(1.0), vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(17.58))), _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7495.6274, 8.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.1, 7.8))) - vec2(0.0, 0.0))))) * mat2(1.0)))).y : _GLF_FUZZED(8687.0017))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(exp(0.0), log(1.0), 1.0, 1.0))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(exp(0.0), log(1.0), 1.0, 1.0))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(exp(0.0), log(1.0), 1.0, 1.0))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x), mix(float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(exp(0.0), log(1.0), 1.0, 1.0))))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), float(_GLF_FUZZED(249.531)), bool(false)))) / 1.0)) - 0.0)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false))), true, false))))))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(34958u, 121037u, 35903u)), (_GLF_FUZZED(uvec3(34958u, 121037u, 35903u))) | (uvec3(89231u, 74551u, 22795u) & uvec3(0u, 0u, 0u))) : uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u))) ^ 0u), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(34958u, 121037u, 35903u)), (_GLF_FUZZED(uvec3(34958u, 121037u, 35903u))) | (uvec3(89231u, 74551u, 22795u) & uvec3(0u, 0u, 0u))) : uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u))) ^ 0u), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), uvec3(0u, 0u, 0u) | ((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(34958u, 121037u, 35903u)), (_GLF_FUZZED(uvec3(34958u, 121037u, 35903u))) | (uvec3(89231u, 74551u, 22795u) & uvec3(0u, 0u, 0u))) : uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u))) ^ 0u), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) : _GLF_FUZZED((uvec3(147745u, 30775u, 158905u) | subgroup_size)))))) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + _GLF_IDENTITY(((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(86808u, 185580u, 40748u))))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(! (! (_GLF_DEAD(false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(! (! (_GLF_DEAD(false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)), bool(bvec4(bool(bvec3(! (! (_GLF_DEAD(false))), true, false)), false, true, true)))), ! (! (! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (! (_GLF_DEAD(false)))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false)))), (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false)))), (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false))))) || false)))))), _GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), bool(bvec2(! (! (! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(true, false || (true)))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), true))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true))))))))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) << 0u) * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) >> _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u))))), uint(_GLF_IDENTITY(uint((0u | 0u)), 0u | (uint((0u | 0u))))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))) + subgroup_local_id) >> (_GLF_IDENTITY(0u, (0u) >> 0u) | 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> (0u | 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), max(_GLF_FUZZED(6.4), _GLF_FUZZED(6.4)))), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (105239u & 0u) + (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (0u | 0u), 0u, 1u)))), (uint(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (0u | 0u), 0u, 1u))))) / 1u)))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), 0 ^ (64)))), (64) - 0), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) && true)))))), true && (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))) && true)))))), true && (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false))), bool(bool(false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))), false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ! (! ((_GLF_IDENTITY((false), ((false)) && true)))))))), ((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ! (! ((_GLF_IDENTITY((false), ((false)) && true))))))))) || false)), true && (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))), false))), bool(bvec2(! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, true)))))))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))), false))), true)))))), true)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(774.219) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.41)), bool(false))) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(log2(injectionSwitch), vec2(-0.3, -3637.6379))) : injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y, false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), false))))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), false))) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), false))) || false))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, abs(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, exp(0.0)))), injectionSwitch.y))))) || false), false))) || false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), clamp(uint(uvec4(read_1, 0u, 1u, 0u)), uint(uvec4(read_1, 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), max(uvec4(read_1, 0u, 1u, 0u), uvec4(read_1, 0u, 1u, 0u)))) | uvec4(0u, 0u, 0u, 0u)))) | (uint(uvec4(read_1, 0u, 1u, 0u)))))), 0u ^ (uint(uvec4(read_1, 0u, 1u, 0u))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (uint(uvec4(read_1, 0u, 1u, 0u))))) / 1u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(read_1, 0u, 1u, 0u))))) / 1u))) | 0u, ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(read_1, 0u, 1u, 0u))), ((uint(uvec4(read_1, 0u, 1u, 0u)))) | 0u))) / 1u))) | 0u) << 0u)) - 0u)), read_1)) + 1 == read_2) + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1))), clamp((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1))), _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1))), (_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1))), ((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1)))) ^ 0u)) + 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) / 1u)), (false ? _GLF_FUZZED(171713u) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), clamp(uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u)), uint(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(read_1, min(read_1, read_1)), 0u, 1u, 0u))))) / 1u))))))) : _GLF_FUZZED(workgroup_size))))), read_1)) + 1 == read_2) + 1, 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(read_1, 0u, 1u, 0u), (uvec4(read_1, 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | (uvec4(read_1, 0u, 1u, 0u))))))) / 1u)), read_1)) + 1 == read_2) && true)) + 1)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bool(bvec2(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-8278.9391), _GLF_FUZZED(-62.92)), vec2((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, sqrt(1.0)))))), abs(0.0), 1.0, 1.0)) - mat3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), clamp(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(25453u, (25453u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))))), 1u))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(25453u))), 1u))), clamp(~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(25453u))), 1u))), ~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(25453u))), 1u))), ~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(25453u))), 1u)))))))))), _GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) - 0u)), ~ (~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))))))))) : _GLF_FUZZED(read_2)))))) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, 0)), 0 ^ (int(ivec4(4, 0, 1, 0))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(vec4(-73.31, -6184.6769, 7.9, -6.3).t), _GLF_FUZZED(-297.950)), bvec2(false, false))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(refract(-1403.8964, log(-1.7), 7.3)))))))))))))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
