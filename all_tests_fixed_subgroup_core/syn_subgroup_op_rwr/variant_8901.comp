#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, true && (false))))))))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) | 0u))))), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) | 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) | 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(54535u) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) << 0u))) * subgroup_size)) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) | 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))), _GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ((uvec2(next_virtual_gid, 1u))) << _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), min(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), 1u)) | uvec2(0u, 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u))), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) | uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), min(uvec2(next_virtual_gid, 1u), uvec2(next_virtual_gid, 1u))), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY((uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u), max((uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)))), uvec2(next_virtual_gid, 1u)))), (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)), ~ (~ (clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))))))) | (uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) ? _GLF_FUZZED(virtual_gid) : 1u)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u) : 1u)), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | 0u), 1u)))), uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)), 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(_GLF_IDENTITY(next_virtual_gid, (0u & 28855u) ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u))))), 1u)) - uvec2(0u, 0u)), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))))))))) : _GLF_FUZZED(subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY((uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u), ((uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)) / uvec2(1u, 1u))), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, _GLF_IDENTITY(1u, (0u | 0u) ^ (_GLF_IDENTITY(1u, min(1u, 1u))))), (uvec2(next_virtual_gid, 1u)) >> uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), uvec2(next_virtual_gid, 1u)))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id)))))))), ((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (0u | 1u)))), 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY((uvec2(next_virtual_gid, 1u)), ~ (~ ((uvec2(next_virtual_gid, 1u))))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))))), 0u ^ (0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))))), 1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))))))) << 0u)))))), 1u), (true ? uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))), 0u ^ ((_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))))), 1u) : _GLF_FUZZED(uvec2(117882u, 79153u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)))))), 1u))))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), 1u)))) : _GLF_FUZZED(subgroup_local_id))))) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> uvec2(0u, 0u)), uvec2(next_virtual_gid, 1u)))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 1u), (uvec2(next_virtual_gid, 1u)) << uvec2(0u, 0u)), clamp(uvec2(next_virtual_gid, 1u), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) >> uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))) / 1u))), _GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), uvec2(uvec3(uvec2(next_virtual_gid, 1u), 0u)))) | (uvec2(next_virtual_gid, 1u)))))) : _GLF_FUZZED(subgroup_local_id))))))], uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((read_1), ((read_1)) + (0u ^ 0u))), read_1, read_1)) + 1), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1))))))) | (0 ^ 0)), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(vec2(9.2, 5.0), -895.552, distance(vec2(-437.632, -4767.3666), vec2(4725.6553, 5.0)))) : injectionSwitch)).x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(0.0 + (injectionSwitch.x), _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(986.400)), bool(false)))) / 1.0), 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(986.400)), bool(false)))) / 1.0), 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))) || false))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false)) || false), true, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), true))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || _GLF_IDENTITY(false, (false) || false))))))) || false), true, false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true)))))))))), bvec2(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(3.5)), bool(false)))) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-16.76), _GLF_FUZZED(3375.2288)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2361.3117), _GLF_FUZZED(-32.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false)) || false), true, false)), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))))))))) && true))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, (1) >> 0) == read_2)))), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((! (read_1 + 1 == read_2)), false || ((! (read_1 + 1 == read_2)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1))))), _GLF_IDENTITY(1, ~ (~ (1))))), (1) >> 0) == read_2)))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), (bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))) && true))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true)), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), false || (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true), bvec3(bvec3(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true))))))) && true)))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1))))), _GLF_IDENTITY(1, ~ (~ (1))))), (1) >> 0) == read_2)))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), (bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))) && true))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true)), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), false || (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true), bvec3(bvec3(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true))))))) && true)))))))))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1))))), _GLF_IDENTITY(1, ~ (~ (1))))), (1) >> 0) == read_2)))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), (bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))) && true))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true)), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec3(bvec2(read_1 + 1 == read_2, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2), false || (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(virtual_gid))) == read_2)))))))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true), bvec3(bvec3(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, uint(uint(read_1))) + 1 : _GLF_FUZZED(virtual_gid))) == read_2))))), false, true))))))) && true)))))))))))))) || false))) + 1, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, true, true, false)), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(true, true, true, false)), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(true, true, true, false)), false, true, false))), true && (! (bool(bvec4(bool(bvec4(true, true, true, false)), false, true, false)))))))))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
