#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), (true ? vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch))), bvec2(false, true))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), (true ? vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch))), bvec2(false, true))).x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), (true ? vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch))), bvec2(false, true))).x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(1624.0716)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x > injectionSwitch.y)) && true), true, true, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9490.5748) : injectionSwitch.y)), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) || false), true))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.2))))), true && ((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) && true)) || false), _GLF_IDENTITY(true, (true) || false), true, false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), _GLF_FUZZED((- _GLF_IDENTITY((8488.0568 + 858.704), mix(float((8488.0568 + 858.704)), float(_GLF_FUZZED(5.1)), bool(false)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), true))))))), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(162.833)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), _GLF_FUZZED((- _GLF_IDENTITY((8488.0568 + 858.704), mix(float((8488.0568 + 858.704)), float(_GLF_FUZZED(5.1)), bool(false)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), true))))))), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(162.833)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), _GLF_FUZZED((- _GLF_IDENTITY((8488.0568 + 858.704), mix(float((8488.0568 + 858.704)), float(_GLF_FUZZED(5.1)), bool(false)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), true))))))), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(162.833)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))).y, true))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))), _GLF_IDENTITY(float(mat2((true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))), 0.0, 0.0, 0.0)), (true ? float(mat2((true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))), 0.0, 0.0, 0.0)) : _GLF_FUZZED(47.73)))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_id) : (0u)))))) ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ (~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), ~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1)), 0, 1))), 1, 1))) % subgroup_size), _GLF_IDENTITY(1u, (1u) << 0u), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(13736u) : _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, 1))) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), 1u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-42138) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) + 0u), (workgroup_base) / 1u))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), 0u, 0u, 0u)))) - 0u)) << 0u)), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | 0u)))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u) ^ 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((true ? _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) >> 0))))) : _GLF_FUZZED(-79575)), (-22990 & 0) + ((true ? _GLF_IDENTITY(64, (64) | (64)) : _GLF_FUZZED(_GLF_IDENTITY(-79575, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-79575, 0 ^ (-79575)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(-79575, 0 ^ (-79575)))), clamp(int(int(_GLF_IDENTITY(-79575, 0 ^ (-79575)))), int(int(_GLF_IDENTITY(-79575, 0 ^ (-79575)))), int(int(_GLF_IDENTITY(-79575, 0 ^ (-79575))))))), 0, 1)), max(int(ivec3(_GLF_IDENTITY(-79575, 0 ^ (-79575)), 0, 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-79575, _GLF_IDENTITY(0 ^ (-79575), clamp(0 ^ (-79575), _GLF_IDENTITY(0 ^ (-79575), ~ (~ (0 ^ (-79575)))), 0 ^ (-79575)))), (_GLF_IDENTITY(-79575, 0 ^ (-79575))) | 0), 0, 1))))))))))) | 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, 1, 1, 0)))) ^ 0)) << 0), 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (1)))), min(~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (1)))), ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (1))))))) < subgroup_size, bool(bvec4(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (1))), (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(80562) : ~ (1)))) / 1)) << 0))) < subgroup_size, true, true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)), (read_1) | (read_1)) + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), ~ (~ (_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, (read_2) << 0u)))))), false, false))), false || (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, false), bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) + 1, 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false))) ? _GLF_FUZZED(ivec2(-27334, 51342)) : ivec2(64, 0))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)) || _GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / abs(1.0))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-522.918) : injectionSwitch.x)) > injectionSwitch.y))) && true))))), false)))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))))))), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))))))) || false)), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))))))) || false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))))))) || false)), true), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))))))) || false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false)), ! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), ((bool(bvec3(false, false, false)))) && true)))))))) || false)), true), true))))), false, true))))), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))) || (_GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), _GLF_IDENTITY(true && (! (! (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))))), (_GLF_IDENTITY(true && (! (! (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))))), ! (! (true && (! (! (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(false, true && (false)), false))))))))) && true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), ! (! (! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))))))))) || false)), true)), _GLF_IDENTITY(true, (true) || false) && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true))))), true && ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))) || (_GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), _GLF_IDENTITY(true && (! (! (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))))), (_GLF_IDENTITY(true && (! (! (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))))), ! (! (true && (! (! (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(false, true && (false)), false))))))))) && true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), ! (! (! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))))))))) || false)), true)), _GLF_IDENTITY(true, (true) || false) && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true, true, false)), (bool(bvec4(bool(bvec3(false, false, false)), true, true, false))) && true)))), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true))), false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), ! (! ((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))) && true)) && true), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (false)))))), ! (! (bool(bvec3(false, false, false)))))) || false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true)), true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((405.021 - 0.9))), vec2(_GLF_FUZZED(9591.9579), (injectionSwitch)[1]), bvec2(false, true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(4051.2016)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(4051.2016)), bool(false)))), float(_GLF_FUZZED(-422.995)), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (false))) && true)), _GLF_IDENTITY((false), ! (! ((false)))) && true)))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.2)), bool(false))), 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-186.449) : injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))))))), ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-12460))), ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (64) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 ^ (_GLF_IDENTITY((64), ((64)) << 0))) << 0))), clamp(64, 64, 64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) || _GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))) || false), (false) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))) || false), (false) && true)), true && (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))) || false), (false) && true))))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))) || false)), bvec2(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (false))))), (false) || false), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, false || (false))), (false) && true)))) || false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || ((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true)))) || false))))), _GLF_IDENTITY(false, (false) && true)), true))))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), false || (bool(bvec4((false), true, false, false))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ((false)) || false) || false), (false) && true))), false), true)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (! (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true))))))))), false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
