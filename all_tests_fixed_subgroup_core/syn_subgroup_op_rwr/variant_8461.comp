#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))) && true))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (0 << _GLF_IDENTITY(int(7), int(7))) | (8))), int(8)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) << 0), int(8)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)))), 0, 0), (ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)))), 0, 0)) - ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)))), 0, 0), (ivec3((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)))), 0, 0)) - ivec3(0, 0, 0))))))))) | 0)))) ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) | 0)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) - 0)) ^ 0))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | 0)))) | 0)) ^ 0)), min((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), ~ (~ (_GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (true ? (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(35690)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) / (1 | 1))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0))) ^ 0)) >> 0) ^ 0)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) | 0)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) - 0)) ^ 0))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | 0)))) | 0)) ^ 0)), min((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | 0), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), ~ (~ (_GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (true ? (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(35690)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) / (1 | 1))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38999) : 1)), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0))) ^ 0)) >> 0) ^ 0))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0)) ^ 0)), _GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(_GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), max(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), max(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), max(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), max(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), max(_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), clamp(0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8))), 0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))) | 0)))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) | 0))))))) ^ 0)), _GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), (true ? _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), ((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))) | 0) : _GLF_FUZZED(2867)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) / 1), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(81236)))), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), (false ? _GLF_FUZZED(90792) : (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))))) | 0)) ^ _GLF_IDENTITY(0, (0) * 1))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(7267) : 1)))), (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, 0 | ((1) | 0))), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((0 & 56497) << _GLF_IDENTITY(int(0), int(0)))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))))), (_GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)))))) | (_GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max(max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))))))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0)))) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1))))) | 0), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), ~ (~ (_GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), ((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))))) | 0)), int(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0)))) >> 0)) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1))))) | 0), _GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), ~ (~ (_GLF_IDENTITY((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)), ((0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))))) | 0))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) * 1))))) | (_GLF_IDENTITY(1, (1) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (0 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(1, (1) | 0)))) | 0)) ^ 0))))))) / 1u))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-20495)))) | (64)), 0 | (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, 64)))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))) && true))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) << 0)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(20093)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(20093))))) * 1) / 1)))), 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) << 0u)) | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))))), 0 ^ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), (_injected_loop_counter) >> 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) >> 0, clamp(_GLF_IDENTITY((_injected_loop_counter) >> 0, int(ivec2((_injected_loop_counter) >> 0, 0))), _GLF_IDENTITY((_injected_loop_counter) >> 0, ((_injected_loop_counter) >> 0) | ((_injected_loop_counter) >> 0)), (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))) >> 0))))) - 0), ~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))))) != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-8211 & 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) * 1)) | (1)), 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(68772u) : (next_virtual_gid))) : _GLF_FUZZED(floatBitsToUint(649.137)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u ^ (_GLF_FUZZED(next_virtual_gid)))) | (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))))))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))), read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-674.034)), bool(false)))))))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) * 1u)))) + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, 0u | (read_2))))), _GLF_IDENTITY((read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x)), (true ? (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(subgroup_id)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (! (bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x)))), (false || (read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3022.5648, min(_GLF_IDENTITY(3022.5648, min(3022.5648, _GLF_IDENTITY(3022.5648, (3022.5648) / 1.0))), 3022.5648)))), float(0.0), bool(true))), injectionSwitch.x))))) && true)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) * 1u))) + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x))))))) | 0u)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3022.5648)), float(0.0), bool(true))), injectionSwitch.x))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(67.55)))) / 1.0), injectionSwitch.x)))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3022.5648, max(3022.5648, _GLF_IDENTITY(3022.5648, max(3022.5648, 3022.5648)))))), float(0.0), bool(true))), injectionSwitch.x))))))))))))) + _GLF_IDENTITY(1, min(1, 1)), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), clamp(max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), min(max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4)))))))), 4)))), (true ? int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 | (4)), 4)))) : _GLF_FUZZED(-5601)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))) || false))))))
          {
          }
         else
          {
           subgroupAll(false);
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2((_GLF_WRAPPED_IF_TRUE(true)), false))) || false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) >> 0u) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_injected_loop_counter)))) << 0u, ((_GLF_IDENTITY(read_1, (read_1) + 0u) + 1) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, ~ (~ ((read_1 + 1) << 0u)))) | 0u), min(_GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, ~ (~ _GLF_IDENTITY(((read_1 + 1) << 0u), (_GLF_IDENTITY(((read_1 + 1) << 0u), uint(_GLF_IDENTITY(uvec2(((read_1 + 1) << 0u), 1u), (true ? uvec2(((read_1 + 1) << 0u), 1u) : _GLF_FUZZED(uvec2(1830u, 149268u))))))) << 0u)))) | 0u), _GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((read_1 + 1) << 0u)), (_GLF_IDENTITY(~ (~ ((read_1 + 1) << 0u)), (~ (~ ((read_1 + 1) << 0u))) | (~ (~ ((read_1 + 1) << 0u))))) + 0u), (~ (~ (_GLF_IDENTITY((read_1 + 1), min((read_1 + 1), (read_1 + 1))) << 0u))) + 0u))) | 0u)))))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), _GLF_IDENTITY(((read_1 + 1)) >> 0u, (_GLF_IDENTITY(((read_1 + 1)) >> 0u, 0u | (((read_1 + 1)) >> 0u))) >> 0u))) / 1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x))), read_1 + _GLF_IDENTITY(1, min(1, 1)))) == read_2) + 1, 4, 64, 4);
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(true && (false), true && (true && (false))), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false) || false))))))))
        barrier();
      }
    }
  }
}
