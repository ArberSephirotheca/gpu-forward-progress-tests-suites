#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, _GLF_IDENTITY(26399u, 0u ^ (26399u)), 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))))), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (_GLF_IDENTITY(26399u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u))))) | 0u)))))), 173198u), (_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u), (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)) | (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)))) + (uvec3(146321u, 63442u, 7467u) & uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, (133146u) | 0u), _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | _GLF_IDENTITY((26399u), ~ (~ ((26399u))))))), 173198u)))))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, uint(uvec2(_GLF_IDENTITY(133146u, (false ? _GLF_FUZZED(num_workgroup) : 133146u)), 1u))), 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u)))))) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, _GLF_IDENTITY(26399u, 0u ^ (26399u)), 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))))), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (_GLF_IDENTITY(26399u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u))))) | 0u)))))), 173198u), (_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u), (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)) | (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)))) + (uvec3(146321u, 63442u, 7467u) & uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, (133146u) | 0u), _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | _GLF_IDENTITY((26399u), ~ (~ ((26399u))))))), 173198u)))))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, uint(uvec2(_GLF_IDENTITY(133146u, (false ? _GLF_FUZZED(num_workgroup) : 133146u)), 1u))), 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u)))))) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, _GLF_IDENTITY(26399u, 0u ^ (26399u)), 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))))), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (_GLF_IDENTITY(26399u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u))))) | 0u)))))), 173198u), (_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u), (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)) | (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)))) + (uvec3(146321u, 63442u, 7467u) & uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, (133146u) | 0u), _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | _GLF_IDENTITY((26399u), ~ (~ ((26399u))))))), 173198u)))))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, uint(uvec2(_GLF_IDENTITY(133146u, (false ? _GLF_FUZZED(num_workgroup) : 133146u)), 1u))), 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u)))))) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, _GLF_IDENTITY(26399u, 0u ^ (26399u)), 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))))), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (_GLF_IDENTITY(26399u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(26399u, 0u), uvec2(uvec3(uvec2(26399u, 0u), 0u))))) | 0u)))))), 173198u), (_GLF_IDENTITY(uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u), (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)) | (uvec3(133146u, _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | (26399u)))), 173198u)))) + (uvec3(146321u, 63442u, 7467u) & uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, (133146u) | 0u), _GLF_IDENTITY(26399u, (26399u) | (_GLF_IDENTITY(26399u, 0u | _GLF_IDENTITY((26399u), ~ (~ ((26399u))))))), 173198u)))))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(133146u, uint(uvec2(_GLF_IDENTITY(133146u, (false ? _GLF_FUZZED(num_workgroup) : 133146u)), 1u))), 26399u, 173198u))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(133146u, 26399u, 173198u)))))) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))).x)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), mix(vec2(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[1], max(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[1], ((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[1]))), bvec2(false, true))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false)))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u + (workgroup_base))) * 1u)) | 0u), _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, 0u)))) << 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))) : _GLF_FUZZED(-4.6))))), (mat3x2(1.0, log(1.0), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, abs(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, abs(0.0), 0.0, 1.0), mat2(1.0) * (mat2(1.0, abs(0.0), 0.0, 1.0))))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0))))))), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0))) : _GLF_FUZZED(-4.6))))), (mat3x2(1.0, log(1.0), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, abs(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, abs(0.0), 0.0, 1.0), mat2(1.0) * (mat2(1.0, abs(0.0), 0.0, 1.0))))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (mat3x2(1.0, log(1.0), 0.0, determinant(mat2(1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0))))))), 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, sqrt(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(2020.8328) : min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(124739u))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-83.59) : 1.0))), bool(true)))), vec3(0.0, 0.0, 0.0))), 1.0))).x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(91.29) : injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4845.5566), _GLF_FUZZED(-4.0)), bvec2(false, false))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | _GLF_IDENTITY(0, 1 * (0))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(next_virtual_gid), max(uint(next_virtual_gid), uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(next_virtual_gid)) ^ 0u)), (uint(_GLF_IDENTITY(uint(next_virtual_gid), _GLF_IDENTITY((uint(next_virtual_gid)) ^ 0u, ~ (_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(next_virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(next_virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ 0u), (~ ((uint(next_virtual_gid)) ^ 0u)) | (~ ((uint(next_virtual_gid)) ^ 0u)))))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), next_virtual_gid))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), (virtual_gid) >> 0u))), _GLF_IDENTITY((true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | (_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), ((true ? _GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | (_GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | (_GLF_FUZZED(virtual_gid)))) << 0u))) / 1u))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(40.39), min(_GLF_IDENTITY(_GLF_FUZZED(40.39), mix(float(_GLF_FUZZED(-1056.8688)), float(_GLF_FUZZED(40.39)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(40.39))) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) / 1.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u) | 0u)) / 1u) + 1))) < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ~ (~ ((0u) * 1u)))), 0u)), _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (subgroup_local_id + 1) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size))))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), uint(uint((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))))))) + (next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(-26.24, min(_GLF_IDENTITY(-26.24, clamp(-26.24, -26.24, -26.24)), _GLF_IDENTITY(-26.24, (false ? _GLF_FUZZED(acosh(54.89)) : -26.24)))) * vec2(-6.4, -60.22))) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, (1 & 1))))), ((1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 0, 1, (1 & 1))), max(int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 0, 1, (1 & 1))), int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 0, 1, (1 & 1)))))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))), (1) | (_GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, (1) | (1)))) == read_2) + 1, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - log(vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0))))))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0))))))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0))))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))))))), log(1.0))), min(float(vec2(injectionSwitch.x, log(1.0))), float(vec2(injectionSwitch.x, log(1.0))))))) / 1.0)))))) - sqrt(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), false, false)))), _GLF_IDENTITY(bool(bvec2((! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), true)), (bool(bvec2((! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), true))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, true)), false || (bool(bvec4((_GLF_DEAD(false)), true, false, true)))))))))), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4417.5137)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(55.04)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[_GLF_IDENTITY(1, (1) | (1))]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-109.559, -749.850)[1], _GLF_IDENTITY(max(vec2(-109.559, -749.850)[1], vec2(-109.559, -749.850)[1]), (true ? max(vec2(-109.559, -749.850)[1], vec2(-109.559, -749.850)[1]) : _GLF_FUZZED(dot(vec2(7.7, -707.317), injectionSwitch)))))) : injectionSwitch.x), float(mat2((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-109.559, -749.850)[1], _GLF_IDENTITY(max(vec2(-109.559, -749.850)[1], vec2(-109.559, -749.850)[1]), (true ? max(vec2(-109.559, -749.850)[1], vec2(-109.559, -749.850)[1]) : _GLF_FUZZED(dot(vec2(7.7, -707.317), injectionSwitch)))))) : injectionSwitch.x), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-109.559, -749.850)[1], (vec2(-109.559, -749.850)[1]) - 0.0)) : injectionSwitch.x)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-109.559, (true ? -109.559 : _GLF_FUZZED(-997.723))), -749.850)[1]) : injectionSwitch.x)), 1.0, 1.0, exp(0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))), clamp(_GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))), _GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))), _GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))))), _GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true))), _GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED((-15.76 + 363.819))), float(5.7), bool(true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-109.559, -749.850)[1]), max(_GLF_FUZZED(vec2(-109.559, -749.850)[1]), _GLF_IDENTITY(_GLF_FUZZED(vec2(-109.559, -749.850)[1]), max(_GLF_FUZZED(vec2(-109.559, -749.850)[1]), _GLF_FUZZED(vec2(-109.559, -749.850)[1]))))) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, abs(1.0), sin(0.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), max((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), max((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), max((false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x), (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-109.559, -749.850)[1], (vec2(-109.559, -749.850)[_GLF_IDENTITY(1, ~ (~ (1)))]) - 0.0)) : injectionSwitch.x)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec2(-109.559, -749.850)[1]) : injectionSwitch.x)), 1.0, 1.0, exp(0.0)))) : _GLF_FUZZED(5.7)))) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
