#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(float(1.0)))), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))[0], _GLF_FUZZED(-169.424)), vec2(_GLF_FUZZED(704.776), (vec2(1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))[1]), bvec2(false, true)))).y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), _GLF_IDENTITY(true, ! (! (true))), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), false || ((false))), (false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || (_GLF_IDENTITY((false), false || ((false)))))) && true))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-80.96))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ! (! ((false) || _GLF_IDENTITY(false, ! (! (false))))))))))) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), 0.0 + (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))), false, true))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) : _GLF_FUZZED(16.94))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-220.774), _GLF_FUZZED(-71.92)), bvec2(false, false))).x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (1u & 1u)), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))), min(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))), max(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))), uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))) | (uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))))), _GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) & _GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(1u & _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(max(1u, 1u), 0u | (_GLF_IDENTITY(max(1u, 1u), clamp(max(1u, 1u), max(1u, 1u), max(1u, 1u)))))) ^ 0u)), 1u, 1u)))), 0u | ((_GLF_IDENTITY(1u & _GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), max(1u, 1u)), 1u, 1u))))))), ~ (_GLF_IDENTITY(~ (uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u))))), uvec4(0u, 0u, 0u, 0u) | (~ (uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, max(1u, 1u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & 1u)), min(uvec4(gl_NumWorkGroups, (1u & 1u)), uvec4(gl_NumWorkGroups, (1u & 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), clamp(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u))))))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY(72625u, min(72625u, 72625u)) & 0u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), clamp(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u))))))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY(72625u, min(72625u, 72625u)) & 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), clamp(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u))))))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY(72625u, min(72625u, 72625u)) & 0u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), clamp(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u))))))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY(72625u, min(72625u, 72625u)) & 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), clamp(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(136338u) : 1u)), 0u))))))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY(72625u, min(72625u, 72625u)) & 0u)))))))))), clamp(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u))), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))))), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u & _GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u & _GLF_IDENTITY(1u, ~ (~ (1u))), (1u & _GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u), 1u & _GLF_IDENTITY(1u, ~ (~ (1u))), 1u & _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))))), clamp(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u)), (_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u))) + (0u ^ 0u))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (72625u & 0u)) / 1u)), (_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (_GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), max(_GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ((1u & 1u)) | (72625u & 0u))), ((1u & 1u)) | (72625u & 0u)))) / 1u))) + (0u ^ 0u))))))))) | 0u))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u)) & 1u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u)) & 1u), uint(uint((_GLF_IDENTITY(1u, (1u) | (1u)) & 1u))))))) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))))) | (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))), uint(uint(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))) | (72625u & 0u)))))))), clamp(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), ((1u & 1u)) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), 0u | ((1u & 1u)))) | (_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (72625u & 0u), (((1u & 1u)) | (_GLF_IDENTITY(72625u & 0u, (true ? _GLF_IDENTITY(72625u & 0u, clamp(72625u & 0u, 72625u & 0u, 72625u & 0u)) : _GLF_FUZZED(96439u))))) / 1u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))))))) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) - 0u))))), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), clamp(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), _GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), max(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) | (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | 0u)) | (72625u & 0u))))), (uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))))))))) >> uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))), _GLF_IDENTITY(uint(uint(((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), ~ (~ (uint(uint(((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))))))))), clamp(uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u))) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u))))), uvec4(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u)), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (72625u & 0u)))))))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(2u), uvec4(2u)))))))))))) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)), (bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)), (bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY((bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true, false || ((bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))))) && true))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.y)) - 0.0, min(((injectionSwitch.y)) - 0.0, ((injectionSwitch.y)) - 0.0))), (injectionSwitch.y))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) && true))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))) && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, (1u | 0u), 0u, 0u), max(uvec4(subgroup_id, (1u | 0u), 0u, 0u), uvec4(subgroup_id, (1u | 0u), 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(uvec4(subgroup_id, (1u | 0u), 0u, 0u), max(uvec4(subgroup_id, (_GLF_IDENTITY(1u | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))))), (1u | _GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)), 0u, 0u), uvec4(subgroup_id, (1u | 0u), 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))), clamp((subgroup_id) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (subgroup_id) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (subgroup_id) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true, false || (true)) ? (subgroup_id) : _GLF_FUZZED(workgroup_size))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u, 0u))) : _GLF_FUZZED(num_workgroup)))) | (subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, abs(1.0), 1.0)), max(vec2(mat3(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, abs(1.0), 1.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, abs(1.0), 1.0))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(true, ! (! (true))) ? 0 : _GLF_FUZZED(-99490))), 0), _GLF_IDENTITY((ivec4(4, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99490))), 0)), ((ivec4(4, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99490))), 0))) | ivec4(0, 0, 0, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)), (ivec4(4, 1, 0, 0)) * ivec4(1, 1, 1, 1))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99490))), 0), (_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99490))), 0), (ivec4(4, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99490))), 0)) << ivec4(_GLF_IDENTITY(0, (0) / 1), 0, 0, 0))) + ivec4(0, 0, 0, 0)), (ivec4(4, 1, 0, 0)) * ivec4(1, 1, 1, 1)))))), 0))))), _GLF_IDENTITY(64, (0 ^ 1) * (64)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, 0 | ((0) + 0)))) >> 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)) + (virtual_gid)), max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) / 1u)) | ((0u)))) + (virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)) + (virtual_gid)))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) ^ 0u)) | (4u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), ~ (~ (uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))), 0u | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))))) << _GLF_IDENTITY(0u, min(0u, 0u)))) << 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (virtual_gid), 0u | (_GLF_IDENTITY(0u + (virtual_gid), (0u + (virtual_gid)) - 0u)))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (virtual_gid), 0u | (_GLF_IDENTITY(0u + (virtual_gid), (0u + (virtual_gid)) - 0u))))) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (virtual_gid), 0u | (_GLF_IDENTITY(0u + (virtual_gid), (0u + (virtual_gid)) - 0u)))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)) / vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))), 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)) | uvec4(0u, 0u, 0u, 0u), ~ (~ ((uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u + (_GLF_IDENTITY(4u, (4u) >> 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))), max(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) >> 0u, ((uint(4u)) >> 0u) >> 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))))))) * 1u)), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (4u) >> 0u), _GLF_IDENTITY(4u, ~ (~ (4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), 1u)), (uint(uvec2(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y)))), 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 4u)), 1u, 1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY((1u), 0u + ((1u))) | 0u), 1u * (_GLF_IDENTITY(1u, (1u) | 0u)))) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), _GLF_IDENTITY(uint(4u), (uint(4u)) + 0u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), max((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (false ? _GLF_FUZZED(uvec4(46562u, 8782u, 190315u, 118241u)) : uvec4(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) | ((0u))), (0u))), _GLF_IDENTITY((0u), ~ (~ ((0u))))))) + (virtual_gid)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) >> 0u), max(_GLF_IDENTITY(4u, (4u) >> 0u), _GLF_IDENTITY(4u, _GLF_IDENTITY((4u) >> 0u, (_GLF_IDENTITY((4u) >> 0u, uint(uvec4((4u) >> 0u, 0u, 0u, 1u)))) | 0u)))), _GLF_IDENTITY(4u, ~ (~ (4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) >> 0u), max(_GLF_IDENTITY(4u, (4u) >> 0u), _GLF_IDENTITY(4u, _GLF_IDENTITY((4u) >> 0u, (_GLF_IDENTITY((4u) >> 0u, uint(uvec4((4u) >> 0u, 0u, 0u, 1u)))) | 0u)))), _GLF_IDENTITY(4u, ~ (~ (4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) >> 0u), max(_GLF_IDENTITY(4u, (4u) >> 0u), _GLF_IDENTITY(4u, _GLF_IDENTITY((4u) >> 0u, (_GLF_IDENTITY((4u) >> 0u, uint(uvec4((4u) >> 0u, 0u, 0u, 1u)))) | 0u)))), _GLF_IDENTITY(4u, ~ (~ (4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u ^ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), min(uint(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) >> 0u)) | 0u)))), uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))))) ^ 0u)))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 1, 0)))) ^ 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u), (read_1 + 1 == read_2) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u), (read_1 + 1 == read_2) && true), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u), (read_1 + 1 == read_2) && true), false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))), true, true, false)))) + 1, 4, 64, _GLF_IDENTITY(4, (4) >> (0 >> _GLF_IDENTITY(int(0), int(0)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(-9564.2790))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
