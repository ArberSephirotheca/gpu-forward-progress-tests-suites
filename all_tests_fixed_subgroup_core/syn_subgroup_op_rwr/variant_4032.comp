#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bool _f0;
 mat4 _f1;
 bool _f2;
 vec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_13 {
 float _f0;
 mat2 _f1;
 mat4x2 _f2;
 uvec2 _f3;
 ivec2 _f4;
 ivec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 vec2 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 uvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_11 {
 bool _f0;
} ;

struct _GLF_struct_10 {
 bool _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_9 {
 bool _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 uvec3 _f2;
 _GLF_struct_11 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 vec3 _f3;
 bvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 int _f1;
 float _f2;
 bvec4 _f3;
 vec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 ivec3 _f3;
 ivec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 vec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_2 _f0;
 mat4x3 _f1;
 _GLF_struct_8 _f2;
 uint read_1;
 _GLF_struct_12 _f3;
 _GLF_struct_15 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))
    {
     return;
    }
   else
    {
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 | 1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
          {
           case 40:
           greaterThanEqual(ivec3(-51442, 69298, -335), ivec3(32255, 40066, -1399));
           case 0:
           case 31:
           if(_GLF_DEAD(false))
            return;
           break;
           case 33:
           mix(bvec4(true, true, true, true), greaterThan(uvec4(117598u, 160332u, 162790u, 22240u), uvec4(53996u, 37962u, 164385u, 20073u)), greaterThanEqual(vec4(-573.266, 2.2, 59.22, -86.59), vec4(-83.99, 89.83, 1.1, 962.868)));
           case 44:
           mat4x3(-3513.1574, -6.4, 739.248, -183.527, -68.20, -2.3, -0.6, -442.637, 4787.6919, 42.00, -2.1, -47.64);
           default:
           1;
          }
        }
       return;
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 44:
       while((-8878.4100 >= 548.658))
        {
        }
       case 0:
       case 63:
       case 9:
       case 88:
       case 91:
       if(_GLF_DEAD(false))
        return;
       break;
       case 90:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         ((workgroup_id >= workgroup_id) ? mat2(4.4, -56.21, -5589.6098, 668.595) : inverse(mat2(-8.3, 26.61, -9.4, -1316.3271)));
        }
       else
        {
        }
       case 75:
       bvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
       default:
       1;
      }
    }
   else
    {
     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
      {
       case 12:
       bvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
       case 66:
       for(       vec4(-77.18, -424.182, 754.446, 32.25);
 (23.62 == 1.6); (mat3x4(mat4(514.916, -81.06, -690.332, 2.4, 1.8, 52.49, 43.63, 35.76, 1.8, 8008.4988, -6326.8751, -7.6, -7.1, -15.96, 4.5, 4314.9873)) / mat3x4(-7729.6817, 5.4, -91.12, -38.10, 9.6, -8.1, -55.99, 5.7, 9.3, 104.709, -307.298, 9.9)))
        {
         while(false)
          {
          }
         (false ? mat4x2(-33.48, 694.163, 55.66, 638.095, -7.5, -10.45, -6.7, 5.7) : mat4x2(-8.3, -792.575, -382.118, -1039.2720, -887.503, 1.7, 19.56, -0.0));
         if(false)
          {
           {
            mat3x4 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v;
            ;
            mat3x4(82.28, 488.890, -1.0, 7160.0291, -94.39, -66.80, -5.9, 458.179, 70.67, -1.5, -38.95, -8.8);
            ivec4(-77063, -5918, 4769, -19804);
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              mat4x3(400.864, -8.2, 797.544, 67.60, 1.6, -0.2, -5.4, 6.3, 7.9, 2.7, -9611.6353, -556.141);
             }
            else
             {
             }
           }
           for(           mat2x3(-0.3, -0.4, 64.74, -18.83, -2.9, 40.22);
 (ivec4(-89573, -6094, -6711, 64150) != abs(floatBitsToInt(vec4(1419.3198, 680.195, 3500.1070, -571.791)))); injectionSwitch)
            {
             bvec4(true, false, false, true);
             mat2x3(-5.0, 2028.8566, 3.5, -3020.0587, 9.0, -3.6);
             mat3x2(-3.6, -3.2, -3.2, 1.4, -0.5, -7.7);
             ivec2 _GLF_SWITCH_6_6v, _GLF_SWITCH_6_7v, _GLF_SWITCH_6_8v;
             (mat4x2(5355.8635, -9.9, 6019.5698, -52.65, -568.389, -0.8, 26.44, 4.7) / (+ mat4x2(739.357, 59.09, 239.165, 2715.0009, -7.8, 2.4, 5.3, 5599.1367)));
             (bvec3(true, false, false));
             ;
             ;
            }
           bvec3(true, true, false);
           {
            ivec3 _GLF_SWITCH_6_9v;
            lessThan(ivec2(-22043, -70541), ivec2(28952, 21969));
            int _GLF_SWITCH_6_10v, _GLF_SWITCH_6_11v;
            vec2(7.7, 36.52);
            ((_GLF_SWITCH_6_10v ^ ivec4(70468, 87964, -17362, -98905)) >> _GLF_SWITCH_6_10v);
            mat4 _GLF_SWITCH_6_12v, _GLF_SWITCH_6_13v, _GLF_SWITCH_6_14v;
           }
           if(true)
            {
             ivec4 _GLF_SWITCH_6_15v, _GLF_SWITCH_6_16v;
             mat2x3(-8.2, 2.5, 9.8, 9.9, 1.4, -3938.5939);
             ;
             (subgroup_size << 170163u);
             ;
             (sign(-203.326) + vec4(-4126.2570, 590.262, -3.6, -6.5));
             mat4 _GLF_SWITCH_6_17v;
            }
           else
            {
             bvec3 _GLF_SWITCH_6_18v, _GLF_SWITCH_6_19v, _GLF_SWITCH_6_20v;
             uvec2 _GLF_SWITCH_6_21v, _GLF_SWITCH_6_22v, _GLF_SWITCH_6_23v;
             ;
             (uvec3(192243u, 143148u, 174453u) ^ subgroup_size);
             mat2 _GLF_SWITCH_6_24v, _GLF_SWITCH_6_25v[17];
             uvec3 _GLF_SWITCH_6_26v[82], _GLF_SWITCH_6_27v, _GLF_SWITCH_6_28v[92];
             mat3 _GLF_SWITCH_6_29v, _GLF_SWITCH_6_30v, _GLF_SWITCH_6_31v;
             do
              {
               (true ? mat3x4(-4.9, -73.08, -497.390, -6.7, 2.0, -99.99, 30.92, -0.4, 2039.4934, -4.4, 4.0, -8.2) : mat3x4(-51.57, 821.002, 7.1, 50.36, -49.51, 94.32, 9.0, -9694.0630, 8.9, 83.38, -8245.6397, -4477.5137));
              }
             while(_GLF_WRAPPED_LOOP(false));
             uint _GLF_SWITCH_6_32v, _GLF_SWITCH_6_33v, _GLF_SWITCH_6_34v;
            }
           do
            {
             mat2x4(-3232.7321, 2.6, -374.923, 0.5, 0.3, 6560.7640, 326.638, -3.6);
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), 1, 0, 0), (ivec4(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             -30110;
            }
           (! (mat3x2(-2874.5380, 9.2, -7031.8972, 13.08, -22.35, -5.3) == mat3x2(882.466, 373.302, -751.045, -6.5, -464.279, -87.48)));
           uvec3(41533u, 43688u, 176540u);
          }
         else
          {
           if(true)
            {
             _GLF_SWITCH_6_1v;
             mat3x2 _GLF_SWITCH_6_35v, _GLF_SWITCH_6_36v;
             mat2x3 _GLF_SWITCH_6_37v, _GLF_SWITCH_6_38v[85], _GLF_SWITCH_6_39v[56];
             bvec4 _GLF_SWITCH_6_40v, _GLF_SWITCH_6_41v;
            }
           while(true)
            {
             bvec4 _GLF_SWITCH_6_42v;
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               injectionSwitch;
              }
             mat3 _GLF_SWITCH_6_43v, _GLF_SWITCH_6_44v, _GLF_SWITCH_6_45v;
             6234u;
             ivec3(-11678, 33294, 76923);
            }
           (min(-0.5, 814.648) * vec4(42.38, 3.4, -4.0, -64.81));
           {
            mat4x3(-480.197, 4.0, -6886.3261, -3.9, 31.01, 5.7, 5.4, -714.274, -15.17, -688.969, 231.905, 2.0);
            mat2x3(mat2(-5620.2533, 4.2, 747.064, -29.11));
            (329.452 - mat4(-3.5, 7.9, 2.3, -1.7, -2803.9476, 69.14, 6959.9248, 544.194, 6232.0722, 5.5, 98.21, 6.7, 92.08, -9.0, -5.1, 9289.6833));
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 74:
                case 72:
                case 3:
                case 22:
                case 9:
                case 19:
                case 91:
                case 16:
                case 46:
                reflect(vec3(4215.6584, -9833.7140, 9.7), vec3(-9345.1093, 2.2, -5768.7310));
                break;
                case 31:
                mat3x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                case 81:
                bvec4 _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v;
                default:
                1;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
           (-14708 - ivec2(61806, 75326));
           mat3(mat4x3(6.0, -481.318, -5.4, 72.03, -2904.3399, -2.8, 29.01, -4.1, -3437.0062, 0.7, 898.585, 0.6));
          }
         ivec2 _GLF_SWITCH_6_46v[86];
         do
          {
           for(           mat3x2(-431.040, -0.3, -126.011, 134.318, -5564.2151, 157.921);
 (false == false); (28902 == -37289))
            {
             atan(injectionSwitch);
             vec2(-134.096, 98.46);
             if((bvec3(true, true, true) != bvec3(false, false, true)))
              {
               intBitsToFloat(29822);
               67.03;
               vec2(7317.2118, 5.4);
               vec4 _GLF_SWITCH_6_47v[12];
               mat2x3 _GLF_SWITCH_6_48v[66];
              }
             do
              {
               _GLF_SWITCH_6_1v;
               bvec4 _GLF_SWITCH_6_49v;
               float _GLF_SWITCH_6_50v, _GLF_SWITCH_6_51v[87], _GLF_SWITCH_6_52v[66];
               injectionSwitch;
               mat4x2 _GLF_SWITCH_6_53v, _GLF_SWITCH_6_54v, _GLF_SWITCH_6_55v[23];
               vec4(-6677.2426, 29.47, 13.11, 788.121);
               mat4 _GLF_SWITCH_6_56v, _GLF_SWITCH_6_57v;
              }
             while(true);
             mat3x2 _GLF_SWITCH_6_58v, _GLF_SWITCH_6_59v, _GLF_SWITCH_6_60v;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         ;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           ;
           mat3x4(mat3(-4615.7600, -291.555, -503.931, 8.1, -3498.2102, 72.97, 896.411, 2.3, -281.946));
          }
         else
          {
          }
        }
       case 0:
       case 96:
       case 30:
       case 36:
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       case 85:
       mat4(-2199.5445, 632.227, -3.9, 6.3, -4.0, -149.360, 57.95, 6530.7391, 6633.3215, 1298.7864, 3328.3637, -4.3, 5.0, 44.87, -4981.9343, 675.080);
       case 94:
       for(       (78.42 + 821.662);
 true; true)
        {
         mat3x2 _GLF_SWITCH_6_61v[36], _GLF_SWITCH_6_62v[5];
         mat3x2 _GLF_SWITCH_6_63v, _GLF_SWITCH_6_64v, _GLF_SWITCH_6_65v;
         {
          bool _GLF_SWITCH_6_66v, _GLF_SWITCH_6_67v;
          uvec3 _GLF_SWITCH_6_68v[25];
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            while(false)
             {
              ;
              uint _GLF_SWITCH_6_69v[9];
              ivec2 _GLF_SWITCH_6_70v, _GLF_SWITCH_6_71v;
              mat4x2 _GLF_SWITCH_6_72v, _GLF_SWITCH_6_73v;
              bvec3(false, false, true);
             }
           }
          vec4 _GLF_SWITCH_6_74v[95], _GLF_SWITCH_6_75v;
         }
         -13254;
        }
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_2(ivec3(1), vec4(1.0), _GLF_struct_0(bvec3(true), mat2x3(1.0), uvec4(1u), ivec3(1), ivec2(1), bvec2(true)), _GLF_struct_1(mat2(1.0), 1, 1.0, bvec4(true), vec3(1.0), ivec3(1))), mat4x3(1.0), _GLF_struct_8(_GLF_struct_3(ivec2(1), mat2x3(1.0), uvec4(1u)), _GLF_struct_4(uvec3(1u), uvec4(1u)), _GLF_struct_5(bvec2(true), true), _GLF_struct_6(uvec2(1u), mat3x4(1.0), uvec4(1u), vec3(1.0), bvec3(true), ivec2(1)), _GLF_struct_7(mat3x4(1.0), mat2x3(1.0), mat4x3(1.0))), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_12(_GLF_struct_9(true), _GLF_struct_10(true, mat3x4(1.0)), uvec3(1u), _GLF_struct_11(true), mat2x3(1.0)), _GLF_struct_15(bvec2(true), vec2(1.0), _GLF_struct_13(1.0, mat2(1.0), mat4x2(1.0), uvec2(1u), ivec2(1), ivec2(1), bvec3(true)), _GLF_struct_14(true, mat4(1.0), true, vec3(1.0), mat3x4(1.0)), uvec2(1u), vec3(1.0)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_16.read_1 + 1), 4, 64, 4);
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 94:
           ivec4 _GLF_SWITCH_5_0v[75];
           case 88:
           vec4 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[32], _GLF_SWITCH_5_3v;
           case 0:
           case 61:
           case 41:
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((0 & 43690) >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
             do
              {
               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                {
                 case 64:
                 mat4x3 _GLF_SWITCH_7_0v[37], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                 case 47:
                 mat3x2 _GLF_SWITCH_7_3v[84], _GLF_SWITCH_7_4v;
                 case 0:
                 case 27:
                 switch(_GLF_SWITCH(0))
                  {
                   case 76:
                   mat3x2 _GLF_SWITCH_5_0v[8];
                   case 31:
                   ;
                   case 0:
                   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                      {
                       case 0:
                       case 37:
                       case 94:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         break;
                        }
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_16.read_1 + 1 == read_2) + 1, 4, 64, 4);
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           switch(_GLF_SWITCH((1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))
                            {
                             case 22:
                             mat2x3(-4.2, -84.09, 8.3, -9145.8696, -423.622, -0.2);
                             case 0:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             do
                              {
                               return;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             break;
                             case 31:
                             uvec2 _GLF_SWITCH_7_0v;
                             default:
                             1;
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       break;
                       case 72:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          continue;
                         break;
                        }
                       if(false)
                        {
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(false)
                            {
                             -5.6;
                             do
                              {
                               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
                                {
                                 case 48:
                                 bvec4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[71], _GLF_SWITCH_7_2v;
                                 case 0:
                                 case 33:
                                 case 98:
                                 case 37:
                                 mat2x3(9.6, 2.1, 5872.8857, -6670.8428, 55.30, -853.976);
                                 case 56:
                                 case 36:
                                 if(_GLF_DEAD(false))
                                  continue;
                                 break;
                                 case 60:
                                 mat2x4(700.224, 28.53, 3838.5048, -6.9, -52.00, 7016.3796, 6686.0480, -0.8);
                                 default:
                                 1;
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             mat3(8499.8664, 9261.2899, 70.72, -4.8, 4404.2324, -66.23, -615.255, 1.1, -96.28);
                             bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(((0 & 81321) | 0)))
                                    {
                                     case 40:
                                     ;
                                     case 0:
                                     case 65:
                                     if(_GLF_DEAD(false))
                                      break;
                                     case 56:
                                     case 28:
                                     mat3(-5.0, 75.60, -21.51, -74.53, 34.02, -676.920, 9833.5646, 2720.5211, 3.6);
                                     break;
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     if(_GLF_DEAD(false))
                                      return;
                                     case 41:
                                     _GLF_SWITCH_1_0v;
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
                                {
                                 case 92:
                                 uvec2 _GLF_SWITCH_3_0v[3];
                                 case 0:
                                 case 53:
                                 case 45:
                                 case 20:
                                 uvec3(16737u, 165991u, 137537u);
                                 if(_GLF_DEAD(false))
                                  break;
                                 break;
                                 case 84:
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                  return;
                                 mat4x2(-9542.1418, 7.9, 985.775, 8998.1054, 1.4, -64.90, 96.40, -1.4);
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 default:
                                 1;
                                }
                              }
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 28:
                                   mat4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                                   case 0:
                                   case 21:
                                   case 76:
                                   case 35:
                                   case 58:
                                   case 48:
                                   case 68:
                                   ;
                                   break;
                                   case 91:
                                   bvec3(false, false, true);
                                   default:
                                   1;
                                  }
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                break;
                               return;
                              }
                             do
                              {
                               if(_GLF_DEAD(false))
                                continue;
                               66.42;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           else
                            {
                             mat3(7.4, -8.7, 4.3, 5.0, 94.83, -4875.5491, 7.0, -396.550, -9805.8702);
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    break;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   return;
                                  }
                                 mat4x2((-6.7 + mat3x2(621.834, 92.86, 11.23, 7255.5774, -72.04, 5984.4462)));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                             mat4x3 _GLF_SWITCH_1_2v;
                             ;
                             uvec4 _GLF_SWITCH_1_3v[50], _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
                             if(_GLF_DEAD(false))
                              return;
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                              return;
                             bvec2 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   return;
                                  }
                                }
                               else
                                {
                                }
                              }
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               roundEven(vec3(-76.90, 4364.9104, -1.0));
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 35:
                            mat2x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                            if(_GLF_DEAD(false))
                             continue;
                            case 9:
                            mat3x4 _GLF_SWITCH_2_3v[9], _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
                            do
                             {
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 return;
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            case 0:
                            case 28:
                            case 99:
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 34:
                                ldexp(vec3(-8.4, 22.55, 33.24), ivec3(-19089, 26556, 32909)).yzxz;
                                case 9:
                                ((_GLF_SWITCH_2_2v --) / -12.25);
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 continue;
                                case 0:
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                                   {
                                    return;
                                   }
                                  else
                                   {
                                   }
                                 }
                                case 13:
                                case 45:
                                case 81:
                                case 21:
                                if(_GLF_DEAD(false))
                                 continue;
                                case 10:
                                case 80:
                                case 58:
                                vec3(-8.1, -0.2, -6.7);
                                break;
                                if(_GLF_DEAD(false))
                                 continue;
                                if(_GLF_DEAD(false))
                                 return;
                                default:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 continue;
                                1;
                               }
                             }
                            else
                             {
                             }
                            case 19:
                            mat3x2 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[48], _GLF_SWITCH_1_11v;
                            if(_GLF_DEAD(false))
                             return;
                            case 17:
                            mat4x3(9298.4751, -8.7, 2.4, -4497.1817, -3.6, 4.4, -5.1, -9.7, -4.8, -67.81, 2.4, -7.1);
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            case 81:
                            if(_GLF_DEAD(false))
                             continue;
                            ivec2(91094, -89185);
                            break;
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false))))))))
                             continue;
                            default:
                            if(_GLF_DEAD(false))
                             continue;
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 31:
                                sqrt(-3853.2031);
                                case 95:
                                bvec2(true, false);
                                case 0:
                                case 61:
                                if(_GLF_DEAD(false))
                                 continue;
                                case 60:
                                case 63:
                                case 94:
                                case 29:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                                   {
                                    case 0:
                                    case 37:
                                    case 88:
                                    case 2:
                                    case 11:
                                    case 83:
                                    case 46:
                                    case 62:
                                    case 44:
                                    case 53:
                                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                     {
                                      return;
                                     }
                                    break;
                                    case 71:
                                    true;
                                    default:
                                    1;
                                   }
                                 }
                                case 47:
                                if(_GLF_DEAD(false))
                                 continue;
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                case 54:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                 {
                                  1;
                                 }
                                else
                                 {
                                 }
                                break;
                                default:
                                do
                                 {
                                  1;
                                  if(_GLF_DEAD(false))
                                   return;
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                               }
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                           }
                         }
                         while(false)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              return;
                             break;
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           mat4x3 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                           ivec3 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           false;
                           float _GLF_SWITCH_1_17v;
                           if(_GLF_DEAD(false))
                            continue;
                           mat3x2 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v[32], _GLF_SWITCH_1_20v;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(true)
                          {
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               switch(_GLF_SWITCH((0 | (1 ^ 1))))
                                {
                                 case 17:
                                 transpose((mat4x2(791.234, 1084.9906, 165.064, -5109.7369, 9561.2945, 3.5, -53.25, -128.878) + (mat4x2(507.581, -245.976, -503.631, 7.4, -7.7, -5.1, -3566.7697, -92.27))));
                                 case 0:
                                 case 7:
                                 case 58:
                                 case 42:
                                 case 74:
                                 case 53:
                                 case 40:
                                 case 77:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                 break;
                                 case 55:
                                 bvec3(false, false, true);
                                 case 98:
                                 mat2x4(-6.9, 9647.8407, -2.3, -782.167, -58.99, -65.07, asin(atan(-34.16, -7.0)), 2.8);
                                 default:
                                 1;
                                }
                              }
                            }
                           mat3x2 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v[69], _GLF_SWITCH_1_23v;
                           vec3 _GLF_SWITCH_1_24v[3], _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 56:
                                   ;
                                   case 5:
                                   uvec3 _GLF_SWITCH_7_0v[6], _GLF_SWITCH_7_1v;
                                   case 0:
                                   case 65:
                                   return;
                                   break;
                                   case 9:
                                   (mat2x3(mat4x3(mat2x4(-122.757, 5479.7617, 3.7, 6355.7327, 1335.9097, 1.8, -288.407, -7681.7904))) * mat3x2(-90.17, -53.25, -776.643, 2.1, 2216.4809, -2.2));
                                   case 58:
                                   round(vec4(-251.911, 1.5, 5.6, 7673.1767));
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           if(_GLF_DEAD(false))
                            break;
                          }
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               return;
                               break;
                               case 19:
                               (vec4(4.0, 3.0, 1940.3760, -67.21) - _GLF_SWITCH_5_3v);
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         for(                         vec4(-616.132, 30.91, 20.24, 257.200);
 (true && false); bvec2(false, false))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 29:
                             ;
                             case 0:
                             case 79:
                             case 42:
                             case 46:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                             else
                              {
                              }
                             case 93:
                             if(_GLF_DEAD(false))
                              return;
                             case 95:
                             case 16:
                             case 34:
                             case 91:
                             (ivec3(72209, 1416, -94929) , bvec4(true, true, true, true));
                             case 75:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         return;
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 else
                                  {
                                  }
                                }
                               false;
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              continue;
                             break;
                             case 88:
                             mat3x2(injectionSwitch, vec2(386.354, 47.74), injectionSwitch);
                             case 80:
                             (workgroup_id * uvec2(52092u, 27743u));
                             default:
                             1;
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 92:
                             ;
                             case 25:
                             mat4(9201.3832, -8.2, 838.425, 260.761, 624.318, 2.3, 8.5, -7.2, -607.753, 783.013, 13.99, -2241.1387, -66.54, -4332.6201, 920.720, -483.380);
                             case 0:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))))
                                  {
                                   case 72:
                                   uvec4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                                   case 0:
                                   case 94:
                                   case 44:
                                   for(                                   ivec4(-87663, 24578, 42120, 69098);
 true; false)
                                    {
                                    }
                                   break;
                                   case 33:
                                   ;
                                   case 66:
                                   uvec3 _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             break;
                             case 91:
                             mat3(-8.6, 556.400, 4.4, 5.8, -7315.2674, -6.7, 6381.1169, 3.5, -89.83);
                             default:
                             1;
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if((true ? (true ? true : true) : false))
                            {
                             int _GLF_SWITCH_1_27v[73];
                             if(_GLF_DEAD(false))
                              return;
                             uvec4 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v[24];
                             vec2 _GLF_SWITCH_1_31v;
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           bvec4(true, false, false, true);
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          continue;
                         mat4x3(-66.64, 671.415, 0.0, -6.3, 9503.7825, 9.2, 35.59, 6.7, -8.4, -7.2, 7794.7571, 82.17);
                        }
                       else
                        {
                         if(true)
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 39:
                             mat3x2(8.3, 6.9, 7.5, 694.753, -2699.3916, 7.5);
                             case 0:
                             case 67:
                             case 29:
                             case 2:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
                                break;
                               continue;
                              }
                             case 78:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             case 35:
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               mat2x4(-734.943, -700.981, -1.8, 17.28, 965.773, -9.0, -95.39, 3194.1172);
                              }
                             case 34:
                             case 63:
                             if(_GLF_DEAD(false))
                              return;
                             break;
                             case 40:
                             mat2x3 _GLF_SWITCH_4_0v[19];
                             case 95:
                             mat2x3(7.0);
                             default:
                             1;
                            }
                          }
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          continue;
                         for(vec4 _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v[34]; (ivec2(15013, -84633) != ivec2(-17350, -59824)); (-3872.8865 / mat2x4(9.9, -81.35, 8.7, -972.690, -52.82, 8.4, 221.094, 757.109)))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             min((vec3(-284.257, -1265.6827, -6.4) * mat3(7.5, 8.3, 6.1, -79.79, -23.00, 13.72, -3.3, 271.756, 890.500)), vec3(4482.9216, 599.336, 3.8));
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(false))
                            continue;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             uvec4(7927u, 64555u, 133250u, 178487u);
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             vec2(fma(77.55, 8356.2274, 9.9));
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              continue;
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           mat3 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v[29], _GLF_SWITCH_1_36v;
                           mat3x4 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v;
                           for(int _injected_loop_counter = (-41229 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 67:
                               case 21:
                               case 61:
                               case 80:
                               case 19:
                               case 94:
                               dot(vec3(-5479.4054, 2009.9382, -4996.8416), clamp(clamp(vec3(1.7, 0.5, 801.599), -63.34, 24.00), vec3(3.9, 5572.0459, -4361.3763), vec3(-1.9, 5.9, -8260.4111)));
                               break;
                               default:
                               1;
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             do
                              {
                               (ivec2(-85175, -98980) / ivec2(74141, 28900));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                              {
                               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                {
                                 return;
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             do
                              {
                               9.0;
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 mat4x3(7379.0049, 1.3, -66.43, -670.568, 2974.5735, -5635.2666, 659.927, -7609.9332, 4.2, -8.5, 3778.0248, 776.712);
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                                  return;
                                }
                               (-90691 ^ ivec2(13618, 90267).ttt);
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   mix(mat4(-2.5, -38.68, 1.6, -3289.8271, 1.2, 8821.5243, -152.990, -0.4, 147.377, -15.34, -353.645, 37.96, -4.3, 3.4, -1453.9400, 2.8)[0], vec4(-712.304, -52.49, -3.9, -3666.6037), bvec4(true, true, true, false));
                                   break;
                                   case 73:
                                   vec4 _GLF_SWITCH_7_0v;
                                   default:
                                   1;
                                  }
                                }
                               mat3 _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v[23];
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   return;
                                  }
                                }
                               mat2x3 _GLF_SWITCH_1_41v;
                               (false ? inversesqrt(vec3(1.3, -4.1, -3.7)) : vec3(6.4, -5.6, -7.1));
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               mat4x2(8.4, 41.41, -0.7, -474.594, 333.436, -7919.7316, 4330.6632, 3.9);
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                                {
                                 ivec3(-34735, 23649, -45228);
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(false))
                              continue;
                            }
                          }
                         else
                          {
                          }
                        }
                       case 16:
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 36:
                              ivec3(91853, -1568, -66161);
                              case 0:
                              case 31:
                              case 26:
                              case 91:
                              case 64:
                              case 42:
                              if(_GLF_DEAD(false))
                               return;
                              case 32:
                              case 16:
                              case 43:
                              if(_GLF_DEAD(false))
                               return;
                              break;
                              default:
                              1;
                             }
                           }
                          else
                           {
                           }
                          if(_GLF_DEAD(false))
                           break;
                         }
                        else
                         {
                          while((bvec2(true, true) == bvec2(true, false)))
                           {
                            do
                             {
                              bvec2(false, false);
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            (ivec3(30362, 22621, -47389) + (ivec3(-97864, -38350, -1298) | ivec3(-82846, 2746, 49397)));
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                             {
                              if(_GLF_DEAD(false))
                               continue;
                              ivec4(81177, 70372, -78433, -95715);
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                break;
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  return;
                                 }
                               }
                             }
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                                 {
                                  equal(bvec3(false, true, false), bvec3(false, true, false));
                                 }
                               }
                              else
                               {
                               }
                             }
                           }
                          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                return;
                               }
                              else
                               {
                               }
                             }
                            continue;
                           }
                          if(_GLF_DEAD(false))
                           break;
                          if(_GLF_DEAD(false))
                           break;
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          ivec4(-16374, -14717, -63388, 18535);
                         }
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           return;
                          }
                         vec4 _GLF_SWITCH_1_42v;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           mat2x4(-3634.3640, 310.297, 3.8, 937.126, -63.59, -1.2, -9.0, -6412.9362);
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            break;
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            return;
                           do
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 11:
                             mat4x2(-5.4, -5.6, 57.19, -8.8, -363.001, -5.6, 765.482, -4288.9586);
                             if(_GLF_DEAD(false))
                              break;
                             case 81:
                             if(_GLF_DEAD(false))
                              continue;
                             notEqual(vec3(-5074.7818, -6407.7082, 64.37), vec3(2.2, -1.0, 273.351));
                             if(_GLF_DEAD(false))
                              return;
                             case 0:
                             if(_GLF_DEAD(false))
                              continue;
                             continue;
                             break;
                             default:
                             1;
                            }
                          }
                         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             bvec4(true, true, false, false);
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                      }
                                     else
                                      {
                                       return;
                                      }
                                    }
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       return;
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                     if(_GLF_DEAD(false))
                                      continue;
                                    }
                                   break;
                                   case 5:
                                   uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                                   default:
                                   1;
                                  }
                                }
                               else
                                {
                                }
                               return;
                               if(_GLF_DEAD(false))
                                continue;
                               if(_GLF_DEAD(false))
                                continue;
                              }
                            }
                          }
                         ;
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
                              {
                               case 18:
                               mat2x3 _GLF_SWITCH_4_0v[28];
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               case 51:
                               injectionSwitch.xxx;
                               case 0:
                               if(_GLF_DEAD(false))
                                return;
                               case 49:
                               case 33:
                               case 46:
                               case 50:
                               case 95:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   do
                                    {
                                     return;
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                       continue;
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               else
                                {
                                }
                               break;
                               default:
                               1;
                              }
                            }
                          }
                         bvec4 _GLF_SWITCH_1_43v, _GLF_SWITCH_1_44v;
                         mat3x4 _GLF_SWITCH_1_45v;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         mat4x3 _GLF_SWITCH_1_46v[12];
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 27:
                             if(_GLF_DEAD(false))
                              break;
                             mat3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                             case 0:
                             case 75:
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               (mat2x3(6351.4790, -80.58, -0.6, 5.4, -2.4, 5.6) - mat2x3((mat4x2(-0.6, 7.1, -364.437, 0.3, -894.490, -4.7, -3.8, 9.7) * mat4(-35.41, 59.18, 764.704, 56.99, -1.8, -7.1, -774.193, -9447.5632, -146.308, -4.0, -831.797, 8.5, -7.1, 2614.7920, -1290.4302, 497.004))));
                              }
                             break;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             default:
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               1;
                              }
                             if(_GLF_DEAD(false))
                              continue;
                            }
                           if(_GLF_DEAD(false))
                            return;
                          }
                        }
                        (outerProduct(sin(vec2(698.589, -9.8)), vec2(-9.5, 4.6)));
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           return;
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          return;
                         }
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if(_GLF_DEAD(false))
                            return;
                           ;
                          }
                         else
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 6:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat4(-262.601, 7679.0958, -259.137, 5.2, -72.70, 9.9, -80.45, -1433.5570, 155.102, -5.4, 879.473, 248.709, 590.566, -9.5, -720.010, -9.4);
                              }
                             case 44:
                             bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                             case 0:
                             case 33:
                             case 84:
                             case 37:
                             if(_GLF_DEAD(false))
                              continue;
                             break;
                             case 42:
                             vec4 _GLF_SWITCH_5_2v[25], _GLF_SWITCH_5_3v;
                             case 19:
                             (mat4x2(-9.2, 674.645, 6803.2752, 4727.7445, 4.4, -1.5, -4.1, 2.5) * mat2x4(732.024, -7.8, 4.5, 8336.1955, -915.006, -974.760, 68.04, 8.5));
                             default:
                             1;
                            }
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                          break;
                         if(_GLF_DEAD(false))
                          break;
                         vec4 _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v;
                         if(_GLF_DEAD(false))
                          continue;
                         injectionSwitch;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              break;
                             mat2(mat4x3(-9590.2165, -340.196, -8486.5930, 3.6, 3734.5342, 2654.0429, -163.649, 799.901, -3.7, -6.3, 8606.7162, -502.387));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         mat2x4(-2595.8326, -738.051, 9.3, -2.1, 67.21, -89.59, -549.343, 4.8);
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             uvec2(93408u, 154546u);
                            }
                          }
                         else
                          {
                          }
                        }
                        if(_GLF_DEAD(false))
                         break;
                       }
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       continue;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      continue;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   break;
                   default:
                   1;
                  }
                 break;
                 case 77:
                 mat4x2 _GLF_SWITCH_7_5v;
                 case 55:
                 ;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
           case 13:
           mat2x4 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
           default:
           1;
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 67:
         vec4 _GLF_SWITCH_5_0v;
         case 6:
         while((uvec4(33984u, 169400u, 153780u, 128478u) != uvec4(55092u, 137324u, 44483u, 73532u)))
          {
           bool _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
           ;
           ;
           bvec4(true, false, true, true);
           mat2x3(535.687, -55.07, -3.1, -4.4, 5.3, 8.2);
           bvec3(true, true, false);
           vec3 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v[86];
          }
         case 0:
         if(_GLF_DEAD(false))
          return;
         case 99:
         return;
         break;
         case 34:
         if(true)
          {
           mat3(-677.798, -4.6, -2.6, -94.87, 0.9, 9.5, -27.84, 979.208, -5.9);
           bvec4(false, true, true, false);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             -20653;
            }
           else
            {
            }
           bvec4 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v;
           lessThanEqual(uvec3(26042u, 164196u, 102536u), ((uvec3(187242u, 77740u, 97289u))));
           bvec2(bvec3(true, true, false));
           int _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v[7], _GLF_SWITCH_5_12v[80];
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat3x2(809.656, -924.883, 2.0, -9.5, 6.7, 523.604);
            }
           else
            {
            }
          }
         case 31:
         ivec4(-1045, -55571, 87141, 51030);
         default:
         1;
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 21:
           mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[41];
           case 64:
           vec4 _GLF_SWITCH_3_3v[23], _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v;
           case 0:
           case 41:
           if(_GLF_DEAD(false))
            continue;
           case 72:
           if(_GLF_DEAD(false))
            return;
           case 34:
           case 9:
           case 73:
           case 42:
           case 75:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           break;
           case 52:
           mat4x2 _GLF_SWITCH_3_6v;
           if(_GLF_DEAD(false))
            break;
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             1;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))));
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         switch(_GLF_SWITCH((-96458 & (0 | 0))))
          {
           case 14:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           greaterThanEqual(vec3(-2.0, 4482.0931, 161.847), vec3(-89.43, -3.1, 1.6));
           case 64:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             ivec3(-86380, 30220, 74596);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 62:
                   (5.5 - mat2x3(47.84, -239.122, 57.31, -2275.3237, -771.742, 88.26));
                   case 73:
                   uvec3(96292u, 150665u, 49914u);
                   case 0:
                   case 15:
                   case 12:
                   case 56:
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   break;
                   case 24:
                   mat2x3 _GLF_SWITCH_5_0v[55];
                   default:
                   1;
                  }
                }
               else
                {
                }
              }
            }
           case 0:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              return;
            }
           else
            {
            }
           case 24:
           case 60:
           case 38:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false)))))
                break;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           case 52:
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_16.read_1 + 1 == read_2) + 1, 4, 64, 4);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 21:
                 case 42:
                 case 2:
                 return;
                 break;
                 case 87:
                 bvec3(true, true, true);
                 case 79:
                 bvec4(false, true, false, true);
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           case 17:
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))))))))
              {
               case 86:
               do
                {
                 (- outerProduct(vec4(-4889.0041, -84.42, -7374.2844, -3011.8270), injectionSwitch));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
               case 0:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                continue;
               break;
               case 19:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               (8381.9526 < 3517.4169);
               case 27:
               mat4x3 _GLF_SWITCH_2_0v[76], _GLF_SWITCH_2_1v;
               default:
               1;
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               mat2x3(8751.0553, -4038.6341, -4340.5706, -4.8, 200.384, -0.1);
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           case 6:
           vec4 _GLF_SWITCH_0_0v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           default:
           if(_GLF_DEAD(false))
            return;
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         case 57:
         if(_GLF_DEAD(false))
          break;
         case 19:
         case 41:
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         case 53:
         case 33:
         case 81:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         break;
         default:
         if(_GLF_DEAD(false))
          continue;
         1;
        }
      }
     if(_GLF_DEAD(false))
      break;
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 35:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         bvec2(false, true);
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       case 18:
       while(true)
        {
        }
       case 0:
       case 89:
       case 43:
       case 93:
       case 85:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       case 56:
       case 91:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        return;
       case 42:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(true);
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       break;
       if(_GLF_DEAD(false))
        continue;
       case 96:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(       uvec4(162852u, 100037u, 93732u, 35469u);
 false; (uvec3(41467u, 168450u, 127994u) & atomicCompSwap(read_2, virtual_gid, virtual_gid)))
        {
         mat2x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          break;
         while((uvec4(55884u, 41665u, 169603u, 34996u) == uvec4(66507u, 13170u, 53240u, 94527u)))
          {
           uvec4(105425u, 157107u, 59946u, 45466u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             injectionSwitch;
            }
           vec3(107.672, 9.8, 84.30);
           vec2(1847.0878, 8.2);
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             _GLF_SWITCH_2_1v;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         (+ matrixCompMult(mat3(1300.6526, 3.2, 2816.1039, -7603.3767, -4.1, -49.90, -4.1, -75.85, -8009.0281), mat3(-63.31, 5.4, 3.5, -5.0, 4969.1928, 64.53, 593.674, 0.6, -2.2)));
         (mat2(-9650.2990, -5100.5412, 969.539, 32.99) * mat2(4.7, 4.1, 5.9, -7.5));
        }
       default:
       1;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
}
