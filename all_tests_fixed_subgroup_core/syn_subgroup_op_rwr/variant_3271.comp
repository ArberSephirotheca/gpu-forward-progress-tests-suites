#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, false, true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.31)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! _GLF_IDENTITY((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.31)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true)), ! _GLF_IDENTITY((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), (injectionSwitch.x) - 0.0)), bool(true))), _GLF_IDENTITY((false ? _GLF_FUZZED(-2179.5808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))))), (injectionSwitch.x) - 0.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(-761.251), _GLF_FUZZED((false ? 47.61 : 3682.0867)), _GLF_FUZZED(-4.3)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(min(vec3(-877.056, -5.8, -3679.1544), -2374.2518)) : (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))), (injectionSwitch.x) - 0.0)), bool(true)))) - 0.0)), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY((false ? _GLF_FUZZED(-2179.5808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))))), (injectionSwitch.x) - 0.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(-761.251), _GLF_FUZZED((false ? 47.61 : 3682.0867)), _GLF_FUZZED(-4.3)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(min(vec3(-877.056, -5.8, -3679.1544), -2374.2518)) : (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))), (injectionSwitch.x) - 0.0)), bool(true)))) - 0.0)), ((false ? _GLF_FUZZED(-2179.5808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))))), (injectionSwitch.x) - 0.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5463.9813)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(-761.251), _GLF_FUZZED((false ? 47.61 : 3682.0867)), _GLF_FUZZED(-4.3)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(min(vec3(-877.056, -5.8, -3679.1544), -2374.2518)) : (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, length(vec3(0.0, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))))))), (injectionSwitch.x) - 0.0)), bool(true)))) - 0.0))) * 1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = (0 & (73175 % -34562)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((9.6))), bool(false))), injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) + 0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) && true)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)))[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(586.477)), vec2(_GLF_FUZZED(10.73), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)))[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(586.477)), vec2(_GLF_FUZZED(10.73), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)))[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(586.477)), vec2(_GLF_FUZZED(10.73), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1087.2928)), bool(false))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(5517.9544, 7.3, 5772.0411, 1.0)))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-1520.6021), _GLF_FUZZED(5.1)), bvec2(false, false))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(fma(intBitsToFloat(_GLF_IDENTITY(2310, ~ (~ (_GLF_IDENTITY(2310, (2310) + 0))))), 566.012, -6380.2826)))))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(26.14)), vec2(_GLF_FUZZED(-889.305), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), float(vec3(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 0.0))), _GLF_FUZZED(26.14)), vec2(_GLF_FUZZED(-889.305), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(7))))); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))))), 0u ^ ((~ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), ((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), (true ? _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))) : _GLF_FUZZED(uvec3(81823u, 12641u, 149289u)))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), min(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))))), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))) + (0u | 0u)))), 1u)))))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((num_workgroup + subgroup_size)))), 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((num_workgroup + subgroup_size)))), 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((num_workgroup + subgroup_size)))), 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((num_workgroup + subgroup_size)))), 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 1u, 1u), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), clamp((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), _GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), (_GLF_IDENTITY((uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))))))), uvec3(0u, 0u, 0u) | ((uvec3(subgroup_size, 1u, 1u))))) | ((uvec3(subgroup_size, 1u, 1u)))))), clamp((uvec3(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_size, 1u, 1u)))) | (uvec3(subgroup_size, 1u, 1u)))), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(78793u, 85820u, 66367u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_size, 1u, 1u)), clamp((uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)), (uvec3(subgroup_size, 1u, 1u)))), 0u))))), 1u))) ^ uvec3(0u, 0u, 0u))))))))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) >> 0u))))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)), ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size)) | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) << 0u)), 1u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), 1u)), (uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) - uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1))))))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), (0u | 0u)), ~ (~ _GLF_IDENTITY((uvec3((subgroup_local_id + 1), 1u, (0u | 0u))), ((uvec3((subgroup_local_id + 1), 1u, (0u | 0u)))) ^ uvec3(0u, 0u, 0u)))))) % subgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u, (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u) >> 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1))) % subgroup_size)))) - 0u)), clamp((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u)))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) + 1) << _GLF_IDENTITY(0u, (0u) << (0u | 0u)))) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(168547u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (168547u))) : (((subgroup_local_id + 1) % subgroup_size)))) - 0u))))), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size), ~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (uvec3(((subgroup_local_id + 1) % subgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) - uvec3(0u, 0u, 0u)))), 0u | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) / (0u ^ 1u))), subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, 0u)), (uint(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, 0u))) ^ 0u))) / 1u))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size))), 1u, 1u)))))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), max((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-17573)))), (0))) | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), max((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-17573)))), (0))) | (0))), ~ (~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), max((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-17573)))), (0))) | (0)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         break;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       continue;
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(_GLF_IDENTITY(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), max(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))))))) : _GLF_FUZZED(vec2(3336.4559, 7.3)))), clamp(vec2(vec3(injectionSwitch, _GLF_IDENTITY(determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-6264.4965)), float(determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))), bool(true))))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, 0.0))))))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))), determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5995.3711)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), clamp(vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), vec2(vec3(injectionSwitch, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            break;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true)))) + sin(0.0)), 1.0)).y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-62154)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-437.623)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)) && true)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), (_GLF_IDENTITY(read_1, (read_1) - 0u)) | 0u)) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), max(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), read_1 + 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, max(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), clamp(virtual_gid, virtual_gid, virtual_gid))], _GLF_IDENTITY(4, (4) + 0), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (mat2(injectionSwitch, 0.0, 0.0)) * mat2(1.0))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (mat2(injectionSwitch, 0.0, 0.0)) * mat2(1.0))), 0.0, 1.0, 0.0, 1.0)))), injectionSwitch)).y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec4(bool(bvec3(false, false, true)), true, false, false))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3044.0364), _GLF_FUZZED(9.9)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0))) + (4)), 1, 1)), int(ivec3(4, 1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1))))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1)), int(ivec3(4, 1, 1)))))))))) - 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 + (4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0))))) << ivec2(0, 0))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0))))) << ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0)), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(int(ivec3(4, 1, 1)), clamp(int(ivec3(4, 1, 1)), _GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) | 0), int(ivec3(4, 1, 1)))), (89223 & 0))))) << ivec2(0, 0)))))), min(int(ivec3(4, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))), int(ivec3(4, 1, 1))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))), int(ivec3(4, 1, 1)))))) ^ (0 & -19001))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))), int(ivec3(4, 1, 1))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))), int(ivec3(4, 1, 1)))))) ^ (0 & -19001)))) << 0), ((_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(1, (1) << 0)))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(4, 1, 1), clamp(ivec3(4, 1, 1), ivec3(4, 1, 1), ivec3(4, 1, 1))))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(4, 1, 1), clamp(ivec3(4, 1, 1), ivec3(4, 1, 1), ivec3(4, 1, 1)))))) | (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(4, 1, 1), clamp(ivec3(4, 1, 1), ivec3(4, 1, 1), ivec3(4, 1, 1)))))))), int(ivec3(4, 1, 1))))))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-35313))), 1, 1)), (int(ivec3(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-35313))), 1, 1))) >> 0), min(int(ivec3(4, 1, 1)), int(ivec3(4, 1, 1)))))), min((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, 1, 1)), int(ivec3(4, 1, 1)))), (_GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, 1, 1)), int(ivec3(4, 1, 1))))) | (_GLF_IDENTITY(int(ivec3(4, 1, 1)), min(int(ivec3(4, 1, 1)), int(ivec3(4, 1, 1)))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), _GLF_IDENTITY(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 1))), int(ivec2(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(max(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(4, 1, 1), clamp(ivec3(4, 1, 1), ivec3(4, 1, 1), ivec3(4, 1, 1)))), clamp(max(ivec3(4, 1, 1), ivec3(4, 1, 1)), max(ivec3(4, 1, 1), ivec3(4, 1, 1)), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))))), int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1), _GLF_IDENTITY((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-32543 * -80818)) : 1)), _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1)), clamp((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-32543 * -80818)) : 1)), _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1)), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-32543 * -80818)) : 1)), _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1)), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-32543 * -80818)) : 1)), _GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)), 1)))) - ivec3(0, 0, 0)))), 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) >> 0)))), int(ivec2(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 1))), 0)))), (int(_GLF_IDENTITY(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 1))), int(ivec2(min(int(_GLF_IDENTITY(ivec3(4, 1, 1), max(ivec3(4, 1, 1), ivec3(4, 1, 1)))), int(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 1))), 0))))) ^ 0), 0)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) | (_GLF_IDENTITY(4, (4) >> 0))))), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-2.2)), min(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(_GLF_IDENTITY(-2.2, float(mat4x3(-2.2, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(tan(0.0)), 0.0, 1.0, 0.0, abs(0.0), 1.0))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-2.2)), max(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-2.2)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0))) < injectionSwitch.y)), true))).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED((-616.687 - float(91031))), mix(float(_GLF_FUZZED((-616.687 - float(91031)))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_FUZZED(5946.6330)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false, true, false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}
