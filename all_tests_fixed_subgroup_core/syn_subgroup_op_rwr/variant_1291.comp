#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) || false)), _GLF_IDENTITY((false) || false, true && ((false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(879.989) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, sqrt(0.0)))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(992.414)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(507.890) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.3)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-8.3)), float(0.0), bool(true)) : _GLF_FUZZED(-547.965)))))), injectionSwitch.x))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(507.890) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.3)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-8.3)), float(0.0), bool(true)) : _GLF_FUZZED(-547.965)))))), injectionSwitch.x))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(-280.502)) : 1.0)), 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(0.0), abs(1.0), round(length(normalize(1.0)))))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 0.0))))), 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(45.12)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) / abs(1.0)), float(_GLF_FUZZED(-19.51)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, (false) || false))))), ! (! ((! (bool(bool(_GLF_IDENTITY(false, (false) || false))))))))))))))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), float(mat4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)))))) : _GLF_FUZZED(-4.0)))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(0.0), abs(1.0), round(length(normalize(1.0)))))), min(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(0.0), abs(1.0), round(length(normalize(1.0)))))), _GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(0.0), abs(1.0), round(length(normalize(1.0)))))))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), 0.0 + (float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(mat4x2(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 0.0, 1.0, 0.0), (mat4x2(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 0.0, 1.0, 0.0)) * mat4(1.0))))))))), float(_GLF_FUZZED(-0.4)), bool(false)))) - sin(0.0)), 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(45.12)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) / abs(1.0)), float(_GLF_FUZZED(-19.51)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY((false), false || ((false)))))) || false, ((false) || false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), true && (bool(_GLF_IDENTITY(false, (false) || false)))))))))))))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, max(_GLF_IDENTITY(-4.0, mix(float(-4.0), float(_GLF_FUZZED(577.286)), bool(false))), -4.0))))))))))) - tan(_GLF_ZERO(0.0, injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat2(mat3(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), (mat2(mat3(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3967.1473)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec2(true && (true), true), bvec2(bvec2(bvec2(true && (true), true))))))) && (false)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(16.64) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))) ^ 0u)))) + 0u)), 0u ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(max(uvec3(192791u, 67457u, 36910u), subgroup_local_id)) : gl_NumWorkGroups)).x), _GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) ^ 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), (_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), (uvec4(~ (gl_NumWorkGroups), 0u)) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), uvec4(0u))))) | (uvec4(~ (gl_NumWorkGroups), 0u))))))).x)))))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), min((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u), min(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u), _GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u), min(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u), _GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u, (((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(~ (gl_NumWorkGroups), 0u), min(uvec4(~ (gl_NumWorkGroups), 0u), uvec4(~ (gl_NumWorkGroups), 0u))))))).x)) << 0u) ^ 0u))), min(((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))).x)))))) - 0u)))))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, cos(0.0), tan(0.0), _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0)))), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, cos(0.0), tan(0.0), _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0)))), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), (true ? mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, cos(0.0), tan(0.0), _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0))), dot(vec3(tan(0.0), 1.0, 0.0), vec3(1.0, 0.0, cos(0.0)))), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(mat4x3(7868.2283, 2.5, 61.20, 4.4, 2.4, 7.6, -341.425, -14.64, 20.75, 89.36, -1.1, -7.2))))))))) : _GLF_FUZZED(33.12))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y))) && true)))))))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.59)), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true))))))) && true), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false))))))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0))))))).x > injectionSwitch.y, false)), _GLF_IDENTITY(false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false))), false || (false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(6072.8455)), bvec2(false, false))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-210.416)), bool(false))) : _GLF_FUZZED(sinh(abs(681.453))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))))))) ? injectionSwitch.x : _GLF_FUZZED(-250.345))))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-210.416)), bool(false))) : _GLF_FUZZED(sinh(abs(681.453))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))))))) ? injectionSwitch.x : _GLF_FUZZED(-250.345))))) > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, exp(0.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-611.704)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - (1u ^ 1u)) - 0u), subgroup_local_id, subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) | ((1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true) && (false))), bool(bool(bool(_GLF_IDENTITY(bool(true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true && (false)))))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))) - (0u & 198062u))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) | 0u), max(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid))))) - 0u)], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9837.7192), _GLF_FUZZED(-28.78)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1))) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) ^ 0u) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1), min(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : (subgroup_local_id) ^ 0u))) + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, (0u) * 1u)) + 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(-1890.6640, 91648)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))) || false)))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(247.792, -2.9)) : injectionSwitch)).y))))), _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)) || false, ((true) || false) && true), ! (! (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(((true) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), ((true)) || false) || false), false || (((true) || false)))))) && true)))))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false, ! (! (_GLF_IDENTITY((true) || false, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) || false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false, ! (! (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) || false), (((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) || false)) || false) && true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), false || _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)), ! (! (((true)))))), ! (! (! (_GLF_IDENTITY(((true)), ! (! (((true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))), bool(bvec3(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))), true, true))) || false, true))), ! (! (_GLF_IDENTITY((true) || false, ((true) || false) && true))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), false || ((true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0))) && ((true))), bool(bvec3(_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && ((true))), true, true))) || false, true))), ! (! (_GLF_IDENTITY((true) || false, ((true) || false) && true))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)))))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true), false))), false, true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0), vec4(mat4x2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), injectionSwitch.y)), round(length(normalize(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), sqrt(1.0), 1.0)))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), length(vec3(0.0, 0.0, 0.0))), mix(vec4(_GLF_FUZZED(-2387.9257), _GLF_FUZZED(81.53), (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[2], (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[3]), vec4((vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[1], _GLF_FUZZED(-9.3), _GLF_FUZZED(-5869.6371)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false, false)))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))), mix(vec4(_GLF_FUZZED(-2387.9257), _GLF_FUZZED(81.53), (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[2], (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[3]), vec4((vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec4(injectionSwitch, 0.0, length(vec3(0.0, 0.0, 0.0))))[1], _GLF_FUZZED(-9.3), _GLF_FUZZED(-5869.6371)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) - vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(workgroup_size), ~ (~ (true ? next_virtual_gid : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(true, true && (true)) ? next_virtual_gid : _GLF_FUZZED(workgroup_size)) - 0u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.5, -225.185)))).x)))))))) >> 0u)))), uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), (_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), clamp(_GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY(7u, min(7u, 7u))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), ~ (~ ((_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), ~ (~ (min(7u, 7u))))))))) | (7u))), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), (~ (7u)) / 1u)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(next_virtual_gid) : 7u))) | (7u))), 0u, 1u))))), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((7u), min(_GLF_IDENTITY((7u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY((7u), min(_GLF_IDENTITY((7u), 0u ^ ((7u))), (7u))), max((7u), (7u))))), _GLF_IDENTITY(_GLF_IDENTITY((7u), _GLF_IDENTITY(uint(uint((7u))), uint(_GLF_IDENTITY(uint(uint(uint((7u)))), (uint(uint(uint((7u))))) | (uint(uint(uint((7u))))))))), ((7u)) ^ 0u))))))) | (7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), (0u ^ 1u) * (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))))), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u, (true ? (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7u, min(7u, 7u)))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), (_GLF_IDENTITY((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), clamp((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), (~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), 0u + ((~ ((_GLF_IDENTITY(7u, min(7u, 7u)))))))))) * 1u) | _GLF_IDENTITY((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ ((_GLF_IDENTITY(7u, min(7u, 7u))))), (false ? _GLF_FUZZED(workgroup_size) : (~ _GLF_IDENTITY(((_GLF_IDENTITY(7u, min(7u, 7u)))), (((_GLF_IDENTITY(7u, min(7u, 7u))))) << 0u))))))))) | (7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, (0u) | (0u)))), ~ (~ (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), (7u) | 0u), max(_GLF_IDENTITY(7u, (7u) | 0u), _GLF_IDENTITY(7u, (7u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | 0u), (_GLF_IDENTITY(7u, (7u) | 0u)) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, (0u) | (0u)))))))) >> 0u : _GLF_FUZZED(read_1))))), (true ? (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) << 0u), (_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, 1u * (7u)), 7u))) | (7u)), clamp(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (7u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 7u))) | (7u)), _GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u)), _GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) - 0u), 7u))) | (7u))))), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((0u), ((0u)) - 0u), min((0u) | (0u), (0u) | (0u))))))) : _GLF_FUZZED(workgroup_base))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))), 0u, 1u))))), 1u, 1u))), (true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), ((_GLF_IDENTITY(7u, min(7u, 7u)))) | 0u)) - 0u) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), max(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u))))) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u), ~ (~ ((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u)))))), uint(7u)))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), uint(uvec2(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), 1u))))), 1u, _GLF_IDENTITY(1u, (1u) - 0u))), (uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), ((_GLF_IDENTITY(7u, min(7u, 7u)))) | 0u)) - 0u) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), max(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u))))) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u), ~ (~ ((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u)))))), uint(7u)))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), uint(uvec2(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), 1u))))), 1u, _GLF_IDENTITY(1u, (1u) - 0u)))) | (uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) | (7u))), uint(7u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), ((_GLF_IDENTITY(7u, min(7u, 7u)))) | 0u)) - 0u) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), max(uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u), uvec4((_GLF_IDENTITY(7u, min(7u, 7u))), 0u, (1u ^ (1u & 1u)), 0u))))) | (7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u), ~ (~ ((_GLF_IDENTITY(7u, min(7u, 7u))) | (7u)))))), uint(7u)))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), uint(uvec2(_GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), 1u))))), 1u, _GLF_IDENTITY(1u, (1u) - 0u)))))) : _GLF_FUZZED((workgroup_size * subgroup_local_id))))) | (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), ~ _GLF_IDENTITY((~ (~ (7u))), ((~ (~ (7u)))) - 0u)))))), _GLF_IDENTITY(0u, (0u) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, ~ (~ (7u))), min(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u)), _GLF_IDENTITY(7u, (7u) | (7u)))), 7u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), (_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), (min(7u, 7u)) / 1u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), min((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY(7u, min(7u, 7u)))))) | ((_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), (true ? min(7u, 7u) : _GLF_FUZZED((read_1 ^ next_virtual_gid)))), 0u | (min(7u, 7u)))))))))), (_GLF_IDENTITY(7u, min(7u, 7u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u))))), clamp((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), min((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY(7u, min(7u, 7u)))))) | ((_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), (true ? min(7u, 7u) : _GLF_FUZZED((read_1 ^ next_virtual_gid)))), 0u | (min(7u, 7u)))))))))), (_GLF_IDENTITY(7u, min(7u, 7u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), min((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY(7u, min(7u, 7u)))))) | ((_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), (true ? min(7u, 7u) : _GLF_FUZZED((read_1 ^ next_virtual_gid)))), 0u | (min(7u, 7u)))))))))), (_GLF_IDENTITY(7u, min(7u, 7u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, 7u))), min((_GLF_IDENTITY(7u, min(7u, 7u))), (_GLF_IDENTITY(7u, min(7u, 7u)))))) | ((_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), (true ? min(7u, 7u) : _GLF_FUZZED((read_1 ^ next_virtual_gid)))), 0u | (min(7u, 7u)))))))))), (_GLF_IDENTITY(7u, min(7u, 7u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u))))))))), _GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u)), _GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(7u, min(7u, 7u))), clamp((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(7u, min(7u, 7u))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(7u, min(7u, 7u))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(7u, min(7u, 7u)))))), _GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, max(7u, 7u)), min(7u, 7u)), (_GLF_IDENTITY(7u, min(7u, 7u))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), min(_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), max(min(7u, 7u), min(7u, 7u)))), _GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), (_GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(7u, 7u), 0u, 0u, 0u))), clamp(_GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(7u, 7u), 0u, 0u, 0u))), _GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(7u, 7u), 0u, 0u, 0u))), _GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(7u, 7u), 0u, 0u, 0u)))))) >> 0u))))) | 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, _GLF_IDENTITY(7u, (7u) / 1u)), (min(_GLF_IDENTITY(7u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(7u, (7u) | (7u)))), 7u)) << 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), (_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), (_GLF_IDENTITY(7u, min(7u, 7u))) / 1u)) | (_GLF_IDENTITY(7u, min(7u, 7u)))), _GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), (_GLF_IDENTITY(7u, min(7u, 7u))) >> 0u), _GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), max(min(7u, 7u), min(7u, 7u))), (1u & 1u) * (_GLF_IDENTITY(min(7u, 7u), min(min(7u, 7u), min(7u, 7u))))), min(_GLF_IDENTITY(min(7u, 7u), (_GLF_IDENTITY(1u & 1u, 0u | (1u & 1u))) * (_GLF_IDENTITY(min(7u, 7u), min(min(7u, 7u), min(7u, 7u))))), _GLF_IDENTITY(_GLF_IDENTITY(min(7u, 7u), (min(7u, 7u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) / 1u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((1u & 1u), ((1u & 1u)) / 1u))) * (_GLF_IDENTITY(min(7u, 7u), _GLF_IDENTITY(min(min(7u, 7u), min(7u, 7u)), (min(min(7u, 7u), min(7u, 7u))) / 1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, 7u)), min(_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), max(min(7u, 7u), min(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) ^ 0u), 7u)))), _GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), (_GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, max(7u, 7u)), 7u, _GLF_IDENTITY(7u, (7u) - 0u))), 7u), 0u, 0u, 0u)))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), (_GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(7u, 7u), 0u, 0u, 0u)))) >> 0u)), (_GLF_IDENTITY(7u, _GLF_IDENTITY(min(7u, 7u), (_GLF_IDENTITY(min(7u, 7u), uint(uvec4(min(_GLF_IDENTITY(7u, 0u ^ (7u)), _GLF_IDENTITY(7u, (7u) / 1u)), 0u, 0u, 0u)))) >> 0u))) / 1u)) << 0u)))) | 0u))))))) | (7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec3(uint(7u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 0u))))), uint(uvec2((0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))))), clamp(uint(uvec3(uint(7u), _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-9.4, -1424.8685).r)), float(0.0), bool(_GLF_IDENTITY(true, true && (true))))), injectionSwitch.x))) | 0u) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))))), uint(uvec3(uint(_GLF_IDENTITY(7u, uint(uvec3(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, min(7u, 7u))) ^ 0u), 0u, 1u)))), _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))))), uint(uvec3(uint(7u), _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))))))), 1u, 1u)))))], uint(_GLF_IDENTITY(read_1, (read_1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) + 1 == read_2) + _GLF_IDENTITY(1, (1) | 0), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(282.406)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, uint(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) / 1u), 1u, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), _GLF_IDENTITY((~ (uint(2u))), (1u & 1u) * ((~ (uint(2u))))) + 0u))), uint(2u))), 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_IDENTITY(bool(bvec4(bool(false), false, true, false)), (bool(bvec4(bool(false), false, true, false))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))), ! (! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), ((! (false))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false))))))))), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ((! (false))) && true))), true, false)), false)))))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, false)), bool(bvec2(bool(bvec3(! (! (false)), true, false)), false))))))))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
