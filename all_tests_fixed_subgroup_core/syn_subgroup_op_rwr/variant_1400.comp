#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec4 _f0;
 vec2 _f1;
 uint read_2;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 uint _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 vec2 _f3;
 _GLF_struct_2 _f4;
 vec2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 bvec4 _f1;
 uvec4 _f2;
 _GLF_struct_4 _f3;
 ivec4 _f4;
 bvec4 _f5;
 _GLF_struct_5 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
    {
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 63605)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 0.0, 0.0, sqrt(0.0))), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 0.0, 0.0, sqrt(0.0)))), 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, abs(0.0), 1.0, tan(0.0)), (false ? _GLF_FUZZED(mat4(8.0, 5642.1889, 38.87, -4.3, -78.15, -69.10, 5134.1547, 420.566, -6.9, -630.673, 8600.7300, -4.5, 8.6, 8.3, -790.135, 8.7)) : mat4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 0.0, 0.0, sqrt(0.0))), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 0.0, 0.0, sqrt(0.0)))), 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, abs(0.0), 1.0, tan(0.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), false, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), false, false, false)), true)))))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (false ? _GLF_FUZZED(74273) : 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))), true && (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))))), bool(bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
          {
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, false, false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) / 1, ~ (~ ((_injected_loop_counter ++) / 1)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uvec4(119191u, 147309u, 136777u, 119396u).s) : workgroup_id))) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) | ((workgroup_base) | (workgroup_base)))) + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-41.20)), float(1.0), bool(true))), 1.0, 1.0, 0.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))))), 1.0)), 0.0)))), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, (false ? _GLF_FUZZED(-55.30) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x)), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, (false ? _GLF_FUZZED(-55.30) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x, (false ? _GLF_FUZZED(-55.30) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch)).x))) + 0.0)), bool(true))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)))))) ^ ((subgroup_id)))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) % workgroup_id)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))), (~ (subgroup_id)) - 0u), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) | _GLF_IDENTITY((num_workgroup), clamp((num_workgroup), (num_workgroup), _GLF_IDENTITY((num_workgroup), (_GLF_IDENTITY((num_workgroup), ((num_workgroup)) ^ 0u)) << 0u)))), (0u | 0u), 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), (0u | 0u), 0u)), (uint(uvec3(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), (0u | 0u), 0u))) >> 0u)) + 0u)) , (_GLF_IDENTITY(subgroup_id % workgroup_id, clamp(subgroup_id % workgroup_id, _GLF_IDENTITY(subgroup_id % workgroup_id, (subgroup_id % workgroup_id) | (subgroup_id % workgroup_id)), subgroup_id % workgroup_id)))))) ^ 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))))))))) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << (78118u & (0u & 166765u))) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) / ((((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, vec2(mat2x4(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, vec2(mat2x4(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, vec2(mat2x4(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x), float(_GLF_FUZZED(0.3)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, vec2(mat2x4(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, vec2(mat2x4(false ? _GLF_FUZZED(vec2(-2.4, 2.5)) : injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) ^ ((subgroup_id)))))))), _GLF_IDENTITY(min(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), (175617u & 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), 1u)), max(uint(uvec2((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), 1u)), uint(uvec2((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))))))))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))))) : _GLF_FUZZED((num_workgroup , _GLF_IDENTITY((subgroup_id % workgroup_id), min((subgroup_id % workgroup_id), (subgroup_id % workgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) + 0u)), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u ^ (~ (subgroup_id)), uint(uvec2(_GLF_IDENTITY(0u ^ (~ (subgroup_id)), (false ? _GLF_FUZZED(667u) : 0u ^ (~ (subgroup_id)))), 1u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), max(uvec3(subgroup_id, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), max(uvec3(subgroup_id, 0u, 0u), uvec3(subgroup_id, 0u, 0u)))))))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) : num_workgroup)), num_workgroup)) , (subgroup_id % workgroup_id))))))))))), (_GLF_IDENTITY(min(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, (0u ^ 1u)))), ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(virtual_gid)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))))))), (min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(~ (~ (subgroup_id)), uint(_GLF_IDENTITY(uvec2(~ (~ (subgroup_id)), 0u), (uvec2(~ (~ (subgroup_id)), 0u)) + uvec2(0u, 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id)))))) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))), uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) >> 0u)), 0u ^ (~ (subgroup_id)))))) >> 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))))) >> 0u)))))))) ^ 0u)) | (min(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) - 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))), ((subgroup_id)) | ((subgroup_id)))), clamp(~ (~ (subgroup_id)), ~ (~ (subgroup_id)), ~ (~ (subgroup_id))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))))))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), max((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.4, 2.5), mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(((uvec2(133138u, 81264u) != uvec2(114298u, 28471u)) ? 433.147 : -65.01))), vec2((vec2(-2.4, 2.5))[0], (vec2(-2.4, 2.5))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) ^ ((subgroup_id)))))))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (0u ^ 0u), 1u, 1u)))), 0u ^ (~ (subgroup_id))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), uint(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uvec3(~ (workgroup_id), 1u, 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(~ (workgroup_id), 1u, 1u))))))))))))))), 1u, (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (0u ^ 0u), 1u, 1u)))), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), uint(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))))))), 1u, (1u & _GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (1u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), uint(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))), uint(uvec4(_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))), (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)))) - 0u), 1u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))))))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) | 0u)) << 0u) , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & _GLF_IDENTITY(1u, 0u ^ (1u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), ~ (~ (_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))))))))), 1u, (1u & _GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (1u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : min(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (0u ^ 0u), 1u, 1u)))), 0u ^ (~ (subgroup_id))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), uint(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (_GLF_IDENTITY(1u & 1u, ~ (~ (_GLF_IDENTITY(1u & 1u, 0u ^ (1u & 1u)))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))))))), min(~ (subgroup_id), ~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uvec3(~ (workgroup_id), 1u, 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(~ (workgroup_id), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(~ (workgroup_id), 1u, 1u))), ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(~ (workgroup_id), 1u, 1u)))) | ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(~ (workgroup_id), 1u, 1u))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))))))))))))), 1u, (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << 0u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (0u ^ 0u), 1u, 1u)))), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (~ (subgroup_id)) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | (~ (~ (subgroup_id)))), _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (~ (~ (~ (subgroup_id)))))))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | (~ (~ (subgroup_id)))), _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (~ (~ (~ (subgroup_id)))))))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | (~ (~ (subgroup_id)))), _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (~ (~ (~ (subgroup_id)))))))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | (~ (~ (subgroup_id)))), _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (~ (~ (~ (subgroup_id)))))))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id)))))), 1u, (1u & 1u), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uvec4(0u, 0u, 0u, 0u) + (uvec4((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u)))) ^ (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u)))) ^ (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u)))) ^ (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u)))) ^ (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))))))))), 1u, (1u & _GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) | (1u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (workgroup_id)), workgroup_id))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (workgroup_id)), workgroup_id))))), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (subgroup_id % _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (workgroup_id)), workgroup_id))))))))) << 0u)), uint(_GLF_IDENTITY(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))), uint(uvec4(_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u))), (~ (uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u)))) - 0u), 1u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))))))), ~ (~ (subgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)), (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) | 0u)) << 0u) , (subgroup_id % workgroup_id))), min(_GLF_FUZZED((num_workgroup , (subgroup_id % workgroup_id))), _GLF_FUZZED((_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)) , (subgroup_id % workgroup_id)))))), 1u, (1u & _GLF_IDENTITY(1u, 0u ^ (1u))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), uint(2u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uvec4(~ (subgroup_id), 1u, 0u, 0u)), (uint(uvec4(~ (subgroup_id), 1u, 0u, 0u))) | (uint(uvec4(~ (subgroup_id), 1u, 0u, 0u))))), min(~ (subgroup_id), ~ (subgroup_id))))), ~ (~ (subgroup_id))) : _GLF_FUZZED((num_workgroup , (_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))))), (_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))) | (_GLF_IDENTITY(subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (subgroup_id % _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))))))))))), 1u, (1u & _GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (1u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u), uint(0u))))))))))))))))))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1))), subgroup_local_id + 1)), subgroup_local_id + 1))))) % subgroup_size)))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (0u ^ 1u) * (uint(5u))), uint(5u))), uint(5u))))))) + _GLF_IDENTITY(1, (-71841 & 0) | (1))), 4, 64, 4);
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (false ? _GLF_FUZZED(cosh(-3054.7090)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), true, false))), false, true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))) && true)))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(-402.184) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED(586.526), ((injectionSwitch) * mat2(1.0))[1]), _GLF_IDENTITY(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), clamp(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), mix(vec2((vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))[0], _GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))[1], min((vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-49015) : 1))], (vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))[1]))), vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(-7.9)), bvec2(false, false))), _GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), min(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), clamp(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-211.917)))), bvec2(true, false)))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) && true))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(vec2(1.0), bvec4(true), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), _GLF_struct_4(_GLF_struct_0(mat3x4(1.0)), _GLF_struct_1(uvec2(1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(1u, (1u) | (1u)))))), ivec4(1), vec2(1.0), _GLF_struct_2(mat2x4(1.0)), vec2(1.0), _GLF_struct_3(uvec2(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))), mat2(1.0), mat2x4(1.0), bvec2(true), bvec4(true), 1u, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) + (5319u & (0u | 0u))))) ^ (0u)) ^ (1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))), 1u, 0u)), uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))))), 1u, 0u))), clamp((uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))))), 1u, 0u))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))))), 1u, 0u))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))))), 1u, 0u))))) ^ 0u))))), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), uint(5u))) ^ (0u)) ^ (1u)), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)) ^ (1u)))), 1u, 1u))))))))), ivec4(1), bvec4(true), _GLF_struct_5(bvec4(true), vec2(1.0), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(virtual_gid, _GLF_IDENTITY((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))), uint(uvec3(_GLF_IDENTITY((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u ^ ((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u, 0u))), 1u), (uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(virtual_gid, (1u | 1u), 1u), (uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3(virtual_gid, (1u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 1u), (uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u)), 0u))))))))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, (1u | 1u), 1u), _GLF_IDENTITY((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), 1u), clamp(_GLF_IDENTITY(uvec4((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), 1u), (uvec4((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), 1u)) - uvec4(0u, 0u, 0u, 0u)), uvec4((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), 1u), uvec4((uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u), 1u))))))))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, (1u | 1u), 1u), (uvec3(virtual_gid, (1u | 1u), 1u)) - uvec3(0u, 0u, 0u))))])))) | 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec4(bvec2(! (true), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false)))))))))))
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1)))), 1)) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))))), false, true, false))) && true), false, false, false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(int(false)), 0 | (true ? _GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(int(false)))), (true ? _GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(_GLF_IDENTITY(int(false), max(_GLF_IDENTITY(int(false), (_GLF_IDENTITY(int(false), clamp(int(false), int(false), int(false)))) - 0), int(false))))) + 0))) > (0 | (0 ^ 0))); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_6._f6.read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(59925))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(59925))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(59925, (_GLF_IDENTITY(59925, (true ? _GLF_IDENTITY(59925, (59925) ^ 0) : _GLF_FUZZED(_injected_loop_counter)))) | (59925)))))) / 1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(59925))))), 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     subgroupAll(false);
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-55.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))), 1.0, 0.0, 0.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-55.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))), 1.0, 0.0, 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-55.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))), 1.0, 0.0, 0.0))))).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.8)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) && true))))))), true))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + _GLF_IDENTITY(1, (1) | (1)), read_1 + 1, read_1 + 1), (true ? clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, read_1 + 1, read_1 + _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(packSnorm2x16(vec2(-68.72, -6.4)))))) == _GLF_struct_replacement_6._f6.read_2) + _GLF_IDENTITY(1, (1) - 0), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), (bool(_GLF_DEAD(false))) || false))))
      barrier();
     do
      {
       subgroupAll(_GLF_IDENTITY(true, false || (true)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0)))))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0)))))).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0)))))).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && true), true), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
}
