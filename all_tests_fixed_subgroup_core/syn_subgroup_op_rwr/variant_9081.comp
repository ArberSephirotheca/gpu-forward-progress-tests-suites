#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(803.991)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(803.991)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(803.991)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y)) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, determinant(mat4(1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)) > injectionSwitch.y)))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-63.17), (_GLF_FUZZED(-63.17)) - 0.0) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), (true ? float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-87.98)))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(3321.0719)), bool(false))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3022.1243)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + determinant(mat2(0.0, 1.0, length(0.0), 0.0))), 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED((974.439 - 51.78))), bool(false))) > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))) || false) || (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), true, true))))), false || (bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9547.0050))) > injectionSwitch.y), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.5, 6973.7940)), (_GLF_FUZZED(vec2(-6.5, 6973.7940))) / vec2(1.0, 1.0)))).y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.6))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))))), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false)))))), ((! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))), true, true, true)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))), true, true, true)))))))))), true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, false || (false))) && true), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))), false || ((_GLF_IDENTITY(false, false || (false)))))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false || ((_GLF_IDENTITY(false, false || (false)))), bool(bvec2(false || ((_GLF_IDENTITY(false, false || (false)))), true)))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(543.471, -963.805)))).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, true && (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))), min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y))), true && (! (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), min(injectionSwitch, injectionSwitch)).y))), true && (! (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8094.2954)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))))))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))).y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true)))))), false)))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false)) || false))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-34.44), _GLF_FUZZED(9203.1043)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) + subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && true)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(log(2.0), -57.87, mix(-6.9, -748.697, -3204.9453))) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))))), uint(uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u)))), 0u | (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u))))))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u)))), 0u | (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u)))), 0u | (_GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 1u, 0u)), 0u + (uint(uvec4(subgroup_id, 1u, 1u, 0u))))))))))), subgroup_id)) / 1u)) * subgroup_size), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id)) * subgroup_size), min(max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id)) * subgroup_size), max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u)))), min((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id, 1u))))), 1u, 1u, 0u))))), subgroup_id)) * subgroup_size))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1276.7013))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u + ((workgroup_base + subgroup_id * subgroup_size)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7.9))))), (min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u + (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size)))))))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-878.207)), bool(false))), injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(-6069.9310, -281.058, 494.659)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * cos(log(1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0)), max(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(-6069.9310, -281.058, 494.659)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * cos(log(1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(-6069.9310, -281.058, 494.659)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * cos(log(1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0)), (true ? vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(-6069.9310, -281.058, 494.659)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * cos(log(1.0))), 0.0, 0.0, 0.0)), 1.0, 0.0)) : _GLF_FUZZED(vec2(1339.4361, 4844.3608))))))) : _GLF_FUZZED(vec2(9141.4682, -62.81)))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), max(((workgroup_base + subgroup_id * subgroup_size)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), uint(4u))), ((workgroup_base + subgroup_id * subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u + ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))), min(~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u)))), ~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))))))))) << 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))) << 0u)) >> (0u & 28809u)), max(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size)))) | (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, length(0.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(15.49, 2.4, -4.7, -91.68, 0.4, -215.974, 193.057, 9.1, 1.0)) : _GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, length(0.0), 0.0, 1.0, 0.0), (true ? mat3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, length(0.0), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(4.5, 41.53, -1.7, 5.9, -4914.0907, 2270.8913, -5354.4607, 3278.9105, -68.05)))))))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.6)), float(1.0), bool(true)))))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))) * (injectionSwitch)))).x)))))) | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size), _GLF_IDENTITY(0u, (0u) - 0u) + ((workgroup_base + subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(106554u), (_GLF_IDENTITY(_GLF_FUZZED(106554u), clamp(_GLF_FUZZED(106554u), _GLF_FUZZED(106554u), _GLF_FUZZED(106554u)))) | (_GLF_FUZZED(_GLF_IDENTITY(106554u, (106554u) << 0u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0u)))) * 1u))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_id))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(106554u), (_GLF_IDENTITY(_GLF_FUZZED(106554u), clamp(_GLF_FUZZED(106554u), _GLF_FUZZED(106554u), _GLF_FUZZED(106554u)))) | (_GLF_FUZZED(_GLF_IDENTITY(106554u, (106554u) << 0u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0u)))) * 1u))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, ! (! (true))) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(106554u), (_GLF_IDENTITY(_GLF_FUZZED(106554u), clamp(_GLF_FUZZED(106554u), _GLF_FUZZED(106554u), _GLF_FUZZED(106554u)))) | (_GLF_FUZZED(_GLF_IDENTITY(106554u, (106554u) << 0u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(4950.1019, 37735)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0u)))) * 1u))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(106554u)))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_id)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(workgroup_id)))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), max(_GLF_IDENTITY(0u | (subgroup_size), _GLF_IDENTITY(min(0u | (subgroup_size), 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(min(0u | (subgroup_size), 0u | (subgroup_size)), uint(_GLF_IDENTITY(uvec2(min(0u | (subgroup_size), 0u | (subgroup_size)), 0u), (uvec2(min(0u | (subgroup_size), 0u | (subgroup_size)), 0u)) / uvec2(1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) | (subgroup_size), (0u | (subgroup_size)) | (0u | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED((true ? (subgroup_local_id ^ subgroup_size) : workgroup_id)))))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), max(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / (1u | 1u)), 0u, 0u)) | (_GLF_IDENTITY(0u, 1u * (0u)))), 1u, 0u), uvec3(0u, 1u, 0u))))) + ((workgroup_base + subgroup_id * subgroup_size)))))), (false ? _GLF_FUZZED(26707u) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size)))))), (~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(1608.9002) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0)), (false ? _GLF_FUZZED(1608.9002) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0))) * 1.0))), 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.1) : injectionSwitch.x))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-69.36) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-2443.2611)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), max(min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), max(min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))))))))))) - (0u | 0u))))))))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | 0u, clamp((subgroup_local_id + 1) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | 0u, 1u * ((subgroup_local_id + 1) | 0u)), (subgroup_local_id + 1) | 0u)))), (true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3621.1662)))))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))), ~ (~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))), _GLF_IDENTITY(uint(uvec3(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))), 0u, 0u)), clamp(uint(uvec3(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(min(mix(-45601, -71388, true), 53817)), min(_GLF_FUZZED(min(mix(-45601, -71388, true), 53817)), _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))))), 0u, 0u)), uint(uvec3(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))), 0u, 0u)), uint(uvec3(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(mix(-45601, -71388, true), 53817))))), 0u, 0u)))))))), _GLF_IDENTITY(4, (4) + 0), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bool(bvec2(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(39.41, 40.88)) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))), false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY(++ num_workgroup, 0u ^ (++ num_workgroup)))) : virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6182.8742, -164.283)) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | (_GLF_IDENTITY((read_1 + 1), ~ (_GLF_IDENTITY(~ ((read_1 + 1)), 0u | (~ ((read_1 + 1)))))))) | 0u), 0u + (read_1 + 1)) == read_2), (uint(read_1 + 1 == read_2)) / 1u)) | _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) * 1u)), clamp(~ (_GLF_IDENTITY(read_2, (read_2) * 1u)), ~ (_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, 1u)))), ~ (_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, (1u) | 0u))))))))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) * 1u)), clamp(~ (_GLF_IDENTITY(read_2, (read_2) * 1u)), ~ (_GLF_IDENTITY(read_2, (read_2) * 1u)), ~ (_GLF_IDENTITY(read_2, (read_2) * 1u))))))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) << 0u)))))) + 1, 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), _GLF_IDENTITY(min((4), (4)), ~ (~ (min((4), (4))))))))) / 1));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)) || false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true))), true, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), exp(0.0), determinant(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7391.2455), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-841.005 + -85.71))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(clamp(read_2, subgroup_id, subgroup_size)) : _GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(injectionSwitch.ss[0])))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) / 1.0, clamp((injectionSwitch[0]) / 1.0, (injectionSwitch[0]) / 1.0, (injectionSwitch[0]) / 1.0))), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-8271.0420), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-36.03)), bvec2(true, false)))).y, (true ? injectionSwitch.y : _GLF_FUZZED(77.04)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
