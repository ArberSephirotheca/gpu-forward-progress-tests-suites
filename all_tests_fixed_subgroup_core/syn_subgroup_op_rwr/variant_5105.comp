#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(workgroup_size, 0u, 0u, 1u)), ~ (~ (uint(uvec4(workgroup_size, 0u, 0u, 1u)))))), _GLF_IDENTITY(min(workgroup_size, workgroup_size), min(min(workgroup_size, workgroup_size), _GLF_IDENTITY(min(workgroup_size, workgroup_size), 0u + (min(workgroup_size, workgroup_size)))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | 0u, ~ (~ ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | 0u)))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) | ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) | 0u), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(num_workgroup))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uvec3(uint(subgroup_id), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), subgroup_id))) | 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id))) | 0u)), ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id))) | 0u))) << 0u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), max(uint(uint(subgroup_id)), uint(uint(subgroup_id))))), subgroup_id))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id))) | 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id))) | 0u)), 0u, 0u)), 0u + (uint(uvec3((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id))))) | 0u)), 0u, 0u))))))) - 0u))), subgroup_id))) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id)))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), 0u + (~ (workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1))) ^ 0))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) ^ 0u)), subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size))), min(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) ^ 0u)), subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) ^ 0u)), subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size))))), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base)))), ~ (_GLF_IDENTITY(~ (max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 1u, 1u))), (subgroup_local_id + 1))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base))))), clamp(~ (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base))))), ~ (max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base))))), ~ (max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base))))))))))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)))), (~ (~ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))))) >> 0u)), _GLF_IDENTITY(0u | (next_virtual_gid), (0u | (next_virtual_gid)) << 0u))))], uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0))[0], _GLF_FUZZED((98.08 * 7.1))), vec2(_GLF_FUZZED(0.3), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(97505, -13207))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(97505, -13207))))).y)) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_local_id) : virtual_gid)), (virtual_gid) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))], 1u * (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))]))) - 0u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, false || (false))))), true && (bool(bool(! (_GLF_IDENTITY(false, false || (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-445.824, -24.76)) : (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(log2(vec2(-354.478, -4.5))))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-445.824, -24.76)) : (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(log2(vec2(-354.478, -4.5))))).y, false)))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))) || false), bool(bool(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u)) + 0u) == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size)))) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size)))) / 1u))))) >> 0u) >> 0u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u + (read_1)) + 1 == read_2), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec4(uint(read_1 + 1 == read_2), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), 0u, 0u))), uint(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, (read_2) - 0u)))))), clamp(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2)), max(min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2)), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u | (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))))))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))), bool(bvec4(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))), true, true, false)))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u, _GLF_IDENTITY(uint(uvec4((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (uint(uvec4((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))) >> 0u))) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0) == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(36843u)))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))))), uint(uint((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(36843u)))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))))))))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(37977u) : read_1)) + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(37977u) : read_1)) + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))))) ^ (1u ^ 1u)) ^ 0u) + 1), _GLF_IDENTITY(1u * ((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1), max(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1), _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1), (true ? uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1) : _GLF_FUZZED(read_2))))))), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) * 1u))) << 0u))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_IDENTITY(_GLF_FUZZED(read_1), min(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) * 1u))) << 0u))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_IDENTITY(_GLF_FUZZED(read_1), min(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + _GLF_IDENTITY(1, (1) << 0))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1))))) >> 0u))) + 1), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u + (uint(read_1 + 1 == read_2) + 1))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), ~ (~ (_GLF_FUZZED(next_virtual_gid)))) : (uint(read_1 + 1 == read_2) + 1))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), 0u | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))), false || (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))))))) + 0u), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (read_2))))))))))) + 1), 1u * ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | _GLF_IDENTITY((read_1), ((read_1)) | ((read_1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (read_1), clamp(0u | (read_1), 0u | (read_1), 0u | (read_1))), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | _GLF_IDENTITY((read_1), max(_GLF_IDENTITY((read_1), uint(uvec3(_GLF_IDENTITY((read_1), ((read_1)) | 0u), 0u, 1u))), (read_1))), uint(uvec3(0u | (read_1), 0u, 0u))))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (read_1), 0u, 0u)))))), 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | (read_1)))))) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(atomicMax(workgroup_base, read_2)) : (read_1)))) | ((read_1)))), (_GLF_IDENTITY((0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(atomicMax(workgroup_base, read_2)) : (read_1)))) | ((read_1)))), (false ? _GLF_FUZZED(num_workgroup) : (0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(atomicMax(workgroup_base, read_2)) : (read_1)))) | ((read_1))))))) << 0u) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (read_1), 0u, 0u))))))))))) << 0u) + 1 == read_2) + 1))) | _GLF_IDENTITY(0u, (1u ^ 1u) | (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, 0u ^ (0u))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), read_1, read_1)) + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2)))), (max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), read_1, read_1)) + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), bool(bool(read_1 + 1 == read_2))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(118510u) : (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1))), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1))), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1))), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1))), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_1) : read_1)))) + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(_GLF_IDENTITY(read_1, 0u | (read_1))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) * 1))), (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u))) == read_2, bool(bool(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, max(read_1, read_1)), read_1)) + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)))) == read_2))))))) : _GLF_FUZZED(read_1)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1))))))) >> 0u))) + 1), 1u * (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2) + 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1), min(false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1), false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1))), false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1), (true ? false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1) : _GLF_FUZZED(read_1))))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)) == read_2))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(read_1 + 1, 0u), clamp(uvec2(read_1 + 1, 0u), uvec2(read_1 + 1, 0u), uvec2(read_1 + 1, 0u)))))))) == read_2, bool(bool(read_1 + 1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uvec2(read_1 + 1, 0u), clamp(uvec2(read_1 + 1, 0u), uvec2(read_1 + 1, 0u), uvec2(read_1 + 1, 0u)))))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))) || false)))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) >> 0u)) == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size))), bool(bool(read_1 + 1 == read_2)))))))), ~ (~ ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) >> 0u)) == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size))), bool(bool(read_1 + 1 == read_2))))))))))))) + 0u), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (read_2))))))))))) + 1), 1u * ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | _GLF_IDENTITY((read_1), 0u | ((read_1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (read_1), 0u, 0u)))), (clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (read_1), 0u, 0u))))) * 1u)))), 1u * ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1)))))), 0u, 0u))))))))) << 0u) + 1 == read_2) + 1))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(1u, (1u) ^ 0u) ^ 1u) | (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), min(read_1, read_1)), read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))))) + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), _GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), read_1 + 1)) == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, false)))))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, true, false)), false || (bool(bvec4(read_1 + 1 == read_2, true, true, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, uint(uint(0u)))))), (1u ^ 1u) | ((false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, uint(uint(0u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + 1)), (1u * ((uint(read_1 + 1 == read_2) + 1))) << 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, next_virtual_gid)) : read_1 + 1)) == read_2) + 1))) | 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) + 1), 1u * ((uint(read_1 + 1 == read_2) + 1))) | 0u) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))), bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))) ^ 0u) + 1), _GLF_IDENTITY(1u * ((uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1))), (1u * ((uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2) + 1))) << 0u)) | 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u), read_1 + 1)) == read_2))))))) : _GLF_FUZZED(read_1))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + _GLF_IDENTITY(1, max(1, 1)))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, bool(bool(read_1 + 1 == read_2))))))) : _GLF_FUZZED(read_1))))) >> 0u))) + 1), 1u * (_GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), (false ? _GLF_FUZZED(next_virtual_gid) : (uint(read_1 + 1 == read_2) + 1))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, 1 * (1)))), (_GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, 1 * (1)))), (uint(uint(read_1 + _GLF_IDENTITY(1, 1 * (1))))) | (uint(uint(read_1 + _GLF_IDENTITY(1, 1 * (1))))))) / (0u ^ 1u))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2))))))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))))))) + 0u), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (read_2))))))))))) + 1), 1u * ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), _GLF_IDENTITY(uint(uvec3(0u | (read_1), 0u, 0u)), (0u | 0u) ^ (uint(uvec3(0u | (read_1), 0u, 0u))))))))), 1u * ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), clamp(_GLF_IDENTITY(0u | (read_1), (0u | (read_1)) ^ 0u), 0u | (read_1), _GLF_IDENTITY(0u | (read_1), uint(uvec3(0u | (read_1), 0u, 0u))))))))) << 0u) + 1 == read_2) + 1))) | _GLF_IDENTITY(0u, (1u ^ 1u) | (_GLF_IDENTITY(0u, (0u) | 0u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u)))) | (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u)))))), 4, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) | (_GLF_IDENTITY(4, (4) >> 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec3(bvec2((_GLF_DEAD(false)), true), true))))), false, _GLF_IDENTITY(true, ! (! (true)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), (bool(bvec2((_GLF_DEAD(false)), false))) || false)), false, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))), uint(uvec3(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))), clamp(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(-16512)))), _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))), min(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))), read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) / 1)), 1, 0, 0)))))))))))), read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(92162))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0)))))))))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec2(2u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) + 0u), 0u))) == read_2) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
