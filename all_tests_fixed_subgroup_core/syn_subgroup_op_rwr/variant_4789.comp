#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)))).x, float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), 1.0, 0.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x, float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) - 0.0)))))), 1.0, 0.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(min(6.3, 9.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false))))) || false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) - 0u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(949.434), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-579.078)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(949.434), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-579.078)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y), true, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(983.665, -2.7)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(983.665, -2.7)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8227.3378, (_GLF_IDENTITY(-8227.3378, float(vec2(-8227.3378, 0.0)))) * 1.0)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8227.3378, (_GLF_IDENTITY(-8227.3378, float(vec2(-8227.3378, 0.0)))) * 1.0)))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8227.3378, (_GLF_IDENTITY(-8227.3378, float(vec2(-8227.3378, 0.0)))) * 1.0)))) > injectionSwitch.y))), false)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))), false, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))), false, true, true))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : injectionSwitch)))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))).y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6707.3907))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-482.284), _GLF_FUZZED(7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(13.18))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-482.284), _GLF_FUZZED(7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, length(0.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(8.5, -49.29, -9.4, 1.7, -2868.3790, 56.82, 442.038, -80.79)) : mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, length(0.0), 1.0, 1.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bool(bool(bvec4(true, true, false, false)))))), (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((false ? injectionSwitch : injectionSwitch)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) + 0)) | (0 << _GLF_IDENTITY(int(6), int(6)))), 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) ^ _GLF_IDENTITY(0, (0) >> (0 | 0))));
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(72397))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(72397)))) * 1)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) / 1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), true && ((_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2)))))))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, 0u | (_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1)), 0u, 1u, 1u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, 0u | (_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1)), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, 0u | (_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1)), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, 0u | (_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1)), 0u, 1u, 1u))))) == read_2))))))))) + 1) >> 0u), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec2((read_1 + 1 == read_2), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))))))), false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) / 1u))))))), false, true, true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) + 1) << _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u))), 1u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))), 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u))))) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), clamp(0u, 0u, 0u)), 1u, 1u)))), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 1u, 1u)), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, (1u) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + sqrt(0.0)))), 1u), (max(_GLF_IDENTITY(1u, (1u) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - 0.0))))) + sqrt(0.0)))), 1u)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) + 0u)), 1u, 1u)))) / uvec3(1u, 1u, 1u))), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(0u + (~ (1u)), max(0u + (~ (1u)), 0u + (~ (1u)))))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(0u + (~ (1u)), max(0u + (~ (1u)), 0u + (~ (1u)))))), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, subgroup_id, workgroup_base)) : (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(0u + (~ (1u)), max(0u + (~ (1u)), 0u + (~ (1u)))))))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))), ~ (~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))))))), max(uvec3(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), uvec3(uvec4(~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), 0u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))), ~ (~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))))))), max(uvec3(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u)))))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), uvec3(uvec4(~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), 0u + (~ (1u))))))))), 0u))))))))) >> uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (clamp(0u, 0u, 0u)))), 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))) | (_GLF_IDENTITY(~ (1u), 0u + _GLF_IDENTITY((~ (1u)), ((~ (1u))) / 1u)))))))))), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ read_2)) : 0u))), max(clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ read_2)) : 0u))), clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ read_2)) : 0u)))))), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, (1u) - 0u))), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), (uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, _GLF_IDENTITY(1u, (1u) + 0u))), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u)) | 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), 0u)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), 0u)), 1u, 1u))) | 0u), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(167627u) : 0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u))) | (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)))), uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)) * uvec3(1u, 1u, 1u))) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))))) << 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (_GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uvec4(clamp(0u, 0u, 0u), 0u, 0u, 1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), clamp(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), _GLF_IDENTITY(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), _GLF_IDENTITY(max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)), clamp(_GLF_IDENTITY(max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)), min(max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)), max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)), max(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))), 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u)) << 0u))), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) + 0u))), clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u))), 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u))), 1u, 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), max(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u))) * 1u))), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), clamp(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))), clamp(0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))), (true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))), 1u, 1u)), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 1u * (1u))))), 1u)))) - 0u))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uvec3(clamp(0u, 0u, 0u), 0u, 1u)))), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (0u | 0u)), 0u)), 1u, 1u)), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) * 1u))), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))))), clamp(0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u)), clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_2) : 1u)), 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(next_virtual_gid))))), 1u)), 1u, 1u))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) : _GLF_FUZZED(workgroup_base))))), 1u, 1u)), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << (0u | 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (clamp(0u, 0u, 0u)))), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u))), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (clamp(0u, 0u, 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) << 0u))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)) << uvec3(0u, 0u, 0u))), 1u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)) - uvec3(0u, 0u, 0u))), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))) : _GLF_FUZZED(workgroup_id)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), (~ (uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u))) >> uvec3(0u, 0u, 0u))))), 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (~ (uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) / uvec4(1u, 1u, 1u, 1u)))))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u))))), clamp(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))), 0u, 1u))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u))))), (uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(0u, 0u, 1u))), (~ (~ (uvec3(0u, 0u, 1u)))) ^ uvec3(0u, 0u, 0u))))) * 1u)))))), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))), max((false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)), 1u, 1u)))))))))) | 0u)), 0u)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, bool(bvec2(true, false))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(3.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(0.7) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(3.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(0.7) : injectionSwitch.y)))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
