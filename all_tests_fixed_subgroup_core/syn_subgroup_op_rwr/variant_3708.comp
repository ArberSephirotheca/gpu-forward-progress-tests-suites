#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y = num_workgroup;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false))))))))
      return;
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(! (false))) && true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(0.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), ! (! (bool(_injected_loop_counter != 0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(vec2(-66.75, -219.065).t)), bool(_GLF_IDENTITY(false, true && (false))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            break;
           return;
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true))))))))
      return;
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)) * 1.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), abs(1.0), sin(0.0)), (true ? mat3(injectionSwitch.y, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), abs(1.0), sin(0.0)) : _GLF_FUZZED(mat3(-340.654, 163.363, -35.69, -0.5, -15.36, -2.6, -30.24, 187.097, 9.0))))), mix(float(float(_GLF_IDENTITY(mat3(injectionSwitch.y, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), abs(1.0), sin(0.0)), _GLF_IDENTITY((true ? mat3(injectionSwitch.y, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), abs(1.0), sin(0.0)) : _GLF_FUZZED(mat3(-340.654, 163.363, -35.69, -0.5, -15.36, -2.6, -30.24, 187.097, 9.0))), ((true ? mat3(injectionSwitch.y, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), abs(1.0), sin(0.0)) : _GLF_FUZZED(mat3(-340.654, 163.363, -35.69, -0.5, -15.36, -2.6, -30.24, 187.097, 9.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(3.9)), bool(false)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(1704.7415)))) * 1.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, log(1.0), 0.0)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) >> 0)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     continue;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid))));
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY((0), ((1 & 1) | 1) * (_GLF_IDENTITY((0), int(ivec2((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))) + ((_GLF_IDENTITY(0, (0) >> (0 & 75596))))))) << 0)) ^ 0)), _GLF_IDENTITY(0 ^ (int(0)), min(0 ^ (int(0)), 0 ^ (int(0))))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY((0), ((1 & 1) | 1) * (_GLF_IDENTITY((0), int(ivec2((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))) + ((_GLF_IDENTITY(0, (0) >> (0 & 75596))))))) << 0)) ^ 0)), _GLF_IDENTITY(0 ^ (int(0)), min(0 ^ (int(0)), 0 ^ (int(0)))))))), 0 + (~ (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY((0), ((1 & 1) | 1) * (_GLF_IDENTITY((0), int(ivec2((_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))) + ((_GLF_IDENTITY(0, (0) >> (0 & 75596))))))) << 0)) ^ 0)), _GLF_IDENTITY(0 ^ (int(0)), min(0 ^ (int(0)), 0 ^ (int(0)))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))) > 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) | 0))) + (_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)]) | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)]) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(87054) : 4)), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(87054) : 4))) / 1)) >> 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(87054) : 4))) >> 0)) >> 0), 64, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), (_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))) | (ivec2(0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z = read_1;
 for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, 0 + (1)), (0 << _GLF_IDENTITY(int(2), int(2))), 1))) << _GLF_IDENTITY(int(6), int(6))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | 0))))), int(ivec3(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY((6) << (1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1), (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1)) | (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1))))))) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), (0) / 1)) - 0)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)), int(ivec4(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), 1 * (int(6)))))), int(ivec4(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4))))), 0, 0)))) ^ 0)), 1, 1, 1))))), int(6))))))), clamp((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY((6) << (1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1), (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1)) | (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1))))))) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), (0) / 1)) - 0)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)), int(ivec4(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), 1 * (int(6)))))), int(ivec4(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4))))), 0, 0)))) ^ 0)), 1, 1, 1))))), int(6))))))), (1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY((6) << (1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1), (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1)) | (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1))))))) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), (0) / 1)) - 0)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)), int(ivec4(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), 1 * (int(6)))))), int(ivec4(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4))))), 0, 0)))) ^ 0)), 1, 1, 1))))), int(6))))))), (1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY((6) << (1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1), (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1)) | (false ? _GLF_FUZZED(clamp(51823, -42075, -60848)) : (6) << (1 ^ 1))))))) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), (0) / 1)) - 0)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)), int(ivec4(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), 1 * (int(6)))))), int(ivec4(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4))))), 0, 0)))) ^ 0)), 1, 1, 1))))), int(6)))))))))), 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)), ~ (_GLF_IDENTITY(~ ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), clamp(~ ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ _GLF_IDENTITY(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), clamp(((true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(89914), ~ (~ (_GLF_FUZZED(89914))))))), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), _GLF_IDENTITY(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), _GLF_IDENTITY(max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))), (_GLF_IDENTITY(max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))), clamp(_GLF_IDENTITY(max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))), (false ? _GLF_FUZZED(-26124) : max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))))), _GLF_IDENTITY(max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))), (max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))))) | (max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1)))))), max(((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))), ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, 0 | (89914)))) * 1))))))) - 0)))), ~ ((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))), clamp(~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)), 0 + (_GLF_IDENTITY((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)), max((true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)), (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))))))) | 0))), int(_GLF_IDENTITY(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), 0, 0, 0)))))))) | 0))), 0, 1, 1), (ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))) | 0, (false ? _GLF_FUZZED(bitCount(84534)) : (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (6) >> 0), (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1), 0 | (_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 & -80220))))))))) | 0))))), 0, 1, 1)) | (ivec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))) | 0)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))) | 0))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))) | 0))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))) | 0)))) | 0))))))), 0, 1, 1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(89914, 0 ^ (89914))), (_GLF_FUZZED(89914)) * 1))))), (false ? _GLF_FUZZED(-13337) : ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), clamp((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))), ((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))) | ((_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))))), (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1)))))) - 0)) | (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * _GLF_IDENTITY(1, (1) / 1)))))))))), ~ (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) * 1))))))))), 0 ^ (~ (~ (_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)), (false ? _GLF_FUZZED(-71511) : (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) ? _GLF_FUZZED(-71511) : (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), _GLF_IDENTITY(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), clamp(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6))))))))))) >> 0) : _GLF_FUZZED(89914))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) ? _GLF_FUZZED(-71511) : (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), _GLF_IDENTITY(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), clamp(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6))))))))))) >> 0) : _GLF_FUZZED(89914))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-19115) : (_GLF_IDENTITY((true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) ? _GLF_FUZZED(-71511) : (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), _GLF_IDENTITY(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), clamp(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6))))))))))) >> 0) : _GLF_FUZZED(89914))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY((true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) ? _GLF_FUZZED(-71511) : (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), _GLF_IDENTITY(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), clamp(int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6)))))))), int(int(_GLF_IDENTITY((6), 1 * (_GLF_IDENTITY((6), int(int((6))))))))))) >> 0) : _GLF_FUZZED(89914))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, _GLF_IDENTITY((89914), ((89914)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(89914, (89914) | (89914)), (89914) - 0))) * 1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1))))), 1 * ((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1)))))))))) | (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, (_GLF_IDENTITY(89914, (89914) - 0)) - 0))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71535)))))))))), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914)), ((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914))) | 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), max(_GLF_IDENTITY((6), clamp((6), _GLF_IDENTITY((6), 0 | ((6))), (6))), _GLF_IDENTITY((6), 0 ^ ((6))))) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(89914, min(89914, _GLF_IDENTITY(89914, (89914) - 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), (-89343 & 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), 0, (_GLF_IDENTITY(0 ^ 1, int(ivec2(0 ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_FUZZED(89914)))))), 0, (0 ^ 1), 0)))))))), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) - 0))), 1 * (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))))), _GLF_IDENTITY(1, int(int(1))), 1, 0))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) | (_GLF_FUZZED(89914))))))))) ^ 0)) | (_GLF_IDENTITY(0 & 62572, (0 & 62572) << 0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, _GLF_IDENTITY((89914), ((89914)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(89914, (89914) | (89914)), (89914) - 0))) * 1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1))))), 1 * ((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1)))))))))) | (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, (_GLF_IDENTITY(89914, (89914) - 0)) - 0))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71535)))))))))), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914)), ((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914))) | 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), max(_GLF_IDENTITY((6), clamp((6), _GLF_IDENTITY((6), 0 | ((6))), (6))), _GLF_IDENTITY((6), 0 ^ ((6))))) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(89914, min(89914, _GLF_IDENTITY(89914, (89914) - 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), (-89343 & 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), 0, (_GLF_IDENTITY(0 ^ 1, int(ivec2(0 ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_FUZZED(89914)))))), 0, (0 ^ 1), 0)))))))), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) - 0))), 1 * (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))))), _GLF_IDENTITY(1, int(int(1))), 1, 0))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) | (_GLF_FUZZED(89914))))))))) ^ 0)) | (_GLF_IDENTITY(0 & 62572, (0 & 62572) << 0))))))), min(_GLF_IDENTITY(6, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, _GLF_IDENTITY((89914), ((89914)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(89914, (89914) | (89914)), (89914) - 0))) * 1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1))))), 1 * ((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1)))))))))) | (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, (_GLF_IDENTITY(89914, (89914) - 0)) - 0))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71535)))))))))), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914)), ((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914))) | 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), max(_GLF_IDENTITY((6), clamp((6), _GLF_IDENTITY((6), 0 | ((6))), (6))), _GLF_IDENTITY((6), 0 ^ ((6))))) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(89914, min(89914, _GLF_IDENTITY(89914, (89914) - 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), (-89343 & 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), 0, (_GLF_IDENTITY(0 ^ 1, int(ivec2(0 ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_FUZZED(89914)))))), 0, (0 ^ 1), 0)))))))), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) - 0))), 1 * (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))))), _GLF_IDENTITY(1, int(int(1))), 1, 0))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) | (_GLF_FUZZED(89914))))))))) ^ 0)) | (_GLF_IDENTITY(0 & 62572, (0 & 62572) << 0))))))), _GLF_IDENTITY(6, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, _GLF_IDENTITY((89914), ((89914)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(89914, (89914) | (89914)), (89914) - 0))) * 1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1))))), 1 * ((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1)))))))))) | (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, (_GLF_IDENTITY(89914, (89914) - 0)) - 0))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71535)))))))))), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914)), ((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914))) | 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), max(_GLF_IDENTITY((6), clamp((6), _GLF_IDENTITY((6), 0 | ((6))), (6))), _GLF_IDENTITY((6), 0 ^ ((6))))) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(89914, min(89914, _GLF_IDENTITY(89914, (89914) - 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), (-89343 & 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), 0, (_GLF_IDENTITY(0 ^ 1, int(ivec2(0 ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_FUZZED(89914)))))), 0, (0 ^ 1), 0)))))))), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) - 0))), 1 * (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))))), _GLF_IDENTITY(1, int(int(1))), 1, 0))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) | (_GLF_FUZZED(89914))))))))) ^ 0)) | (_GLF_IDENTITY(0 & 62572, (0 & 62572) << 0))))))))), _GLF_IDENTITY(6, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, _GLF_IDENTITY((89914), ((89914)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(89914, (89914) | (89914)), (89914) - 0))) * 1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1))))), 1 * ((~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) >> 0), (_GLF_FUZZED(_GLF_IDENTITY(89914, (89914) - 0))) * 1)))))))))) | (~ (_GLF_IDENTITY(6, (true ? 6 : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(_GLF_IDENTITY(89914, (_GLF_IDENTITY(89914, (89914) - 0)) - 0))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71535)))))))))), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, _GLF_IDENTITY((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914)), ((true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6) >> 0, 0 | ((6) >> 0))) : _GLF_FUZZED(89914))) | 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((6), max(_GLF_IDENTITY((6), clamp((6), _GLF_IDENTITY((6), 0 | ((6))), (6))), _GLF_IDENTITY((6), 0 ^ ((6))))) >> 0) : _GLF_FUZZED(89914)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(89914, min(89914, _GLF_IDENTITY(89914, (89914) - 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914)))), (-89343 & 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), 0 | (_GLF_FUZZED(89914)))))), 0, (_GLF_IDENTITY(0 ^ 1, int(ivec2(0 ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_FUZZED(89914)))))), 0, (0 ^ 1), 0)))))))), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) - 0))), 1 * (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))))), _GLF_IDENTITY(1, int(int(1))), 1, 0))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_FUZZED(89914))))), (~ (_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, (6) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(89914), (_GLF_FUZZED(89914)) | (_GLF_FUZZED(89914))))))))) ^ 0)) | (_GLF_IDENTITY(0 & 62572, (0 & 62572) << 0))))))))))) << 0), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))), max(~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2))))))).x))) ^ 0u)))], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 4, 64, 4);
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), max(0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) ^ 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w = read_2;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) - (0u ^ 0u)), 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(read_2))), _GLF_IDENTITY(0u, (0u) | (0u))))))) + 0u), _GLF_IDENTITY(0u, 0u + (0u))))))))), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))), 0u)))))))) | uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) - (0u ^ 0u)), 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(read_2))), _GLF_IDENTITY(0u, (0u) | (0u))))))) + 0u), _GLF_IDENTITY(0u, 0u + (0u))))))))), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))), 0u)))))))) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) - (0u ^ 0u)), 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(read_2))), _GLF_IDENTITY(0u, (0u) | (0u))))))) + 0u), _GLF_IDENTITY(0u, 0u + (0u))))))))), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), uint(uvec3(~ (_GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u))))))), 0u, 0u, 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) ^ uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))), 0u)))))))) | uvec4(0u, 0u, 0u, 0u)))))).x, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x))) / 1u)))], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) | uvec4(0u, 0u, 0u, 0u))[_GLF_IDENTITY(0, (1 ^ 1) ^ (0))], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[1], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[2], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[3])).w, ! (! (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1) >> 0u) == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[0], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[1], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[2], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[3])).w)))) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (ivec3((1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), int(ivec2(int(_GLF_IDENTITY(ivec3((1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec3((1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)))), max(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-24614) : (1))), (1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (ivec3((1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), int(ivec2(int(_GLF_IDENTITY(ivec3((1), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec3(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), _GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), clamp((1), (1), (1))))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)))), max(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-24614) : (1))), (1))) : _GLF_FUZZED(53766))) >> _GLF_IDENTITY(0, 0 | (0))), 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (! (false))))), false || (false)));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && true)) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))) >> _GLF_IDENTITY(int(6), int(6))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))));
                  }
                 return;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, false, false)))) && true)) && true)), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) != 0, _GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), false || ((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), false || ((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), true && (! (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), false || ((_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))) || false)), false, false))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(99.12), _GLF_FUZZED(75.06)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1 == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))))), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w), clamp((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w), 0u ^ ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))), (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))) >> 0u)) + 1, 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
          break;
         return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), int(int(0)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
      }
     subgroupAll(true);
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(9491.2098)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), false || (bool(bvec4(_GLF_DEAD(false), true, false, true))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bvec4(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), true, true, false))))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
