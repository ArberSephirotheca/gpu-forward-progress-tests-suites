#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, -40.09))), (false ? _GLF_FUZZED((vec2(-2.9, 1824.1236) + (true ? vec2(-4594.8405, -8.5) : vec2(-1.5, -89.28)))) : (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, -40.09)))))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) < injectionSwitch.y)), false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(-0.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))))))), true && ((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))))))))) && true), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true)))))), bool(bvec2(bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(2.6), (_GLF_FUZZED(2.6)) - 0.0), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true)))))), false)))), ! (! (! (_GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))]), mix(float(_GLF_FUZZED(33.17)), float(_GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))]), min(max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))]), _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))]), float(vec3(max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))]), 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)))))))) || (true))))), ! (! (bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2442.7040)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)))))))) || (true))))))))), false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false), true, true, true))) || false, ! (! ((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))) || false)) || false), true, true, true))) || false))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true)))) || false)))))), true, true, true))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), max(uint(6u), uint(6u))), 0u | (uint(6u))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), 0u | (uint(6u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), 0u | (uint(6u)))) | 0u))), 0u + (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), max(uint(6u), uint(6u))), 0u | (uint(6u)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) * (workgroup_size)), min(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size))) | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size))) | (workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true), true))))), (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 1u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), subgroup_id))))) | (subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(994.189)), bool(false))) : _GLF_FUZZED(dot(9.5, -60.72)))), injectionSwitch[1])).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true, _GLF_IDENTITY(true, true && (true)), true)))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true, true, true)))), true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4732.7994, -34.86)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(false)))))))), ! (! (_GLF_IDENTITY(false, true && (false))))))) && true) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, cos(sqrt(0.0)), 0.0)), (false ? _GLF_FUZZED(6682.6686) : float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, cos(sqrt(0.0)), 0.0))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false)))))
      return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)))) || false), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false, true, true), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true, true), false)))))))) || false), true))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y)))) && true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5095.2079), _GLF_FUZZED(-22.68)), bvec2(false, false)))))[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), max(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), clamp(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))))))), ~ (~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (false ? _GLF_FUZZED(-13295) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true, true, true))) ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(4.9), max(_GLF_FUZZED(4.9), _GLF_FUZZED(4.9))) : injectionSwitch.x)) : _GLF_FUZZED(-930.339))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))).y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(_GLF_IDENTITY(~ (read_1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (read_1), (_GLF_IDENTITY(~ (read_1), ~ (~ (~ (read_1))))) | (~ (read_1)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), ~ (~ (~ (read_1)))), (~ (read_1)) | (~ (read_1)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_1), (~ (read_1)) | (~ (read_1)))), ((_GLF_IDENTITY(~ (read_1), (~ (read_1)) | _GLF_IDENTITY((~ (read_1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : (~ (read_1))))))) * 1u))))), _GLF_IDENTITY(~ _GLF_IDENTITY((read_1), ((read_1)) ^ 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), clamp(uint(uint(read_1)), uint(uint(read_1)), uint(uint(read_1))))), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u))), (uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), clamp(uint(uint(read_1)), uint(uint(read_1)), uint(uint(read_1))))), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, exp(0.0), 1.0, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), mat3(1.0) * (mat3(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, exp(0.0), 1.0, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))))) & 1u)))) | (uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1)), clamp(uint(uint(read_1)), uint(uint(read_1)), uint(uint(read_1)))), (_GLF_IDENTITY(uint(uint(read_1)), clamp(uint(uint(read_1)), uint(uint(read_1)), uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) / 1u))))) / 1u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u))))))))), 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), _GLF_IDENTITY(uint(uvec4(~ (read_1), 0u, 0u, 1u)), 0u ^ (uint(uvec4(~ (read_1), 0u, 0u, 1u))))), clamp(~ (read_1), ~ (read_1), ~ (read_1))), 0u)), (uint(uvec2(_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (read_1))), 0u))) << 0u), uint(uvec2(_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (read_1))), 0u))))))))) + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bool(! (_GLF_IDENTITY((false), true && ((false))))))))))), true && (! (false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), true), false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bool(! (_GLF_IDENTITY((false), true && ((false))))))))))), true && (! (false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), true), false))))))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? read_2 : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | (_GLF_FUZZED(virtual_gid)))), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))), (1u ^ 0u), 1u))), (_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? read_2 : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))), (1u ^ 0u), 1u)))) | 0u), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (! (bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))), true, false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), _GLF_IDENTITY(uint(uint((read_1 + 1))), clamp(uint(uint((read_1 + 1))), uint(uint((read_1 + 1))), uint(uint((read_1 + 1)))))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) >> 0u))))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))))))))))), false, true), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))))))))))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))))))))))), false, true), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), bool(bvec3(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false, false))), false, false, true)))))))))))), false, true))))))))))))))) + 1, (false ? _GLF_FUZZED(clamp(subgroup_id, usubBorrow(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), ~ (~ (uint(uint(workgroup_base)))))), 160125u, subgroup_id), _GLF_IDENTITY(uint(424.889), (uint(424.889)) | 0u))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? read_2 : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch))), ((true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? read_2 : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) ^ 0u)), (1u ^ 0u), 1u))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false)))), true, false))))), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true, false))))), ((_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true, false)))))) || false), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) >> 0u), (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))) | (1)) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(39666) : 1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false)), true, false)))), bool(bvec2(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(39666) : 1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false)), true, false)))), false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) << 0)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))))) * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(abs(71.49)) : injectionSwitch.y)))), false)), true, false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) << 0)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), 0u | (_GLF_IDENTITY(uint(1u), 0u + (uint(1u))))))) * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0))).y)), false)), true, false)))))))))))))))))) + 1, min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), uint(uvec3(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u), (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u), (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), min(true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u), (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u), (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))))))), (1u ^ 0u), 1u))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), false || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))) >> 0) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_base) : read_2))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), false)))) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, min(read_1, read_1)), 1u))) + 1) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * _GLF_IDENTITY((read_2), 0u ^ ((read_2)))), read_2)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)), true, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)), min(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))) == read_2, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), false)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | 0u) + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))), false || (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uvec2(3u, 1u)))) | 0u)), uint(3u)))) == read_2, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y)), false)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 0u))) + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(1u * (read_2), clamp(1u * (read_2), 1u * (read_2), _GLF_IDENTITY(1u * (read_2), (1u * (read_2)) | 0u)))), read_2)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false)))))))))))))))))), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_size) : read_2)), uint(uvec3(_GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(read_2, _GLF_IDENTITY(read_2, (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch))), 0u | ((true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(read_2, _GLF_IDENTITY(read_2, (read_2) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))))), (1u ^ 0u), 1u))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false), false))))))))), false || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), max(_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | ((read_1 + 1))), (read_1 + 1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))) || false))), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (0u ^ 0u) + (uint(3u)))))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), 0u ^ ((read_1 + 1))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), min(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), 0u ^ (_GLF_IDENTITY((read_1 + 1), min(_GLF_IDENTITY((read_1 + 1), max((read_1 + 1), (read_1 + 1))), (read_1 + 1))))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))))), ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) | 0u)) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) | 0u)) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) << 0u)) - 0u)), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 0u))) + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 1u * (read_2)), read_2)), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_IDENTITY(true, (true) || false), false))))))))))))))))))) | 0u) + 1, uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, _GLF_IDENTITY((true ? read_2 : _GLF_FUZZED(virtual_gid)), ~ (~ ((true ? read_2 : _GLF_FUZZED(virtual_gid)))))) : _GLF_FUZZED(_GLF_IDENTITY(packUnorm2x16(injectionSwitch), (packUnorm2x16(injectionSwitch)) | 0u)))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(subgroup_size))) ^ 0u), 1u))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec2(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u)), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)), bool(bvec3(bool(bvec4(read_1 + _GLF_IDENTITY(1, 0 + (1)) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false)), true, false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(vec3(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))), sin(0.0), 0.0)), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), float(vec3(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))), sin(0.0), 0.0))) / 1.0)))), false)), bool(bvec3(bool(bvec4(read_1 + 1 == read_2, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, (3u) << 0u), 3u, 3u))), uint(3u)))) : _GLF_FUZZED(164742u), (true ? _GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, (3u) << 0u), 3u, 3u))), uint(3u)))) : _GLF_FUZZED(164742u)) >> 0u))) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) - 0u) == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) + 0) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)), (read_1 + _GLF_IDENTITY(1, (1) | (1))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), uint(3u)))) == read_2, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) | (1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))))))))))), false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-12506) : 1))) | (1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true)))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) | (1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))))))))))), false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-12506) : 1))) | (1))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true))))) && true))), bool(bvec3(bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (read_2)), 1u * (read_2)), read_2)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))))))))))) + 1)))), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) << 0))])), injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | 0))))])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))).y) / 1.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) || false)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))), ! (! (_GLF_DEAD(false))))))), true, true, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))))))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, true), bvec3(bvec4(bvec3((true), false, true), true))))))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, _GLF_IDENTITY(false, ! (! (false))), true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))))))))), ! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), bool(bvec4(bool(bvec2(! (_GLF_DEAD(false)), false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true, _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true, true, true)), false, false, true))), true))))), ! (! (bool(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8277.1301)))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) && true) && ((false)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) && true) && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) && true) && ((false))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) && true) && ((false)))))) || false)))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(890.555, 9.1)))), injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, true))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-905.482, 5.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(vec4(-67.89, -666.958, -761.728, 5.0)).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(vec4(-67.89, -666.958, -761.728, 5.0)).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y : _GLF_FUZZED(6.2))))), false, false)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))), ! (! (bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(99.69)))), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(497.408, (false ? _GLF_FUZZED(_GLF_IDENTITY(43.04, min(43.04, 43.04))) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), _GLF_IDENTITY(bool(true), (bool(true)) || false))))))), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))), clamp(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x))), float(injectionSwitch.x))))), float(_GLF_FUZZED(_GLF_IDENTITY(497.408, (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true))))))), bool(false))) > injectionSwitch.y), false || (true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(-4107.3526)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(injectionSwitch.x))), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(tan(vec2(0.2, -53.99))))).x))), float(injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(497.408, _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), clamp((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), _GLF_IDENTITY(float(497.408), mix(float(float(497.408)), float(_GLF_FUZZED(-331.910)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), clamp((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(76.56)), bool(false)))) * 1.0) + ((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))))))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true))))))))), (float(_GLF_FUZZED(_GLF_IDENTITY(497.408, _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), clamp((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), _GLF_IDENTITY(float(497.408), mix(float(float(497.408)), float(_GLF_FUZZED(-331.910)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), clamp((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(76.56)), bool(false)))) * 1.0) + ((false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))))))), (false ? _GLF_FUZZED(43.04) : _GLF_IDENTITY(497.408, mix(float(_GLF_FUZZED(367.046)), float(497.408), bool(true)))))))))) - abs(0.0)), bool(false))) > injectionSwitch.y)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
