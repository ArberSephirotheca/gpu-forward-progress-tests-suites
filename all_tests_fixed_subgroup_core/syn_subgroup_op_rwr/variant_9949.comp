#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2700.6406), _GLF_FUZZED((-9.5 - 2.7))), bvec2(false, false))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), true))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(false, false || (false)))))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u), (false ? _GLF_FUZZED(uvec3(30996u, 162426u, 57498u)) : uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) * 1u) | 1u), 0u))), 69816u))))) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], max(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) | (gl_NumWorkGroups[1])), gl_NumWorkGroups[1])), gl_NumWorkGroups[1])), gl_NumWorkGroups[2])))), gl_NumWorkGroups)), clamp(false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u), (false ? _GLF_FUZZED(uvec3(30996u, 162426u, 57498u)) : uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u))))) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups), min((false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec4((false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups), 1u)), uvec3(uvec4(uvec3(uvec4((false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups), 1u)), 1u)))))))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | (_GLF_IDENTITY(1, 0 ^ (1))))], gl_NumWorkGroups[1], gl_NumWorkGroups[1])), gl_NumWorkGroups[2])))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u), (false ? _GLF_FUZZED(uvec3(30996u, 162426u, 57498u)) : uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u))))) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(112348u, _GLF_IDENTITY(124143u, max(124143u, 124143u)), 44013u)) : gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[1], gl_NumWorkGroups[1], gl_NumWorkGroups[1])), gl_NumWorkGroups[2])))), gl_NumWorkGroups)), false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(51906u, 80473u, 16346u) - uvec3(_GLF_IDENTITY(300u, (_GLF_IDENTITY(300u, min(300u, 300u))) | 0u), _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u), (false ? _GLF_FUZZED(uvec3(30996u, 162426u, 57498u)) : uvec3(51906u, 80473u, 16346u) - uvec3(300u, _GLF_IDENTITY(105179u, uint(uvec3(105179u, (1u | 1u), 0u))), 69816u))))) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(112348u, 124143u, 44013u)) : gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[1], gl_NumWorkGroups[1], gl_NumWorkGroups[1])), gl_NumWorkGroups[2])))), gl_NumWorkGroups)))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), true && (_GLF_IDENTITY(true, (true) || false))) && (false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, abs(0.0), 0.0, 0.0, abs(1.0))), 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-31.50), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), 33.78).y, float(mat2x4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(433.899, _GLF_IDENTITY((433.899) - sin(0.0), min(_GLF_IDENTITY((433.899) - sin(0.0), (true ? (433.899) - sin(0.0) : _GLF_FUZZED(6.5))), (433.899) - sin(0.0)))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78).y, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))))))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, sin(0.0)))), 1.0), mix(vec2(_GLF_FUZZED(float(43821)), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-45.99)), bool(_GLF_IDENTITY(false, false || (false)))))))), 1.0))[1]), vec2((vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, sin(0.0)))), 1.0))[0], _GLF_FUZZED((-225.171))), bvec2(true, false))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))))))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, sin(0.0)))), 1.0), mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(43821, ~ (~ (43821))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-45.99)), bool(_GLF_IDENTITY(false, false || (false)))))))), 1.0))[1]), vec2((vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, sin(0.0)))), 1.0))[0], _GLF_FUZZED((-225.171))), bvec2(true, false))) : _GLF_FUZZED(vec2(-135.116, 2789.6074)))))))))))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(93590) : 0))], mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))), bool(true))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((true)))), bool(bool((! (true))))), false, false, false)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-31.50), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), 33.78).y, float(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), (false ? _GLF_FUZZED(exp(-127.616)) : _GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-983.258)), float(0.0), bool(true))))))), min(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78), vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), (false ? _GLF_FUZZED(exp(-127.616)) : _GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-983.258)), float(0.0), bool(true))))))), min(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78), 0.0), mix(vec3((vec3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), (false ? _GLF_FUZZED(exp(-127.616)) : _GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-983.258)), float(0.0), bool(true))))))), min(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78), 0.0))[0], (vec3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), (false ? _GLF_FUZZED(exp(-127.616)) : _GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-983.258)), float(0.0), bool(true))))))), min(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78), 0.0))[1], (vec3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), (false ? _GLF_FUZZED(exp(-127.616)) : _GLF_IDENTITY(_GLF_IDENTITY(433.899, (433.899) - sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-983.258)), float(0.0), bool(true))))))), min(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))))), max(_GLF_IDENTITY(433.899, (433.899) - sin(0.0)), _GLF_IDENTITY(433.899, (433.899) - sin(0.0)))), 33.78), 0.0))[2]), vec3(_GLF_FUZZED(-1.0), _GLF_FUZZED(-7.6), _GLF_FUZZED(-501.837)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))))), round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)))))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)))))), length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)))))), length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))) : _GLF_FUZZED(-3.8))))))))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.6)))))), (true ? sin(0.0) : _GLF_FUZZED(-9769.8679)))))), 1.0), mix(vec2(_GLF_FUZZED(float(43821)), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-45.99)), bool(_GLF_IDENTITY(false, false || (false)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-45.99)), bool(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-45.99)), bool(_GLF_IDENTITY(false, false || (false)))))))))), 1.0))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.2)), bool(false))), float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9464.4012)), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0)))), abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, sin(0.0)))), 1.0))[0], _GLF_FUZZED((-225.171))), bvec2(true, false))))))))))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], 0.0 + ((injectionSwitch)[0]))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-397.780)), float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bool(true))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), bool(bvec4(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), false, false, false)))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.9) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(456.140) : injectionSwitch.y))), float(_GLF_FUZZED(-3.8)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, abs(1.0), 1.0, 0.0))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))) || false), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.1))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.1))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(normalize(-22.69)), min(true ? injectionSwitch.x : _GLF_FUZZED(normalize(-22.69)), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(normalize(-22.69)), max(true ? injectionSwitch.x : _GLF_FUZZED(normalize(-22.69)), true ? injectionSwitch.x : _GLF_FUZZED(normalize(-22.69)))))))) < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))) || false)))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) / 1.0)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))) | 0)], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(clamp(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, 0 | (0 | 0)) : _GLF_FUZZED(61483))), 0 | 0))) | (~ (1)), (false ? _GLF_FUZZED(-33383) : (_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, 0 | (0 | 0)) : _GLF_FUZZED(61483))), 0 | 0))) | (~ (1)))))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size)) >> 0u)), 0u ^ (clamp(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, 0 | (0 | 0)) : _GLF_FUZZED(61483))), 0 | 0))) | (~ (1)), (false ? _GLF_FUZZED(-33383) : (_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, 0 | (0 | 0)) : _GLF_FUZZED(61483))), 0 | 0))) | (~ (1)))))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (0 | 0) | (~ (1)))))) % subgroup_size)) >> 0u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) ^ 0)))), _GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | (_GLF_IDENTITY(0, (0) << 0))))), ~ (~ (int(int(_GLF_IDENTITY(0, (0) << 0))))))));
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, sin(0.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, sqrt(0.0), 1.0, abs(1.0), 0.0, abs(1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-3.5 + -8.1)), _GLF_FUZZED(39.13)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1982.1922), _GLF_FUZZED((1814.8999 * 91.68))), bvec2(false, false)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (injectionSwitch[0]) - 0.0)) / 1.0), injectionSwitch[1]))[0], injectionSwitch[1]))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.3), clamp(_GLF_FUZZED(2.3), _GLF_FUZZED(2.3), _GLF_FUZZED(2.3))), _GLF_IDENTITY(_GLF_FUZZED(-5.6), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-5.6), 1.0), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-5.6), 1.0)))))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))), max(vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), clamp((injectionSwitch[0]), (injectionSwitch[0]), (injectionSwitch[0]))) - 0.0)) / 1.0), injectionSwitch[1]))[0], injectionSwitch[1]))))[0], mix(float(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))), max(vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3982.5968)), float(1.0), bool(true))), 1.0, 1.0)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), clamp((injectionSwitch[0]), (injectionSwitch[0]), (injectionSwitch[0]))) - 0.0)) / 1.0), injectionSwitch[1]))[0], injectionSwitch[1]))))[0]), float(_GLF_FUZZED(6893.0997)), bool(false))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))], (injectionSwitch[0]) - 0.0)) / 1.0), injectionSwitch[1]))[0], injectionSwitch[1]))))[1]), bvec2(true, true))) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).y)))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))) / 1u), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(-5.7)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((78.10 / -378.432))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, max(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)), (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u, ~ (~ ((_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, 0u), (uvec3(read_1, 0u, 0u)) / uvec3(1u, 1u, 1u))))) >> 0u)))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) * 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)) - _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) - 0), 1))))), (uint(read_1 + 1 == read_2) + 1) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(read_1, 0u, 0u))), max((uint(uvec3(read_1, 0u, 0u))), (uint(uvec3(read_1, 0u, 0u)))))) >> 0u) + 0u))))) >> 0u) + 1 == read_2) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) - 0)), (_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0))))), 1, 0)))))), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-40224) : _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))) == read_2) + 1) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u), 0u + (0u))), 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74701) : 1)), 1))])).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u))) - 0u))))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), max(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), injectionSwitch.y))) * 1.0), (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, 0u ^ ((read_1) | 0u))) + _GLF_IDENTITY(1, (1) >> (0 & ivec3(-58993, 22171, -53878).r)) == read_2, ! (! (read_1 + 1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == _GLF_IDENTITY(read_2, (read_2) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) - 0) == read_2)), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false))), ! (! (! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false)))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))))), true, true, false))), true && (bool(bool(bvec4((! (read_1 + 1 == read_2)), true, true, false))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, 0u ^ ((read_1) | 0u))) + _GLF_IDENTITY(1, (1) >> (0 & ivec3(-58993, 22171, -53878).r)) == read_2, ! (! (read_1 + 1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == _GLF_IDENTITY(read_2, (read_2) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) - 0) == read_2)), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false))), ! (! (! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false)))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))))), true, true, false))), true && (bool(bool(bvec4((! (read_1 + 1 == read_2)), true, true, false))))))))))), false, true), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, (true ? _GLF_IDENTITY((read_1) | 0u, 1u * ((read_1) | 0u)) : _GLF_FUZZED(num_workgroup)))) + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), uint(uvec4(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), 1u, 1u, 1u)))))))), ((! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - (1u ^ 1u))) / 1u)))))) || false))))), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u), min(_GLF_IDENTITY(read_1, (read_1) | 0u), _GLF_IDENTITY(read_1, (read_1) | 0u))) + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_2)))), ! (! ((read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_2))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), min(_GLF_IDENTITY((read_2), 1u * ((read_2))), _GLF_IDENTITY((read_2), ~ (~ ((read_2))))))) | (~ (read_2)))))), ! (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 0u))) + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)))))) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | (read_2)))))) | (~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) << 0u))))))))), ! (! (! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2))))) || false))), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), min(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u)) >> 0u))) | 0u, max(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u) | 0u, _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u) | 0u))) + 1 == read_2, ! (! (read_1 + 1 == read_2))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(bool(bool((read_1 + 1 == read_2))), bool(bvec3(bool(bool((read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (read_1 + 1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (read_1 + 1 == read_2)))))))), false, true), false)))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, 0u ^ ((read_1) | 0u))) + _GLF_IDENTITY(1, (1) >> (0 & ivec3(-58993, 22171, -53878).r)) == read_2, ! (! (read_1 + 1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == _GLF_IDENTITY(read_2, (read_2) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) - 0) == read_2)), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false))), ! (! (! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false)))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))))), true, true, false))), true && (bool(bool(bvec4((! (read_1 + 1 == read_2)), true, true, false))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, 0u ^ ((read_1) | 0u))) + _GLF_IDENTITY(1, (1) >> (0 & ivec3(-58993, 22171, -53878).r)) == read_2, ! (! (read_1 + 1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == _GLF_IDENTITY(read_2, (read_2) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) - 0) == read_2)), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false))), ! (! (! (bool(bvec4((! (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0) == read_2)), true, true, false)))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2)))))), true, true, false))), true && (bool(bool(bvec4((! (read_1 + 1 == read_2)), true, true, false))))))))))), false, true), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, (true ? _GLF_IDENTITY((read_1) | 0u, 1u * ((read_1) | 0u)) : _GLF_FUZZED(num_workgroup)))) + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), uint(uvec4(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)), 1u, 1u, 1u)))))))), ((! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - (1u ^ 1u))) / 1u)))))) || false))))), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u), min(_GLF_IDENTITY(read_1, (read_1) | 0u), _GLF_IDENTITY(read_1, (read_1) | 0u))) + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_2)))), ! (! ((read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_2))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), min(_GLF_IDENTITY((read_2), 1u * ((read_2))), _GLF_IDENTITY((read_2), ~ (~ ((read_2))))))) | (~ (read_2)))))), ! (! (! (read_1 + 1 == read_2)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 0u))) + 1, _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)))))) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | (read_2)))))) | (~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) << 0u))))))))), ! (! (! (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2))))) || false))), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), min(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u)) >> 0u))) | 0u, max(_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u) | 0u, _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) | ((read_1)))) - 0u) | 0u))) + 1 == read_2, ! (! (read_1 + 1 == read_2))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(bool(bool((read_1 + 1 == read_2))), bool(bvec3(bool(bool((read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (read_1 + 1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (read_1 + 1 == read_2)))))))), false, true), false)))))))))))))) + 1, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-391.486)), bool(false))), 1.0, 0.0))))), mix(float(_GLF_FUZZED(-8.1)), float(float(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), bool(true)))) < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1849.6554)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), false || (bool(! (! (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9481.0536))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (false))), false || (true && (false))), true, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
