#version 460
struct _GLF_struct_34 {
 uvec4 _f0;
} ;

struct _GLF_struct_35 {
 vec4 _f0;
 _GLF_struct_34 _f1;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
 bvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_31 {
 ivec4 _f0;
 vec3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_30 {
 mat2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 int _f2;
 _GLF_struct_32 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 float _f1;
 vec2 _f2;
 int _f3;
 uint _f4;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_25 {
 ivec4 _f0;
 mat2x4 _f1;
 int _f2;
 mat3x2 _f3;
 mat3 _f4;
 uvec4 _f5;
 uvec4 _f6;
 uint workgroup_id;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_23 {
 ivec3 _f0;
 vec2 _f1;
 ivec4 _f2;
 uint _f3;
 ivec4 _f4;
 mat4x3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_22 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 mat3x2 _f1;
 mat4x3 _f2;
 mat2 _f3;
 ivec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 float _f1;
 mat4x3 _f2;
 mat4 _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_16 {
 bool _f0;
 bvec3 _f1;
 vec2 _f2;
 vec2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 float _f4;
 _GLF_struct_19 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 uint read_1;
 _GLF_struct_20 _f1;
 float _f2;
} ;

struct _GLF_struct_13 {
 uint _f0;
 ivec2 _f1;
 uint _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 vec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 vec4 _f1;
 _GLF_struct_13 _f2;
 bool _f3;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_11 {
 uint next_virtual_gid;
 mat4x2 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 int _f1;
 uvec3 _f2;
 bvec4 _f3;
 bvec4 _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 ivec4 _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 mat4x3 _f1;
 _GLF_struct_7 _f2;
 ivec3 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_14 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 ivec4 _f1;
 int _f2;
 mat4x2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 ivec3 _f1;
 vec3 _f2;
 uvec3 _f3;
 bvec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uint _f1;
 uvec2 _f2;
 bvec2 _f3;
 float _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_5 {
 uint workgroup_size;
 _GLF_struct_4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_WorkGroupSize.x, _GLF_struct_4(_GLF_struct_0(uvec4(1u), 1u, uvec2(1u), bvec2(true), 1.0), _GLF_struct_1(mat2x4(1.0), ivec3(1), vec3(1.0), uvec3(1u), bvec2(true), 1u), _GLF_struct_2(vec2(1.0), 1), vec4(1.0), _GLF_struct_3(vec2(1.0), ivec4(1), 1, mat4x2(1.0), bvec4(true))));
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_22(mat4(1.0)), _GLF_struct_26(_GLF_struct_23(ivec3(1), vec2(1.0), ivec4(1), 1u, ivec4(1), mat4x3(1.0), vec3(1.0)), _GLF_struct_24(vec3(1.0), mat3x4(1.0)), _GLF_struct_25(ivec4(1), mat2x4(1.0), 1, mat3x2(1.0), mat3(1.0), uvec4(1u), uvec4(1u), gl_WorkGroupID.x)), _GLF_struct_29(mat3x4(1.0), _GLF_struct_27(uvec4(1u), 1.0, vec2(1.0), 1, 1u), _GLF_struct_28(mat2(1.0), vec4(1.0)), bvec3(true)), _GLF_struct_33(_GLF_struct_30(mat2(1.0), ivec2(1)), _GLF_struct_31(ivec4(1), vec3(1.0), bvec4(true), mat4x3(1.0), mat4x2(1.0)), 1, _GLF_struct_32(uvec3(1u), bvec2(true), mat3(1.0)), mat2x3(1.0)), _GLF_struct_35(vec4(1.0), _GLF_struct_34(uvec4(1u))));
 uint workgroup_base = _GLF_struct_replacement_5.workgroup_size * _GLF_struct_replacement_36._f1._f2.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat4x2(1.0), _GLF_struct_9(_GLF_struct_6(mat2(1.0), ivec4(1), bvec3(true), mat2(1.0)), mat4x3(1.0), _GLF_struct_7(mat4x2(1.0), 1, uvec3(1u), bvec4(true), bvec4(true), vec3(1.0), ivec3(1)), ivec3(1), _GLF_struct_8(mat4(1.0), ivec3(1))), _GLF_struct_11(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), mat4x2(1.0), _GLF_struct_10(uvec4(1u), vec4(1.0), mat4x3(1.0))), _GLF_struct_14(_GLF_struct_12(vec3(1.0), vec4(1.0), ivec2(1)), vec4(1.0), _GLF_struct_13(1u, ivec2(1), 1u, mat2x4(1.0)), true), mat2(1.0));
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(ivec3(1), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_20(ivec4(1), _GLF_struct_16(true, bvec3(true), vec2(1.0), vec2(1.0), mat3x4(1.0)), _GLF_struct_17(bvec4(true), 1.0, mat4x3(1.0), mat4(1.0), mat4(1.0), ivec2(1)), _GLF_struct_18(bvec4(true), mat2x3(1.0), mat3x4(1.0), mat3x4(1.0), mat4x3(1.0)), 1.0, _GLF_struct_19(mat4x3(1.0), mat3x2(1.0), mat4x3(1.0), mat2(1.0), ivec4(1), uvec4(1u)), bvec2(true)), 1.0);
 atomicStore(buf[_GLF_struct_replacement_15._f2.next_virtual_gid], uint(_GLF_struct_replacement_21.read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_struct_replacement_15._f2.next_virtual_gid], uint(_GLF_struct_replacement_21.read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_15._f2.next_virtual_gid], uint(_GLF_struct_replacement_21.read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
