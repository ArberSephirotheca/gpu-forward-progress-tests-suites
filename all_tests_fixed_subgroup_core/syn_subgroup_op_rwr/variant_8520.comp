#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false))))), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atan(-9.0)) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5137.4040))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5137.4040)))))) || _GLF_IDENTITY(false, (false) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9953.4557))), injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9953.4557))), injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_DEAD(false))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))))), ! (! ((_GLF_DEAD(false))))) && true) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ceil(-62.95)))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(ceil(-62.95)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ceil(-62.95)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false)), ! (! (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true)) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) / 1u) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), uint(uint((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) / 1u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * 1u)), subgroup_size, subgroup_size))) / 1u) + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))), workgroup_base)), (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (! (true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (! (true)))) || false))) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(56299u)), max((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(56299u)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(56299u)))), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))) ? _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))) : _GLF_FUZZED(56299u))) / 1u))) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(55.72)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, cos(0.0))), (vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, cos(0.0)))) * mat2(1.0))))).x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, cos(0.0))), (vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, cos(0.0)))) * mat2(1.0))))).x > injectionSwitch.y))) || false))))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true), true, true)), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), exp(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0))) > injectionSwitch.y)))), true)), (bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) || false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-667.950)), bool(false))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1866.4572)), bool(false))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) || false, ((bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true))) || false) && true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0), (mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0), (mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0), (mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0), (mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0), (mat3x2(1.0, abs(1.0), 1.0, log(1.0), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) + tan(0.0))) / 1.0))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / exp(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))).y, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0, ((_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) / 1.0)), float(vec4(0.0, 0.0, 1.0, 0.0))), 0.0, sqrt(1.0), 0.0))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(47.57), _GLF_FUZZED(6832.4919)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(528.214)), float(0.0), bool(true)))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (false) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), false)), (bool(bvec4(false, true, true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, true, true, false))), bool(bvec4((bool(bvec4(false, true, true, false))), false, false, true))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, false, true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, false, true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-465.300)), vec2(_GLF_IDENTITY(_GLF_FUZZED(9.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(9.3) : _GLF_FUZZED(7.7))), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x))))) - vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), false))))))))), true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-465.300)), vec2(_GLF_FUZZED(9.3), ((injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), 1.0 * (max(0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(812.833))))), _GLF_ZERO(0.0, injectionSwitch.x))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ((false)) || false)), false || (false || (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ((false)) || false)), false || (false || (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), false || (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ((false)) || false)), false || (false || (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))))))), false, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (false ? _GLF_FUZZED(-99902) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), 1 * ((0))) / 1))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))))))) || false)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y) + tan(0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(633.797)), bvec2(false, false))).x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))), ! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))))))))) || false))), false || (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat4x3((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(vec2(-3.9, -498.369).r)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y) + tan(0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(633.797)), bvec2(false, false))).x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))), ! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))))))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(1), int(1))) + (4)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false, true)))))), bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, false))), bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))))))))), true, false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)), false, _GLF_IDENTITY(true, bool(bool(true))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, _GLF_IDENTITY(true, bool(bool(true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)), max(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)))), float(_GLF_FUZZED(-30.91)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), float(mat2x4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)), max(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) * 1.0)))), float(_GLF_FUZZED(-30.91)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), abs(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) || (read_1 + 1 == read_2), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2), bool(bvec3((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2), true, false))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2), bool(bvec3((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2), true, false)))))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0))).x > injectionSwitch.y)) || (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 + 1 == read_2), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 + 1 == read_2), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 + 1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 + 1 == read_2)) || false)))))))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 + 1 == read_2)))))))))))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) >> 0u)), min((_GLF_IDENTITY(read_1, (read_1) >> 0u)), (_GLF_IDENTITY(read_1, (read_1) >> 0u)))) | (_GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1 == read_2), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), clamp(_GLF_IDENTITY(read_1, (read_1) >> 0u), _GLF_IDENTITY(read_1, (read_1) >> 0u), _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1, min(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, min(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, _GLF_IDENTITY(read_1, (read_1) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), min(uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u)))))) ^ 0u)) + 1)))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), clamp(_GLF_IDENTITY(read_1, (read_1) >> 0u), _GLF_IDENTITY(read_1, (read_1) >> 0u), _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1, min(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + _GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, _GLF_IDENTITY(read_1, (read_1) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), min(uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u)))))) ^ 0u)) + 1)))) == read_2))))) || false)))) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + _GLF_IDENTITY(1, 0 | (1)), (uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY((uint(read_1 + 1 == read_2)) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) ^ 0u)), ((uint(read_1 + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1 == read_2))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u))))) << 0u) + 1, min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid), clamp(true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid), true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid), true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))))) << 0u) + 1))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), clamp((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), 0u ^ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), ~ (~ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))))))), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), clamp((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), 0u ^ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), ~ (~ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))))))), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), clamp((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), 0u ^ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), ~ (~ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))))))), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), clamp((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), 0u ^ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))), _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))), ~ (~ ((uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0)))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) + 1 == read_2) + 1, _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u) == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2)), clamp(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2)), _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false)))))) ? _GLF_FUZZED(virtual_gid) : read_2)), read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2)), (_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) << 0u)) | 0u)))) + 1, (uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1)) == read_2) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), clamp(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)))))) == read_2)) * 1u) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | _GLF_IDENTITY((uint(read_1 + 1 == read_2)), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), uint(uint((uint(read_1 + 1 == read_2))))), (uint(read_1 + 1 == read_2))))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), clamp(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)))))) == read_2)) * 1u) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | _GLF_IDENTITY((uint(read_1 + 1 == read_2)), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), uint(uint((uint(read_1 + 1 == read_2))))), (uint(read_1 + 1 == read_2))))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), clamp(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)))))) == read_2)) * 1u) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | _GLF_IDENTITY((uint(read_1 + 1 == read_2)), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1 == read_2)), uint(uint((uint(read_1 + 1 == read_2))))), (uint(read_1 + 1 == read_2))))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, (uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), read_1)) + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(-258.314) : _GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(false ? _GLF_FUZZED(-258.314) : _GLF_ZERO(0.0, injectionSwitch.x), mix(float(false ? _GLF_FUZZED(-258.314) : _GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3011.5396)), bool(false))), false ? _GLF_FUZZED(-258.314) : _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, (uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(7738.3841) : _GLF_ZERO(0.0, injectionSwitch.x)), min((false ? _GLF_FUZZED(7738.3841) : _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(7738.3841) : _GLF_ZERO(0.0, injectionSwitch.x)), 1.0 * ((false ? _GLF_FUZZED(7738.3841) : _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-258.314) : _GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(bitfieldInsert(read_2, subgroup_size, 94689, 39823))))) ^ 0u)) + 1, uint(uint(uint(read_1 + 1 == read_2) + 1))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(bitfieldInsert(read_2, subgroup_size, 94689, 39823))))) ^ 0u)) + 1, uint(uint(uint(read_1 + 1 == read_2) + 1)))) << 0u), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2))), 0u ^ (max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2))))), _GLF_IDENTITY(max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : read_2))), (false ? _GLF_FUZZED(atomicXor(num_workgroup, workgroup_base)) : max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)))))))))), read_2))) + 1, (uint(read_1 + 1 == read_2) + 1) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, (0u | 0u), 0u)), (uint(uvec3(read_2, (0u | 0u), 0u))) ^ 0u))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9826.9907) : injectionSwitch.x)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2)), read_2))) + 1, (uint(read_1 + _GLF_IDENTITY(1, (1) >> 0) == read_2) + 1) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(88.41), _GLF_FUZZED(-7.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == _GLF_IDENTITY(read_2, 0u | (read_2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(_GLF_IDENTITY(1, (1) | (1))))) - 0)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)), ! (! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(_GLF_IDENTITY(1, (1) | (1))))) - 0)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), ~ (~ _GLF_IDENTITY((clamp(read_1 + 1, read_1 + 1, read_1 + 1)), uint(uvec2((clamp(read_1 + 1, read_1 + 1, read_1 + 1)), 0u)))))), _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), read_1 + 1)) == read_2), (uint(read_1 + 1 == read_2)) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) - 0u) + 1 == read_2), (uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)) | (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1 == read_2)), ((uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1 == read_2))) >> 0u)))) : _GLF_FUZZED(next_virtual_gid)))) << 0u) + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))) | 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + (1 ^ 1), clamp((0) + (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(-88278) : (1) | (1))))), (0) + (1 ^ 1), (0) + (1 ^ 1))))), min(ivec2(1, _GLF_IDENTITY(0, (0) + (1 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + _GLF_IDENTITY((1 ^ 1), ~ (~ (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), ((_GLF_IDENTITY(0, (0) + (1 ^ 1)))) >> 0), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(7), int(7))))))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))), ivec2(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))), 0) | (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))))))))))))))) == _GLF_IDENTITY(read_2, uint(uvec4(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + (1 ^ 1), clamp((0) + (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(-88278) : (1) | (1))))), (0) + (1 ^ 1), (0) + (1 ^ 1))))), min(ivec2(1, _GLF_IDENTITY(0, (0) + (1 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + _GLF_IDENTITY((1 ^ 1), ~ (~ (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), ((_GLF_IDENTITY(0, (0) + (1 ^ 1)))) >> 0), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(7), int(7))))))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))), ivec2(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))), 0) | (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))))))), ~ (~ (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + (1 ^ 1)), (_GLF_IDENTITY(0, (0) + (1 ^ 1))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (1 ^ 1))), clamp((_GLF_IDENTITY(0, (0) + (_GLF_IDENTITY(1, (1) ^ 0) ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1))), (_GLF_IDENTITY(0, (0) + (1 ^ 1)))))))))))))))))))))) == _GLF_IDENTITY(read_2, uint(uvec4(read_2, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u) + 1, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) - 0), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true)))), transpose(transpose(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
