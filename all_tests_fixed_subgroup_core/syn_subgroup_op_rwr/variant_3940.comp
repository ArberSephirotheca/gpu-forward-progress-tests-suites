#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))) && true)))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, false, false))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), clamp(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), float(_GLF_IDENTITY(mat3x2(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(9308.4997, 21.05, -2.3, -907.606, -956.946, -9.7)) : mat3x2(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(55.59), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))))))))))) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), false, false))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false)))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(792.016)), vec2(_GLF_FUZZED((-6.7 / 923.154)), _GLF_IDENTITY((vec2(0.0, 0.0))[1], min((vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1]))), bvec2(false, true)))))), (max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0))))) * abs(vec2(1.0, 1.0))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) * (injectionSwitch), _GLF_IDENTITY(max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))), (max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), ((injectionSwitch)) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))))) * abs(vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)).x), bool(true))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))))))).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1))), (max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(_GLF_IDENTITY(-2.1, min(-2.1, -2.1)), 0.0 + (_GLF_IDENTITY(-2.1, min(-2.1, -2.1)))), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))) / vec2(1.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(_GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), max(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), abs(0.0) + (determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)))), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, _GLF_IDENTITY(log(1.0), 0.0 + (log(1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0)), 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9645.3292) : 0.0))), float(_GLF_FUZZED(5.4)), bool(false))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat3x4(cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0)), (float(mat3x4(cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))) - 0.0)), cos(0.0), _GLF_IDENTITY(cos(0.0), float(vec2(cos(0.0), 0.0))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0))))))))))))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -2.1)), max(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.1)))), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, clamp(_GLF_IDENTITY(-2.1, (true ? -2.1 : _GLF_FUZZED(sign(-6.3)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), -2.1))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(log2(-2.7)) : _GLF_IDENTITY(determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), (determinant(mat2(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) - 0.0))), 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-58.79), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), (mat3(0.0, 1.0, log(1.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)))))))))) * mat2(1.0)))))).y))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), mix(vec2(_GLF_FUZZED(1.4), (vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(-74.98)), bvec2(true, false))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), vec2(mat4x2(mat2(1.0) * (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(152861u))), vec2(_GLF_FUZZED(-311.467), (injectionSwitch)[1]), bvec2(false, true))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch))))[0]) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)))), max(_GLF_FUZZED(vec2(_GLF_IDENTITY(5.2, (false ? _GLF_FUZZED(_GLF_IDENTITY(-0.2, min(-0.2, -0.2))) : _GLF_IDENTITY(5.2, max(_GLF_IDENTITY(5.2, (5.2) - 0.0), 5.2)))), -2.1)), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, mix(float(-2.1), float(_GLF_FUZZED(9612.3328)), bool(false)))), vec2(mat4x3(vec2(5.2, _GLF_IDENTITY(-2.1, float(_GLF_IDENTITY(vec4(-2.1, 0.0, sqrt(0.0), 0.0), (vec4(-2.1, 0.0, sqrt(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), 1.0))) - 0.0)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]) + 0.0), injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))), max((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]) + 0.0), injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.6) : 1.0)), 1.0)), 0.0, 1.0, 1.0))))))), mix(_GLF_IDENTITY(vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0)), (vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(vec2(90.92, -98.38)) : (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-58.79, mix(float(_GLF_IDENTITY(-58.79, min(-58.79, -58.79))), float(_GLF_FUZZED(-95.29)), bool(false)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]) + 0.0), injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(-1985.4554, 4830.8662, -1.3, 0.5, 7720.2698, 5425.1846, -1.1, 5.7, 9568.1661)) : mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), (clamp(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(0.0, 0.0), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(-1985.4554, 4830.8662, -1.3, 0.5, 7720.2698, 5425.1846, -1.1, 5.7, 9568.1661)) : mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))) * mat2(1.0)))))))).y)), true && (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(1.4, clamp(_GLF_IDENTITY(1.4, float(mat3(1.4, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.4, 1.4))), (vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(-74.98)), bvec2(true, false))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)) - sqrt(0.0)), _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(898.133)), bvec2(true, false))), max(injectionSwitch, injectionSwitch))))[0]) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch[_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)))), max(_GLF_FUZZED(vec2(_GLF_IDENTITY(5.2, (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(5.2, max(5.2, 5.2)))), -2.1)), _GLF_FUZZED(vec2(5.2, -2.1)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.2, -2.1), min(vec2(5.2, -2.1), _GLF_IDENTITY(vec2(5.2, _GLF_IDENTITY(-2.1, mix(float(-2.1), float(_GLF_FUZZED(9612.3328)), bool(false)))), vec2(mat4x3(vec2(5.2, -2.1), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0))) / 1.0))))), 1.0, 0.0, 1.0)), 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), max((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0))), (vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[0], _GLF_FUZZED(0.0)), (vec2((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.0))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-58.79), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0), mat2(1.0) * (mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))))[1], ((vec2(mat2(injectionSwitch, determinant(mat2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 1.0)))[1]) * 1.0)), bvec2(false, true)))), vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0), (mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.2, -2.1))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), transpose(_GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(mat2(-58.21, -9409.6341, -6.4, -7952.9762)) : transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 0.0))))), cos(0.0), 0.0)), clamp(_GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(1.0, 1.0) * (vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)))), vec2(mat2(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5060.7826)), float(0.0), bool(true))), 0.0), cos(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), max(vec2(mat2(vec2(0.0, 0.0), cos(0.0), 0.0)), vec2(mat2(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7479.0478)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), cos(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.365))))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(-1985.4554, 4830.8662, -1.3, 0.5, 7720.2698, 5425.1846, -1.1, 5.7, 9568.1661)) : mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0.0 : _GLF_FUZZED(-461.365))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, abs(1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(438.951) : _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 1.0)), (float(mat2(1.0, 0.0, 0.0, 1.0))) - 0.0))))))))))))))))))).y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), true, false))), true)))))))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool((true) || false)))) && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), float(vec3((injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0)))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(7342u, 47493u, 161774u))))) << uvec3(0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ ((gl_WorkGroupSize)), max((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ ((gl_WorkGroupSize)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ ((gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(0u, 0u, 0u), ~ (~ ((gl_WorkGroupSize) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(127692u, 188199u, 40532u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))))))).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id, workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, (_GLF_IDENTITY((subgroup_size) / 1u, ~ (~ ((subgroup_size) / 1u)))) | ((subgroup_size) / 1u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)) | 0u)) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) / ((_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_base))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) << 0u)))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED((uvec2(150559u, 96795u) / 122335u).g) : ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false))), true && (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false)))))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false))), true && (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)), true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)), true))))))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(5.9)), bool(false)))), vec2(_GLF_FUZZED(987.821), _GLF_FUZZED(-4.5)), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(5.9)), bool(false)))), vec2(_GLF_FUZZED(987.821), _GLF_FUZZED(-4.5)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(5.9)), bool(false)))), vec2(_GLF_FUZZED(987.821), _GLF_FUZZED(-4.5)), bvec2(false, false))).y)))) * (injectionSwitch), max(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (false))), (_GLF_IDENTITY(true && (false), (true && (_GLF_IDENTITY(false, (false) && true))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))))) > injectionSwitch.y))))))))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          continue;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(25.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), false || (false || (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(25.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(25.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))) ? _GLF_FUZZED(25.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))) || false))))))))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), false, false, false))))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.4, 309.904)) : injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       continue;
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (true ? vec2(vec4(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (true ? _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(vec2(vec4(injectionSwitch, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x4(vec2(vec4(injectionSwitch, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0), (true ? mat3x4(vec2(vec4(injectionSwitch, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3x4(-9.2, -0.7, -908.627, -15.71, 5984.0601, -9.3, -488.441, 9.7, -786.905, 138.332, -8.8, 9.3))))))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1496.3329), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(15.90)), bvec2(true, false))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (false)) && true)) || (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(uint(false))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-98.45)), bvec2(true, false))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(uint(false))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-98.45)), bvec2(true, false))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false, true, true)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(uint(false))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-98.45)), bvec2(true, false))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))) && true))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_IDENTITY(false, ! (! (false))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_IDENTITY(false, ! (! (false))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_IDENTITY(false, ! (! (false))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), true)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true)), bool(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.4))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true, true))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, false)))))))
          break;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
        continue;
       barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))), bvec3(bvec4(bvec3(false, false, false), true)))), false)), _GLF_IDENTITY(false, (false) && true) || (bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))
    barrier();
  }
 else
  {
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 1.0, sqrt(1.0))))).x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 1.0, sqrt(1.0))))).x > injectionSwitch.y))), true, true))))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))).y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     return;
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), clamp(0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-91672) : int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid))) | 0u)], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 0, false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (bool(bvec4(_injected_loop_counter != 0, false, false, false)))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | _GLF_IDENTITY(0, min(0, 0))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3397.9400) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
            barrier();
           return;
          }
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.3) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(vec2(-5.0, -557.527), injectionSwitch, injectionSwitch)))).x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min((injectionSwitch) / cos(vec2(0.0, 0.0)), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, max(_GLF_IDENTITY((4) | 0, int(ivec4((4) | 0, 1, 1, 1))), (4) | 0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   do
    {
     subgroupAll(true);
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.7, max(-2.7, _GLF_IDENTITY(-2.7, min(_GLF_IDENTITY(-2.7, 1.0 * (-2.7)), _GLF_IDENTITY(-2.7, float(mat2x3(_GLF_IDENTITY(-2.7, max(-2.7, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)))), 1.0, 1.0, 1.0, 0.0, 0.0))))))))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (bool(bvec2(false, true)))) && true)))) || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8823.0482) : injectionSwitch.y))), float(_GLF_FUZZED(1425.2683)), bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8823.0482) : injectionSwitch.y))), float(_GLF_FUZZED(1425.2683)), bool(false)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8823.0482) : injectionSwitch.y))), float(_GLF_FUZZED(1425.2683)), bool(false))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8823.0482) : injectionSwitch.y))), float(_GLF_FUZZED(1425.2683)), bool(false)))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8823.0482) : injectionSwitch.y))), float(_GLF_FUZZED(1425.2683)), bool(false)))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
}
