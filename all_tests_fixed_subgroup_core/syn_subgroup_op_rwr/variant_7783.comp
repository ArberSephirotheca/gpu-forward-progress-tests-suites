#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (uint((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u, 1u))))) / 1u)), min(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(uint((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (uint((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (uint((subgroup_local_id + 1) % subgroup_size)) ^ 0u)) / 1u))))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) - 0))), 64), (false ? _GLF_FUZZED(59642) : max(_GLF_IDENTITY(64, 0 ^ (64)), 64)))), 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH(0))
    {
     case 28:
     vec3(656.442, 3.9, -9.1);
     case 50:
     for(uint _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[11]; (-526.515 >= 93.14); radians(vec4(-0.9, _GLF_IDENTITY(-3340.6084, float(vec4(-3340.6084, 0.0, sin(0.0), 0.0))), -6.0, 2351.8420)))
      {
       switch(_GLF_SWITCH(0))
        {
         case 75:
         vec3 _GLF_SWITCH_6_0v[86], _GLF_SWITCH_6_1v[98];
         case 0:
         case 12:
         if(_GLF_DEAD(false))
          continue;
         case 95:
         case 59:
         ;
         case 57:
         case 30:
         bitfieldInsert(uvec2(41011u, 92392u), uvec2(143828u, 43367u), -40632, -44685);
         ivec3 _GLF_SWITCH_3_2v[16], _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[32];
         break;
         case 65:
         ;
         case 64:
         ;
         default:
         1;
        }
      }
     case 0:
     case 59:
     case 14:
     case 30:
     case 42:
     case 39:
     case 21:
     case 11:
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(read_1 + 1), 4, 64, 4);
     break;
     case 33:
     ;
     case 25:
     mat3(_GLF_IDENTITY(-4.4, mix(float(_GLF_IDENTITY(-4.4, 0.0 + (-4.4))), float(_GLF_FUZZED(8.0)), bool(false))), 60.70, 92.97, -8.7, -4171.1161, 2.0, -37.21, 79.12, -1.4);
     default:
     1;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 2:
       case 92:
       case 12:
       case 13:
       case 55:
       case 56:
       case 48:
       case 1:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       break;
       case 72:
       uint _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[50];
       default:
       1;
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 19:
           sinh(vec3(807.734, -2.4, -2.8));
           case 12:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(             ivec2(46427, -85679);
 false; ((false ? uvec4(25268u, 183543u, _GLF_IDENTITY(141131u, max(141131u, 141131u)), 135901u) : uvec4(_GLF_IDENTITY(49793u, clamp(49793u, _GLF_IDENTITY(49793u, _GLF_IDENTITY(min(49793u, 49793u), (_GLF_IDENTITY(min(_GLF_IDENTITY(49793u, max(49793u, 49793u)), 49793u), (min(49793u, 49793u)) * 1u)) | 0u)), 49793u)), 70926u, 155762u, 132635u)) & uvec4(26366u, 141389u, 163556u, 74871u)))
              {
               float _GLF_SWITCH_2_0v[93], _GLF_SWITCH_2_1v[74];
               if((mat4(-9.4, -6.7, 82.16, -1291.0401, -4440.8704, _GLF_IDENTITY(8.5, float(vec2(_GLF_IDENTITY(8.5, max(8.5, 8.5)), 1.0))), 327.635, 6.4, 1418.3162, 9.4, -5.4, 3931.5448, 6407.2593, -739.252, -413.129, _GLF_IDENTITY(-989.808, (_GLF_IDENTITY(-989.808, mix(float(-989.808), float(_GLF_FUZZED(58.11)), bool(false)))) / 1.0)) != mat4(-5.0, 5003.7713, -496.226, 2.8, 7980.7580, 2.2, 8586.7956, -1.7, -72.81, 15.27, 734.527, 35.62, 333.325, -3.8, -169.728, 863.718)))
                {
                 _GLF_IDENTITY(uvec4(177660u, 17689u, 190958u, 132803u), uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u)), uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u)), uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u))))), 0u, 0u, 0u) | (uvec4(177660u, 17689u, 190958u, 132803u)));
                }
               else
                {
                 switch(_GLF_SWITCH((0 & 17768)))
                  {
                   case 44:
                   mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                   case 20:
                   transpose(mat3(vec3(-3484.0674, _GLF_IDENTITY(1.9, float(vec2(_GLF_IDENTITY(1.9, (1.9) / 1.0), 0.0))), 5.5), vec3(1.2, -711.161, -7.5), vec3(-1.3, 1.0, -805.992)));
                   case 0:
                   case 27:
                   -78227;
                   _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false))))));
                   case 98:
                   mat3x4(-4630.6518, -9289.5990, 48.60, _GLF_IDENTITY(_GLF_IDENTITY(8.8, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))) ? _GLF_FUZZED(8.0) : 8.8)), min(_GLF_IDENTITY(8.8, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.0) : 8.8)), _GLF_IDENTITY(8.8, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.0) : 8.8), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.0) : 8.8), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.0) : 8.8)))))), -3020.3932, 2694.1325, 550.607, -6.7, -90.53, -24.28, 2408.6338, -1.6);
                   case 69:
                   case 64:
                   ivec3 _GLF_SWITCH_2_2v;
                   case 87:
                   case 74:
                   case 12:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   ivec2 _GLF_SWITCH_2_3v;
                   (24351 % ivec2(44266, 44521));
                   case 91:
                   case 16:
                   log2(vec3(-3.5, -8.0, -1723.3271));
                   break;
                   case 59:
                   mat4 _GLF_SWITCH_4_2v[80];
                   default:
                   _GLF_IDENTITY(1, (1) * 1);
                  }
                }
               bool _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
               do
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))))
                  {
                   case 35:
                   uvec3(168404u, 80146u, 85096u);
                   case 0:
                   case 29:
                   case 36:
                   case 80:
                   case 1:
                   for(                   notEqual(vec2(-7.7, -2886.7726), vec3(-91.96, 35.15, -214.237).tp);
 _GLF_IDENTITY(_GLF_SWITCH_2_5v, ! (! (_GLF_SWITCH_2_5v))); mat2x3(_GLF_IDENTITY(4.2, clamp(4.2, _GLF_IDENTITY(4.2, clamp(4.2, _GLF_IDENTITY(4.2, min(4.2, 4.2)), 4.2)), 4.2)), -8.3, 258.087, 769.101, 42.86, 5.4))
                    {
                     vec2 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[7];
                     max((vec4(_GLF_IDENTITY(-23.26, max(-23.26, -23.26)), _GLF_IDENTITY(4.0, min(4.0, 4.0)), -7915.7167, -1.1) * mat4(334.811, -641.204, 252.762, -0.8, 7387.7309, -444.939, -63.63, -3865.8769, 7259.4591, _GLF_IDENTITY(9.5, min(_GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(-0.1)), bool(false))), 9.5)), 4579.7413, -84.85, -185.392, 285.681, 8411.3388, -7.9)), vec4(_GLF_IDENTITY(-6.2, float(mat4x2(_GLF_IDENTITY(-6.2, 0.0 + (_GLF_IDENTITY(-6.2, (-6.2) / 1.0))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0)), sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, tan(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, tan(0.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 9.7, -59.78, -160.701));
                    }
                   break;
                   case 66:
                   (mat4x2(-5171.9852, -7.8, -86.24, 0.2, 7.8, 580.922, 1891.4970, 688.884) / -50.21);
                   if(_GLF_DEAD(false))
                    continue;
                   case 7:
                   mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[7], _GLF_SWITCH_4_2v;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                  break;
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               uvec4 _GLF_SWITCH_2_9v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                }
               else
                {
                }
               if(all(bvec3(true, false, false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 vec3(8.9, -243.793, -250.876);
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   ivec4(-33142, 83414, -98206, -63904);
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 vec4 _GLF_SWITCH_2_10v[24];
                 ;
                 mat4x2 _GLF_SWITCH_2_11v;
                 ivec3 _GLF_SWITCH_2_12v;
                }
               else
                {
                 (ivec4(96927, 54938, -80898, _GLF_IDENTITY(30682, (30682) | (30682))) >> ivec4(63825, 62849, -60972, 51243));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))
                  continue;
                 bool _GLF_SWITCH_2_13v;
                 mat2 _GLF_SWITCH_2_14v[50];
                 mat2x3(7307.5606, _GLF_IDENTITY(-57.17, max(-57.17, -57.17)), 710.102, -2580.7833, 606.555, 1303.2133);
                }
               do
                {
                 ;
                 bvec2 _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                break;
               for(vec3 _GLF_SWITCH_2_17v; _GLF_SWITCH_2_5v; mat4(6.7, 56.00, -5.6, 4.0, 3391.4606, 0.5, 6.1, -8455.6921, 872.948, -6.3, -3765.9901, -457.204, _GLF_IDENTITY(3.4, mix(float(3.4), float(_GLF_FUZZED(342.857)), bool(false))), 46.13, 5.8, -7908.8131))
                {
                 -26825;
                 mat3(_GLF_IDENTITY(mat2(-303.998, -4.1, 8.8, -0.9), mat2(mat3(mat2(-303.998, -4.1, 8.8, -0.9)))));
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))));
                 bvec3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v;
                 mat2x3 _GLF_SWITCH_2_20v;
                 _GLF_IDENTITY((25309 | (~ ivec3(-10316, -70780, 84101))), min((25309 | (~ ivec3(-10316, -70780, 84101))), (25309 | (~ ivec3(-10316, -70780, 84101)))));
                 lessThan(ivec2(-98838, -83322), ivec2(43324, -56769));
                 _GLF_SWITCH_2_19v;
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))))
                  {
                  }
                 else
                  {
                   bvec2(true, true);
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                }
               {
                if(_GLF_DEAD(false))
                 continue;
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  sqrt(2.6);
                  (_GLF_IDENTITY(ivec3(56187, -64682, -3980) + (53256 ^ -53258), (_GLF_IDENTITY(ivec3(56187, -64682, -3980) + (53256 ^ -53258), min(ivec3(56187, -64682, -3980) + (53256 ^ -53258), ivec3(56187, -64682, -3980) + (53256 ^ -53258)))) >> ivec3(0, 0, 0)));
                  case 69:
                  ;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    mat3x4(-6332.4454, -710.982, -4.5, 4.1, _GLF_IDENTITY(0.2, clamp(0.2, 0.2, _GLF_IDENTITY(0.2, float(mat4x3(0.2, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0))), 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, sin(0.0), 1.0, 0.0, 1.0))))), 590.431, 5700.3816, -3996.3711, 3670.8069, -98.27, 0.7, 954.748);
                    if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true, true, true))) && true))) && true))
                     continue;
                   }
                  else
                   {
                   }
                  break;
                  case 19:
                  ;
                  case 25:
                  if(_GLF_DEAD(false))
                   continue;
                  bvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                  default:
                  _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75522)));
                 }
               }
              }
            }
           case 0:
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 22:
           if(_GLF_DEAD(false))
            return;
           case 60:
           if(_GLF_DEAD(false))
            return;
           case 59:
           if(_GLF_DEAD(false))
            return;
           case 37:
           case 92:
           if(_GLF_DEAD(false))
            return;
           case 10:
           case 79:
           case 39:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 82:
               case 29:
               case 55:
               case 87:
               case 90:
               case 21:
               case 39:
               return;
               break;
               default:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 1;
                }
              }
            }
           break;
           default:
           1;
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(55173u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 55173u : _GLF_FUZZED(read_1)))) : buf[virtual_gid])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) / 1)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) / 1))) >> 0)) - 0), 0);
 do
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))))))), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))), ! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u))))))))))))))))) || false))) || false))))))
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     subgroupAll(false);
    }
   else
    {
     switch(_GLF_IDENTITY(_GLF_SWITCH(0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) * 1), 1, 1), _GLF_IDENTITY((ivec3(_GLF_SWITCH(0), 1, 1)) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)), ((ivec3(_GLF_SWITCH(0), 1, 1)) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0))) | ((ivec3(_GLF_SWITCH(0), 1, 1)) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0))))))))
      {
       case 8:
       do
        {
         while(true)
          {
           vec4 _GLF_SWITCH_0_0v;
           ;
           if(_GLF_DEAD(false))
            continue;
           while(false)
            {
             mat2 _GLF_SWITCH_0_1v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))) && true), true, true, false)))) && true))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   if(_GLF_DEAD(false))
                    continue;
                   case 52:
                   case 4:
                   case 66:
                   case 99:
                   case 73:
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(588.977, -1111.7753)))) * mat2(1.0)))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(5.3), (false ? _GLF_FUZZED(-739.818) : _GLF_FUZZED(5.3))), _GLF_FUZZED(-33.30)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(_GLF_IDENTITY(-33.30, min(-33.30, -33.30)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-33.30)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), sqrt(abs(vec2(1.0, 1.0))) * ((injectionSwitch))) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-33.30)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false))).x)) > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   break;
                   default:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   1;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
                    continue;
                  }
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 96:
                   mat4x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                   if(_GLF_DEAD(false))
                    return;
                   case 0:
                   case 70:
                   case 83:
                   case 61:
                   case 28:
                   case 79:
                   case 58:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(1948.4744, (1948.4744) / 1.0), 21.32, -610.882, 2861.1287, 9959.9678, -1389.5698) * mat3x2(-0.0, 762.271, -4.2, 6.3, -40.64, 3.7)), mat3(mat4x3((mat2x3(1948.4744, 21.32, -610.882, 2861.1287, 9959.9678, -1389.5698) * mat3x2(_GLF_IDENTITY(-0.0, (_GLF_IDENTITY(-0.0, 1.0 * (-0.0))) / abs(1.0)), 762.271, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, (_GLF_IDENTITY(-4.2, (false ? _GLF_FUZZED(208.475) : -4.2))) / 1.0))), 6.3, _GLF_IDENTITY(-40.64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-40.64, min(-40.64, -40.64)), clamp(-40.64, -40.64, -40.64)), -40.64, -40.64)), 3.7)))));
                    }
                   break;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
              }
             bvec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
             uvec2(3717u, 6791u);
             ;
             {
              for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0))), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                   {
                    case 97:
                    ;
                    case 0:
                    ;
                    break;
                    case 82:
                    ivec3(85828, 54886, 63981);
                    default:
                    1;
                   }
                 }
                else
                 {
                 }
               }
              mat3(-31.22, -37.78, -8.2, -6107.4258, -3.4, 40.55, -757.295, _GLF_IDENTITY(7309.9962, _GLF_IDENTITY(float(mat3(7309.9962, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[1], min(_GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[1], float(mat3x2((normalize(vec3(1.0, 1.0, 1.0)))[1], determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, abs(1.0), 0.0))), (normalize(vec3(1.0, 1.0, 1.0)))[1])), _GLF_FUZZED(-6.1)), vec3(_GLF_IDENTITY(_GLF_FUZZED(-113.991), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-113.991), (true ? _GLF_FUZZED(-113.991) : _GLF_FUZZED(-3098.4126)))), bool(true))), _GLF_FUZZED(5.2), (normalize(vec3(1.0, 1.0, 1.0)))[2]), bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))), mix(vec3(_GLF_FUZZED((-6276.5312 * 8469.1124)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))), vec3(vec4((normalize(vec3(1.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[2], (_GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[2], _GLF_IDENTITY(float(mat2x4((normalize(vec3(1.0, 1.0, 1.0)))[2], 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), 1.0)), max(float(mat2x4((normalize(vec3(1.0, 1.0, 1.0)))[2], 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), 1.0)), float(mat2x4((normalize(vec3(1.0, 1.0, 1.0)))[2], 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), 1.0)))))) / 1.0)), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-0.9), _GLF_FUZZED(-692.797)), bvec3(true, false, false))))))), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), (true ? length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) : _GLF_FUZZED(7.9))), 0.0, 0.0, cos(0.0), 1.0)), max(float(_GLF_IDENTITY(mat3(7309.9962, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))), 1.0, 0.0, 0.0)), min(float(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))), 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5))), 1.0, 0.0, 0.0))))), 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), length(log(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, cos(0.0), 1.0), (_GLF_IDENTITY(mat3(7309.9962, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(vec4(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0))[0], (vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0))[1]), vec2(_GLF_FUZZED(-63.01), _GLF_FUZZED(-6.4)), bvec2(false, false)))), float(mat2(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0))[0], (vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), 0.0))[1]), vec2(_GLF_FUZZED(-63.01), _GLF_FUZZED(-6.4)), bvec2(false, false)))), 0.0, 1.0, 0.0)))), length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), 1.0))), 0.0, 0.0, cos(0.0), 1.0), (mat3(7309.9962, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), length(log(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, cos(0.0), 1.0)) * mat3(1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(mat3(7309.9962, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(270.592)))))), vec3(_GLF_IDENTITY(mat2x3(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, clamp(_GLF_IDENTITY(270.592, (270.592) - 0.0), 270.592, 270.592)))))))), 0.0, 0.0, 0.0), transpose(transpose(mat2x3(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(24.78)), float(1.0), bool(true))))), 1.0)), (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, (270.592) - 0.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-702.438))), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(270.592), 1.0 * (true ? 1.0 : _GLF_FUZZED(270.592)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), ((true ? 1.0 : _GLF_FUZZED(270.592))) * 1.0))), mix(float(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592))))), float(_GLF_FUZZED(-9.2)), bool(false)))), (clamp(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), mix(float(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592))))), float(_GLF_FUZZED(-9.2)), bool(false))))) + 0.0))), (false ? _GLF_FUZZED(3.6) : float(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(270.592), clamp(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(270.592), min(true ? 1.0 : _GLF_FUZZED(270.592), true ? 1.0 : _GLF_FUZZED(270.592))), true ? 1.0 : _GLF_FUZZED(270.592), true ? 1.0 : _GLF_FUZZED(270.592)))))), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, clamp(270.592, 270.592, 270.592)))), max((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, clamp(270.592, 270.592, 270.592)))), (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, clamp(270.592, 270.592, 270.592)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), mix(float(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(270.592, (270.592) / 1.0)))))), float(_GLF_FUZZED(-9.2)), bool(false)))), (clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(28.57) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), min((true ? 1.0 : _GLF_FUZZED(270.592)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), (false ? _GLF_FUZZED(length(vec3(87.26, -8.4, 39.35))) : (true ? 1.0 : _GLF_FUZZED(270.592)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(270.592)))), mix(float(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(-495.094)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), mat3(1.0) * (mat3(_GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(-495.094)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), max(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), mix(float((true ? 1.0 : _GLF_FUZZED(270.592))), float(_GLF_FUZZED(234.218)), bool(false))), (true ? 1.0 : _GLF_FUZZED(270.592)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(270.592)), (true ? (true ? 1.0 : _GLF_FUZZED(270.592)) : _GLF_FUZZED(-7.6)))))))), float(_GLF_FUZZED(-9.2)), bool(false))))) + 0.0))))), float(_GLF_FUZZED(935.085)), bool(false))))), _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0))))))))), 1.0, 0.0, length(log(vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(tan(-22.82)) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-8212.8327)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))) + 0.0))), 0.0, cos(0.0), 1.0))))), 495.683);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
                 continue;
                continue;
               }
              mat3x2 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
              if(_GLF_DEAD(false))
               continue;
             }
             {
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) && true)))))
               continue;
              ivec2 _GLF_SWITCH_0_7v[61];
              int _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[77];
              _GLF_IDENTITY(uvec2(72507u, _GLF_IDENTITY(157097u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 157097u))), (uvec2(72507u, _GLF_IDENTITY(157097u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 157097u)))) ^ uvec2(0u, 0u));
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 return;
                bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (true)), true && ((! (true))))), _GLF_IDENTITY(((_GLF_IDENTITY((! (true)), true && ((! (true)))))) || false, (((_GLF_IDENTITY((! (true)), true && ((! (true)))))) || false) && true)))), false, false);
               }
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(27.56) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                break;
               }
             }
             for(             bvec3(true, false, false);
 true; _GLF_IDENTITY(-7614.2092, min(_GLF_IDENTITY(_GLF_IDENTITY(-7614.2092, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-7614.2092, (true ? -7614.2092 : _GLF_FUZZED(_GLF_IDENTITY(-0.2, (true ? -0.2 : _GLF_FUZZED(-955.124)))))), _GLF_IDENTITY((-7614.2092) - 0.0, mix(float(_GLF_FUZZED(-1021.7408)), float((-7614.2092) - 0.0), bool(true)))))), clamp(-7614.2092, _GLF_IDENTITY(-7614.2092, (false ? _GLF_FUZZED(-3578.9418) : -7614.2092)), -7614.2092)), _GLF_IDENTITY(_GLF_IDENTITY(-7614.2092, min(-7614.2092, _GLF_IDENTITY(-7614.2092, clamp(_GLF_IDENTITY(-7614.2092, (-7614.2092) / 1.0), -7614.2092, _GLF_IDENTITY(-7614.2092, (-7614.2092) / 1.0))))), clamp(-7614.2092, -7614.2092, -7614.2092)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))))))) || (false))))
                continue;
               bool _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
               _GLF_SWITCH_0_2v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.9)), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-331.627)), bool(false))))), bool(true))))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | (_GLF_IDENTITY(int(2), (int(2)) >> 0))), _GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), min(_GLF_IDENTITY(int(2), (int(2)) - 0), _GLF_IDENTITY(int(2), (int(2)) - 0))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> 0), 0, 0))), int(2), int(2)))))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (1 ^ 1), (_GLF_IDENTITY(_injected_loop_counter > (1 ^ 1), _GLF_IDENTITY(! (! (_injected_loop_counter > (1 ^ 1))), ! (! (_GLF_IDENTITY(! (! (_injected_loop_counter > (1 ^ 1))), (! (! (_injected_loop_counter > (1 ^ 1)))) || false)))))) && true)); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), int(5)))))
                    {
                     case 92:
                     mat2x4(_GLF_IDENTITY(mat3(2.3, 0.6, -90.69, 383.777, -6.9, 6.0, -6.2, -471.180, 1.1), (_GLF_IDENTITY(mat3(2.3, 0.6, -90.69, 383.777, -6.9, 6.0, -6.2, -471.180, 1.1), (mat3(2.3, 0.6, -90.69, 383.777, -6.9, 6.0, -6.2, -471.180, 1.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(1.0)));
                     case 0:
                     case 33:
                     case 66:
                     if(_GLF_DEAD(false))
                      break;
                     case 32:
                     case 59:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     case 81:
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 59:
                       ivec4(48314, 9157, -45353, 73314);
                       case 17:
                       vec2 _GLF_SWITCH_2_0v[90], _GLF_SWITCH_2_1v[29];
                       case 0:
                       case 84:
                       case 7:
                       switch(_GLF_SWITCH(0))
                        {
                         case 18:
                         (_GLF_IDENTITY(mat4(_GLF_IDENTITY(45.43, mix(float(_GLF_IDENTITY(45.43, min(45.43, 45.43))), float(_GLF_FUZZED(-50.87)), bool(false))), _GLF_IDENTITY(-1326.5489, clamp(_GLF_IDENTITY(-1326.5489, min(_GLF_IDENTITY(-1326.5489, mix(float(_GLF_FUZZED(58.99)), float(_GLF_IDENTITY(-1326.5489, float(vec3(_GLF_IDENTITY(-1326.5489, max(_GLF_IDENTITY(-1326.5489, _GLF_IDENTITY(float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0)), clamp(float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0)), float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0)), float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0))))), -1326.5489)), 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(-1326.5489, min(-1326.5489, _GLF_IDENTITY(-1326.5489, float(_GLF_IDENTITY(vec3(-1326.5489, 0.0, log(1.0)), mat3(1.0) * (vec3(-1326.5489, 0.0, log(1.0)))))))))), -1326.5489, _GLF_IDENTITY(-1326.5489, _GLF_IDENTITY((-1326.5489) / 1.0, (false ? _GLF_FUZZED(exp(-1.2)) : (-1326.5489) / 1.0))))), -569.439, -7.6, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9866.3548))), -6262.4462, 9.6, -2.5, 3.0, -760.022, _GLF_IDENTITY(_GLF_IDENTITY(61.71, (false ? _GLF_FUZZED(-5.3) : 61.71)), (_GLF_IDENTITY(61.71, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5.3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))))), -5.3, -5.3))) : 61.71))) + 0.0), 7.6, _GLF_IDENTITY(-5.3, mix(float(_GLF_FUZZED(-8.7)), float(-5.3), bool(true))), _GLF_IDENTITY(-8.3, min(-8.3, -8.3)), -6210.5294, 1.0) * mat4(67.86, -3565.6369, 554.176, 6138.7909, -10.94, 7633.0098, 68.44, -123.000, 8.6, 7087.7112, 554.372, 19.58, -2.9, -8.3, -2.7, -356.211), (mat4(_GLF_IDENTITY(45.43, mix(float(_GLF_IDENTITY(45.43, min(45.43, 45.43))), float(_GLF_FUZZED(-50.87)), bool(false))), _GLF_IDENTITY(-1326.5489, clamp(_GLF_IDENTITY(-1326.5489, min(_GLF_IDENTITY(-1326.5489, mix(float(_GLF_FUZZED(58.99)), float(_GLF_IDENTITY(-1326.5489, float(vec3(_GLF_IDENTITY(-1326.5489, max(_GLF_IDENTITY(-1326.5489, _GLF_IDENTITY(float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), mat4(1.0) * (vec4(0.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.5)), float(1.0), bool(true))), 1.0, 1.0)), 1.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(sqrt(1.0), float(mat3x4(sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, tan(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, tan(0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), tan(0.0), abs(1.0)))), 0.0, 0.0)), clamp(float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - sqrt(0.0)))), 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))), float(mat3x2(_GLF_IDENTITY(-1326.5489, min(-1326.5489, -1326.5489)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0)), float(mat3x2(-1326.5489, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 0.0))))), -1326.5489)), 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(-1326.5489, min(-1326.5489, _GLF_IDENTITY(-1326.5489, float(_GLF_IDENTITY(vec3(-1326.5489, 0.0, log(1.0)), mat3(1.0) * (vec3(-1326.5489, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(true))), log(1.0)))))))))), -1326.5489, _GLF_IDENTITY(-1326.5489, _GLF_IDENTITY((-1326.5489) / 1.0, (false ? _GLF_FUZZED(exp(-1.2)) : (-1326.5489) / 1.0))))), -569.439, -7.6, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9866.3548))), -6262.4462, 9.6, -2.5, 3.0, -760.022, _GLF_IDENTITY(_GLF_IDENTITY(61.71, (false ? _GLF_FUZZED(-5.3) : 61.71)), (_GLF_IDENTITY(61.71, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-5.3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))))), -5.3, -5.3)), mix(float(_GLF_FUZZED((-8.4 - 76.15))), float(_GLF_IDENTITY(-5.3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-5.3, float(mat3x2(-5.3, 0.0, 0.0, 0.0, 0.0, 0.0))))), -5.3, -5.3))), bool(true)))) : 61.71))) + 0.0), 7.6, _GLF_IDENTITY(-5.3, mix(float(_GLF_FUZZED(-8.7)), float(-5.3), bool(true))), _GLF_IDENTITY(-8.3, min(-8.3, -8.3)), -6210.5294, 1.0) * mat4(67.86, -3565.6369, 554.176, 6138.7909, -10.94, 7633.0098, 68.44, -123.000, 8.6, _GLF_IDENTITY(7087.7112, (false ? _GLF_FUZZED(823.512) : _GLF_IDENTITY(7087.7112, (true ? _GLF_IDENTITY(7087.7112, (7087.7112) * 1.0) : _GLF_FUZZED(-177.609))))), 554.372, 19.58, -2.9, -8.3, -2.7, -356.211)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)));
                         case 11:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          continue;
                         vec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                         if(_GLF_DEAD(false))
                          return;
                         case 0:
                         case 57:
                         case 45:
                         17876;
                         break;
                         case 55:
                         if(_GLF_DEAD(false))
                          continue;
                         mat2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[42];
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         default:
                         1;
                        }
                       break;
                       case 67:
                       (mat4x2(-1463.4222, -76.87, -89.73, -209.586, -8.6, -567.490, _GLF_IDENTITY(-569.745, float(_GLF_IDENTITY(float(-569.745), float(mat3x4(float(-569.745), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), abs(0.0)))))), -34.20) * mat4(693.176, -9773.0646, -5.4, 462.924, 367.416, -9.2, -35.85, 7.2, -8.2, -1153.7322, 2.5, -3987.2498, -9.6, 0.0, -9.8, 50.76));
                       case 45:
                       float _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
                       default:
                       1;
                      }
                     break;
                     default:
                     1;
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                      continue;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
                    continue;
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(8812.6449, 8104.5813))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, sin(0.0))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(8812.6449, 8104.5813))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, sin(0.0))))))), true))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                }
               sin(cosh(_GLF_IDENTITY(vec3(909.473, 5.0, -9.2), (vec3(909.473, 5.0, -9.2)) / vec3(1.0, 1.0, 1.0))));
               _GLF_IDENTITY(ivec3(81166, -44105, _GLF_IDENTITY(4321, int(ivec4(_GLF_IDENTITY(4321, min(4321, 4321)), _GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), _GLF_IDENTITY((1 ^ 0), 0 ^ ((1 ^ 0))), (1 ^ 0))), 0, 0)))), (_GLF_IDENTITY(ivec3(81166, -44105, _GLF_IDENTITY(4321, int(ivec4(_GLF_IDENTITY(4321, min(4321, 4321)), _GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), _GLF_IDENTITY((1 ^ 0), 0 ^ ((1 ^ 0))), (1 ^ 0))), 0, 0)))), ~ (~ (ivec3(81166, -44105, _GLF_IDENTITY(4321, int(ivec4(_GLF_IDENTITY(4321, min(4321, 4321)), _GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), _GLF_IDENTITY((1 ^ 0), 0 ^ ((1 ^ 0))), (1 ^ 0))), 0, 0)))))))) ^ ivec3(0, 0, 0));
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 vec4(-11.10, vec3(-90.84, 4.4, 11.11));
                }
              }
             if((findMSB(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(168334u, 55763u), max(_GLF_IDENTITY(uvec2(168334u, 55763u), (uvec2(168334u, 55763u)) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(168334u, 55763u), ~ (~ (uvec2(168334u, 55763u)))))), _GLF_IDENTITY((uvec2(168334u, 55763u)) ^ uvec2(0u, 0u), ((uvec2(168334u, 55763u)) ^ uvec2(0u, 0u)) / uvec2(1u, 1u)))) != ivec2(-33882, 60759)))
              {
               mat3x4(93.29, -965.414, -7.8, -3.4, -760.639, -97.23, -9.9, -4.0, -9005.1420, -295.278, _GLF_IDENTITY(4.7, min(4.7, 4.7)), -365.611);
               if(_GLF_DEAD(false))
                break;
               _GLF_IDENTITY(num_workgroup, (num_workgroup) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                 ;
                }
               mat3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[38];
               mat4x2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       case 0:
       case 24:
       case 7:
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(uint(uvec4(uint(read_1 + 1 == read_2) + 1, 1u, 0u, 1u)), 0u + (uint(uvec4(uint(read_1 + 1 == read_2) + 1, 1u, 0u, 1u))))), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1)))) * 1)) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1)))) * 1)) - 0, ((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1)))) * 1)) - 0) | ((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1)))) * 1)) - 0))) | ((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1)))) * 1)) - 0))) < 1); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(8), int(8)))))
          {
           case 52:
           mat2 _GLF_SWITCH_6_0v;
           case 0:
           if(_GLF_DEAD(false))
            continue;
           case 38:
           if(_GLF_DEAD(false))
            return;
           break;
           case 57:
           mat2 _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[93], _GLF_SWITCH_6_3v;
           default:
           1;
          }
        }
       case 87:
       case 98:
       case 90:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       case 86:
       case 94:
       subgroupAll(_GLF_IDENTITY(true, (true) || false));
       break;
       case 69:
       while((bvec4(true, true, false, true) == bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)))
        {
         ;
         ivec3(9800, _GLF_IDENTITY(52496, min(52496, 52496)), 40103);
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (1 | 1) * _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, (0) | 0)))) - 0) ^ ((int(2))))) << 0)), max(_GLF_IDENTITY(int(2), (1 | 1) * _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), 0 ^ ((int(2))))) << 0)), _GLF_IDENTITY(int(2), (1 | 1) * _GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY((int(2)), 0 ^ ((int(2))))) << 0)))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), 0 ^ (_GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 + (2))))), int(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY(0, (0) | (0)))); _injected_loop_counter --)
          {
          }
         if(_GLF_DEAD(false))
          return;
         ;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true, true).b;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          break;
         for(mat2 _GLF_SWITCH_0_17v; true; mat3x2(59.93, _GLF_IDENTITY(-1.5, min(-1.5, -1.5)), -529.687, 9.1, _GLF_IDENTITY(7.3, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) + (7.3)), 229.540))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         mat4x2(_GLF_IDENTITY(-9.3, min(_GLF_IDENTITY(-9.3, max(-9.3, _GLF_IDENTITY(-9.3, 1.0 * (-9.3)))), -9.3)), -1969.5684, -0.6, -914.591, -38.62, _GLF_IDENTITY(-13.73, clamp(-13.73, -13.73, _GLF_IDENTITY(-13.73, max(-13.73, -13.73)))), 4899.3298, 881.093);
         for(ivec4 _GLF_SWITCH_0_18v[82], _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v; false; _GLF_IDENTITY((_GLF_IDENTITY(+ (_GLF_IDENTITY(ivec2(-71363, 52488), (ivec2(-71363, 52488)) << ivec2(0, 0)) >> _GLF_IDENTITY(31038, min(31038, _GLF_IDENTITY(31038, (31038) >> 0)))), ~ (_GLF_IDENTITY(~ (+ (_GLF_IDENTITY(ivec2(-71363, 52488), (ivec2(-71363, 52488)) << ivec2(0, 0)) >> _GLF_IDENTITY(31038, min(31038, _GLF_IDENTITY(31038, (31038) >> 0))))), (~ (+ (_GLF_IDENTITY(ivec2(-71363, 52488), (ivec2(-71363, 52488)) << ivec2(0, 0)) >> _GLF_IDENTITY(31038, min(31038, _GLF_IDENTITY(31038, (31038) >> 0)))))) >> ivec2(0, 0))))), ((+ (_GLF_IDENTITY(ivec2(-71363, 52488), (ivec2(_GLF_IDENTITY(-71363, 0 + (_GLF_IDENTITY(-71363, clamp(-71363, -71363, _GLF_IDENTITY(-71363, (-71363) * 1))))), 52488)) << ivec2(0, 0)) >> _GLF_IDENTITY(31038, min(31038, _GLF_IDENTITY(31038, (31038) >> 0)))))) - ivec2(0, 0)))
          {
           switch(_GLF_SWITCH(0))
            {
             case 12:
             _GLF_SWITCH_0_19v;
             case 0:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
              continue;
             mat3(mat3x2(8.8, 7955.9445, -14.44, 2.1, 4.5, _GLF_IDENTITY(-9.7, (-9.7) / exp(sqrt(0.0)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), max((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec3(int(2), 0, 0), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(int(2), 0, 0), (ivec3(int(2), 0, 0)) ^ ivec3(0, 0, 0))))))), min(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0), int(int(_GLF_IDENTITY(int(2), int(2))))))))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false)))))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
                  {
                   greaterThan(uvec3(180756u, 93348u, 46325u), (uvec3(156555u, 88646u, 117735u) & read_2));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   uvec2(108955u, 125135u);
                  }
                 else
                  {
                  }
                 _GLF_IDENTITY(mat3(194.768, 3.7, -5.7, -0.1, -3.6, _GLF_IDENTITY(5.7, clamp(_GLF_IDENTITY(5.7, max(5.7, 5.7)), 5.7, 5.7)), _GLF_IDENTITY(-5908.4402, (true ? -5908.4402 : _GLF_FUZZED(determinant(mat2(mat2x4(69.27, -61.42, -7.7, 186.265, -8513.5138, -36.48, 4.2, 79.57)))))), 1.5, 976.303), (mat3(194.768, 3.7, -5.7, -0.1, -3.6, _GLF_IDENTITY(5.7, _GLF_IDENTITY(clamp(_GLF_IDENTITY(5.7, max(5.7, 5.7)), 5.7, 5.7), _GLF_IDENTITY(float(mat2x3(clamp(_GLF_IDENTITY(5.7, max(5.7, 5.7)), 5.7, 5.7), 1.0, 0.0, exp(0.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(-7.1)), float(float(mat2x3(clamp(_GLF_IDENTITY(5.7, max(5.7, 5.7)), 5.7, 5.7), 1.0, 0.0, exp(0.0), 1.0, 1.0))), bool(true))))), -5908.4402, 1.5, 976.303)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
                 if(_GLF_DEAD(false))
                  break;
                 ivec2(-24397, -35611);
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0))) >> _GLF_IDENTITY(int(3), int(3)))))
                    {
                     case 60:
                     uint _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[47];
                     case 36:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       uvec3(101222u, 113272u, 172190u);
                      }
                     case 0:
                     case 4:
                     case 72:
                     ;
                     break;
                     case 73:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
                        {
                         case 47:
                         ((ivec3(42312, -81228, 25805) << ivec3(50677, 31069, 50245)) | _injected_loop_counter);
                         case 5:
                         vec4(-2239.0113, 558.612, -452.880, 950.964);
                         case 0:
                         case 99:
                         case 85:
                         case 50:
                         mat2(-8.0, -7.4, -4.5, 5462.6339);
                         break;
                         case 65:
                         notEqual(uvec4(140445u, 63277u, 174544u, 51822u), uvec4(177682u, 191760u, 101263u, 115318u));
                         default:
                         1;
                        }
                      }
                     default:
                     1;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
                      break;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9923.3909)), bvec2(true, false))), vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x)) > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             ivec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
             case 3:
             ivec4 _GLF_SWITCH_0_23v;
             {
              mat4x2(_GLF_IDENTITY(32.65, (_GLF_IDENTITY(32.65, mix(float(32.65), float(_GLF_FUZZED(30.84)), bool(false)))) - sqrt(0.0)), 8.3, -394.455, -7.5, _GLF_IDENTITY(_GLF_IDENTITY(-95.52, (true ? _GLF_IDENTITY(-95.52, 0.0 + (-95.52)) : _GLF_FUZZED(-47.51))), (false ? _GLF_FUZZED(-8.5) : -95.52)), -9.1, 7.9, 5.2);
              mat2x3 _GLF_SWITCH_0_24v;
              if(_GLF_DEAD(false))
               return;
             }
             case 6:
             mat3x4(-84.61, _GLF_IDENTITY(9734.7628, (9734.7628) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.6, min(0.6, 0.6)), max(_GLF_IDENTITY(0.6, min(0.6, 0.6)), _GLF_IDENTITY(0.6, min(_GLF_IDENTITY(0.6, clamp(_GLF_IDENTITY(0.6, (0.6) - 0.0), 0.6, 0.6)), 0.6)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.6, min(0.6, 0.6)), max(_GLF_IDENTITY(0.6, min(0.6, 0.6)), _GLF_IDENTITY(0.6, min(_GLF_IDENTITY(0.6, clamp(_GLF_IDENTITY(0.6, (0.6) - 0.0), 0.6, 0.6)), 0.6)))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.6, min(0.6, 0.6)), max(_GLF_IDENTITY(0.6, min(0.6, 0.6)), _GLF_IDENTITY(0.6, min(_GLF_IDENTITY(0.6, clamp(_GLF_IDENTITY(0.6, (0.6) - 0.0), 0.6, 0.6)), 0.6)))), 1.0, 1.0, 1.0, 0.0, 0.0)))) + sin(0.0)), _GLF_IDENTITY(-1067.1344, mix(float(-1067.1344), float(_GLF_FUZZED(437.870)), bool(false))), -593.712, 0.7, -1.5, 199.789, _GLF_IDENTITY(-3835.3045, min(-3835.3045, _GLF_IDENTITY(-3835.3045, min(-3835.3045, -3835.3045)))), -95.62, -404.076, -1.8);
             while(true)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                continue;
               mat4x2(mat2x3(5.1, 2839.4430, -7.2, -11.23, -0.9, 3.8));
               vec3 _GLF_SWITCH_0_25v[6], _GLF_SWITCH_0_26v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             case 73:
             if(_GLF_DEAD(false))
              continue;
             bvec2 _GLF_SWITCH_2_0v;
             default:
             1;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) ^ 0), _GLF_IDENTITY(int(6), min(int(6), int(6)))))))))
            {
             case 0:
             case 51:
             case 17:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 20:
                 mat2x3(-1.4, -782.342, -4.5, -3.5, -0.4, -3650.1248);
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false)))))))))
                  break;
                 case 37:
                 float _GLF_SWITCH_3_0v;
                 if(_GLF_DEAD(false))
                  break;
                 case 0:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 else
                  {
                  }
                 break;
                 case 28:
                 93833;
                 default:
                 1;
                }
              }
             else
              {
              }
             break;
             case 26:
             mat4(8264.7612, -5.0, 9.8, -1.6, 377.312, -8.6, 3368.9672, 66.77, 2.9, -308.194, -385.778, _GLF_IDENTITY(-7.6, clamp(-7.6, _GLF_IDENTITY(-7.6, (-7.6) - log(1.0)), -7.6)), -36.41, -7.0, 3477.1460, -2.7);
             default:
             1;
            }
          }
         {
          if(_GLF_IDENTITY(true, (true) && true))
           {
            max(_GLF_IDENTITY(ivec2(27036, 36012), (_GLF_IDENTITY(ivec2(27036, 36012), (ivec2(27036, 36012)) ^ ivec2(0, 0))) | (ivec2(27036, 36012))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-43574, -17343), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-43574, max(-43574, _GLF_IDENTITY(-43574, 1 * (-43574)))), -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), min(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))))) << ivec2(0, 0)))), (ivec2(-43574, -17343)) + ivec2(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-43574, _GLF_IDENTITY(-17343, clamp(-17343, -17343, _GLF_IDENTITY(-17343, (-17343) * 1)))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0)))))), (ivec2(-43574, -17343)) + ivec2(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(int(int((0))), 0 | (int(int((0)))))))) | (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-43574, -17343), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0), ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))), ~ (~ (ivec2(_GLF_IDENTITY(ivec2(-43574, -17343), (false ? _GLF_FUZZED(ivec2(35556, -27981)) : ivec2(-43574, -17343)))))))) << ivec2(0, 0)) ^ ivec2(0, 0))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (ivec2(-43574, -17343)) + ivec2(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))) | (0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))) | (0), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0, 0 ^ (0))) | (0), 1, 0), ivec3(0, 0, 0) ^ (ivec3((_GLF_IDENTITY(0, 0 ^ (0))) | (0), 1, 0))))) : _GLF_FUZZED(-82388)))))))))));
            ;
            bool(-9852.3055);
            if(_GLF_DEAD(false))
             break;
            ivec4(81024, 65181, 92043, -43120);
            bvec2(_GLF_IDENTITY(true, true && (true)), (mat2(-8.3, 4426.7150, _GLF_IDENTITY(-6242.1993, mix(float(_GLF_FUZZED(-913.900)), float(-6242.1993), bool(true))), 699.628) == mat2(1.0, -2941.7094, -6.6, -68.77)));
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            (mat2x4(56.30, 60.74, -8163.1964, _GLF_IDENTITY(-567.944, min(-567.944, -567.944)), 2.8, 2.7, 1.5, -379.835) + _GLF_IDENTITY(-2348.5696, min(-2348.5696, -2348.5696)));
           }
          else
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))))
             {
              case 0:
              case 62:
              bool _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
              do
               {
                mat3x4(_GLF_IDENTITY(-54.46, mix(float(_GLF_FUZZED(vec4(9.8, -5.3, 1185.4895, -8.4).q)), float(-54.46), bool(true))), 93.75, -7753.5403, -789.271, 0.0, 8.1, -2947.7253, -913.786, 160.485, 5.5, -0.3, -62.47);
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              vec3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[89];
              case 25:
              if(_GLF_DEAD(false))
               continue;
              bvec2 _GLF_SWITCH_0_32v[63], _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
              case 41:
              case 14:
              mat2 _GLF_SWITCH_0_35v[49], _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
              case 65:
              case 79:
              float _GLF_SWITCH_0_38v[82], _GLF_SWITCH_0_39v[75], _GLF_SWITCH_0_40v;
              case 18:
              ivec3 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[2];
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                continue;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              case 11:
              uvec4 _GLF_SWITCH_0_43v[84], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               return;
              break;
              case 4:
              ;
              default:
              1;
             }
           }
         }
        }
       default:
       _GLF_IDENTITY(1, int(int(1)));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) || false)))))) || false)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
}
