#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec2 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 uvec3 _f3;
 int _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_8 {
 int _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 bvec2 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat3x4 _f1;
 int _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat4 _f1;
 mat3 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 uint read_2;
 _GLF_struct_11 _f2;
 int _f3;
 ivec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 uint read_1;
} ;

struct _GLF_struct_0 {
 uint next_virtual_gid;
 mat2x3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 int _f1;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 int _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 | 0) | 0, clamp((0 | 0) | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0)))) << 0)) | 0, max((0 | 0) | 0, (0 | 0) | 0)), (0 | 0) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) + 0) < (((0 ^ 1) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | (0 >> _GLF_IDENTITY(int(8), int(8))))) << 0))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (-1342 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-11.27)), vec2(_GLF_FUZZED((- 556.447)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-11.27)), vec2(_GLF_FUZZED((- 556.447)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-658.000)), float(injectionSwitch.y), bool(true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0)), mat4x3(mat4(mat4x3(injectionSwitch.x, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)), 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0))))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ 0), (_injected_loop_counter != (1 ^ 0)) && true)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), true, true))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(vec3(-4167.9229, 56.31, 8.6).s)), bvec2(false, false))).y)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(! (! (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), max(_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), (vec3(-4167.9229, 56.31, 8.6)) - vec3(0.0, 0.0, 0.0)), vec3(-4167.9229, 56.31, 8.6))))).s)), bvec2(false, false))).y)) || false)), ! (! (! (! (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0]) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-4167.9229, (-4167.9229) - length(vec4(0.0, 0.0, 0.0, 0.0))), 56.31, 8.6), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0) + (_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), max(_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), (vec3(-4167.9229, 56.31, 8.6)) - vec3(0.0, 0.0, 0.0)), vec3(-4167.9229, _GLF_IDENTITY(56.31, float(_GLF_IDENTITY(mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 8.6))))).s)), bvec2(false, false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0]) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-4167.9229, (-4167.9229) - length(vec4(0.0, 0.0, 0.0, 0.0))), 56.31, 8.6), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0) + (_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), max(_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), (vec3(-4167.9229, 56.31, 8.6)) - vec3(0.0, 0.0, 0.0)), vec3(-4167.9229, _GLF_IDENTITY(56.31, float(_GLF_IDENTITY(mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 8.6))))).s)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-8.1, -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(float(true)), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))))[0], _GLF_FUZZED(1.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(398.489) : -8.1)), -66.14, -3.1, -42.45, -824.661, 75.83, -355.841, 7.0)) : mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))))))))))))[0]) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-4167.9229, (-4167.9229) - length(vec4(0.0, 0.0, 0.0, 0.0))), 56.31, 8.6), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0) + (_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), max(_GLF_IDENTITY(vec3(-4167.9229, 56.31, 8.6), (vec3(-4167.9229, 56.31, 8.6)) - vec3(0.0, 0.0, 0.0)), vec3(-4167.9229, _GLF_IDENTITY(56.31, float(_GLF_IDENTITY(mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(56.31, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 8.6))))).s)), bvec2(false, false))).y)))) || false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false)))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (! (bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), _GLF_IDENTITY(true && (bool(bool(false))), _GLF_IDENTITY(bool(bvec4(true && (bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(true && (bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0))), injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, true && (true)) && (bool(bool(false)))), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y) && true, false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), false)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * workgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat2x4(1.0), 1, _GLF_struct_1(_GLF_struct_0(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), mat2x3(1.0), mat2x3(1.0), mat4x2(1.0)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((56028 & 0) | 0) + ((1))) | (1)), 1, 1))));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), atomicLoad(buf[virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_2._f2._f0.next_virtual_gid], uint(_GLF_struct_replacement_3.read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)))) >> 0)) / 1))), 64, 4);
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_6(_GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), 0u + (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), mat3x4(1.0), 1, mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6586.6992)), float(0.0), bool(true))) + (1.0))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x) / 1.0) < injectionSwitch.y) || false))))) ? 0.0 : _GLF_FUZZED(-1.2))), 0.0, 0.0, 0.0, 0.0)), mat4(1.0) * (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), length(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), determinant(mat4(0.0, 0.0, abs(0.0), log(1.0), 1.0, sin(0.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY((mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mat3(1.0), _GLF_struct_5(mat2(1.0), ivec2(1))), _GLF_struct_7(bvec2(true)), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | 0), 0), _GLF_struct_11(_GLF_struct_8(1), bvec2(true), _GLF_struct_9(mat3(1.0), mat3x2(1.0)), _GLF_struct_10(uvec2(1u), mat2x3(1.0), mat3x4(1.0), uvec3(1u), 1, mat4(1.0), mat2(1.0))), 1, ivec2(1), mat2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) < 1) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-0.1, -11.77, -57.19))) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3364.0997) : _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3364.0997) : _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]) - 0.0)))) / 1.0))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(exp(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))).y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3056.4306), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3056.4306), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3056.4306), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), float(mat3x4(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3056.4306), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3056.4306), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 1.0)))) > injectionSwitch.y))) || false)), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[_GLF_struct_replacement_2._f2._f0.next_virtual_gid], uint(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         subgroupAll(false);
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7665.1110)))), mix(float(_GLF_FUZZED(-5604.7297)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7665.1110)))), ((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7665.1110))))) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
            }
           do
            {
             do
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, sqrt(1.0), 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, sqrt(1.0), 0.0, 0.0)))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))))));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), (bool(_GLF_DEAD(false))) || false), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, false)))))))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true, false))) || false)))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), mix(float(float(vec2(injectionSwitch.x, 0.0))), float(_GLF_FUZZED(-0.8)), bool(false))))) + 0.0) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_2._f2._f0.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2) + 1), (true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2, ! (! (_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2)))) + 1), _GLF_IDENTITY(((uint(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2) + 1)) | ((uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, 0u | (_GLF_struct_replacement_3.read_1 + 1))) | 0u))) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) / 1)))))), (((uint(_GLF_struct_replacement_3.read_1 + 1 == _GLF_struct_replacement_12.read_2) + 1)) | ((uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_3.read_1 + 1, 0u | (_GLF_struct_replacement_3.read_1 + 1))) | 0u))) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) / 1))))))) >> (39536u & 0u))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) ? _GLF_FUZZED(subgroup_id) : (uint(_GLF_struct_replacement_3.read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0)), clamp(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, true && (false)), true))) ? _GLF_FUZZED(subgroup_id) : (uint(_GLF_struct_replacement_3.read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) ? _GLF_FUZZED(subgroup_id) : (uint(_GLF_struct_replacement_3.read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(_GLF_struct_replacement_12.read_2, max(_GLF_struct_replacement_12.read_2, _GLF_struct_replacement_12.read_2))) + _GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, (_GLF_struct_replacement_3.read_1) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, (true ? _GLF_struct_replacement_3.read_1 : _GLF_FUZZED(subgroup_local_id))))), _GLF_struct_replacement_3.read_1, _GLF_struct_replacement_3.read_1)) + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, 1u * (_GLF_struct_replacement_3.read_1)) + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, 1u * (_GLF_struct_replacement_3.read_1)) + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, 1u * (_GLF_struct_replacement_3.read_1)) + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0))), uint(_GLF_IDENTITY(_GLF_struct_replacement_3.read_1, 1u * (_GLF_struct_replacement_3.read_1)) + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_12.read_2) + _GLF_IDENTITY(1, (1) << 0))))))))))) << 0u), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
   subgroupAll(true);
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = (int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
