#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true)))), (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec3(bvec2((! (false)), true), true))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), max(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), max(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)))), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), (mat2x4(_GLF_IDENTITY(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), max(vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(46.30), _GLF_FUZZED(-5.3)))), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (bool(bvec3(_GLF_DEAD(false), true, false)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), min(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && (bool(injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-9.8)))) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-9.8)))) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-9.8)))) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))), false))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-9.8)))) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.2, 5738.2722)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)), ! (! (! (false)))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), -6434.6395))), (true ? max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), -6434.6395))) : _GLF_FUZZED(exp2(injectionSwitch))))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0])), _GLF_FUZZED(-190.754)), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))) && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(21.77, -4845.6218)))).x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, round(length(normalize(1.0))), abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-1.5, -6434.6395), min(_GLF_IDENTITY(vec2(-1.5, -6434.6395), clamp(vec2(-1.5, -6434.6395), _GLF_IDENTITY(vec2(-1.5, -6434.6395), vec2(mat3x4(vec2(-1.5, -6434.6395), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(48.38)) : 1.0))))))), _GLF_IDENTITY(vec2(-1.5, -6434.6395), (vec2(-1.5, -6434.6395)) / vec2(1.0, 1.0)))), vec2(-1.5, -6434.6395)))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-190.754, clamp(-190.754, -190.754, _GLF_IDENTITY(-190.754, clamp(-190.754, -190.754, -190.754)))))), (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-1.5, -6434.6395), min(_GLF_IDENTITY(vec2(-1.5, -6434.6395), clamp(vec2(-1.5, -6434.6395), _GLF_IDENTITY(vec2(-1.5, -6434.6395), vec2(mat3x4(vec2(-1.5, -6434.6395), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(-1.5, -6434.6395), (vec2(-1.5, -6434.6395)) / vec2(1.0, 1.0)))), vec2(-1.5, -6434.6395)))))))[0], _GLF_FUZZED(-190.754))) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[1]), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))).x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(1.0)) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(1.0)) + 0.0) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(1.0)) + 0.0) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(1.0)) + 0.0) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(1.0)) + 0.0) > injectionSwitch.y)))))))), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), (true ? _GLF_IDENTITY(((injectionSwitch.x)), mix(float(((injectionSwitch.x))), float(_GLF_FUZZED(1470.2643)), bool(false))) : _GLF_FUZZED(-7.6))) * sqrt(1.0)) + 0.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.5)), bool(false))))) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.5)), bool(false))))) + 0.0) > injectionSwitch.y)) || false))))))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y))))))))), ((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false), false, true, false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))))))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y))))))))), ((bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false), false, true, false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))))))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false))))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6572.1770), _GLF_FUZZED(9616.2949)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-1.5, -6434.6395), vec2(_GLF_IDENTITY(mat4(vec2(-1.5, -6434.6395), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(sin(0.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(sin(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (mat4(vec2(-1.5, -6434.6395), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(sin(0.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(sin(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), mat2(1.0) * (max(_GLF_FUZZED(vec2(-1.5, _GLF_IDENTITY(-6434.6395, clamp(-6434.6395, -6434.6395, -6434.6395)))), _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.5, clamp(_GLF_IDENTITY(-1.5, max(-1.5, _GLF_IDENTITY(-1.5, (-1.5) + 0.0))), -1.5, -1.5)), -6434.6395)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-61.26)), max(float(_GLF_FUZZED(-61.26)), _GLF_IDENTITY(float(_GLF_FUZZED(-61.26)), mix(float(_GLF_FUZZED(-482.590)), float(float(_GLF_FUZZED(-61.26))), bool(true))))), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))))).y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))) && true)))), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_IDENTITY(_GLF_FUZZED(-190.754), float(mat4(_GLF_FUZZED(-190.754), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_IDENTITY(_GLF_FUZZED(-190.754), float(mat4(_GLF_FUZZED(-190.754), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))))))) && true)), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754))), mat2(1.0) * (max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))[0], _GLF_FUZZED(-190.754)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_IDENTITY(_GLF_FUZZED(-190.754), float(mat4(_GLF_FUZZED(-190.754), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], _GLF_FUZZED(-190.754)))))), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(cos(0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, log(1.0)))) > injectionSwitch.y))))))) && true)), true, true))))))), bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(60.29)), bool(false)))), float(_GLF_FUZZED(989.416)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-61.26)), float(1.0), bool(true))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), vec2(mat4(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), clamp(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), length(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 0.0))), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.5, (-1.5) - 0.0), -6434.6395)))))[1]), vec2(_GLF_FUZZED((804.735 * -323.466)), _GLF_FUZZED(-4.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, _GLF_IDENTITY(-6434.6395, clamp(_GLF_IDENTITY(-6434.6395, (-6434.6395) * 1.0), -6434.6395, _GLF_IDENTITY(-6434.6395, (false ? _GLF_FUZZED(3259.6895) : -6434.6395)))))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(float(170540u))), vec2((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))))), max(min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))))))), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))[0], (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), determinant(mat2(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), determinant(mat2(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.5, -6434.6395)), (_GLF_FUZZED(vec2(-1.5, -6434.6395))) / vec2(1.0, 1.0)), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_FUZZED(vec2(-1.5, -6434.6395)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -6434.6395)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), clamp(vec2(_GLF_IDENTITY(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_FUZZED(vec2(-1.5, -6434.6395)), _GLF_FUZZED(vec2(-1.5, -6434.6395))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))[1]), bvec2(true, true)))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0], mix(float(_GLF_FUZZED(1.0)), float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[0]), bool(true))), _GLF_FUZZED(-190.754)), vec2(_GLF_FUZZED(-58.08), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -6434.6395)))))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))))))))))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false), _GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))), ((true && ((injectionSwitch.x > injectionSwitch.y)))) || false) || false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), true, true))))), false)))))))) && true)))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, 7.8)) : injectionSwitch)).y) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))), (min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))) * mat2(1.0))), log(1.0), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0)), (vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))), log(1.0), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(2.1))))), float(_GLF_FUZZED(10.12)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicXor(workgroup_base, (workgroup_id & subgroup_local_id))) : subgroup_size)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u) + _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size))))), ~ (~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicXor(workgroup_base, (workgroup_id & subgroup_local_id))) : subgroup_size)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> 0u) + _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u, max((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)))))))) + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, (_GLF_IDENTITY((subgroup_id) - 0u, (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id) - 0u))) << 0u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(0u | (uint(8u)), (0u | (uint(8u))) - (0u ^ 0u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(0u | (uint(8u)), (0u | (uint(8u))) - (0u ^ 0u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))) + 0u))) - 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, 0u | (0u))))))))) ^ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-7334.4519)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_size))))))) + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true, true))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))) | 0u), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 0u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (false ? _GLF_FUZZED(uvec3(161526u, 87653u, 92423u).t) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)), max((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (subgroup_size))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)), max((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (subgroup_size))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u)))), (_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)), max((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (subgroup_size))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u))))) | uvec2(0u, 0u))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u), _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u), 0u)), max((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) ^ (uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(0u, 0u | (0u)))))))))) >> 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, 0u ^ (0u)))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u)))) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u))) ^ 0u))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u)))) + 1)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u)))) / 1u)))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, ~ (~ (0u))))) | ((subgroup_local_id))) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ~ (_GLF_IDENTITY(~ ((subgroup_local_id) | 0u), ~ (~ (~ ((subgroup_local_id) | 0u)))))))) / 1u, 1u, 1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u), (true ? (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(122071u, 142007u, 72747u, 1374u))))) / uvec4(1u, 1u, 1u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, min(0u, 0u)))) / 1u, 1u, 1u, 0u), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))))) / 1u, 1u, 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u, 1u, 1u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u))), min(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u))), _GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u)))))) >> uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u), min(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 0u), uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u, 0u)))) >> uvec4(0u, 0u, 0u, 0u)))))))))) + 1))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), max(uvec3(subgroup_size, 1u, 0u), uvec3(subgroup_size, 1u, 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | _GLF_IDENTITY((4), ((4)) >> 0)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) >> 0), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), uint(1u))), _GLF_IDENTITY(((subgroup_size) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), min(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u)))))) ^ 0u, (((subgroup_size) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), min(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u)))))) ^ 0u) << 0u))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / sqrt(vec2(1.0, 1.0))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-18.78)), bool(false))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-18.78)), bool(false))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-18.78)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))) || false, (_GLF_IDENTITY((bool(false)) || false, bool(bvec3((bool(false)) || false, false, false)))) || false))) || false))) > injectionSwitch.y, true, true, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-18.78)), bool(false))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-18.78)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, (_GLF_IDENTITY((bool(false)) || false, bool(bvec3((bool(false)) || false, false, false)))) || false))) || false))) > injectionSwitch.y, true, true, false))))) && true), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) ^ 0), (_GLF_IDENTITY(1, (1) - 0)))) - 0)) + 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, (1) + 0) == read_2)) | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) + 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (int(ivec2(_GLF_IDENTITY(1, (1) + 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) / 1)) == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true) || _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false || (false)))), false, true, false))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))) && true) || _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false || (false)))), false, true, false)))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)) >> 0u), (next_virtual_gid) ^ _GLF_IDENTITY(0u, max(0u, 0u)))], uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(read_1 + 1 == read_2, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) - 0u), read_1)) + 1 == read_2, false))), bvec2(bvec2(bvec2(bvec2(bvec2(read_1 + 1 == read_2, false)))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(read_1 + 1 == read_2, false))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2, false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2, false))), true, false))))))))), true)), false)))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))), bool(bvec3(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
  barrier();
}
