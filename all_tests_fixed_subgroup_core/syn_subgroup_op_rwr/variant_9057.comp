#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupSize.x)), (uint(uint(gl_WorkGroupSize.x))) >> 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(2096.0780)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(2096.0780)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - 0.0)), float(_GLF_FUZZED(2096.0780)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_IDENTITY(false, ! (! (false))))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (0u | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY((workgroup_id) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), _GLF_IDENTITY(((workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (workgroup_id), max(_GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) << 0u), 0u | (workgroup_id)))))) | 0u, min(((workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (workgroup_id), max(_GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) << 0u), 0u | (workgroup_id)))))) | 0u, ((workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (workgroup_id), max(_GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) << 0u), 0u | (workgroup_id)))))) | 0u))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), min(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))) ^ 0u, ((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))) ^ 0u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))) + ((1u ^ 1u) & (72528u | 142545u))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u))), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), workgroup_base + subgroup_id * subgroup_size), ~ (~ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ~ (workgroup_base))))), max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) + subgroup_id * subgroup_size)))), (clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) >> 0u)))) | (_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), min(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | 0u))))), ~ (~ (min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) - 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)) * (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), int(ivec3(0 | (1), 0, _GLF_IDENTITY(0, 1 * (0))))))) % subgroup_size), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) << 0u), buf[virtual_gid])), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) - 0u)) - 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], mix(float(_GLF_FUZZED(-9302.2040)), float((injectionSwitch)[1]), bool(_GLF_IDENTITY(true, (true) && true))))), bvec2(true, true))).y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), mix(float(_GLF_FUZZED(-5003.3671)), float(_GLF_FUZZED(-260.971)), bool(false)))) / cos(0.0)), (false ? _GLF_FUZZED(-3480.6791) : _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / cos(0.0)))), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / cos(0.0)))), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), max(_GLF_FUZZED(-5003.3671), _GLF_FUZZED(-5003.3671)))))), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-597.432, -22.55)))))[1]), bvec2(true, true))))).y), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), min(_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(_GLF_IDENTITY(-5003.3671, (-5003.3671) - 0.0))) / cos(0.0)), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), max(_GLF_FUZZED(-5003.3671), _GLF_FUZZED(-5003.3671)))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(_GLF_IDENTITY(true, (true) || false), true))))).y), float(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), min(_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(_GLF_IDENTITY(-5003.3671, (-5003.3671) - 0.0))) / cos(0.0)), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), max(_GLF_FUZZED(-5003.3671), _GLF_FUZZED(-5003.3671)))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(_GLF_IDENTITY(true, (true) || false), true))))).y), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), abs(0.0)))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(733.769) : injectionSwitch.y)))), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-6.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6.6), float(mat4(_GLF_FUZZED(-6.6), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(vec3(2143.5124, 5375.1597, -840.066))))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, exp(0.0)))), _GLF_IDENTITY(_GLF_FUZZED(-6.6), mix(float(_GLF_FUZZED(-5.3)), float(_GLF_FUZZED(-6.6)), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), _GLF_IDENTITY(_GLF_FUZZED(-6.6), clamp(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6))))), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), min(_GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / cos(_GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), max(_GLF_FUZZED(-5003.3671), _GLF_IDENTITY(_GLF_FUZZED(-5003.3671), (_GLF_FUZZED(-5003.3671)) / 1.0)))))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))))).y), _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-30.47)), bool(false)))))), vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))))))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), (vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9302.2040)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.6, (false ? _GLF_FUZZED(_GLF_IDENTITY(216.274, min(216.274, 216.274))) : -6.6))), _GLF_FUZZED(-5003.3671)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, ! (! (true))), true))))))).y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(52636))) == read_2) + _GLF_IDENTITY(1, clamp(1, 1, 1)), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0)), 0.0 + (float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5639.2265)), bool(false)))) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5639.2265)), bool(false)))) - 0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5639.2265)), bool(false)))) - 0.0)))))) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5639.2265)), bool(false)))) - 0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5639.2265)), bool(false)))) - 0.0)))))) && true))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | 0) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u)) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2)))))))))) + 1, clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1, uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1, (read_1) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 1 == read_2) + 1)), 1u, 0u), min(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))) | (read_1)) + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (read_2) ^ 0u)))) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u), uint(read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) + 0))) == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u), uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u)))), max((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u), min(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) * 1), clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2)) - 0u), 1u))) + _GLF_IDENTITY(1, (1) + 0), clamp(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))) << 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED((subgroup_id ^ read_1)))) == read_2) + 1)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 1u * _GLF_IDENTITY((read_1 + 1), min((read_1 + 1), (read_1 + 1)))) == read_2) + _GLF_IDENTITY(1, (1) >> 0), clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED((subgroup_id ^ read_1)))) == read_2) + 1))) - 0u), 1u, 0u), uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))), uvec3(uvec3((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == _GLF_IDENTITY(read_2, min(read_2, read_2))) + 1, clamp(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))))) && true))))) + 1, uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u)) | (read_1 + 1)) == read_2) + 1)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u)), 0u), min(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))) + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + _GLF_IDENTITY(1, 0 + (1)) == read_2) + 1, _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1)))) == read_2), 0u + (uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(ivec3(int(int(1)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(int(3), 1)), ~ (~ (int(ivec2(int(3), 1))))))) >> 0))), 1)))) == read_2))) + 1)), 1u, 0u), uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, 0u | (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - (0u | 0u))) ^ 0u)) + 1, clamp(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2) + _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == read_2), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (0u))))) + 1 == read_2)), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read_1), max((read_1), (read_1)))), (true ? ~ (_GLF_IDENTITY((read_1), max((read_1), (read_1)))) : _GLF_FUZZED(num_workgroup))))) | 0u) + 1 == read_2)))))) + 1, uint(read_1 + 1 == read_2) + 1)), 1u, 0u))))))))) >> uvec3(0u, 0u, 0u))), (uint(uvec3(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, int(ivec3(1, (1 & 1), (0 ^ 1)))), 1u, 0u))) | (_GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + 1, 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + _GLF_IDENTITY(1, int(ivec2(1, 1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + 1, 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + 1, 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + 1, 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(int((1))))) == read_2) + 1, 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + 1, 1u, 0u))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (4) | (_GLF_IDENTITY(4, min(4, 4)))), clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0), 4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))), clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY((~ (~ (4))) << 0, max((~ (~ (4))) << 0, (~ (~ (4))) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0, min((_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0, (_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0)), (_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0))), 4)) : _GLF_FUZZED(61170))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
