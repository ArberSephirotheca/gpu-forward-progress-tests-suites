#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))), false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(sin(_GLF_IDENTITY(9953.2812, mix(float(_GLF_FUZZED(8495.9311)), float(9953.2812), bool(true))))), float(mat4(true ? injectionSwitch.x : _GLF_FUZZED(sin(_GLF_IDENTITY(9953.2812, mix(float(_GLF_FUZZED(8495.9311)), float(9953.2812), bool(true))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0)))).x, (false ? _GLF_FUZZED(-32.05) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), (false ? _GLF_FUZZED(unpackUnorm2x16(198603u)) : _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), clamp(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), 0.0, log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))))).x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(true, true && (true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), false || (false || (false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(75.83))) > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y) || false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.6, -133.874)) : injectionSwitch)).x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.6, -133.874)) : injectionSwitch)).x)) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.21)), vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), bvec2(false, true))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.6, -133.874)) : injectionSwitch)).x)) > injectionSwitch.y)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), true, false, false)), (bool(bvec4(bool(true), true, false, false))) || false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), true, false, false)), (bool(bvec4(bool(true), true, false, false))) || false))), bool(bool(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), true, false, false)), (bool(bvec4(bool(true), true, false, false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), (false) && _GLF_IDENTITY(true, ! (! (true))))), false, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, true)), false, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, true)), _GLF_IDENTITY(false, false || (false)), true), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false))))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(! ((false)), true && (! ((false)))), true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(! ((false)), true && (! ((false)))), true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(! ((false)), true && (! ((false)))), true)), true), false)), false)))))))))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5316.9717), _GLF_FUZZED(6.6)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-6.4), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(726.704)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))) && true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)))) || false), (false) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec2(! (_GLF_IDENTITY(true, (true) || false)), true))))), true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(5472.2272)), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(5472.2272)), bool(false))) > injectionSwitch.y)) && true))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) | (workgroup_base))))), (max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) >> 0u), 0u | (workgroup_base)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u), 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u + _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), 1u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), max(0u + (workgroup_base), 0u + (workgroup_base)))), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id), 1u * (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 1u, 1u, 0u)))) << 0u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), (true ? _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))), max(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))))))) >> 0u)) : _GLF_FUZZED(subgroup_id))), max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), 0u | (workgroup_base))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), (true ? _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))), max(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))))))))) >> 0u)) : _GLF_FUZZED(subgroup_id))), max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))), (((1u | 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), 0u | (workgroup_base)))))) - 0u))), 1u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, (0u) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, 1u))))), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u) + subgroup_local_id, 1u, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))))) + subgroup_id * subgroup_size + subgroup_local_id, 1u, 1u))) + 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), 0u | (_GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) / 1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), 0u | (_GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) / 1u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), 0u | (_GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) / 1u))))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), 0u | (_GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) / 1u))))))))), max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (true ? (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) : _GLF_FUZZED(workgroup_id)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 1u)), ~ (~ (uint(uvec2(workgroup_base, 1u)))))), workgroup_base)), 0u | (workgroup_base)))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | (1u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | (1u)))) << uvec2(0u, 0u)))) + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), _GLF_IDENTITY((false), true && ((false))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.3))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))))) || false)))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))))) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), ((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))) || false))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asin(-3065.4972)) : injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asin(-3065.4972)) : injectionSwitch.y)))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, true && (false)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) && true)) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, false))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_local_id + 1)) + 0u) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_local_id + 1)) + 0u) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_local_id + 1)) + 0u) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))), (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), false || (! (bool(bvec2(false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1), min(uint(read_1 + 1), uint(read_1 + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.59), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(33.03)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(33.03)))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))], buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u))), 0u, 1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u))), 0u, 1u, 0u)), min(uint(uvec4(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u))), 0u, 1u, 0u)))), 1u)))) : _GLF_FUZZED(workgroup_base))), 1u, _GLF_IDENTITY(0u, ~ (~ (0u))))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))), bool(bvec3(_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) + 1, 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 1u))), read_1, read_1)) + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1))) == read_2, true && (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1))) == read_2))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), bvec2(bvec4(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), true, false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), bvec2(bvec4(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), true, false))))))), false || (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), bvec2(bvec4(bvec2(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) | 0u) + 1 == read_2), true)), false), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7089.4878)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(false, true))).y)), false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(32192u) : ~ (_GLF_IDENTITY(1u, max(1u, 1u))))))), 0u)), 0u ^ (uint(uvec3(read_1, 1u, 0u))))) + 1 == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false)), bool(bool(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false))))))), bool(bvec4((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false)), bool(bool(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false))))))), false, false, false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 1u, 0u)), 0u ^ (uint(uvec3(read_1, 1u, 0u))))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false), bool(bool(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false), bool(bool(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false))))), true, true))))), true))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(uint(uvec3(read_1, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec3(read_1, 1u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(read_1, 1u, 0u))))))))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)) || false)))))))) && true))), bool(bvec2(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (bool(read_1 + 1 == read_2))), true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + 1)), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), clamp(_GLF_IDENTITY(~ ((4)), (~ ((4))) | (~ ((4)))), ~ ((4)), ~ ((4)))))) / 1), 4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) + _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))))))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), ((! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))), false))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) | (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))), 0u | _GLF_IDENTITY((next_virtual_gid), uint(uvec3((next_virtual_gid), 0u, 0u))))], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6361.6597))) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, ((injectionSwitch.y) * 1.0) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) + 0.0))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true, false, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x < injectionSwitch.y)), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) || false))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)))))))), bool(bvec3(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)))))))), true, false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)))), true, false)))))))))))))))), false, false, false))) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), _GLF_IDENTITY(float(vec3((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), clamp(float(vec3((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec3((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec3((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) - 0.0), (_GLF_FUZZED(1.5)) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(459.466) : 0.0)), 1.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(714.385))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(6.8)), float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(-1376.0628)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(54.25)), bvec2(false, false))).y : _GLF_IDENTITY(_GLF_FUZZED(1.5), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), clamp(_GLF_FUZZED(1.5), _GLF_FUZZED(1.5), _GLF_IDENTITY(_GLF_FUZZED(1.5), float(mat4x3(_GLF_FUZZED(1.5), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), (true ? _GLF_FUZZED(_GLF_IDENTITY(1.5, (1.5) + _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(sign(4.8)))), _GLF_IDENTITY(_GLF_FUZZED(1.5), min(_GLF_IDENTITY(_GLF_FUZZED(1.5), clamp(_GLF_FUZZED(1.5), _GLF_FUZZED(1.5), _GLF_FUZZED(1.5))), _GLF_FUZZED(1.5))))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1393.5852))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-9795.0820, 862.958, 180.191))) : 1.0)), 0.0)), max(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(62.48)), vec2(_GLF_FUZZED(-259.500), ((injectionSwitch))[1]), bvec2(false, true))), (injectionSwitch)))))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), (mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)) * mat4(1.0)))))), 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false)))) * 1.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)), float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0))))))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(54.25)), bvec2(false, false))).y : _GLF_IDENTITY(_GLF_FUZZED(1.5), max(_GLF_IDENTITY(_GLF_FUZZED(1.5), (true ? _GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(sign(4.8)), float(vec4(_GLF_FUZZED(sign(4.8)), abs(1.0), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(1.5), min(_GLF_IDENTITY(_GLF_FUZZED(1.5), clamp(_GLF_FUZZED(1.5), _GLF_FUZZED(1.5), _GLF_FUZZED(1.5))), _GLF_FUZZED(1.5))))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-9795.0820, 862.958, 180.191))) : 1.0)), 0.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.4))))))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(mat2x3(-1.6, 4.8, -79.58, 214.563, 0.5, 284.693))) : mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0)))))) * (injectionSwitch)))))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(-5.1)), bvec2(false, false))), mat2(1.0) * (injectionSwitch)))))))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, tan(0.0), 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.2)), float(float(mat2(1.0, tan(0.0), 0.0, 0.0))), bool(true)))), 0.0, 1.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))) * (injectionSwitch)))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.2), (_GLF_FUZZED(-8.2)) / 1.0), _GLF_FUZZED(54.25)), bvec2(false, false))).y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.5), (_GLF_FUZZED(1.5)) + _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_FUZZED(1.5), (true ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(_GLF_FUZZED(sign(4.8)), min(_GLF_FUZZED(sign(4.8)), _GLF_FUZZED(sign(4.8)))))), _GLF_IDENTITY(_GLF_FUZZED(1.5), min(_GLF_IDENTITY(_GLF_FUZZED(1.5), clamp(_GLF_FUZZED(1.5), _GLF_FUZZED(1.5), _GLF_FUZZED(1.5))), _GLF_FUZZED(1.5))))))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-4.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-9795.0820, 862.958, 180.191))) : 1.0)), max(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-9795.0820, 862.958, 180.191))) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(-9795.0820, 862.958, 180.191))) : 1.0)))), 0.0))))), bool(true)))), 1.0, 1.0, 0.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-67.07, mix(float(-67.07), float(_GLF_FUZZED(769.539)), bool(false)))) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, abs(log(1.0)), 0.0))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-78.76) : _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)))), (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(1.5), clamp(_GLF_FUZZED(_GLF_IDENTITY(1.5, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))) ? 1.5 : _GLF_FUZZED(-760.968)))), _GLF_IDENTITY(_GLF_FUZZED(1.5), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(1.5), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(0.0), bool(true))))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0)), min(float(mat4(_GLF_FUZZED(1.5), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(62.90) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3969.4924) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(905.246) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), min(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(905.246) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), (vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(905.246) : _GLF_IDENTITY(1.0, (1.0) - 0.0))))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(905.246) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0)), float(mat4(_GLF_FUZZED(1.5), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) * mat4(1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 1.0, 1.0, 1.0)), min(mat4(1.0) * (vec4(0.0, 1.0, 1.0, 1.0)), mat4(1.0) * (vec4(0.0, 1.0, 1.0, 1.0))))), vec4(1.0, 0.0, 0.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0))))), _GLF_FUZZED(1.5))))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.8)), float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.5))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), bool(true)), (mix(float(_GLF_FUZZED(6.8)), float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(1.5, _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(cos(0.0), 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(1.5, max(1.5, 1.5))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), bool(true))) / 1.0))), 1.0, 1.0, 0.0))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), true, false))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), true, false)))))) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (true))), bool(bvec2((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))), true)))), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bool(bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
