#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(63.38)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(67.62)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.5, 1336.8301)))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), false || (bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), false || (bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))))))))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, sqrt(length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), vec4(mat2x3(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4(_GLF_FUZZED(3.5), _GLF_FUZZED(9.3), _GLF_FUZZED(-213.814), _GLF_FUZZED(-2.6)), vec4((vec4(injectionSwitch, 1.0, 1.0))[0], _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 1.0))[1], ((vec4(injectionSwitch, 1.0, 1.0))[1]) * 1.0), (vec4(injectionSwitch, 1.0, 1.0))[2], (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(true, true, true, true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat4(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.3)), bool(false))))), 1.0)) * ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-3.2), (true ? 0.0 : _GLF_FUZZED(-3.2)) / 1.0)))), 1.0 * ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), 1.0 * ((_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-3.2)), max((true ? 0.0 : _GLF_FUZZED(-3.2)), (true ? 0.0 : _GLF_FUZZED(-3.2)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), 1.0 * ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x3(0.0, determinant(mat2(0.0, 0.0, exp(0.0), 0.0)), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-3.2)))), 1.0 * ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), 1.0 * ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2))))))))))) / 1.0)))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(-0.5, min(_GLF_IDENTITY(-0.5, float(vec3(-0.5, 1.0, 0.0))), -0.5))), bool(true)))), mix(float(_GLF_FUZZED(9.8)), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(true, (true) && true)))), (_GLF_FUZZED(-0.5)) / 1.0) : _GLF_FUZZED(3.8))), _GLF_FUZZED(-85.80)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false))).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)))), _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-653.750), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) + (_GLF_FUZZED(_GLF_IDENTITY(-653.750, 1.0 * (-653.750))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8069.2044)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true)))))))))) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true)))))))))) && true)))) && _GLF_IDENTITY(true, bool(bool(true))))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-220.626) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(144.494)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) || false)), bool(bool(false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.71), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(428.195)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u | _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u)))) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) >> 0u)))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))))) - 0u) | 0u) + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id, 0u | (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) - 0u) | 0u) + 1) % subgroup_size))))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) % subgroup_size) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (1) ^ 0)))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), (bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), mix(float(_GLF_FUZZED(66.88)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-9674.7694, -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(_GLF_IDENTITY(-9674.7694, mix(float(-9674.7694), float(_GLF_FUZZED(5527.3341)), bool(false))), -2638.7105, 72.40).x)), _GLF_FUZZED((true ? -100.168 : -2184.3692))), bvec2(false, false))).y) * 1.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_FUZZED(81.77)))))), (float(_GLF_FUZZED(81.77))) - _GLF_ZERO(0.0, injectionSwitch.x)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(81.77)), (float(_GLF_FUZZED(81.77))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(523.773, _GLF_IDENTITY(-4.7, clamp(-4.7, _GLF_IDENTITY(-4.7, clamp(-4.7, -4.7, -4.7)), -4.7)))) : injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-948.520), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false)))))), true))), false))))).y)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(523.773, _GLF_IDENTITY(-4.7, max(-4.7, _GLF_IDENTITY(-4.7, min(-4.7, -4.7)))))) : injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.5, (-8.5) * determinant(mat3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))), vec2(_GLF_FUZZED(-948.520), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))).y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(523.773, -4.7)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4))), 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0))))), 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-4622.2356)), float(abs(0.0)), bool(true))), 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-948.520), (injectionSwitch)[1]), bvec2(false, true))).y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(523.773, -4.7)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4))), 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0))))), 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-4622.2356)), float(abs(0.0)), bool(true))), 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-948.520), (injectionSwitch)[1]), bvec2(false, true))).y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(523.773, -4.7)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4))), 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0))))), 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-4622.2356)), float(abs(0.0)), bool(true))), 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-948.520), (injectionSwitch)[1]), bvec2(false, true))).y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) / sqrt(1.0))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true))) || _GLF_IDENTITY(false, false || (false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))))))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), (true ? float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-8.2, clamp(-8.2, -8.2, -8.2)))))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), (true ? float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-8.2, clamp(_GLF_IDENTITY(-8.2, mix(float(_GLF_FUZZED(21.02)), float(-8.2), bool(true))), -8.2, -8.2)))))) > injectionSwitch.y)))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(487.536)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0 + (float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1])).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((-769.305 - 4.6))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(88.03)), vec2(_GLF_FUZZED((-7717.3555)), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length((injectionSwitch / 6943.4631))) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, exp(0.0), 1.0)))))), injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : 0.0)), 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, exp(0.0), 1.0)))))), injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : 0.0)), 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, exp(0.0), 1.0)))))), injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : 0.0)), 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, exp(0.0), 1.0)))))), injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : 0.0)), 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, exp(0.0), 1.0)))))), injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : 0.0)), 0.0)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) | (virtual_gid), (true ? _GLF_IDENTITY(0u | (virtual_gid), max(0u | (virtual_gid), 0u | (virtual_gid))) : _GLF_FUZZED(workgroup_base))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7389.3277)), bool(false))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7389.3277)), bool(false))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7389.3277)), bool(false))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))))))), _GLF_IDENTITY(true, (true) && true), true, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true), _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.0)), bvec2(false, false))))).x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true, (true) || false) && (bool(true)))))) * 1.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-51.74, 6.1)) : injectionSwitch))[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) | 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) | 0)), ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) | 0))) | 0)))), int(ivec4(~ ((1)), 1, 1, 0))))) - 0)))])).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(false, ! (! (false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(false, ! (! (false))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true), true)), true, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! ((bool(_GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(false, ! (! (false))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))))))))))), true), true)), true, true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), true), true)), true, true)))))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.6) : injectionSwitch.y)))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true))), false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), true, false, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) >> 0u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0))).y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))).x > injectionSwitch.y), false, false, false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec4((_GLF_IDENTITY(true, (true) || false)), false, false, false)))) && true) || false)))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || ((true))), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(true, (true) || false))))), bool(bool((true))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, false, false, true)))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, false, false, true)))) || false, false, false, false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false)), true && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false)))))), true, true)))))), bool(bool((true)))))) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))))), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((true))), (_GLF_IDENTITY(bool(bool((true))), bool(bool(bool(bool((true))))))) && true), ! (! (bool(bool((true)))))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))))), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((true))), (_GLF_IDENTITY(bool(bool((true))), bool(bool(bool(bool((true))))))) && true), _GLF_IDENTITY(! (! (bool(bool((true))))), (! (! (bool(bool((true)))))) && _GLF_IDENTITY(true, (true) || false))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))), false, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)) && true))))))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))))))), (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), false, true))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))) || false)), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), true)))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true))), false || (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true))))))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bool((true)))))) && true))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || ((_GLF_IDENTITY(true, ! (! (true))))))))))), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false)))), false, true)))))))))), true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((_GLF_IDENTITY(true, true && (true)))))))) && true)))) || false)), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, (true) || false)), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, (true) || false)), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), _GLF_IDENTITY((! (_GLF_IDENTITY((true), bool(bool((true)))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY((true), bool(bool((true)))))) && true, true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bool((true)))))) && true))))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true))) || false))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bool(! (_GLF_IDENTITY((true), bool(bool((true)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false)))), false, true)))))))))), true, true)), false), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))))))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false), true)))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))) || false)), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), false || (bool((true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), (bool((true))) || false)))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool((true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false)))), false, true)))))))))), true, true)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false)))) && true))) && true))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))) || false)), ! (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false)))), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (! (_GLF_IDENTITY(bool((true)), ! (! (bool((true))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bool((true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bool((true))))), ! (! (bool(_GLF_IDENTITY((true), bool(bool((true))))))))) && true))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (! (bool((true)))))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), false))), false))))))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), _GLF_IDENTITY(false, bool(bool(false))), true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), bool(bool(bool((true))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false)))), false, true)))))))))))), true, true)), false), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))), (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY((true), bool(bool((true))))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))) || false)), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))) || false)), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), false || (bool(bool((true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bool((true))))), ! (! (bool(_GLF_IDENTITY((true), bool(bool((true)))))))), false, false))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), (_GLF_IDENTITY(bool(bool((true))), true && (bool(bool((true)))))) || false)))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bool(_GLF_IDENTITY((true), bool(bool((true))))))), false, false, true)))), false, true, false))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true), false)))), false, true)))))))))), true, true)), false), false)))), true, true, false))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false)))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false)))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-2.7)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), float(mat3(float(vec3(0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, cos(0.0)), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-895.269), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -3.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, cos(0.0))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
