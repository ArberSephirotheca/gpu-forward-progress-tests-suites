#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 vec2 _f0;
 bvec4 _f1;
 int _f2;
 mat4x3 _f3;
 vec4 _f4;
 float _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 bvec2 _f1;
 bvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 float _f0;
 uint _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat3x2 _f1;
 vec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_5 {
 bool _f0;
 int _f1;
 bool _f2;
 ivec2 _f3;
 vec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
 bool _f6;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 uint workgroup_base;
 mat4 _f3;
 vec2 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), false, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), false, true, false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), false, true, false))), true, true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), false || ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true))))), true)), false, true, false)))), false, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (_GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), min((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139)))))) / 1.0)), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (_GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), min((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139)))))) / 1.0)), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (_GLF_IDENTITY((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), min((true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139))), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED((true ? 9084.7516 : 445.139)))))) / 1.0)), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, log(1.0)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(4649.9420)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true, true, false)))) || _GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5138.6121) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(sin(tan(0.0)), min(_GLF_IDENTITY(sin(tan(0.0)), mix(_GLF_IDENTITY(float(sin(tan(0.0))), mix(float(float(sin(tan(0.0)))), float(_GLF_FUZZED(-34.65)), bool(false))), float(_GLF_FUZZED(-26.79)), bool(false))), _GLF_IDENTITY(sin(tan(0.0)), clamp(sin(tan(0.0)), sin(tan(0.0)), sin(tan(0.0)))))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-45.33)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-45.33)), bool(false))) - 0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), mix(_GLF_IDENTITY(float(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))), max(float(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))), float(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))))), float(_GLF_FUZZED(17.20)), bool(false)))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(ivec2(1), _GLF_struct_1(_GLF_struct_0(bvec4(_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(vec2(1.0), vec2(1.0)), max(min(vec2(1.0), vec2(1.0)), min(vec2(1.0), vec2(1.0))))))), _GLF_struct_4(_GLF_struct_2(vec3(1.0), mat4x3(1.0)), _GLF_struct_3(1u, mat4x3(1.0))), workgroup_size * workgroup_id, mat4(1.0), vec2(1.0), _GLF_struct_11(_GLF_struct_5(true, 1, true, ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), max(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), clamp(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))))))), 1, 0)))) / ivec3(1, 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), max(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), clamp(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))))))), 1, 0)))) / ivec3(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(30021) : (1))) >> 0))), 1, 0), max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))), 1, 0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), max(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), clamp(false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0), false ? _GLF_FUZZED(-97516) : _GLF_IDENTITY(1, (1) >> 0))))))), 1, 0)))) / ivec3(1, 1, 1))))))), vec3(1.0), true), _GLF_struct_6(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false))), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), 0.0 + (_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))), min(_GLF_IDENTITY(float(1.0), 0.0 + (_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))), _GLF_IDENTITY(float(1.0), 0.0 + (_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))))), float(1.0))), float(_GLF_FUZZED(-0.9)), bool(false)))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))), mat4x3(1.0)), _GLF_struct_7(1.0, mat3x2(1.0), vec4(1.0), mat3x4(1.0)), _GLF_struct_8(1.0, 1u, ivec4(1), mat2x4(1.0)), _GLF_struct_9(bvec4(true), bvec2(true), bvec2(true), mat2(1.0)), _GLF_struct_10(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(false)))))), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))), false || (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))), true, false, true))), bool(bvec3(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))), true, false, true))), ! (! (! (bool(bvec4(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))), true, false, true)))))), false, true)))))) && true)), ((_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! (true))), false || ((! (! (true)))))), ! (! (bool(_GLF_IDENTITY((! (! (true))), false || ((! (! (true))))))))))), true, false, true))) && true))) && true)))), true, true)))))), _GLF_IDENTITY(1, (1) << 0), mat4x3(1.0), vec4(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mat3x2(1.0)), true));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_struct_replacement_12.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_12.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, exp(0.0), 0.0, 1.0)), (true ? float(mat2(injectionSwitch.y, exp(0.0), 0.0, 1.0)) : _GLF_FUZZED(dot(vec4(-444.271, -20.87, 720.124, -1.8), vec4(4474.5212, 42.94, -485.805, 3.9))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(0, 0, 0) ^ (ivec3(0, 1, 0))))), (0) - 0), 1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | 0u)) << 0u))) / 1u), clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(140152u, uint(_GLF_IDENTITY(uvec4(140152u, 1u, 1u, 0u), (uvec4(140152u, 1u, 1u, 0u)) | (uvec4(140152u, 1u, 1u, 0u)))))) : read_1 + 1))) << 0u)) | (0u | 0u))), clamp(min(_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (1u ^ 1u) ^ (read_1)) + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u))), _GLF_IDENTITY(min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u))), ~ (~ (_GLF_IDENTITY(min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), ~ (~ ((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), ((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), max((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u))))))), (min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u)))) + 0u)))), _GLF_IDENTITY(min(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(140152u) : read_1 + 1)))) >> 0u))) << 0u)) | (0u | 0u))), (min(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ivec4(89345, 4881, 41239, 28568).q) : _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(140152u) : read_1 + 1))) << 0u)) | (0u | 0u)))) + 0u)))), read_1 + 1))), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true, ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-8949.5183)), float((injectionSwitch.y)), bool(true))), (injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(26.68, 7584.5267) * (mat2(-8.1, -9.8, -4.2, 4.1) + 5666.3308))))).y), min((injectionSwitch.y), (injectionSwitch.y)))))))))) && true)))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), bool(bvec2((true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) >> (0u | 0u)) < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size))))), bool(bool(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), bool(bool((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, (0u ^ 1u), 0u))) + 1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, 1u * (0u ^ 1u))), ((0u ^ 1u)) | 0u)) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(clamp(read_2, subgroup_local_id, num_workgroup)) : _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u))), _GLF_IDENTITY(0u ^ 1u, _GLF_IDENTITY(uint(uint(0u ^ 1u)), max(uint(uint(0u ^ 1u)), uint(uint(0u ^ 1u))))))))) | 0u)) ^ 0u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))), 0u))) + 1 == read_2) + 1) ^ 0u), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true))), (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), false)))) && true) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), ! (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))))))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))))))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, false, true)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, false, true))) || false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true))), (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), false)))) && true) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), ! (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))))))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))))))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, false, true)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, false, true))) || false)))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true))), (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), false)))), false)))) && true) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), ! (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))))))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))))))), bool(bvec3(! (! (false)), false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, false, true)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, false, true))) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true, false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-31.56))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(6665.3861), (_GLF_FUZZED(6665.3861)) / 1.0)), bool(false)))), _GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), true))))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(6665.3861), (_GLF_FUZZED(6665.3861)) / 1.0)), bool(false)))), _GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), true))))).y, _GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(6665.3861), (_GLF_FUZZED(6665.3861)) / 1.0)), bool(false)))), _GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true), true))))).y, _GLF_IDENTITY(false, true && (false)), false, true))))))))), true, false, true))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (false), false || (false || (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, false, false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, false, false, false)))))))))))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, false, false, false))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(101.146), _GLF_FUZZED((+ 7029.7057))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6665.3861)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, false, false, false)))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, _GLF_IDENTITY(true, bool(bool(true)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
