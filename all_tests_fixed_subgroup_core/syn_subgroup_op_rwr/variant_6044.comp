#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 mat3x2 _f0;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 ivec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_26 {
 bool _f0;
 mat2 _f1;
 float _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_25 {
 mat3x4 _f0;
} ;

struct _GLF_struct_29 {
 _GLF_struct_25 _f0;
 ivec4 _f1;
 _GLF_struct_26 _f2;
 mat4 _f3;
 _GLF_struct_27 _f4;
 bvec4 _f5;
 _GLF_struct_28 _f6;
 uint virtual_gid;
} ;

struct _GLF_struct_30 {
 vec2 _f0;
 uvec2 _f1;
 _GLF_struct_29 _f2;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_23 {
 vec3 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 mat2x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 uint read_2;
 mat4x3 _f1;
 _GLF_struct_23 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_19 {
 uint read_1;
 ivec2 _f0;
 _GLF_struct_18 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 uint _f1;
 float _f2;
 mat3 _f3;
 uvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 vec4 _f1;
 mat2 _f2;
 bvec3 _f3;
 mat4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 uvec2 _f1;
 uvec3 _f2;
 bvec2 _f3;
 mat4 _f4;
 mat3x4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 bool _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_14 _f0;
 mat3 _f1;
 bvec4 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_10 {
 uint _f0;
 mat3 _f1;
 vec4 _f2;
 mat2x3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat3 _f3;
 ivec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 vec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 float _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 vec3 _f2;
 _GLF_struct_9 _f3;
 ivec3 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), true)))))
      return;
    }
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(_GLF_struct_0(bvec2(true), bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))))), _GLF_struct_1(true, 1.0), gl_WorkGroupID.x), _GLF_struct_4(mat3x4(1.0), _GLF_struct_3(mat3(1.0), vec3(1.0), true), mat4x2(1.0), mat2x4(1.0)), vec3(1.0), _GLF_struct_9(uvec2(1u), _GLF_struct_5(1, bvec4(_GLF_IDENTITY(true, ! (! (true))))), _GLF_struct_6(mat2x4(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))), ivec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (vec2(mat4(injectionSwitch, 1.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1))))), _GLF_struct_7(bvec4(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0)))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(1.0) * (mat3(1.0)), (mat3(1.0) * (mat3(1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (true ? transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-3348.1667, 423.730, -343.606, 6374.5108, -85.21, 4.5, 884.925, 9.3, 3.4)) : _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))), mat3(1.0) * (mat3(1.0))))) : _GLF_FUZZED(mat3(5.6, 9.0, -155.400, 1167.0705, 1938.0690, -3.3, -800.552, 89.25, 7889.7540)))), (_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(16.46) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(230.534) : 1.0))))), float(_GLF_FUZZED(-6.7)), bool(false)))) * (mat3(1.0)), (mat3(1.0) * (mat3(1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (true ? transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(-3348.1667, 423.730, -343.606, 6374.5108, -85.21, 4.5, 884.925, 9.3, 3.4)), (true ? _GLF_IDENTITY(_GLF_FUZZED(mat3(-3348.1667, 423.730, -343.606, 6374.5108, -85.21, 4.5, 884.925, 9.3, 3.4)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(mat3(-3348.1667, 423.730, -343.606, 6374.5108, -85.21, 4.5, 884.925, 9.3, 3.4)), mat3(mat3(_GLF_FUZZED(mat3(-3348.1667, 423.730, -343.606, 6374.5108, -85.21, 4.5, 884.925, 9.3, 3.4))))))) : _GLF_FUZZED(mat3(-5.0, 0.6, -404.163, -514.662, -1.8, 976.916, -686.800, 81.76, -5936.9817)))) : _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))), mat3(1.0) * (mat3(1.0))))) : _GLF_FUZZED(mat3(5.6, 9.0, -155.400, 1167.0705, 1938.0690, -3.3, -800.552, 89.25, 7889.7540))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat4x3(38.85, 4203.8092, 24.52, -7850.9720, 35.08, -6266.2302, -3702.8087, 58.41, -880.772, 69.79, -55.30, -770.221) * mat3x4(-65.57, -5.2, 5.9, 5.0, -5.6, -6737.7928, -5.2, 43.83, -4499.0797, 4.7, 1.8, -84.15))) : mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), 1.0, 1.0, 1.0, 1.0, 1.0)))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(0.3)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)), clamp(false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)), (false ? _GLF_FUZZED(2.1) : false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)))), _GLF_IDENTITY(false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)), max(false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0)), false ? _GLF_FUZZED(386.674) : _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, 63.40, 4.2))))), (float(_GLF_IDENTITY(mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((1.0) / 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(947.765, 6595.2036, -9.9, 43.19, -9.1, -54.52, _GLF_IDENTITY(63.40, clamp(63.40, 63.40, 63.40)), 4.2)))))) / 1.0))))))))))), clamp(1.0, 1.0, 1.0))) - 0.0))), _GLF_struct_8(ivec2(1), vec4(1.0), mat2x4(1.0), mat3(1.0), ivec3(1), vec4(1.0))), ivec3(1), _GLF_struct_11(_GLF_struct_10(1u, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)), min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.0)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), float(mat4x2(float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0)))), (false ? _GLF_FUZZED(90.82) : float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)))))))), vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), 1.0, 1.0))), mat2x3(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(16.45)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) - 0.0)))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12._f0.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(vec2(1.0), uvec2(1u), _GLF_struct_29(_GLF_struct_25(mat3x4(1.0)), ivec4(1), _GLF_struct_26(true, mat2(1.0), 1.0, uvec4(1u), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * round(length(normalize(1.0)))))), mat4(1.0), _GLF_struct_27(vec4(1.0), ivec3(1), mat3(1.0)), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false))))))), _GLF_struct_28(mat3x2(1.0)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((workgroup_base << workgroup_size)) : _GLF_IDENTITY(1u, (1u) ^ 0u)))) * subgroup_size + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((workgroup_base << workgroup_size)) : _GLF_IDENTITY(1u, (1u) ^ 0u)))) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / 1u))) + subgroup_local_id))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u | 0u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), workgroup_base + subgroup_id * subgroup_size))) | 0u), 0u), min(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uint(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) + subgroup_id * subgroup_size))) | 0u), 0u), uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) / 1u), workgroup_base + subgroup_id * subgroup_size)) - (0u ^ 0u)))) | 0u, (true ? (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), min(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))))))))))))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), uint(uint(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) | 0u : _GLF_FUZZED(subgroup_size)))), 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(uint(subgroup_size), uint(subgroup_size), uint(subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_14(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))), true, _GLF_struct_13(uvec3(1u), uvec2(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED((uvec2(158490u, 137223u).g ^ workgroup_base))))), bvec2(true), mat4(1.0), mat3x4(1.0), mat2x4(1.0))), mat3(1.0), bvec4(true), _GLF_struct_17(_GLF_struct_15(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1)))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7)))), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-3826.2416, 0.8, _GLF_IDENTITY(-6.8, (-6.8) + 0.0), 2.2)) : _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))), mat2(1.0), bvec3(true), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), _GLF_struct_16(mat2(1.0), 1u, 1.0, mat3(1.0), uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.0) : 1.0))))), _GLF_struct_19(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) - 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) - 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) - 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) - 0u)))))))], 4, 64, 0), ivec2(1), _GLF_struct_18(ivec2(1), mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) + 0.0), 1.0)))), bvec4(true)));
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, clamp(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_struct_replacement_20._f4.read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), min(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, ~ (~ (_GLF_struct_replacement_20._f4.read_1))))) + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1), ((_GLF_struct_replacement_20._f4.read_1 + 1)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | (_GLF_struct_replacement_20._f4.read_1 + 1)))), (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, 0u ^ (_GLF_struct_replacement_20._f4.read_1)) + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      break;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(ivec3(_GLF_IDENTITY(1, (1) | (1))), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_30._f2.virtual_gid, (_GLF_struct_replacement_30._f2.virtual_gid) << 0u)))) << 0u)], 4, 64, _GLF_IDENTITY(0, (1 ^ 1) ^ (_GLF_IDENTITY(0, min(0, 0))))), mat4x3(1.0), _GLF_struct_23(vec3(1.0), _GLF_struct_21(bvec3(true), mat4x2(1.0), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), vec3(1.0)), _GLF_struct_22(mat3x2(1.0), mat2(1.0)), mat2x3(1.0), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)), uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(1u)))))), vec2(1.0));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, clamp(_GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2))) ^ 0u)))), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) | (int(1)))), clamp(int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) | (int(1)))), int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) | (int(1)))), int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) | (int(1))))))) == _GLF_struct_replacement_24.read_2))), ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), bool(bvec4(_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), ! (! ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), true, false, true)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false, ((! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false) || false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, clamp(_GLF_struct_replacement_20._f4.read_1, _GLF_struct_replacement_20._f4.read_1, _GLF_struct_replacement_20._f4.read_1)) + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-30539))) == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, false, false)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, clamp(_GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2))) ^ 0u)))), false || (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, 0u | (_GLF_struct_replacement_20._f4.read_1)) + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, 0 + (1)) == _GLF_struct_replacement_24.read_2)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, 0 + (1)) == _GLF_struct_replacement_24.read_2)))))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)) || false))))))))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, bool(bvec3(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, false, true)))) && true)) || false))))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, false, false)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, max(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, min(_GLF_struct_replacement_20._f4.read_1, _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, max(_GLF_struct_replacement_20._f4.read_1, _GLF_struct_replacement_20._f4.read_1)))), _GLF_struct_replacement_20._f4.read_1)), 0u, 1u, 0u))) + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, clamp(_GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2, _GLF_struct_replacement_24.read_2))) ^ 0u)))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, uint(uvec2(_GLF_struct_replacement_20._f4.read_1, (0u | 0u)))) + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false, bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, uint(uvec2(_GLF_struct_replacement_20._f4.read_1, (0u | 0u)))) + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false, true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, uint(uvec2(_GLF_struct_replacement_20._f4.read_1, (0u | 0u)))) + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_struct_replacement_24.read_2))), false || (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, ~ (~ (_GLF_struct_replacement_24.read_2)))))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, max(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) / 1u))) == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), true && (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))))), ! (! (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))), (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))) || false))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, uint(uvec3(_GLF_struct_replacement_24.read_2, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))))), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))), bool(bool(_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_24.read_2, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_24.read_2, uint(uvec3(_GLF_struct_replacement_24.read_2, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))))), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, (_GLF_struct_replacement_20._f4.read_1 + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1, max(_GLF_struct_replacement_20._f4.read_1 + 1, _GLF_struct_replacement_20._f4.read_1 + 1)))) == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1, (_GLF_struct_replacement_20._f4.read_1) - 0u) + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))))), (! (_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2), false || (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2))))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, false, false)))) && true))))))))) + 1, ~ (~ (uint(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), bool(bvec2((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), true))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), bool(bvec2((_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, ! (! (_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2)))), true))), false, true, false)))))))) + 1))), 4, 64, 4);
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1 ^ 0))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(_GLF_IDENTITY(6, 0 + (6))) : _GLF_FUZZED(-81545))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), ! (! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(52079))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)), 2))), int(2)))) | ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) / 1)) | (0 >> _GLF_IDENTITY(int(0), int(0)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))))) >> _GLF_IDENTITY(int(2), int(2))))))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & (0 | 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(39095) : _injected_loop_counter))) << 0))))) > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED((mat2(5455.7638, 1799.9498, 9857.4746, 9.6) * injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(true ? _injected_loop_counter -- : _GLF_FUZZED(-25706), (_GLF_IDENTITY(true ? _injected_loop_counter -- : _GLF_FUZZED(-25706), 1 * (true ? _injected_loop_counter -- : _GLF_FUZZED(-25706)))) << 0))), 0 | (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(-25706))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(true ? ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(findLSB(subgroup_id)), 0 + (true ? ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(findLSB(subgroup_id)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(true, true && (true)) ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
          }
        }
      }
     else
      {
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2, _GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2) && true, false || ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2) && true))), (! (_GLF_IDENTITY((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2) && true, false || ((_GLF_struct_replacement_20._f4.read_1 + 1 == _GLF_struct_replacement_24.read_2) && true)))) && true))))) + 1, 4, 64, 4);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -92631)); _injected_loop_counter --)
    {
     subgroupAll(true);
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))) < 1)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)) && true), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(269.868)))))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
}
