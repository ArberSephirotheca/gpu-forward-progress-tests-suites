#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 mat3x2 _f0;
} ;

struct _GLF_struct_38 {
 bool _f0;
 ivec3 _f1;
 uvec2 _f2;
 bvec2 _f3;
 uint _f4;
 bool _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_37 {
 bvec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_36 {
 vec3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 bvec4 _f3;
 float _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_40 {
 ivec4 _f0;
 uvec3 _f1;
 mat3x2 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_38 _f5;
 _GLF_struct_39 _f6;
} ;

struct _GLF_struct_34 {
 uint _f0;
 mat3 _f1;
 vec4 _f2;
 ivec2 _f3;
 vec2 _f4;
 mat3x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_32 {
 mat4 _f0;
 uvec2 _f1;
 mat3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_31 {
 uint _f0;
 bvec2 _f1;
 uint _f2;
 bvec3 _f3;
 ivec3 _f4;
 bvec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_30 {
 mat2x3 _f0;
 bvec3 _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat3x2 _f4;
 bool _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_28 {
 mat4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_33 {
 _GLF_struct_28 _f0;
 float _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_41 {
 _GLF_struct_33 _f0;
 _GLF_struct_35 _f1;
 _GLF_struct_40 _f2;
 uint subgroup_id;
 vec4 _f3;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 vec3 _f1;
 bool _f2;
 mat3x2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 uint _f1;
 uvec3 _f2;
 mat4x2 _f3;
 ivec3 _f4;
 bvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 uint _f1;
 uvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 int _f2;
 uvec4 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 float _f1;
} ;

struct _GLF_struct_19 {
 bool _f0;
 uvec2 _f1;
 mat3x2 _f2;
 float _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
 mat4 _f1;
 uvec2 _f2;
 bool _f3;
 vec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_20 {
 vec2 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 bool _f4;
 vec4 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 bvec3 _f1;
 uint _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 int _f1;
 bvec2 _f2;
 uint _f3;
 uvec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 mat4x2 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_27 {
 _GLF_struct_15 _f0;
 uvec3 _f1;
 _GLF_struct_20 _f2;
 bvec3 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_26 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 uint _f1;
 uvec3 _f2;
 uint _f3;
 mat4x3 _f4;
 mat3x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 int _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 _GLF_struct_5 _f1;
 mat3x2 _f2;
 bool _f3;
 uint read_1;
 _GLF_struct_9 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 vec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4 _f1;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 vec4 _f1;
 uint workgroup_base;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).y))))
  barrier();
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_struct_33(_GLF_struct_28(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-869.986, 2489.3223, -79.19, -14.47, 563.534, 697.590, -2892.0886, -9086.4325, -8.3, 2920.7366, -955.866, 21.84, 0.5, -6.6, -3.4, -0.3)) : mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(vec2(-423.844, 8.7))) : injectionSwitch)).y)) ? _GLF_FUZZED(mat4(-869.986, 2489.3223, -79.19, -14.47, 563.534, 697.590, -2892.0886, -9086.4325, -8.3, 2920.7366, -955.866, _GLF_IDENTITY(21.84, clamp(_GLF_IDENTITY(21.84, (false ? _GLF_FUZZED(-36.81) : 21.84)), _GLF_IDENTITY(21.84, min(21.84, 21.84)), _GLF_IDENTITY(21.84, max(21.84, 21.84)))), 0.5, -6.6, -3.4, -0.3)) : mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), transpose(transpose(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(vec2(-423.844, 8.7))) : injectionSwitch)).y)) ? _GLF_FUZZED(mat4(-869.986, 2489.3223, -79.19, -14.47, 563.534, 697.590, -2892.0886, -9086.4325, -8.3, 2920.7366, -955.866, _GLF_IDENTITY(21.84, clamp(_GLF_IDENTITY(21.84, (false ? _GLF_FUZZED(-36.81) : 21.84)), _GLF_IDENTITY(21.84, min(21.84, 21.84)), _GLF_IDENTITY(21.84, max(21.84, 21.84)))), 0.5, -6.6, -3.4, -0.3)) : mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), transpose(transpose(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(vec2(-423.844, 8.7))) : injectionSwitch)).y)) ? _GLF_FUZZED(mat4(-869.986, 2489.3223, -79.19, -14.47, 563.534, 697.590, -2892.0886, -9086.4325, -8.3, 2920.7366, -955.866, _GLF_IDENTITY(21.84, clamp(_GLF_IDENTITY(21.84, (false ? _GLF_FUZZED(-36.81) : 21.84)), _GLF_IDENTITY(21.84, min(21.84, 21.84)), _GLF_IDENTITY(21.84, max(21.84, 21.84)))), 0.5, -6.6, -3.4, -0.3)) : mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false)))))))))))))), mat3x4(1.0)), 1.0, _GLF_struct_29(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))) - length(vec4(0.0, 0.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(445.947)), float(1.0), bool(true)))), mat2x3(1.0), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1)))), _GLF_struct_30(mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 0.0))))))), bvec3(true), uvec4(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) << uvec2(0u, 0u)), mat3x2(1.0), true, mat2x4(1.0)), _GLF_struct_31(1u, bvec2(true), 1u, bvec3(true), ivec3(1), bvec4(true), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED((false ? 591.056 : 6.2)) : float(1.0))) : _GLF_FUZZED(trunc(3.5)))), _GLF_IDENTITY(float(_GLF_FUZZED(-305.295)), min(float(_GLF_FUZZED(-305.295)), float(_GLF_FUZZED(-305.295)))), bool(false)))) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))))))), _GLF_struct_32(mat4(1.0), uvec2(1u), mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(265.681) : 1.0)), 1.0))), uvec4(1u))), _GLF_struct_35(_GLF_struct_34(1u, mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))), min(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))), clamp(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(4.2), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-3428.3382), _GLF_FUZZED(684.519), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(0.0)), bvec4(true, true, false, false))), (vec4(1.0))))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(8.1), _GLF_FUZZED(-178.041), _GLF_FUZZED(-94.49)), bvec4(true, false, false, false))))))), ivec2(1), vec2(1.0), mat3x4(1.0), uvec4(1u)), mat2x3(1.0)), _GLF_struct_40(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * (ivec4(1)))) >> ivec4(0, 0, 0, 0)), uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, 1u, 1u))))))), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9473.5051) : 1.0))), _GLF_struct_36(vec3(1.0), bvec2(true), uvec2(1u), bvec4(true), 1.0, ivec2(1)), _GLF_struct_37(bvec3(true), mat4x2(1.0)), _GLF_struct_38(true, ivec3(1), uvec2(1u), bvec2(true), 1u, true, mat4x2(1.0)), _GLF_struct_39(mat3x2(1.0))), gl_SubgroupID, vec4(1.0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, true)))), true, true)))))))))))), false, false, false)))) && true))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_15(_GLF_struct_12(mat4x3(1.0), mat4(1.0)), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4904.7427)), bool(false)))), _GLF_struct_13(mat4x3(1.0), 1, bvec2(true), 1u, uvec4(_GLF_IDENTITY(1u, (1u) + 0u)), bvec4(true)), _GLF_struct_14(mat4x3(1.0), bvec3(true), 1u, mat2x4(1.0))), uvec3(1u), _GLF_struct_20(vec2(1.0), _GLF_struct_16(mat3(1.0), bvec2(_GLF_IDENTITY(true, (true) && true)), mat4x2(1.0), mat2x3(1.0)), _GLF_struct_17(mat4(1.0), mat4(1.0), uvec2(1u), true, vec4(1.0), uvec3(1u)), _GLF_struct_18(vec2(1.0)), true, vec4(1.0), _GLF_struct_19(true, uvec2(1u), mat3x2(1.0), 1.0, bvec4(_GLF_IDENTITY(true, bool(bool(true)))))), bvec3(true), _GLF_struct_22(_GLF_struct_21(mat2x3(1.0)), 1.0), _GLF_struct_26(_GLF_struct_23(uvec4(1u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u)), 1u)), 1u)), uvec4(1u), 1), _GLF_struct_24(vec4(1.0), 1u, uvec3(1u), mat4x2(1.0), ivec3(1), bvec3(true), mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1, uvec4(1u), _GLF_struct_25(mat3(1.0), _GLF_IDENTITY(vec3(1.0), vec3(mat4x2(vec3(1.0), 1.0, 1.0, 0.0, sqrt(sin(0.0)), cos(0.0)))), true, mat3x2(1.0), mat2x4(1.0))), gl_SubgroupSize);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec3(1u), gl_SubgroupInvocationID);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-42.78, -31.88)), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-211.489), _GLF_FUZZED(-96.50)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))) + (_GLF_IDENTITY(_GLF_FUZZED(vec2(-42.78, -31.88)), mix(vec2(_GLF_FUZZED(-967.302), _GLF_FUZZED(-326.982)), vec2((_GLF_FUZZED(vec2(-42.78, -31.88)))[0], (_GLF_FUZZED(vec2(-42.78, -31.88)))[1]), bvec2(true, true))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), mix(vec2(_GLF_FUZZED(95.12), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[0], _GLF_FUZZED(-33.40)), bvec2(true, false))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))).x), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, 11606, 63781)) : _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))).x), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((gl_WorkGroupSize[2]), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))[2]), max((gl_WorkGroupSize[2]), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2])))), (_GLF_IDENTITY((gl_WorkGroupSize[2]), uint(uint((gl_WorkGroupSize[2]))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))).x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(vec4(1.0), mat2(1.0), _GLF_struct_0(1, mat4(1.0))), vec4(1.0), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_struct_3(_GLF_struct_2(ivec2(1), vec4(1.0), ivec4(1))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_4.workgroup_base), (~ (_GLF_struct_replacement_4.workgroup_base)) + (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, min(3u, 3u)), 3u)))))))) + _GLF_IDENTITY(_GLF_struct_replacement_41.subgroup_id, (_GLF_struct_replacement_41.subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_struct_replacement_27.subgroup_size + _GLF_struct_replacement_11.subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (_GLF_IDENTITY(false, true && (false)) || (true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))) && true), false))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4.workgroup_base, _GLF_IDENTITY(1u, (1u) | (1u))), (uvec2(_GLF_struct_replacement_4.workgroup_base, 1u)) | uvec2(0u, 0u))))) | _GLF_IDENTITY(0u, (0u) << 0u)) + _GLF_struct_replacement_41.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_27.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_struct_replacement_27.subgroup_size)) + (_GLF_IDENTITY((_GLF_struct_replacement_11.subgroup_local_id + 1), _GLF_IDENTITY(~ (~ ((_GLF_struct_replacement_11.subgroup_local_id + 1))), clamp(~ (~ ((_GLF_struct_replacement_11.subgroup_local_id + 1))), ~ (~ ((_GLF_struct_replacement_11.subgroup_local_id + 1))), ~ (~ ((_GLF_struct_replacement_11.subgroup_local_id + 1)))))) % _GLF_struct_replacement_27.subgroup_size);
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u)))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(~ (~ (uvec2(1u))), (~ _GLF_IDENTITY((~ (uvec2(1u))), ((~ (uvec2(1u)))) | ((~ (uvec2(1u)))))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), uvec2(1u))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(1u)) - uvec2(0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uvec2(1u)) - uvec2(0u, 0u), uvec2(uvec3((uvec2(1u)) - uvec2(0u, 0u), 0u))) : _GLF_FUZZED(uvec2(92578u, 73159u)))), uvec2(uvec3(_GLF_IDENTITY((uvec2(1u)) - uvec2(0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uvec2(1u)) - uvec2(0u, 0u), uvec2(uvec3((uvec2(1u)) - uvec2(0u, 0u), 0u))) : _GLF_FUZZED(uvec2(92578u, 73159u)))), 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(uvec2(1u), uvec2(uvec4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(1u, min(1u, 1u))))), 0u, 0u)))) >> uvec2(0u, 0u)), uvec2(1u))), _GLF_struct_5(mat2x3(1.0), mat4x3(1.0)), mat3x2(_GLF_IDENTITY(1.0, float(float(1.0)))), true, atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) * 1))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) * 1)))))) / 1), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-60812))))))), 64, 0), _GLF_struct_9(_GLF_struct_6(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))), true))))), false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), false)), false))))), false)))), 1, _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(159.340, -7.4, -8.7, 1.1)) : _GLF_IDENTITY(vec4(1.0), vec4(mat3(vec4(1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))))), (false ? _GLF_FUZZED(vec4(-41.67, 58.15, -38.33, -2.7)) : _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))))) / vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-41.67, min(-41.67, -41.67)), 58.15, -38.33, -2.7)) : _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))))) / _GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), max(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), clamp(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(34.05)), bool(false)))), (_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-41.67, 58.15, _GLF_IDENTITY(-38.33, float(vec2(-38.33, 1.0))), -2.7)) : _GLF_IDENTITY(vec4(1.0), mat4(1.0) * _GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) + abs(vec4(0.0, 0.0, 0.0, 0.0))))))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(59.67)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-41.67, 58.15, -38.33, -2.7)) : _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))))) / _GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5768.9123)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5768.9123)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)), (true ? vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5768.9123)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec4(1.7, -9.3, -275.319, 44.69))))) + vec4(0.0, 0.0, 0.0, 0.0)), ((_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-41.67, 58.15, -38.33, -2.7)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))), mat4(1.0) * (vec4(1.0)))))) / _GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5768.9123)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(float(injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-5768.9123)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)), (true ? vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-5768.9123, (true ? -5768.9123 : _GLF_FUZZED(14.66))))), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec4(1.7, -9.3, -275.319, 44.69))))) + vec4(0.0, 0.0, 0.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat3x4(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-656.492, 272.341, -44.66, -51.34)) : vec4(1.0))), (false ? _GLF_FUZZED(vec4(-41.67, 58.15, -38.33, -2.7)) : _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), 1u, uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(_GLF_FUZZED(70.85)), float(clamp(0.0, 0.0, 0.0)), bool(true))), clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2983.4762)), float(injectionSwitch.x), bool(true)))) / sqrt(1.0))), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED((855.095 * 9243.7465))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED(-52.63)), float(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(455.501)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))), bool(true))), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-781.862)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, abs(1.0), 1.0))), bool(true)))), bool(true))))), ~ (~ (_GLF_IDENTITY((1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2983.4762)), float(injectionSwitch.x), bool(true)))) / sqrt(1.0))), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED((855.095 * 9243.7465))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED(-52.63)), float(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(455.501)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))), bool(true))), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-781.862)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, abs(1.0), 1.0))), bool(true)))), bool(true))))), ((1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2983.4762)), float(injectionSwitch.x), bool(true)))) / sqrt(1.0))), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED((855.095 * 9243.7465))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, abs(1.0), 1.0)), mix(float(_GLF_FUZZED(-52.63)), float(float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(455.501)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))), bool(true))), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-781.862)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, abs(1.0), 1.0))), bool(true)))), bool(true)))))) ^ 0u))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, 0u ^ (1u)))), (1u) ^ _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0u, 0u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4.2) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max((1u), (1u)))) | ((1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u))))), 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u))))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), min(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * exp(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(virtual_gid))), 1u, 0u)) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u))), max(uvec3((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u))), uvec3((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u)))))))) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-94.44)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u | ((1u))), (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * ((1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))), 1u, 0u))))))), mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3x2(1.0), vec2(1.0)), _GLF_struct_8(mat4(1.0))), ivec3(1));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_10.read_1 + 1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY((4), ((4)) * 1) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), 0 ^ (_GLF_IDENTITY(max((4), (4)), max(max((4), (4)), max((4), (4)))))))), max(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))), clamp(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))))))))));
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, uint(uvec4(_GLF_struct_replacement_11.subgroup_local_id, (0u & 15448u), 1u, 0u))) + 1))) < _GLF_struct_replacement_27.subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, uint(uvec4(_GLF_struct_replacement_11.subgroup_local_id, (0u & 15448u), 1u, 0u))) + 1))) < _GLF_struct_replacement_27.subgroup_size), bool(bvec2(bool(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, uint(uvec4(_GLF_struct_replacement_11.subgroup_local_id, (0u & 15448u), 1u, 0u))) + 1))) < _GLF_struct_replacement_27.subgroup_size), true))))), (_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id + 1, uint(uint(_GLF_struct_replacement_11.subgroup_local_id + 1))) < _GLF_struct_replacement_27.subgroup_size) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(96.93), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.5)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_struct_replacement_10.read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.read_1, (_GLF_struct_replacement_10.read_1) - 0u) + 1 == read_2)))), (true ? _GLF_IDENTITY(uint(_GLF_struct_replacement_10.read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, 0 | (_GLF_IDENTITY((1) * 1, ((1) * 1) >> 0)))) == read_2), ~ (~ (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.read_1, (_GLF_struct_replacement_10.read_1) - 0u) + 1 == read_2)))) : _GLF_FUZZED(virtual_gid))) + 1, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, 0 | (4)));
   do
    {
     subgroupAll(false);
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_10.read_1 + 1 == read_2), clamp(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1, (_GLF_struct_replacement_10.read_1 + 1) >> 0u)) / 1u)) / 1u) == read_2), uint(_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1 == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1 == read_2, (_GLF_struct_replacement_10.read_1 + 1 == read_2) && true), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_10.read_1 + 1 == read_2, (_GLF_struct_replacement_10.read_1 + 1 == read_2) && true))))))), uint(_GLF_struct_replacement_10.read_1 + 1 == read_2))) + 1, 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true)), ((injectionSwitch.x < injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))) && true))) || false)))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / (0 | 1))))); _injected_loop_counter ++)
      {
       subgroupAll(true);
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_DEAD(false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & ((((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
}
