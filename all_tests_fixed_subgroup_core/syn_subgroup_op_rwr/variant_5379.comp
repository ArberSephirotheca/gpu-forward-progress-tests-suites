#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 int _f0;
 bool _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat3 _f1;
 bvec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 _GLF_struct_1 _f3;
 vec4 _f4;
 int _f5;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 bool _f1;
 _GLF_struct_2 _f2;
 uint read_2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bool(! (false))))))) || false))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8721.4656, -815.873))))) / abs(vec2(1.0, 1.0))).y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]))), bvec2(true, true))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]))), bvec2(true, true))).x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(70.41), _GLF_IDENTITY(_GLF_FUZZED(-49.49), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-49.49), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-49.49), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), clamp(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), _GLF_IDENTITY(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), clamp(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)))), vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))), ! (! (bool(false))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.41), _GLF_FUZZED(-49.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])), float(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1))))], max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).x > injectionSwitch.y)))))))) || false), false, false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false))))), (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, true))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, true))), false), true)), true))))))))) && true), true && (bool(bvec2(false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(-1243.9665)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true))), bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 0u), min(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u)), (uvec2(0u, 0u) ^ (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u))) | uvec2(0u, 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u), (uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u), (uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u), (uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)))) - 0u), uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u), (uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (uint(uvec4(workgroup_base, 1u, 1u, 1u))) - 0u))) | (workgroup_base))) | 0u) + subgroup_id * subgroup_size), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, sqrt(0.0))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(read_1)))) >> 0u)], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec4(1.0), true, _GLF_struct_2(_GLF_struct_0(uvec2(1u), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4420.0535) : 1.0))), bvec3(true), mat2x4(1.0)), bvec4(true), mat3x2(1.0), _GLF_struct_1(1, true, mat2x4(1.0)), vec4(1.0), 1), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (buf[virtual_gid])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), buf[virtual_gid])))), 4, 64, 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3794.9745, mix(float(_GLF_FUZZED(-2.0)), float(-3794.9745), bool(true))))), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mat2x3(vec4(1.0, 0.0, 0.0, 0.0), sqrt(1.0), 0.0), (mat2x3(vec4(1.0, 0.0, 0.0, 0.0), sqrt(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), tan(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (0u | 0u) | (_GLF_struct_replacement_3.read_2))), ((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (0u | 0u) | (_GLF_struct_replacement_3.read_2)))) | ((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (0u | 0u) | (_GLF_struct_replacement_3.read_2))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ! (! (bool(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) - 0u), (_GLF_IDENTITY(4u, max(4u, 4u))) - 0u)) | 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u)))))), uint(4u))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) - 0u)) | 0u))), 1u * (1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(atomicMax(virtual_gid, workgroup_base)) : 4u)), 4u, 4u)), 4u))) - 0u)) | 0u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), min(~ (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), ~ (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) << 0u, ((uint(4u)) << 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) - 0u)) | 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) + 1, _GLF_IDENTITY(uint(uint(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(4u)), (0u ^ 1u) * (_GLF_IDENTITY((uint(4u)), ((uint(4u))) / 1u))), 0u ^ (~ (uint(4u))))), ((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u)))))) / 1u)), uint(4u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) >> 0u))) + 1)), ~ (~ (uint(uint(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u))))), ((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u))))), 0u ^ ((_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u))))))), (_GLF_IDENTITY(~ (uint(4u)), 0u ^ (~ (uint(4u)))))))))) / 1u)), uint(4u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) + 1)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ! (! (bool(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2), ((_GLF_struct_replacement_3.read_2)) | 0u) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) << 0u, max((uint(4u)) << 0u, (uint(4u)) << 0u))), uint(4u)))) * 1u), uint(4u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u)))) * 1u), uint(4u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, min(4u, 4u))))))) << 0u), uint(4u)))) * 1u), uint(4u)))) * 1u), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (uint(4u)) << 0u), uint(4u)))) * 1u), uint(4u))), uint(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u)))) * 1u), uint(4u))), 0u, 1u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (4u) << 0u))))) << 0u), uint(4u)))) * 1u), uint(4u))), ~ (~ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u)))), ((_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), 1u * (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u)))), ((_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))), uint(4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2), uint(uvec2((_GLF_struct_replacement_3.read_2), 0u))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) + 1, uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u ^ (uint(8u)))))), uint(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uint(uint(4u)))), uint(4u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u | 0u) + (_GLF_IDENTITY(4u, uint(uvec2(4u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u | 0u) + (_GLF_IDENTITY(4u, uint(uvec2(4u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(181212u)))))), bool(bool(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(4u)))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 1u, 1u)))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))), false || (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), (read_1 + _GLF_IDENTITY(1, max(1, 1))) / _GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, max(1, 1))), max((read_1 + _GLF_IDENTITY(1, max(1, 1))), (read_1 + _GLF_IDENTITY(1, max(1, 1)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))), uint(uvec4((_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (4u)), 4u, 4u))), 0u | (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (4u)), 4u, 4u))))), uint(4u))))))), 1u, 1u, 0u))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))) + 1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) - 0) == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u)))), bool(_GLF_IDENTITY(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + 0) == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2), uint(_GLF_IDENTITY(uvec3((_GLF_struct_replacement_3.read_2), 1u, 0u), max(_GLF_IDENTITY(uvec3((_GLF_struct_replacement_3.read_2), 1u, 0u), (uvec3((_GLF_struct_replacement_3.read_2), 1u, 0u)) << uvec3(0u, 0u, 0u)), uvec3((_GLF_struct_replacement_3.read_2), 1u, 0u))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ! (! (bool(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u)))), 1u * (uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u)))), 1u * (uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))))))), (true ? uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u)))), 1u * (uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))))))) : _GLF_FUZZED(read_1))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, _GLF_IDENTITY((_GLF_struct_replacement_3.read_2), (_GLF_IDENTITY((_GLF_struct_replacement_3.read_2), 1u * ((_GLF_struct_replacement_3.read_2)))) << 0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), uint(uint(uint(4u)))), uint(4u))), _GLF_IDENTITY((uint(4u)), ~ (~ ((uint(4u))))) | (uint(4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (1u & 1u), 0u)))) * 1u)))))))) + 1, uint(uint(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(4u, 0u), uvec2(1u, 1u) * (uvec2(4u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(4u, 0u), uvec2(1u, 1u) * (uvec2(4u, 0u)))))))), _GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (4u) | (4u)), 4u, 4u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, 0u ^ (4u))), 0u ^ (~ (4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) + 1))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) * 1.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-344.029))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_struct_replacement_3.read_2, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.read_2, (_GLF_struct_replacement_3.read_2) << 0u))))), (uint(read_1 + 1 == _GLF_struct_replacement_3.read_2)) / 1u) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-692.525)), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) && true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), bool(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(628.903, 9.3)))).y)))) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))), false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
  }
}
