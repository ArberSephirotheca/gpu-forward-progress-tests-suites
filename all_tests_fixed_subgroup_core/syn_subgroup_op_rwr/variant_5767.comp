#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-57.89), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 64.24 : -0.0))), bvec2(true, false))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-57.89), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 64.24 : -0.0))), bvec2(true, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-57.89), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 64.24 : -0.0))), bvec2(true, false))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))))), (false ? _GLF_FUZZED(-8322.2912) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))) - 0.0) : _GLF_FUZZED(59.68))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0))))))) + 0.0)))) + 0.0))) : _GLF_FUZZED(8.9)))) * 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u))), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(57347u) : _GLF_IDENTITY(uint(6u), uint(6u)))), 0u, 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, max(6u, 6u)))))) : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), _GLF_IDENTITY((true ? uint(6u) : _GLF_FUZZED(subgroup_id)), ((true ? uint(6u) : _GLF_FUZZED(subgroup_id))) >> 0u))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (1u | 1u) * (uint(6u))), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), uint(6u)))))) << 0u)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(48629u))), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(subgroup_size) : min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 1u)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(6u), uint(6u)))))))), uint(uvec3(_GLF_IDENTITY(uint(6u), uint(6u)), 0u, 0u)))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, clamp(6u, 6u, _GLF_IDENTITY(6u, max(6u, 6u))))))) | 0u)), (true ? _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u) : _GLF_FUZZED(subgroup_id))))) ^ 0u), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))))) | ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u)))), 0u | (((1u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(clamp(6u, 6u, 6u), (_GLF_IDENTITY(clamp(6u, 6u, 6u), uint(uvec4(clamp(6u, 6u, 6u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 1u)))) << 0u))), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(mat4(vec3(1.0, 1.0, 0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0)), (mat4(vec3(1.0, 1.0, 0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), injectionSwitch.y)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-229.321) : injectionSwitch.y)))))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-80.22) : _GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), uint(uint(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u, 0u ^ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 1u)))) | (max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 0.0)), clamp(float(mat2(1.0, 0.0, 0.0, 0.0)), float(mat2(1.0, 0.0, 0.0, 0.0)), float(mat2(1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.3) : 1.0)))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(8238.7160, -33.68, 4.7, -66.02)) : mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 1.0)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(vec4(-7.4, 2869.8973, 7.6, -51.90).b)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))))), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.y)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) ^ 0u), (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) / 1u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) / 1u))) << 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) | 0u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0)), injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))))))))) | 0u))), 0u ^ (~ (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(mix(-75.69, refract(-62.68, 31.49, -4.8), false)) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(3.4)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))))), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))) << 0u))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u))))), (_GLF_IDENTITY(~ (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u))))), 0u ^ (~ (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(0.3)))), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4(injectionSwitch, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0)))).y)))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(419.228)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))), (vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))) - vec2(0.0, 0.0))).y))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min(uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)), max(uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), uint(_GLF_IDENTITY(6u, (6u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / sqrt(1.0)))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))) + 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u)))))) | 0u)))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) << 0u, (_GLF_IDENTITY((uint(6u)) << 0u, 0u ^ ((uint(6u)) << 0u))) / 1u))), _GLF_IDENTITY(1u * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (1u * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), uint(8u)))))))), 1u, 1u)), (uint(uvec4(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u & 214u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u)))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(0u, max(0u, 0u))))))) ^ 0u)) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) ^ 0u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u)))))))) | (1u))), ((_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u)))))) | 0u))))) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1)))), 1))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (_GLF_IDENTITY(1, max(1, 1)))), 1)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1), ((1)) / 1))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(716.185)), clamp(float(_GLF_FUZZED(716.185)), float(_GLF_FUZZED(716.185)), float(_GLF_FUZZED(716.185)))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)))))))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 0.0, 1.0))), (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((1.2 + -5.4))), bool(false))))), (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false)))))))), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 0.0, 1.0))), (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((1.2 + -5.4))), bool(false))))), (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false))))))))))) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(716.185)), clamp(float(_GLF_FUZZED(716.185)), float(_GLF_FUZZED(716.185)), float(_GLF_FUZZED(716.185)))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)))))))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 0.0, 1.0))), (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((1.2 + -5.4))), bool(false))))), (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false)))))))), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-3292.9417), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 0.0, 1.0))), (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((1.2 + -5.4))), bool(false))))), (false ? _GLF_FUZZED(-789.756) : (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(716.185)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(716.185)), bool(false))))))))))) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0))))))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) || false))))))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), 1u * ((next_virtual_gid)))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid))))], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(1, (1) | (1))) >> 0), uint(uint(read_1 + 1)))), 4, 64, 4);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(clamp(subgroup_id, virtual_gid, virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))))), 0u ^ (buf[virtual_gid])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u ^ (buf[virtual_gid])) : _GLF_FUZZED(num_workgroup)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) >> 0u), ~ (~ ((buf[virtual_gid])))))) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), 0u ^ (_GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))))) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid]))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(uvec3(170481u, 183870u, 186104u)) : uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), clamp(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(uvec3(170481u, 183870u, 186104u)) : uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(uvec3(170481u, 183870u, 186104u)) : uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(uvec3(170481u, 183870u, 186104u)) : uvec3((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), ((~ ((buf[virtual_gid])))) >> 0u))), 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))) << 0u, _GLF_IDENTITY((buf[virtual_gid]), 0u ^ (_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((buf[virtual_gid]))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((~ ((buf[virtual_gid]))), (true ? (~ ((buf[virtual_gid]))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY((~ ((buf[virtual_gid]))), ~ (~ ((~ ((buf[virtual_gid]))))))) | (_GLF_IDENTITY((~ ((buf[virtual_gid]))), ~ (~ ((~ ((buf[virtual_gid])))))))))), (~ (~ _GLF_IDENTITY(((buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))) | (virtual_gid))])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))) | (virtual_gid))])) : _GLF_FUZZED(subgroup_size))))) | (_GLF_IDENTITY(~ (~ ((buf[virtual_gid]))), (~ (~ ((buf[virtual_gid])))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) << 0u)), _GLF_IDENTITY((buf[virtual_gid]), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (165447u & 0u) | (virtual_gid))))], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))))), ~ (~ ((buf[virtual_gid])))))) << 0u)), max(_GLF_IDENTITY((buf[virtual_gid]), ((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))])) | 0u) << _GLF_IDENTITY(0u, (0u) - 0u), (buf[virtual_gid]) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, _GLF_IDENTITY(int(ivec4((4) - 0, (0 | 0), 1, 0)), 0 | (int(ivec4((4) - 0, (0 | 0), 1, 0)))))) << 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, (_GLF_IDENTITY((4) - 0, _GLF_IDENTITY(int(ivec4((4) - 0, (0 | 0), 1, 0)), 0 | (int(ivec4((4) - 0, (0 | 0), 1, 0)))))) << 0))) | 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) >> 0u)))))], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u) == read_2) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(64826))), 4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * 1), 4, 4)))))), (true ? _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))) ? 4 : _GLF_FUZZED(64826))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, clamp(4, 4, 4)))))) : _GLF_FUZZED(-40851))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0)))))))) >> 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(((bvec4(false, false, false, false) != bvec4(false, false, false, true)) ? -19.36 : -64.84)), _GLF_FUZZED(vec3(-90.93, -4118.2583, -8.4).x)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))) || false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))) || false, bool(bvec4((bool(bool(_GLF_DEAD(false)))) || false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! ((false))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec3(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0), 0u, 1u)), min(uint(uvec3(read_1 + 1, 0u, 1u)), uint(uvec3(read_1 + 1, 0u, 1u))))) == read_2), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), min(_GLF_IDENTITY((read_2), ((read_2)) | (0u ^ 0u)), (read_2)))), true && (read_1 + 1 == _GLF_IDENTITY(read_2, 0u | _GLF_IDENTITY((read_2), min(_GLF_IDENTITY((read_2), ((read_2)) | (0u ^ 0u)), (read_2))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) : _GLF_FUZZED(read_1)))) | (read_1 + 1)) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec2(uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) == read_2), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ((uint(read_1 + 1 == read_2))) / 1u) >> 0u, max((uint(read_1 + 1 == read_2)) >> 0u, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))) >> 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ((uint(read_1 + 1 == read_2))) / 1u) >> 0u, max((uint(read_1 + 1 == read_2)) >> 0u, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ((uint(read_1 + 1 == read_2))) / 1u) >> 0u, max((uint(read_1 + 1 == read_2)) >> 0u, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))) >> 0u)))))) >> 0u, min((_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)), ((uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))) == read_2))) / 1u) >> 0u, max((uint(read_1 + 1 == read_2)) >> _GLF_IDENTITY(0u, (0u) * 1u), (uint(read_1 + 1 == read_2)) >> 0u)))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))), read_1)) + 1 == read_2), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))), read_1)) + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), _GLF_IDENTITY(((uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (1)), (read_1 + 1) - 0u)) | (read_1 + 1)) == read_2))) / 1u, min(((uint(read_1 + 1 == read_2))) / 1u, _GLF_IDENTITY(((uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2))) / 1u, (((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)) == read_2))) / 1u) - 0u)))) >> 0u, max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))) >> 0u)))) >> 0u)))), uint(uvec2(min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, 0u + (read_2)))), min(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), (true ? read_1 + 1 : _GLF_FUZZED(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (read_1 + 1)) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == read_2)), ((uint(read_1 + 1 == read_2))) / 1u) >> 0u, max((uint(read_1 + _GLF_IDENTITY(1, (1) / 1) == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u)))) >> 0u, min((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) ^ 0u))) + _GLF_IDENTITY(1, 1 * (1)) == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == read_2)), _GLF_IDENTITY(((uint(read_1 + 1 == read_2))), (false ? _GLF_FUZZED(virtual_gid) : ((uint(read_1 + 1 == read_2))))) / 1u) >> 0u, _GLF_IDENTITY(max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u), clamp(_GLF_IDENTITY(max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - (0 & 44054))) | (1)) == read_2)) >> 0u), (max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - 0u))) >> 0u)) >> 0u), max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u), _GLF_IDENTITY(max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u), (false ? _GLF_FUZZED(next_virtual_gid) : max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u)))))))) >> 0u, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2)), ((uint(read_1 + 1 == read_2))) / 1u) >> 0u, max((uint(read_1 + 1 == read_2)) >> 0u, (uint(read_1 + 1 == read_2)) >> 0u)))) >> 0u)))), 0u)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false))))), (false) && true)))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.9), _GLF_FUZZED(44.45)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
}
