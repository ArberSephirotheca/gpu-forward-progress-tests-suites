#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bvec3 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 bool _f3;
 mat3x2 _f4;
 mat3x4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_12 {
 float _f0;
 mat2x4 _f1;
 vec2 _f2;
 vec4 _f3;
 mat3x4 _f4;
 uint _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 ivec2 _f4;
 mat2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 mat4 _f1;
 mat2 _f2;
 uvec2 _f3;
 ivec3 _f4;
 uvec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_11 {
 uint _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 bvec3 _f4;
 float _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 _GLF_struct_16 _f1;
 uint read_1;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat4 _f1;
 uint workgroup_base;
 mat3 _f2;
 ivec3 _f3;
 ivec3 _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_4 {
 int _f0;
 bvec4 _f1;
 vec3 _f2;
 bool _f3;
 uvec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 uvec2 _f1;
 vec3 _f2;
 mat4 _f3;
 vec2 _f4;
 mat3x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat4 _f2;
 mat4x3 _f3;
 _GLF_struct_5 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 bvec3 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bvec4 _f1;
 float _f2;
 uint subgroup_local_id;
 bvec3 _f3;
 mat3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 bvec3 _f1;
 ivec2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, true))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-974.664) : 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), true, true, true))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), max((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), ((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480))) + 0.0))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), max((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480)), ((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-5083.2480))) + 0.0)))) / 1.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(float(49084u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))), bvec4(true), 1.0, gl_SubgroupInvocationID, bvec3(true), mat3(1.0), ivec2(_GLF_IDENTITY(1, 0 ^ (1))))), bvec3(true), ivec2(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! _GLF_IDENTITY(((false)), bool(bvec2(((false)), true))), true, false)))))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 1.0, sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, 1.0, sqrt(1.0))))) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false))))), true, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false))))), true, false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (0u & 94242u) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(ivec2(1), bvec3(true), _GLF_struct_6(_GLF_struct_3(_GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (true ? ivec3(_GLF_IDENTITY(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1) * (1))) : _GLF_FUZZED(ivec3(9178, 74221, -53616)))), min(_GLF_IDENTITY(ivec3(1), (true ? ivec3(_GLF_IDENTITY(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1) * (1))) : _GLF_FUZZED(ivec3(9178, 74221, -53616)))), _GLF_IDENTITY(ivec3(1), (true ? ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), clamp(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) * 1), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(1, (1) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, max(1, 1)), 1)) : _GLF_FUZZED(-4380))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(1, (1) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, max(1, 1)), 1)) : _GLF_FUZZED(-4380)))))))))) : _GLF_FUZZED(ivec3(9178, 74221, -53616))))))))), uvec2(1u), vec3(1.0), mat4(1.0), vec2(1.0), mat3x4(1.0), mat2(1.0)), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(floatBitsToInt(1441.2022)) : 1)), (false ? _GLF_FUZZED(-72070) : _GLF_IDENTITY(1, min(1, 1)))), bvec4(true), vec3(1.0), true, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((workgroup_id ++))))) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(180341u, 164965u)) : uvec2(1u)))))))), mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_struct_5(mat3x2(1.0), mat4(1.0), workgroup_size * workgroup_id, mat3(1.0), ivec3(1), ivec3(1), true, uvec4(1u)), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat3(56.46, 2.8, 6378.0843, 5626.6900, 6.3, -2661.0409, 347.894, 88.53, -5599.4111)) : mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(8416.1567, 11.87, 67.94, -274.669, 519.326, -7.1, -6209.6312, 6.7, -0.9, -4583.2543, -8019.7471, 5.1, 7429.6410, -3281.6940, 560.760, 21.19)))))))), 1.0, 1.0, abs(1.0), 1.0)))), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))), mix(float(_GLF_FUZZED(58.51)), float(clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat3(56.46, 2.8, 6378.0843, 5626.6900, 6.3, -2661.0409, 347.894, 88.53, -5599.4111)) : mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(8416.1567, 11.87, 67.94, -274.669, 519.326, -7.1, -6209.6312, 6.7, -0.9, -4583.2543, -8019.7471, 5.1, 7429.6410, -3281.6940, 560.760, 21.19)))))))), 1.0, 1.0, abs(1.0), 1.0)))), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), bool(true))), min(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED((6.3 + 7037.8316))), bool(false))), abs(1.0), 1.0), mat3(1.0) * (mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.3 + 7037.8316))), bool(false))), abs(1.0), 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), (false ? _GLF_FUZZED(injectionSwitch.s) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))))))), 1.0, 1.0, 1.0, abs(1.0), 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), (false ? _GLF_FUZZED(injectionSwitch.s) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))))))), 1.0, 1.0, 1.0, abs(1.0), 1.0) : _GLF_FUZZED(mat3(-1.4, 0.1, -8.5, -7.4, -1.1, 0.4, -11.56, 75.07, -5.1))))), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)))), 1.0))), mix(float(_GLF_FUZZED((-0.1 + 65.24))), float(clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED((6.3 + 7037.8316))), bool(false))), abs(1.0), 1.0), mat3(1.0) * (mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.3 + 7037.8316))), bool(false))), abs(1.0), 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), (false ? _GLF_FUZZED(injectionSwitch.s) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))))))), 1.0, 1.0, 1.0, abs(1.0), 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), (false ? _GLF_FUZZED(injectionSwitch.s) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), tan(0.0), 1.0, 0.0, 0.0, log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(sin(0.0)), 1.0, tan(0.0), 1.0, 0.0, 0.0, log(1.0))))))))))), 1.0, 1.0, 1.0, abs(1.0), 1.0) : _GLF_FUZZED(mat3(-1.4, 0.1, -8.5, -7.4, -1.1, 0.4, -11.56, 75.07, -5.1))))), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)))), 1.0)))), bool(true))), _GLF_IDENTITY(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4821.8035)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(4821.8035)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(4821.8035)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4821.8035)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false ? _GLF_FUZZED(-24.78) : mix(float(_GLF_FUZZED(4821.8035)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : _GLF_FUZZED(-7.5)))), 1.0, abs(1.0), 1.0))), float(mat4(_GLF_IDENTITY(clamp(float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(1.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))), mix(float(clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0), (mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-9.3) : float(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), abs(1.0), 1.0)))), float(_GLF_FUZZED(-30.23)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.3), (_GLF_FUZZED(0.3)) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-83.75, 575.272)))), injectionSwitch, injectionSwitch)).y)), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(_GLF_IDENTITY(0.3, (0.3) / 1.0))))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0)))), max(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0))))))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_7._f2._f4.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_2._f0._f0.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7._f2._f4.workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_2._f0._f0.subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED((++ virtual_gid)) : _GLF_struct_replacement_7._f2._f4.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) | (uint(uvec2(subgroup_size, 1u)))), uint(_GLF_IDENTITY(uint(uint(uvec2(subgroup_size, 1u))), (uint(uint(uvec2(subgroup_size, 1u)))) / 1u)))) + (_GLF_IDENTITY((_GLF_struct_replacement_2._f0._f0.subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(atomicOr(subgroup_id, (subgroup_size))) : (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_local_id, (_GLF_struct_replacement_2._f0._f0.subgroup_local_id) >> (149578u & 0u))))) + 1) % subgroup_size)))));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(1u, _GLF_struct_8(vec4(1.0), mat4(1.0), mat2(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)), ivec3(1), uvec2(1u), uvec2(1u)), _GLF_struct_9(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)), (true ? (uvec3(1u)) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(145088u, 164894u, 194229u), (uvec3(145088u, 164894u, 194229u)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))), _GLF_struct_10(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-837.029) : 1.0))), uvec2(1u), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), bvec3(true), _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_struct_16(_GLF_struct_12(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), mat2x4(1.0), vec2(1.0), vec4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 1.0)))), mat3x4(1.0), 1u, uvec4(1u)), _GLF_struct_13(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) / (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 1)))) >> _GLF_IDENTITY(int(3), int(3))))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(1, (1) / (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 1)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) - 0), clamp(int(3), int(3), int(3))))))))), ivec4(1, 1, 1, 1) * _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), min(((1)), ((1))))) / (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 1)))) >> _GLF_IDENTITY(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) / (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 1)))) >> _GLF_IDENTITY(int(3), int(3)))))), ((ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) / _GLF_IDENTITY((((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(53460) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) * 1))), 1)))) >> _GLF_IDENTITY(int(3), int(3))), 0 | ((((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(53460) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) * 1))), 1)))) >> _GLF_IDENTITY(int(3), int(3))))))))) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1)))))))), _GLF_struct_14(mat2x4(1.0), bvec4(true), 1.0), _GLF_struct_15(bvec3(true), mat3x4(1.0), bvec2(true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), mat3x2(1.0), mat3x4(1.0), vec2(1.0)), ivec2(1), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(409.841, -8.3, 70.58, 1.1, 7.6, 5209.3706, -7883.5671, 6.3, 8.9, -9.4, -40.46, sign(-63.34), 544.574, sin(-149.603), 5.3, 2596.9118)) : mat4(1.0))), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(409.841, -8.3, 70.58, 1.1, 7.6, 5209.3706, -7883.5671, 6.3, 8.9, -9.4, -40.46, sign(-63.34), 544.574, sin(-149.603), 5.3, 2596.9118)) : mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(62.80))))))) * mat4(1.0))), atomicLoad(buf[virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_17.read_1 + _GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), false || (bool(bvec4((false), true, true, true)))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), true, true)), false)))))) || false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_local_id + 1, (_GLF_struct_replacement_2._f0._f0.subgroup_local_id + 1) ^ 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_17.read_1, (true ? _GLF_struct_replacement_17.read_1 : _GLF_FUZZED(bitfieldExtract(workgroup_id, -93762, 35110)))) + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2))) + 1, 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false || (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), cos(tan(vec2(0.0, 0.0))) * ((injectionSwitch) * mat2(1.0))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_17.read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, 1u)), (uint(uvec2(read_2, 1u))) - 0u))) + 1, clamp(uint(_GLF_struct_replacement_17.read_1 + 1 == read_2) + 1, uint(_GLF_struct_replacement_17.read_1 + 1 == read_2) + 1, uint(_GLF_IDENTITY(_GLF_struct_replacement_17.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_17.read_1, (_GLF_struct_replacement_17.read_1) - 0u)) | (_GLF_struct_replacement_17.read_1)) + 1 == read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))))), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), ! (! ((bool(bvec3(_GLF_DEAD(false), false, false))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true, false))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-97.51)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 1.0, 1.0)))[0], _GLF_FUZZED(4083.0109)), vec2(_GLF_FUZZED(9.0), (vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 1.0, 1.0)))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))).y))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))) && true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  barrier();
}
