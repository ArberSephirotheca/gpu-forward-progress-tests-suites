#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))))))) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-99.32)))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-99.32)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-99.32)))) > injectionSwitch.y)))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), (bool(! (! (false)))) || false))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(vec4(-2.2, 0.1, 24.10, -61.25).w), ((injectionSwitch) / vec2(1.0, 1.0))[1]), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(6.4)), bvec2(true, false)))))).y) || false)))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) && true))) || false)) || false))))), false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-73556) : ~ (1))), ~ (1)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.4)), bvec2(true, false))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), false), false)))))) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     else
      {
      }
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = (((0 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(0), 0, 1), ivec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec3(int(0), 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(0), 0, 1), ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec3(int(0), 0, 1)))), (false ? _GLF_FUZZED((-64600 | 25892)) : int(_GLF_IDENTITY(ivec3(int(0), 0, 1), ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec3(int(0), 0, 1))))))) ^ 0)))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(770.464, -24.94)))).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          continue;
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(6), int(6))) | (0 << _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (false ? _GLF_FUZZED(subgroup_local_id) : (gl_WorkGroupID.x))) << 0u);
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bool((! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) << 0u), (true ? (workgroup_base) >> 0u : _GLF_FUZZED(workgroup_base)))), workgroup_base, workgroup_base)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), (0u | 1u), 1u))), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), (workgroup_base))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) << 0u, _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), clamp(uint(uint(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u, min((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u, (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u)))), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 1u, 0u)), clamp(uint(uvec4(workgroup_base, 0u, 1u, 0u)), uint(uvec4(workgroup_base, 0u, 1u, 0u)), uint(uvec4(workgroup_base, 0u, 1u, 0u)))))) ^ 0u))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u))))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base))))))) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (uint((~ (workgroup_base)) << 0u)) >> 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u))))))))))))), ((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base))))))) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (uint((~ (workgroup_base)) << 0u)) >> 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u)))))))))))))) >> 0u), ((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))) * (uint(uint((workgroup_base))))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, (0u) | (0u)))), clamp(~ ((_GLF_IDENTITY(0u, (0u) | (0u)))), ~ ((_GLF_IDENTITY(0u, (0u) | (0u)))), ~ ((_GLF_IDENTITY(0u, (0u) | (0u))))))) / 1u))) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(uvec4(uint(4u), 1u, 0u, 1u))))))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(uvec4(uint(4u), 1u, 0u, 1u))))))), uint(uvec4(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(uvec4(uint(4u), 1u, 0u, 1u))))))), uint(uint((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(uvec4(uint(4u), 1u, 0u, 1u)))))))))), 0u, 1u, 0u))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec4(uint(4u), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(uvec4(uint(4u), 1u, 0u, 1u)))))))))))))))))) * 1u)), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u))))))), ~ (~ (uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u)))))))))))))))), ((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), _GLF_IDENTITY(1u * (uint(uint((workgroup_base)))), _GLF_IDENTITY(uint(uint(1u * (uint(uint((workgroup_base)))))), (uint(uint(1u * (uint(uint((workgroup_base))))))) - 0u))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (_GLF_IDENTITY(uint((_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (true ? ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(6455.9890, 9460.5250, -3.6, 9.4))) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) : _GLF_FUZZED(subgroup_local_id)))))) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint(_GLF_IDENTITY((~ (workgroup_base)) << 0u, 0u ^ ((~ (workgroup_base)) << 0u)))))), uint(uint(_GLF_IDENTITY((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u)))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u)))))))))))))))) * 1u)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), clamp(uint(uint((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base)))))), (true ? ~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base)))))) : _GLF_FUZZED(subgroup_id)))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, 0u, 1u))))))))))))), ((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base)))) << 0u, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), 0u | (~ (workgroup_base)))) * 1u)) << 0u)), clamp(uint(uint((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), 1u * (uint(uint((workgroup_base))))))) << 0u)), _GLF_IDENTITY(uint(uint((~ (workgroup_base)) << 0u)), (uint(_GLF_IDENTITY(uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))))))) << 0u), (_GLF_IDENTITY(uint((~ (workgroup_base)) << 0u), (true ? uint((~ (workgroup_base)) << 0u) : _GLF_FUZZED(subgroup_size)))) + 0u))) | (uint(uint((~ (workgroup_base)) << 0u)))), uint(uint((~ (workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (0u | 0u) ^ (4u))), uint(uvec4(uint(4u), 1u, 0u, 1u)))))))))))))) * 1u))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(81128) : 1))))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))))))
              break;
             barrier();
            }
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), abs(0.0), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), abs(0.0), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), abs(0.0), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), abs(0.0), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0))))).x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) | (4))))))), 64, 4);
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)
  {
   do
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))), read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))) << 0) == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))), read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))) << 0) == read_2)))) + 1, _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(6.4), clamp(_GLF_FUZZED(6.4), _GLF_IDENTITY(_GLF_FUZZED(6.4), mix(float(_GLF_FUZZED(-315.593)), float(_GLF_FUZZED(6.4)), bool(true))), _GLF_FUZZED(6.4))) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)) && true)) || false) || false))));
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(log(vec2(1.0, 1.0)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6462.1438)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52))), mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(5.9)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(log(vec2(1.0, 1.0)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6462.1438), (_GLF_IDENTITY(_GLF_FUZZED(-6462.1438), clamp(_GLF_FUZZED(-6462.1438), _GLF_FUZZED(-6462.1438), _GLF_FUZZED(-6462.1438)))) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) / cos(vec2(0.0, 0.0))).y), 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3535.6604)), bool(false))), (0.0) * 1.0))), 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0)), (_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), (float(vec3(0.0, 0.0, 1.0))) / sqrt(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0))) - 0.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), ((injectionSwitch.y) / exp(0.0)) - 0.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), 0.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, abs(1.0), abs(exp(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, length(0.0), 1.0), mat4(1.0) * (mat4(1.0, abs(1.0), abs(exp(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, length(0.0), 1.0)))))), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52))), mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, injectionSwitch.y), mix(float(_GLF_FUZZED(5.9)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 0.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-16.98, -546.407, 4.4).b), _GLF_FUZZED(1.6)), bvec2(false, false))).y) - 0.0, float(mat2x4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-16.98, -546.407, 4.4).b), _GLF_FUZZED(1.6)), bvec2(false, false))).y) - 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)), (false ? _GLF_FUZZED(471.129) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sin(log(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-991.058)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.41) : 0.0)), 1.0))), 1.0))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6462.1438)), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-6462.1438), (_GLF_IDENTITY(_GLF_FUZZED(-6462.1438), float(vec3(_GLF_FUZZED(-6462.1438), 1.0, 0.0)))) / 1.0)), min(float(_GLF_FUZZED(-6462.1438)), float(_GLF_FUZZED(-6462.1438))))) + 0.0), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0)), clamp(length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0)), length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0)), length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat4(-13.33, 176.371, 25.73, 8.7, 6.4, -2602.5339, -49.46, 7.8, 9.2, -425.815, -2.0, -0.7, 1.3, 162.444, 7.2, -4.1))) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-20.66)) : 1.0)))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6590.1577) : 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0))), 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), max(float(vec3(0.0, 0.0, 1.0)), float(vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), vec3(_GLF_FUZZED((40.27 + 28.35)), _GLF_FUZZED(-690.000), _GLF_FUZZED(-6.9)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (max(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), float(mat3x4(float(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ldexp(-739.084, -14229)))))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), mix(float((injectionSwitch.y) / exp(0.0)), float(_GLF_FUZZED(-785.201)), bool(false)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0))) : _GLF_FUZZED(mat2x3(-2.3, 6.3, -4.1, -968.262, -1.4, 2396.9382))))))) / exp(0.0))))))), 0.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))))) : _GLF_FUZZED((mat2x3(-9.1, -22.46, 8.1, -83.98, 0.3, -71.18) * mat2(-3.4, -3.5, 9778.6530, 7916.0508)))))), min(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))))) : _GLF_FUZZED((mat2x3(-9.1, -22.46, 8.1, -83.98, 0.3, -71.18) * mat2(-3.4, -3.5, 9778.6530, 7916.0508)))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))))) : _GLF_FUZZED((mat2x3(-9.1, -22.46, 8.1, -83.98, 0.3, -71.18) * mat2(-3.4, -3.5, 9778.6530, 7916.0508))))))))), mix(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-839.823), min(_GLF_IDENTITY(_GLF_FUZZED(-839.823), float(vec3(_GLF_FUZZED(-839.823), 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-839.823), clamp(_GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-839.823), min(_GLF_IDENTITY(_GLF_FUZZED(-839.823), float(vec3(_GLF_FUZZED(-839.823), 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-839.823), clamp(_GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-839.823), min(_GLF_IDENTITY(_GLF_FUZZED(-839.823), float(vec3(_GLF_FUZZED(-839.823), 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-839.823), clamp(_GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-839.823), min(_GLF_IDENTITY(_GLF_FUZZED(-839.823), float(vec3(_GLF_FUZZED(-839.823), 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-839.823), clamp(_GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823), _GLF_FUZZED(-839.823)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2904.1965) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((20.88 * -6167.6453))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, 0.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * ((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * ((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * ((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(847.279, -0.2, -6313.9023, 5.1)) : _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * ((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED((-945.107 - mat2(5837.2810, -911.512, 3.4, -39.08)))))).y : _GLF_FUZZED(-27.52))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true)), clamp(mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), mat2(mat3x2((mat2(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true)), (false ? _GLF_FUZZED(-68.57) : mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(vec2(-3.2, -6236.5003))))) / vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true)))), mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), mat2(1.0) * ((mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.6)), float(1.0), bool(true))))) + mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-27.52)))), bool(true))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), bool(true)))), mix(float(_GLF_FUZZED(5.9)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(232.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), bvec2(true, false))), 0.0, 1.0)))) + vec2(0.0, 0.0)).y), 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) + sin(0.0)))), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
            {
            }
           else
            {
             return;
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false) || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) && true))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 1, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
