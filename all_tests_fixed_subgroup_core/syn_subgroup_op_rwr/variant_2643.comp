#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat4x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec2 _f1;
 uvec4 _f2;
 uvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 bool _f1;
 _GLF_struct_0 _f2;
 uint subgroup_local_id;
 _GLF_struct_1 _f3;
 ivec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 int _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat3(float(mat3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0)), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0)))))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
uint subgroup_size = 16;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), min(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(0), int(0))) | (0)) >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))))), clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0, (0) | (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), _GLF_IDENTITY((_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0)))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)), clamp((_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0)))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0)))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0)))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(86560u)))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), 0 + ((1))))), _GLF_IDENTITY((1), clamp((1), (1), (1))))) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0), (~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 1 * (_GLF_IDENTITY(int(3), int(3)))))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0)) / 1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-4107) : int(int(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0), (~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) | (3)), 3))))), ((_GLF_IDENTITY(1, (1) - 0)) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0)) / 1))), 0 + (false ? _GLF_FUZZED(-4107) : int(int(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0), (~ _GLF_IDENTITY((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0)), ((_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) | (3)), 3))))), ((_GLF_IDENTITY(1, (1) - 0)) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))) << 0)) / 1))))))))))) ^ _GLF_IDENTITY(0, max(0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(3), int(3)))), ((~ (_GLF_IDENTITY(int(3), int(3))))) ^ 0))))), 1 * (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), ((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3))))))))) ^ 0))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) ^ 0)))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), int(3)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), int(3)))), ~ (~ (~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (true ? int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), int(3)))), ~ (~ (~ (~ (_GLF_IDENTITY(int(3), int(3)))))))) : _GLF_FUZZED(98555)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec3(_GLF_IDENTITY(int(3), int(3)), 0, (0 << _GLF_IDENTITY(int(1), int(1)))))))))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3))))))) / 1)))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), max((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), min((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), (1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))))))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))))))) ^ _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1) ^ (_GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))), clamp(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))), (clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)))) / 1), clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))))))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0)))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (16930 & 0)) >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0)))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0))))), (0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0)))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, max(3, 3)), 3, 3))) << 0)))), 0 ^ ((_GLF_IDENTITY(0, (0) * 1) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) / 1), (3) | 0)))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0, (false ? _GLF_FUZZED((- -43056)) : _GLF_IDENTITY(((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0, clamp(_GLF_IDENTITY(((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0, ~ (~ (((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0, ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))))))) ^ _GLF_IDENTITY(0, max(0, 0)))), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0)))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) | 0), 3))), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))))), (_GLF_IDENTITY((1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | 0)))))), (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))), ((1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) - 0))))) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) | 0)))), 0))))))))))) >> 0))), true, _GLF_struct_0(mat3(1.0), ivec2(1), uvec4(1u), uvec3(1u), 1), gl_SubgroupInvocationID, _GLF_struct_1(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), min(vec3(1.0, sqrt(0.0), 1.0), vec3(1.0, sqrt(0.0), 1.0)))), (float(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), min(vec3(1.0, sqrt(0.0), 1.0), vec3(1.0, sqrt(0.0), 1.0))))) - 0.0)), 1.0, 1.0))))), ivec2(1)), _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, 0 ^ (0)))), 0) + (ivec2(1))), bvec3(true)), mat3(1.0), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(165786u, 92112u, 108543u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))) + _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) << uvec4(0u, 0u, 0u, 0u)))), _GLF_struct_replacement_3._f0.subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((num_workgroup --))))) + (0u & 21308u)) + ((_GLF_struct_replacement_3._f0.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, abs(0.0), tan(0.0)))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) >> 0)), (_GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) >> 0)), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) >> 0))) >> 0)) << 0)), 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false))))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true, _GLF_IDENTITY(true, (true) || false), false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, abs(1.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0)))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | 0u))), min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (true ? _GLF_struct_replacement_3._f0.subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_struct_replacement_3._f0.subgroup_local_id))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | 0u))), min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_struct_replacement_3._f0.subgroup_local_id))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | 0u))), min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_struct_replacement_3._f0.subgroup_local_id))))) : _GLF_FUZZED(virtual_gid)))))) / 1u) + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | 0u))), min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_struct_replacement_3._f0.subgroup_local_id))))) / 1u) + 1, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | 0u))), min(_GLF_struct_replacement_3._f0.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_local_id, (_GLF_struct_replacement_3._f0.subgroup_local_id) | (_GLF_struct_replacement_3._f0.subgroup_local_id)), _GLF_struct_replacement_3._f0.subgroup_local_id))))) / 1u) + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_size))) | 0u))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(false, true && (false))))))))) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), true, false, false))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(4, (4) * 1), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, true)), true && (bool(bvec3(bool(false), true, true)))))), ! _GLF_IDENTITY((! (bool(bool(false)))), (_GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false)) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, true)), true && (bool(bvec3(bool(false), true, true)))))), ! _GLF_IDENTITY((! (bool(bool(false)))), (_GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false)) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(-2357.6003), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-46.97, _GLF_IDENTITY(9214.9717, (true ? 9214.9717 : _GLF_FUZZED(-6.5))))) : injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false || (read_1 + 1 == read_2))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false || (read_1 + 1 == read_2))) + 1) | (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false || (read_1 + 1 == read_2))) + 1)), _GLF_IDENTITY(4, (4) | 0), 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
