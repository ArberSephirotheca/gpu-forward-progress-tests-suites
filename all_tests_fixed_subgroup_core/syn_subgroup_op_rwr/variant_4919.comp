#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))) : _GLF_FUZZED(41.48))), float(_GLF_FUZZED(-814.155)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, cos(0.0), exp(_GLF_IDENTITY(0.0, (0.0) + 0.0)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7075.7511)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4944.7218) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), bool(bvec4(! (bool(bool(_GLF_DEAD(false)))), false, false, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) - 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (142192u & 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size)))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-40845) : _GLF_IDENTITY(0, min(0, 0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)), max(~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(atomicAdd(next_virtual_gid, num_workgroup)) : read_1)), (read_1) / 1u))) + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1), (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)) ^ 0u)), ~ (~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) + 1))))))))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1), 0u), uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1), 0u))))))))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), 0u | _GLF_IDENTITY((uint(read_1 + 1)), clamp(_GLF_IDENTITY((uint(read_1 + 1)), ((uint(read_1 + 1))) | ((uint(read_1 + 1)))), _GLF_IDENTITY((uint(read_1 + 1)), (true ? (uint(read_1 + 1)) : _GLF_FUZZED(subgroup_id))), (uint(read_1 + 1))))), (_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))) << (54950u & 0u))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))) >> 0u))))) ^ 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, max(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, _GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))))), uint(read_1 + _GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) >> 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(read_1 + 1)), min(0u | (uint(read_1 + 1)), 0u | (uint(read_1 + 1)))), 1u * (_GLF_IDENTITY(0u | (uint(read_1 + 1)), min(0u | (uint(read_1 + 1)), 0u | (uint(read_1 + 1)))))))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))), (true ? _GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) : _GLF_FUZZED(subgroup_id)))) - 0u) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(0u, (0u | 0u) ^ (0u)) | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), min(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), ~ (~ (uvec3(read_1, 0u, 1u)))), uvec3(read_1, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), min(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), ~ (~ (uvec3(read_1, 0u, 1u)))), uvec3(read_1, 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), min(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), ~ (~ (uvec3(read_1, 0u, 1u)))), uvec3(read_1, 0u, 1u))))))), (read_1) / 1u))) + 1), (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)) / 1u)))), uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))), clamp(_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))))) >> 0u))))) ^ 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), max(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(0u | (uint(read_1 + 1)), max(0u | (uint(read_1 + 1)), 0u | (uint(read_1 + 1))))))) >> 0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), max(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))))), uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), read_1 + 1))), _GLF_IDENTITY(uint(read_1 + 1), 0u | (_GLF_IDENTITY(uint(read_1 + 1), uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1), uint(uvec3(uint(read_1 + 1), 1u, 1u))), 0u)))))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1), 0u | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))) >> 0u))))), 0u, 0u, 1u)), (uint(uvec4((_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), ~ (~ (~ (read_1)))))), (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + _GLF_IDENTITY(1, max(1, 1)))))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(read_1 + 1))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), min(_GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), clamp((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)))), _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), ((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) - 0u)))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1))), 0u | (uint(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, 0u | (read_1)))) + 1)))), min(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), 0u ^ ((read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))) + 0u)))) >> 0u))))), 0u, 0u, 1u))) + (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))) ^ 0u, (_GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (1))), 0u | (uint(read_1 + 1)))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((read_1), ((read_1)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), uint(uvec2(_GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), max(_GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)), ((read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 0u), (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))))))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1))))))), uint(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))) : _GLF_FUZZED(151779u)))), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | ((read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), _GLF_IDENTITY(0u | (uint(read_1 + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(read_1 + 1)), clamp(0u | (uint(read_1 + 1)), 0u | (uint(read_1 + 1)), 0u | (uint(read_1 + 1)))), ~ (~ (0u | (uint(read_1 + 1))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1))), clamp(_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), (_GLF_IDENTITY(read_1, max(read_1, read_1))) / 1u))) + 1))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1))), ((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), (max(read_1, read_1)) | (max(read_1, read_1))))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1) / 1u))))) << 0u)) | ((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1))) + 0u)))))), _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(read_1, read_1))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (_GLF_IDENTITY(read_1, (read_1) / 1u)) - 0u))) + 1))), ~ (~ ((~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), (true ? _GLF_IDENTITY(max(read_1, read_1), ~ (~ (max(read_1, read_1)))) : _GLF_FUZZED(20405u))))) | (_GLF_IDENTITY(read_1, (read_1) / _GLF_IDENTITY(1u, (1u) | (1u))))) + 1)))))), (~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) ^ 0u)) ^ 0u) / 1u))) + 1)))))), uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1)))))), _GLF_IDENTITY(uint(read_1 + 1), 0u | (_GLF_IDENTITY(uint(read_1 + 1), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(read_1 + 1), max(uint(read_1 + 1), uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)))))))))))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) / 1u, ((read_1) / 1u) << 0u)))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))) >> 0u))))) ^ 0u)), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) - _GLF_IDENTITY(0u, (0u) ^ 0u), (true ? (read_1 + 1) - _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(virtual_gid)))))))), max(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, uint(uvec4(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, (((0u ^ 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, (0u ^ 1u)))))))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + (1))), 0u | (uint(read_1 + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1), 0u | (uint(read_1 + 1)))), (clamp(_GLF_IDENTITY(uint(read_1 + 1), ~ (~ (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1)))), uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), 0u | (uint(read_1 + 1))))) >> 0u))))) ^ 0u))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) - 0u)))) + 1, clamp(uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) - 0u)))) + 1, uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) - 0u)))) + 1, _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), uint(uvec3(_GLF_IDENTITY(read_2, (read_2) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u & 154265u))))))) + 1, 0u | (uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) - 0u)))) + 1)))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        return;
      }
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sin(0.0), 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) + vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (read_2) | (read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, false, true))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) / vec2(1.0, 1.0)).y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(592.420), _GLF_FUZZED(52.02)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(592.420, min(592.420, 592.420))), _GLF_FUZZED(52.02)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))))))
  return;
}
