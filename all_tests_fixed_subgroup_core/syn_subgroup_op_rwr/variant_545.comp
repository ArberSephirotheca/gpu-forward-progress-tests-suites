#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))) || false))))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-917.240) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.1, -7.0)) : injectionSwitch)).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6847.8818)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(9680.0808), (vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6847.8818)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[1]), vec2((vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6847.8818)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-5696.8021)), bvec2(true, false)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 0u | ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.9))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.9))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.9))))) : _GLF_FUZZED(-0.8)))), float(_GLF_FUZZED(float(102842u))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false))), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0 | 0) + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)))) | (1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 1.0))), injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), true))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))).x < injectionSwitch.y)), true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(8.5), ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, int(ivec2(4, 0)))) / 1), 64, _GLF_IDENTITY(4, int(int(4))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid))))) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))), max((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((virtual_gid))))) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))), (_GLF_IDENTITY((virtual_gid), uint(_GLF_IDENTITY(uint((virtual_gid)), (uint((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (virtual_gid))) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))))))), min(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? (virtual_gid) : _GLF_FUZZED(workgroup_base))))), ~ (virtual_gid))), max(_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid))))), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))), _GLF_IDENTITY((virtual_gid), (true ? (virtual_gid) : _GLF_FUZZED((bvec4(true, false, true, false) , subgroup_size))))))) | 0u))), ~ (virtual_gid)))))))], 4, 64, _GLF_IDENTITY(0, (0) + 0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (subgroup_local_id) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) - 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (subgroup_local_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(injectionSwitch)), (_GLF_FUZZED(packUnorm2x16(injectionSwitch))) * 1u) : 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) | (subgroup_local_id)), subgroup_local_id))))))))), (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (~ (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (~ (subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (~ (subgroup_local_id))))), min((_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (~ (subgroup_local_id))))), (_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (~ (subgroup_local_id))))))) / 1u)) >> 0u)) - 0u)))), (subgroup_local_id) ^ 0u)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), (subgroup_local_id) + 0u))) + _GLF_IDENTITY(1, (1) / (0 | (1 & 1))) < subgroup_size, _GLF_IDENTITY(false || (subgroup_local_id + 1 < subgroup_size), true && (false || (subgroup_local_id + 1 < subgroup_size)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-49.42)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))), false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, (false) || false), false, false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))), false, false, false))))))), (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))), false, false, false)))))))) && true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), true && (true && (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))) && (false), true && (true && (false))))) || false))))), false, false, false))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(461.285), _GLF_FUZZED(-190.883)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true))) || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))) || false)))), false, false, false)))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))), false, false, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))) && true), true, false, true))))) || false)))) || false))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))))))), false, false, false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))))))), (! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false))))))))) && true))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), false, false, false)))))))))))))))))))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (bool(_GLF_IDENTITY(false, ! (! (false))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), true, false, true))))))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)), false || (false)), ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), bool(bool((! (! (false)))))) && true)))))), _GLF_IDENTITY(false, false || (false)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false))) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))) && true), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true)))))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), ! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))) && true), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true)))))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), ! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))))) || false))) && true), true, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (bool(_GLF_IDENTITY(false, ! (! (false))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), true, false, true))))))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)), false || (false)), ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), bool(bool((! (! (false)))))) && true)))))), _GLF_IDENTITY(false, false || (false)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false))) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))) && true), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true)))))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), ! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))) && true), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true)))))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))), ! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), ! (! (! ((! (_GLF_IDENTITY((false), true && ((false))))))))))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))))) || false))) && true), true, false, true))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec4(false, true, true, false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << 0u) : _GLF_FUZZED(workgroup_id)))))) + 1)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, 4, 4)))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, sqrt(1.0)))).y), true, false, true))))))
    barrier();
  }
}
