#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2704.6495)), vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || false))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))) || false))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0)), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(258.393)), vec2(_GLF_FUZZED(-60.29), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (_GLF_IDENTITY(((gl_NumWorkGroups)), min(((gl_NumWorkGroups)), ((gl_NumWorkGroups))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), _GLF_IDENTITY(uvec3(4u), (uvec3(4u)) - uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) - (0u | 0u)))), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u))), 0u, 0u)))), 0u, 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))), uvec3(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))), 0u)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ _GLF_IDENTITY((~ (uvec3(0u, 0u, 0u))), min((~ (uvec3(0u, 0u, 0u))), (~ (uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))) << uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))), (uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6892.2549 / -8.6))), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((gl_NumWorkGroups), (true ? (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(82670u, 67337u, 199491u)))) ^ uvec3(0u, 0u, 0u)))))))) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))), ~ (0u))))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(102738u, 3087u, 185822u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), 0u))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), 0u, 0u)))))))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u), 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | ((~ (0u))))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ~ (~ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) ^ (gl_NumWorkGroups))))), 1u))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (_GLF_IDENTITY(0u, 0u + (0u))), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))))))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ~ (~ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) ^ (gl_NumWorkGroups))))), 1u))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (_GLF_IDENTITY(0u, 0u + (0u))), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))))))))))))), uvec3(_GLF_IDENTITY(uvec3((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ~ (~ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) ^ (gl_NumWorkGroups))))), 1u))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (_GLF_IDENTITY(0u, 0u + (0u))), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u))))))))))))))), (uvec3((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ~ (~ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) ^ (gl_NumWorkGroups))))), 1u))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (_GLF_IDENTITY(0u, 0u + (0u))), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))))))))))))))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (48885u & 0u)))))) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups)), (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))), 1u))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (_GLF_IDENTITY(0u, 0u + (0u)))) | 0u), ~ (0u), ~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) ^ 0u)) >> 0u)))), ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)), max(clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u))))) / _GLF_IDENTITY(1u, (1u) << 0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u))))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (48885u & 0u)))))) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(bitfieldReverse(uvec3(70048u, 117086u, 160890u))) : gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(vec3(max(injectionSwitch, injectionSwitch), 0.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.7))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-367.667), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.23)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u)))))), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(143795u, 21956u, 63402u)) : gl_NumWorkGroups)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(42519u, 183001u, 10067u)) : (~ (gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u ^ (1u))))))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), ((0u)) / 1u)))))) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u))))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (48885u & 0u)))))) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (0u)), 0u, 0u))))))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), ((uvec3(133679u, 63198u, 190288u) & uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) | (uvec3(8u))), uvec3(8u))) ^ (gl_NumWorkGroups))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (1u))))) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u))))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0)), (mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(1u, 1u, 1u) * (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (48885u & 0u)))))) | (~ (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) + 0u)), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u))))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((~ subgroup_size)) : 0u)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u), 0u))), 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))))) + 0u))) * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))))) >> (0u | 0u)) * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))))) * subgroup_size), 1u)), 0u ^ (uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))))) * subgroup_size), 1u)))), clamp(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_size)))))), 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), min(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)))), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((1u))) | (99348u & 0u))) >> 0u), 0u))))) * subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true) ? (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))))) ^ (subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), max(uint(uvec3(subgroup_id, 1u, 0u)), uint(uvec3(subgroup_id, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(118405u))))) ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? _GLF_IDENTITY(0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))), (0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u)))))) | (0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))) : _GLF_FUZZED(packSnorm2x16(unpackSnorm2x16(subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (0u)) ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u))))), subgroup_id)), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u))))), subgroup_id)), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u))))), subgroup_id)), 1u, 0u))), (uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))), subgroup_id)), 1u, 0u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (uvec3(2u)) | (uvec3(2u))))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(min(uvec3(100630u, 65687u, 126375u), uvec3(150584u, 178782u, 198282u))) : _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(uvec3(52276u, 163083u, 130771u)) : _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u)))), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u)))), 0u))))))), max(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u)) << uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), (uvec3(subgroup_id, 1u, 0u)) << uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))))))) * subgroup_size)))))))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(bitfieldReverse(num_workgroup)) : subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), min(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))), 0u + (_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))))))) * subgroup_size), 0u ^ (uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u)))), 0u + (_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))))))) * subgroup_size))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))), (_GLF_IDENTITY(true, (true) && true) ? (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size), uint(uvec3(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))) : _GLF_FUZZED(packSnorm2x16(unpackSnorm2x16(subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (0u)) ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))))))) * subgroup_size)))))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | 0u)))))) * subgroup_size), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, 0u | (0u)))), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), min(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))))) * subgroup_size), 1u)))), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))))) * subgroup_size), 1u), (uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))))) * subgroup_size), 1u)) << uvec2(0u, 0u)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))), (_GLF_IDENTITY(true, (true) && true) ? (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))) : _GLF_FUZZED(packSnorm2x16(unpackSnorm2x16(subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (0u)) ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | 0u)))))) * subgroup_size), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, 0u | (0u)))), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), min(uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))))) * subgroup_size), 1u)))), uint(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size), 1u)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))))) * subgroup_size), 1u), (uvec2(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))))) * subgroup_size), 1u)) << uvec2(0u, 0u)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))), (_GLF_IDENTITY(true, (true) && true) ? (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_id, 1u, 0u))), (true ? 0u ^ (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_size))))) * subgroup_size))))) : _GLF_FUZZED(packSnorm2x16(unpackSnorm2x16(subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (0u)) ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u ^ (uint(uvec3(subgroup_id, 1u, 0u))))) * subgroup_size)))))))))) | 0u)))))) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) << 0), 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + 0)))), (1) / 1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 354.913)), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-47941, 28133)) : 0)), 0))], _GLF_FUZZED(float(true))), bvec2(true, false))).y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, true && (false))), false))), false || (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_size) : read_1 + 1)) == _GLF_IDENTITY(read_2, min(read_2, read_2))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), 0 + (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-703.558))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), true && (! (bool(bool(_GLF_DEAD(false))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
