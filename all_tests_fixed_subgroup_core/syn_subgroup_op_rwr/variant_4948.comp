#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint read_1;
 ivec3 _f0;
 float _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y))))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-6.5)), bvec2(false, false))), injectionSwitch)))).y))))
      barrier();
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u))), 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)))));
 do
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) - uvec2(0u, 0u)), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) ^ (_GLF_IDENTITY(uvec2(0u, 0u) & uvec2(117666u, _GLF_IDENTITY(164920u, uint(uvec2(164920u, 0u)))), (uvec2(0u, 0u) & uvec2(117666u, 164920u)) | (uvec2(0u, 0u) & uvec2(117666u, 164920u))))))).y, (false ? _GLF_FUZZED(usubBorrow(workgroup_id, num_workgroup, subgroup_local_id)) : _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) - uvec2(0u, 0u)), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) ^ (_GLF_IDENTITY(uvec2(0u, 0u) & uvec2(117666u, _GLF_IDENTITY(164920u, uint(uvec2(164920u, 0u)))), (uvec2(0u, 0u) & uvec2(117666u, 164920u)) | (uvec2(0u, 0u) & uvec2(117666u, 164920u))))))).y, 0u + (workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) - uvec2(0u, 0u)), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u) & uvec2(117666u, _GLF_IDENTITY(164920u, uint(uvec2(164920u, 0u)))), max(uvec2(0u, 0u) & uvec2(117666u, _GLF_IDENTITY(164920u, uint(uvec2(164920u, 0u)))), uvec2(0u, 0u) & uvec2(117666u, _GLF_IDENTITY(164920u, uint(uvec2(164920u, 0u)))))), (uvec2(0u, 0u) & uvec2(117666u, 164920u)) | (uvec2(0u, 0u) & uvec2(117666u, 164920u))))))).y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, int(int(_GLF_IDENTITY(5, (5) / 1))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int(int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), clamp(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(int(0), int(0)))))))), _GLF_IDENTITY(int(0), int(0))))), min((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int(int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), clamp(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(int(0), int(0)))))))), _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int(int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), clamp(int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(0), max(int(0), int(0))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(int(0), int(0)))))))), _GLF_IDENTITY(int(0), int(0))))))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), bool(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), bool(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), (true ? ~ ((0u)) : _GLF_FUZZED(workgroup_size))))) | (0u)) + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5900.5664)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.5) : injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) >> 0u) * subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), uint(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 0u), (uvec2((subgroup_id * subgroup_size), 0u)) - uvec2(0u, 0u)))), 0u, 1u))), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), uint(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 0u), (uvec2((subgroup_id * subgroup_size), 0u)) - uvec2(0u, 0u)))), 0u, 1u))), 1u, 0u, 1u))))) + (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) << 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0))), clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0))), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0))), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0)))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), true)))))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u + _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 0u, 0u, 0u)))), clamp((buf[virtual_gid]), (buf[virtual_gid]), (buf[virtual_gid])))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) * 1), 1, 0, 1), min(ivec4(_GLF_IDENTITY(0, (0) * 1), 1, 0, 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) * 1), 1, 0, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) * 1), 1, 0, 1))))))), (_GLF_IDENTITY(0, 0 ^ (0))) | (0)), (_GLF_IDENTITY(0, ~ (~ (0)))) | 0), 0))), ivec3(1), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))) ? 1.0 : _GLF_FUZZED(-98.15))) : _GLF_FUZZED(_GLF_IDENTITY(89.33, float(vec4(89.33, 1.0, 1.0, abs(1.0))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_0.read_1 + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(4, (4) + 0), 64, 4);
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + 0)), min(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0))))) + 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + 0)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + 0)), min(min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0))))) + 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + 0))))) | 0)));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     if(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < subgroup_size)
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_0.read_1 + 1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 0 | (4)));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))))))))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y) || false)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0) < injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(3454.8757), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(mat4((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1157.1368))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1157.1368))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(0.0), 1.0), transpose(transpose(mat4((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1157.1368))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(0.0), 1.0))))), (transpose(_GLF_IDENTITY(mat4((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1157.1368))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(0.0), 1.0), transpose(transpose(mat4((injectionSwitch) / vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0, cos(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1157.1368))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), sqrt(1.0))), 1.0, cos(0.0), 1.0, abs(0.0), 1.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).y))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               subgroupAll(false);
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ _GLF_IDENTITY((7), ((7)) << 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(7, 0 ^ (7)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ (7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(7, 0 ^ (7)))))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ (7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(7, 0 ^ (7))))))) << (0 | 0)))), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && _GLF_IDENTITY(true, false || (true))) ? 3 : _GLF_IDENTITY(_GLF_FUZZED(28186), (_GLF_IDENTITY(_GLF_FUZZED(28186), (_GLF_FUZZED(28186)) / 1)) | (_GLF_FUZZED(28186)))))), int(3))), min(((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (3))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) ^ (0 << _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(true, (true) && true) ? 3 : _GLF_IDENTITY(_GLF_FUZZED(28186), (_GLF_IDENTITY(_GLF_FUZZED(28186), (_GLF_FUZZED(28186)) / 1)) | (_GLF_FUZZED(28186)))))), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? 3 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(28186), max(_GLF_FUZZED(28186), _GLF_IDENTITY(_GLF_FUZZED(28186), min(_GLF_FUZZED(28186), _GLF_FUZZED(28186))))), (_GLF_IDENTITY(_GLF_FUZZED(28186), (_GLF_FUZZED(28186)) / 1)) | (_GLF_FUZZED(28186)))))), int(3))))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))) * (int(ivec3(int(_GLF_IDENTITY(7, 0 ^ (7))), 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) / 1), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0)))))), (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0)))))), (1) ^ 0)) - 0) << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))) >> _GLF_IDENTITY(int(3), int(3))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) / 1), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), (_GLF_IDENTITY(int(5), (int(5)) >> 0)) * 1)))))), (1) ^ 0) << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(3), int(3))) / 1)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) + 0)) << 0)))) >> 0)))))), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0) + (7))))))), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) << 0)) | (_GLF_IDENTITY(7, clamp(7, 7, 7)))))))), (int(7)) << 0), _GLF_IDENTITY(int(7), (int(7)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, 0u + (_GLF_struct_replacement_0.read_1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))), (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1)))) * 1u), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))), uint(uvec3(~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1))), 0u, 1u))), 1u, 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.read_1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.read_1, (_GLF_struct_replacement_0.read_1) | (_GLF_struct_replacement_0.read_1)))))))) * 1u))) + 1 == read_2) + 1, 0u ^ (uint(_GLF_struct_replacement_0.read_1 + 1 == read_2) + 1)), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
       subgroupAll(true);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(true))) || false, true && ((bool(bool(true))) || false)), ! (! (_GLF_IDENTITY((bool(bool(true))) || false, true && ((bool(bool(true))) || false)))))) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true))))) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true))))) || false))), bool(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true))))) || false))), true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false))), true && (bool(true))))))))))), false))) || false))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), (bool(bool(true))) || false))), true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(true))), _GLF_IDENTITY(bool(bvec3((bool(bool(true))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((bool(bool(true))), _GLF_IDENTITY(bool(bvec4((bool(bool(true))), true, true, true)), (bool(bvec4((bool(bool(true))), true, true, true))) || false)), true, true)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))))) || false))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) || false), (bool(bvec4(! (true), false, true, false))) && _GLF_IDENTITY(true, true && (true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), false || (_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true))), false, false, false))))))))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), false || (_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true))), false, false, false))))))))), true, false, true)), ! (! (bool(bvec4((bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true), false || (_GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true))), false, false, false))))))))), true, false, true)))))), ! (! (! (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))))))))))), (bool(bool(true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))) || false)))) && true)), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool(true))), false || _GLF_IDENTITY(((bool(bool(true)))), bool(bvec4(((bool(bool(true)))), false, true, true)))))) || false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(! (! ((bool(bvec4(! (true), false, true, false))))), bool(bvec4(_GLF_IDENTITY(! (! ((bool(bvec4(! (true), false, true, false))))), (! (! ((bool(bvec4(! (true), false, true, false)))))) && true), true, false, false)))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(_GLF_IDENTITY(bvec2(bool(bool(! (true))), true), bvec2(bvec3(bvec2(bool(bool(! (true))), true), true)))))), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(! (! ((bool(bvec4(! (true), false, true, false))))), bool(bvec4(_GLF_IDENTITY(! (! ((bool(bvec4(! (true), false, true, false))))), (! (! ((bool(bvec4(! (true), false, true, false)))))) && true), true, false, false)))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(_GLF_IDENTITY(bvec2(bool(bool(! (true))), true), bvec2(bvec3(bvec2(bool(bool(! (true))), true), true)))))), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true)))) && true)))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)))))))))) && true)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), bool(bvec2(bool(bvec2((true), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false))))), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), true && (bool(_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), _GLF_IDENTITY(false, true && (false)), true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), _GLF_IDENTITY(false, true && (false)), true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))))))) && _GLF_IDENTITY(true, bool(bool(true))))), true, false)))))))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) || false, (_GLF_IDENTITY((bool(bool(true))) || false, true && ((bool(bool(true))) || false))) && true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(true)))), true))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) || false))))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true && (bool(true))))), bool(bool((bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))))))))))))), false))) || false))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), (bool(bool(true))) || false))), true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(true))), _GLF_IDENTITY(bool(bvec3((bool(bool(true))), true, true)), bool(bvec3(bool(bvec3((bool(bool(true))), true, true)), false, false)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))), bool(bvec3(_GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((true), ! (! ((true)))), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))) && true, ((bool(bvec4(! (true), false, true, false))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))))))))))), (bool(bool(true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, false || (false)))))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))))) || false, bool(bvec2(_GLF_IDENTITY((bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))))) || false, false)))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))))) || false)) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))))) || false)) && true)))) && true)))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false))))))) && true)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))))) || false)) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))))) || false)) && true)))) && true)))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false))))))) && true)), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! _GLF_IDENTITY(((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))), ! (_GLF_IDENTITY(! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false))))), ! (! (! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.32), _GLF_FUZZED(9007.3374)), bvec2(false, false))).y)), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true))))), bool(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! _GLF_IDENTITY(((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))), ! (_GLF_IDENTITY(! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false))))), ! (! (! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.32), _GLF_FUZZED(9007.3374)), bvec2(false, false))).y)), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true))))))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false))))))) && true)), true, false)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, true, false))) && true)))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! _GLF_IDENTITY(((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))), ! (_GLF_IDENTITY(! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false))))), ! (! (! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.32), _GLF_FUZZED(9007.3374)), bvec2(false, false))).y)), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true))))), bool(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true, false)), _GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! _GLF_IDENTITY(((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))), ! (_GLF_IDENTITY(! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false))))), ! (! (! (((bool(bvec4(! (true), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.32), _GLF_FUZZED(9007.3374)), bvec2(false, false))).y)), true)), (bool(bvec4(_GLF_IDENTITY((bool(bvec4(! (true), false, true, false))), ! (! ((bool(bvec4(! (true), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) && true))))))))), (bool(bool(true))) || _GLF_IDENTITY(false, (false) || false))))))) && true)), true, false)), true))))))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), ! (! ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), bool(bvec2((bool(bool(true))), true))) || false), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))))))))))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), ! (! ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), bool(bvec2((bool(bool(true))), true))) || false), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))))))))))))))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), ! (! ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), bool(bvec2((bool(bool(true))), true))) || false), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))))))))))))))), false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), ! (! ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), bool(bvec2((bool(bool(true))), true))) || false), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))))))))))))))), false), false))), false)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), false), false, true)), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), bool(bvec2(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), false || (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), bool(bool((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))))), false)))))), false), false, true)), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false)))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), false, true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), false), false, true)), true, false)), false, false))), false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) || false, false || ((bool(bool(true))) || false)))))))))), false), _GLF_IDENTITY(false, ! (! (false))), true)), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), false), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), false)))), true))), false, true)), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false))))), ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false), true, _GLF_IDENTITY(true, ! (! (true))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), false)))), false)))))) || false)), false, _GLF_IDENTITY(true, (true) && true))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bool(bvec4((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bool(bvec4((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), false), false, true)), true, false)), false, false))), false))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && true))), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y) || false)))))))))));
}
