#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x), clamp(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x), (true ? clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x) : _GLF_FUZZED((subgroup_local_id ++)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, true && (true)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), workgroup_size)) * workgroup_id)), uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec2(0u, (1u | 1u)))))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, ((0u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) / 1u)) << 0u))))))))), 0u)))))) | 0u, uint(uvec3((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id, workgroup_id)) : _GLF_FUZZED(atomicMax(workgroup_size, min(subgroup_id, workgroup_id))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u)), 0u)))))))), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id, workgroup_id)) : _GLF_FUZZED(atomicMax(workgroup_size, min(subgroup_id, workgroup_id))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u)), 0u)))))))), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id, workgroup_id)) : _GLF_FUZZED(atomicMax(workgroup_size, min(subgroup_id, workgroup_id))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u)), 0u)))))))), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u))))) * 1u)))))) | 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) * 1u) * subgroup_size) - _GLF_IDENTITY(0u, (0u) * 1u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY((0u & 162671u) + (subgroup_id * subgroup_size), ((0u & 162671u) + (subgroup_id * subgroup_size)) << (95922u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(atomicMax(virtual_gid, workgroup_id)))), ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) / 1), 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))))], uint(read_1 + 1), 4, _GLF_IDENTITY(64, (64) << _GLF_IDENTITY((0 & 44976), ((0 & 44976)) | (_GLF_IDENTITY((0 & 44976), ((0 & 44976)) ^ 0)))), 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(2u)))) + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2))), bool(bool(bool(bool(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2)))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2))), bool(bool(bool(bool(! (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) | (read_1 + 1)), read_1 + 1)) == read_2))))))))))) << 0u) + 1, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-50430) : _GLF_IDENTITY(64, int(int(64))))), _GLF_IDENTITY(4, ~ (~ (4))));
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | (_GLF_IDENTITY((read_1), ~ (~ ((read_1)))))) / 1u) + 1 == read_2) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) + 0u), uint(uvec4(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), 1u, 0u, 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(32627u))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-729.747)), bool(false))), bool(true))), injectionSwitch.x))))), ~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))))))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) + 1))), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), bvec2(bvec3(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 1), (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) >> (0 | 0)), (1) | 0))))) == read_2) + 1), 0u ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2) + 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 1)) + 0u), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), (~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))))) | 0), _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))))), 1, 1)))))) + (0u ^ 0u)), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1))))), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))) >> 0u)), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / (1u | 1u)) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) << _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) ^ 0u) == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u, (false ? _GLF_FUZZED((read_1 % subgroup_size)) : (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(next_virtual_gid))))) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u))), ~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | (_GLF_IDENTITY((read_1), ~ (~ ((read_1)))))) / 1u) + 1 == read_2) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) + 0u), uint(uvec4(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), 1u, 0u, 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(32627u))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-729.747)), bool(false))), bool(true))), injectionSwitch.x))))), ~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))))))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) + 1))), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), bvec2(bvec3(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 1), (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) >> (0 | 0)), (1) | 0))))) == read_2) + 1), 0u ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2) + 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 1)) + 0u), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), (~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))))) | 0), _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))))), 1, 1)))))) + (0u ^ 0u)), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1))))), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))) >> 0u)), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / (1u | 1u)) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) << _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) ^ 0u) == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u, (false ? _GLF_FUZZED((read_1 % subgroup_size)) : (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(next_virtual_gid))))) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u))), ~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | (_GLF_IDENTITY((read_1), ~ (~ ((read_1)))))) / 1u) + 1 == read_2) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) + 0u), uint(uvec4(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), 1u, 0u, 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(32627u))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-729.747)), bool(false))), bool(true))), injectionSwitch.x))))), ~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))))))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) + 1))), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), bvec2(bvec3(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 1), (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) >> (0 | 0)), (1) | 0))))) == read_2) + 1), 0u ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2) + 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 1)) + 0u), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), (~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))))) | 0), _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))))), 1, 1)))))) + (0u ^ 0u)), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1))))), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))) >> 0u)), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / (1u | 1u)) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) << _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) ^ 0u) == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u, (false ? _GLF_FUZZED((read_1 % subgroup_size)) : (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(next_virtual_gid))))) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u))), ~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | (_GLF_IDENTITY((read_1), ~ (~ ((read_1)))))) / 1u) + 1 == read_2) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) + 0u), uint(uvec4(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), 1u, 0u, 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(32627u))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-729.747)), bool(false))), bool(true))), injectionSwitch.x))))), ~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))))))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) + 1))), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), bvec2(bvec3(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 1), (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) >> (0 | 0)), (1) | 0))))) == read_2) + 1), 0u ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2) + 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 1)) + 0u), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), (~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))))) | 0), _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))))), 1, 1)))))) + (0u ^ 0u)), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1))))), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))) >> 0u)), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / (1u | 1u)) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) << _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) ^ 0u) == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u, (false ? _GLF_FUZZED((read_1 % subgroup_size)) : (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(next_virtual_gid))))) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u))), ~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | (_GLF_IDENTITY((read_1), ~ (~ ((read_1)))))) / 1u) + 1 == read_2) + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) + 0u), uint(uvec4(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), 1u, 0u, 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(32627u))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-729.747)), bool(false))), bool(true))), injectionSwitch.x))))), ~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))))))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) + 1))), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), bvec2(bvec3(bvec2(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 1), (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) >> (0 | 0)), (1) | 0))))) == read_2) + 1), 0u ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))) == read_2) + 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 1)) + 0u), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), (~ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))), (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))))) | 0), _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1)))))), 1, 1)))))) + (0u ^ 0u)), _GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), min(~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(read_1 + 1 == read_2) + 1))))), (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))) >> 0u)), (~ (uint(read_1 + 1 == read_2) + 1)) + 0u), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) / (1u | 1u)) + 1), ~ (uint(read_1 + 1 == read_2) + 1)))) << _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) ^ 0u) == read_2) + 1), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (uint(read_1 + 1 == read_2) + 1)) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u, (false ? _GLF_FUZZED((read_1 % subgroup_size)) : (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(next_virtual_gid))))) | (~ (uint(read_1 + 1 == read_2) + 1)))) + 0u))), ~ (uint(read_1 + 1 == read_2) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1)))))), 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-26470))), 4);
   subgroupAll(true);
  }
}
