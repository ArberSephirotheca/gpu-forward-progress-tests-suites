#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size;
 uvec2 GLF_merged2_0_1_6_1_1_12read_1workgroup_id;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y = subgroup_id, (true ? GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y = subgroup_id : _GLF_FUZZED((subgroup_id))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y = subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))) && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
  }
 else
  {
   GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.x;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.x = num_workgroup;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || false)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 22:
           if(_GLF_DEAD(false))
            barrier();
           {
            vec2 _GLF_SWITCH_4_0v;
            uvec3 _GLF_SWITCH_4_1v;
            _GLF_IDENTITY(bvec3(false, false, false)[2], ! (! (bvec3(false, false, false)[2])));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat2x4 _GLF_SWITCH_4_2v[72];
            bvec4(true, _GLF_IDENTITY(false, true && (false)), false, true);
           }
           case 9:
           {
            mat2x4 _GLF_SWITCH_4_3v;
           }
           case 0:
           case 87:
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 26:
             mat4x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[96];
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 11:
             case 7:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 98:
             case 75:
             if(_GLF_DEAD(false))
              barrier();
             case 12:
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             case 16:
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
           case 26:
           case 73:
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))).x)), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))).x))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))).x))))), gl_WorkGroupSize.x));
 GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w = workgroup_size;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.w = GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y = workgroup_id;
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), uint(2u))))), ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_6_1_1_12read_1workgroup_id.y) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), uint(2u)))))) ^ 0u));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.w, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.w)) * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.w;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, min(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y)) * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z, min(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z));
 GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.z = virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z = GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.z;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))) ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)) + ((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1) % GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y), (true ? GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y * GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y + ((GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1) % GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y) : _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.x = next_virtual_gid;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, 1, (1 & 1), 1)))), int(1))), ((_GLF_IDENTITY(64, max(64, 64))) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, 1, (1 & 1), 1)))), int(1)))) | ((_GLF_IDENTITY(64, max(64, 64))) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, 1, (1 & 1), 1)))), int(1)))))), 0);
 GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x = read_1;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
    {
     case 46:
     if(_GLF_DEAD(false))
      barrier();
     ;
     case 0:
     case 92:
     if(_GLF_DEAD(false))
      barrier();
     case 96:
     case 14:
     case 20:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 37:
     case 67:
     case 26:
     case 54:
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
          {
           case 2:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(all(bvec3(true, true, false)))
              {
               vec4(vec2(-6459.1747, -418.423), -78.75, _GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), max(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), _GLF_IDENTITY(min(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), vec3(mat2(vec3(-0.0, 1.5, -7622.1343), 1.0))), vec3(-0.0, 1.5, -7622.1343)), clamp(min(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), vec3(mat2(vec3(-0.0, 1.5, -7622.1343), 1.0))), vec3(-0.0, 1.5, -7622.1343)), min(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), vec3(mat2(vec3(-0.0, 1.5, -7622.1343), 1.0))), vec3(-0.0, 1.5, -7622.1343)), _GLF_IDENTITY(min(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), vec3(mat2(vec3(-0.0, 1.5, -7622.1343), 1.0))), vec3(-0.0, 1.5, -7622.1343)), (false ? _GLF_FUZZED(vec3(-0.7, 6651.0505, 0.1)) : min(_GLF_IDENTITY(vec3(-0.0, 1.5, -7622.1343), vec3(mat2(vec3(-0.0, 1.5, -7622.1343), 1.0))), vec3(-0.0, 1.5, -7622.1343))))))), vec3(-0.0, 1.5, -7622.1343)))[2]);
               uvec4 _GLF_SWITCH_3_0v;
               mat4 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
               ;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 76254;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               vec2(-516.773, 55.56);
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat4x2(-0.7, -604.944, 127.588, 61.11, 6.9, 3.5, 2.0, 5498.4818);
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ((+ GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) , bvec4(false, false, true, true));
                }
              }
             injectionSwitch;
             mat4x3(5.8);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           case 22:
           bool _GLF_SWITCH_3_4v;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
            barrier();
           case 0:
           case 47:
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
            barrier();
           case 25:
           case 78:
           case 43:
           case 39:
           case 45:
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
            barrier();
           atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.x], uint(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x + 1), 4, 64, 4);
           break;
           case 64:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             isnan(vec4(-6.2));
            }
           case 66:
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(int(int(5)), (int(int(5))) << 0))))), int(5), int(5))))), 0 ^ ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(sign(_injected_loop_counter)) : int(5))), clamp(int(5), int(5), int(5)))))))); _injected_loop_counter --)
            {
             do
              {
               min(uvec2(54189u, 114539u), uvec2(78152u, 94296u));
              }
             while(_GLF_IDENTITY(all(bvec4(true, false, true, false)), (all(bvec4(true, false, true, false))) || false));
            }
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     default:
     1;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z], clamp(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z], buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z], _GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z], (buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.z]) ^ 0u))), 4, 64, 0);
 GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.x = read_2;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.y = GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, ! (! (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)))) && true), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z)) + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, 0u + (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), ! (! (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + _GLF_IDENTITY(1, min(1, 1)) < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y) && true)))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + 1 < _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, 0u + (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), ! (! (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), max(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(0u, (0u) | 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y))))), 0u))))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z, (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.z) / 1u) + 1 < GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y) && true))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     switch(_GLF_IDENTITY(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4))))) | (_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 30:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       int i = 0;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) >> _GLF_IDENTITY(int(1), int(1))) & 1)); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH((1 ^ 1)))
          {
           case 85:
           transpose(mat4x3(mat3x4(6.2, -11.16, -718.853, 42.04, -17.66, -3700.6188, 4133.8196, 1514.3597, 9553.2235, 134.567, -1566.5272, -5.9)));
           if(_GLF_DEAD(false))
            barrier();
           case 59:
           (-293.370 - (mat2(2.7, 69.88, 9.7, 900.125) * mat3x2(-6.2, 28.23, -9.2, -2671.5079, -394.832, -5517.7028)));
           case 0:
           case 16:
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.x], uint(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (true ? GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), 1u * (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w)) ^ 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (true ? GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), 1u * (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w)) ^ 0u))))))))), 0u | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x, (true ? GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), 1u * (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w), (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.w)) ^ 0u)))))))))))) << 0u)) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 0))))), min((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 0))))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 0)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, (i) | (i))) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) >> _GLF_IDENTITY(0, (0) - 0)))) == GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y) + 1, 4, 64, 4);
            }
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 98:
           mat4(4.5, -24.76, 56.89, 0.3, -17.85, 76.92, 120.994, -9.0, -3715.4161, 8.1, 323.465, -568.397, -3.4, _GLF_IDENTITY(156.445, float(float(156.445))), 6.9, 8.1);
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       case 90:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       {
        mat4x2 _GLF_SWITCH_0_0v;
        do
         {
          if(_GLF_DEAD(false))
           barrier();
          for(          mat4(9.7, _GLF_IDENTITY(8.7, abs(0.0) + (8.7)), -88.65, 371.883, 2346.6727, -9564.6885, -313.316, 5.4, _GLF_IDENTITY(-4.7, _GLF_IDENTITY(float(mat3x4(-4.7, 1.0, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * round(length(normalize(1.0)))))), 1.0, 1.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat3x4(-4.7, 1.0, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat3x4(-4.7, 1.0, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tanh(-31.88)) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) / abs(1.0))), 7.3, 9.8, -59.05, 5279.9163, _GLF_IDENTITY(-1.9, max(-1.9, -1.9)), 35.39, -30.51);
 (48832 > i); transpose(outerProduct(_GLF_IDENTITY(vec4(-32.51, -355.278, -9947.0286, _GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec4(_GLF_FUZZED(0.9), (vec4(-32.51, -355.278, -9947.0286, _GLF_IDENTITY(_GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, _GLF_IDENTITY(803.392, mix(float(803.392), float(_GLF_FUZZED(vec4(5726.5309, -9.8, -7.2, -1.0).z)), bool(false)))))) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(768.793) : _GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(803.392, (_GLF_IDENTITY(_GLF_IDENTITY(803.392, min(803.392, 803.392)), min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x))))))[1], (vec4(-32.51, -355.278, -9947.0286, _GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x))))[2], (vec4(-32.51, -355.278, -9947.0286, _GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x))))[3]), vec4((vec4(-32.51, -355.278, -9947.0286, _GLF_IDENTITY(803.392, (_GLF_IDENTITY(803.392, min(803.392, 803.392))) - _GLF_ZERO(0.0, injectionSwitch.x))))[0], _GLF_FUZZED(3053.3463), _GLF_FUZZED(-9.2), _GLF_FUZZED(460.231)), bvec4(true, false, false, false))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(-2.5, max(-2.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.5, clamp(-2.5, _GLF_IDENTITY(-2.5, clamp(-2.5, -2.5, -2.5)), -2.5)), clamp(-2.5, -2.5, _GLF_IDENTITY(-2.5, (-2.5) / 1.0))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) - vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), transpose(transpose(mat2x4(0.0, 0.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))))))).x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec4(621.326, 411.718, -25.79, 24.55))) : -2.5)), -46.63))))
           {
            switch(_GLF_SWITCH(0))
             {
              case 0:
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    do
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-719.609, 5731.7390)))).y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                           }
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))), true, true)))))))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 91:
                          (findLSB(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id) & i);
                          case 0:
                          case 41:
                          case 39:
                          case 16:
                          case 25:
                          case 67:
                          case 86:
                          uvec4(181745u, 80422u, 22439u, 165373u);
                          break;
                          default:
                          1;
                         }
                       }
                      else
                       {
                       }
                      _GLF_IDENTITY(atan(0.5), (_GLF_IDENTITY(true, true && (true)) ? atan(0.5) : _GLF_FUZZED(_GLF_IDENTITY(-4.3, clamp(-4.3, -4.3, -4.3)))));
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            switch(_GLF_SWITCH((0 | 0)))
                             {
                              case 4:
                              (mat4(7.6, 1.0, -0.2, 9.9, -1474.8524, -1642.9215, 2.9, -2.5, 489.746, -583.599, 4.2, 9.0, 8.0, 5.6, 96.51, -3.7) * mix(vec4(-5.7, 47.62, -6.6, 3.8), cos(vec4(-369.006, -5476.5730, 5.1, 7.3)), bvec4(false, false, false, true)));
                              case 93:
                              ivec4(95562, 94320, 5471, -98438);
                              case 0:
                              case 90:
                              case 66:
                              case 65:
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              if(_GLF_DEAD(false))
                               barrier();
                              break;
                              case 68:
                              mix(bvec4(true, false, true, false), bvec4(true, false, false, true), bvec4(true, true, false, false));
                              default:
                              1;
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                           }
                          else
                           {
                           }
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), false, false, true)))))
                         barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
                       barrier();
                      barrier();
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                else
                 {
                 }
               }
              else
               {
               }
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                if(false)
                 {
                  ;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    7.2;
                   }
                  else
                   {
                    if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                     barrier();
                   }
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              fract(intBitsToFloat(_GLF_IDENTITY(ivec3(-99422, -63705, -69666), (ivec3(-99422, -63705, -69666)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))));
              if(_GLF_IDENTITY(((+ -5.5) > -2380.5475), ((_GLF_IDENTITY((+ -5.5), clamp((+ -5.5), (+ -5.5), (+ -5.5))) > -2380.5475)) && true))
               {
                for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-1228) : 1))); _injected_loop_counter ++)
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(vec2(5.6, 5102.8086))))).x)))); _injected_loop_counter --)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 6:
                        case 26:
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(_injected_loop_counter) : int(8)))))))
                           {
                            case 0:
                            case 63:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 61:
                                  int _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[9], _GLF_SWITCH_4_2v[60];
                                  case 0:
                                  case 94:
                                  case 19:
                                  case 73:
                                  lessThan(vec4(_GLF_IDENTITY(-520.962, max(-520.962, -520.962)), 43.71, 5188.7213, -225.582), vec4(-8853.9196, -360.941, 9957.2308, 1171.3309));
                                  break;
                                  default:
                                  1;
                                 }
                               }
                             }
                            case 49:
                            case 83:
                            case 64:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                               }
                              else
                               {
                                barrier();
                               }
                             }
                            break;
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            default:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            do
                             {
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                               {
                                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                 {
                                  case 0:
                                  case 94:
                                  case 96:
                                  case 84:
                                  switch(_GLF_SWITCH(0))
                                   {
                                    case 81:
                                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                     barrier();
                                    mat4x3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[53];
                                    case 33:
                                    if(_GLF_WRAPPED_IF_TRUE(true))
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      if(_GLF_DEAD(false))
                                       barrier();
                                     }
                                    else
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      if(_GLF_DEAD(false))
                                       barrier();
                                     }
                                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), _GLF_ONE(1.0, injectionSwitch.y)))))))); _injected_loop_counter ++)
                                     {
                                      mat3x4(-513.583, 3.9, -7730.9150, 41.56, -6.5, 865.940, -33.54, 3.6, 4.9, -4.0, 463.361, 660.518);
                                      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5718.9535) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
                                       barrier();
                                     }
                                    do
                                     {
                                      if(_GLF_DEAD(false))
                                       {
                                        do
                                         {
                                          if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false)), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
                                           barrier();
                                          barrier();
                                         }
                                        while(_GLF_WRAPPED_LOOP(false));
                                       }
                                     }
                                    while(_GLF_WRAPPED_LOOP(false));
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    case 0:
                                    case 69:
                                    if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
                                     barrier();
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    case 21:
                                    case 82:
                                    1;
                                    break;
                                    case 49:
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      (ivec2(24097, 51249) , vec4(28.19, -7.6, -4.8, -3.1));
                                     }
                                    default:
                                    1;
                                   }
                                  break;
                                  case 87:
                                  greaterThan(uvec4(106547u, 137973u, 157722u, _GLF_IDENTITY(155125u, 0u ^ (155125u))), uvec4(95412u, 112749u, 168934u, 77843u));
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  case 48:
                                  ivec2 _GLF_SWITCH_4_0v;
                                  default:
                                  1;
                                 }
                               }
                             }
                            while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                        case 37:
                        case 40:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          _GLF_IDENTITY(mat3(-8.7, 1.8, 1.8, 192.982, -36.60, -85.41, -256.904, -7.6, 666.506), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(-8.7, 1.8, _GLF_IDENTITY(1.8, abs(1.0) * (1.8)), 192.982, -36.60, -85.41, -256.904, -7.6, 666.506)));
                         }
                        else
                         {
                         }
                        outerProduct(vec3(_GLF_IDENTITY(-0.5, mix(float(-0.5), float(_GLF_FUZZED(3.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -9.4, -80.57), vec4(-65.79, 285.630, 7852.1008, -1571.4641));
                        break;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                         barrier();
                        case 68:
                        _GLF_IDENTITY(vec3(-83.08, -6.5, 8726.7854), min(vec3(-83.08, -6.5, 8726.7854), vec3(-83.08, -6.5, 8726.7854)));
                        if(_GLF_DEAD(false))
                         barrier();
                        default:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                           barrier();
                          barrier();
                         }
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          1;
                         }
                       }
                     }
                    if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                  else
                   {
                   }
                 }
               }
              else
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  case 42:
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 47:
                        case 76:
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            barrier();
                           }
                          barrier();
                         }
                        case 53:
                        (mat3x4(-5.4, -8893.9681, _GLF_IDENTITY(550.375, mix(float(_GLF_FUZZED(88.95)), float(550.375), bool(true))), 3.3, -506.266, 480.968, 38.55, -315.109, -1.7, -815.626, -98.05, 7.4));
                        break;
                        default:
                        1;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(1888.1059), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))))))), true))).x > injectionSwitch.y))));
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      do
                       {
                        if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              barrier();
                             }
                           }
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      ;
                     }
                    else
                     {
                     }
                    mat2(8749.7388, _GLF_IDENTITY(-77.39, float(vec4(_GLF_IDENTITY(-77.39, max(-77.39, -77.39)), _GLF_IDENTITY(1.0, (1.0) - length(0.0)), 1.0, abs(0.0)))), -8872.7054, 4.6);
                    ;
                    _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, max(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id.y));
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        (7.4 / vec4(-28.39, 80.87, 668.798, -895.093));
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                         barrier();
                       }
                     }
                    else
                     {
                     }
                    uvec3(_GLF_IDENTITY(195877u, 0u | (195877u)), 115122u, 117570u);
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    mat4 _GLF_SWITCH_0_1v[57];
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 0:
                            for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) * 1)) - 0)), (min(6, _GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, (6) * 1)), _GLF_IDENTITY(((_GLF_IDENTITY(6, (6) * 1))), max(((_GLF_IDENTITY(6, (6) * 1))), _GLF_IDENTITY(((_GLF_IDENTITY(6, (6) * 1))), (((_GLF_IDENTITY(6, (6) * 1)))) | (((_GLF_IDENTITY(6, (6) * 1))))))) / 1) - 0))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) * 1)), _GLF_IDENTITY(~ (~ (int(6))), (_GLF_IDENTITY(~ (~ (int(6))), (true ? ~ (~ (int(6))) : _GLF_FUZZED(-54259)))) >> 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) * 1)), ~ (~ (int(6))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) * 1)), ~ (_GLF_IDENTITY(~ (int(6)), (~ (int(6))) | 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? 0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0))), 1, 1, _GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0), clamp(_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0), _GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0)), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(-91837), (_GLF_FUZZED(-91837)) >> 0))))))))))), 1, 1, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-91837, (false ? _GLF_FUZZED(_injected_loop_counter) : -91837))), (_GLF_FUZZED(-91837)) >> 0))), 1, 1, 0), max(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-91837, (false ? _GLF_FUZZED(_injected_loop_counter) : -91837))), (_GLF_FUZZED(-91837)) >> 0))), 1, 1, 0), ivec4(_GLF_IDENTITY(_GLF_FUZZED(-91837), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-91837, (false ? _GLF_FUZZED(_injected_loop_counter) : -91837))), (_GLF_FUZZED(-91837)) >> 0))), 1, 1, 0)))) << ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))))); _injected_loop_counter --)
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 0:
                                min(injectionSwitch, -6.3);
                                break;
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(false))
                                 barrier();
                                default:
                                1;
                               }
                             }
                            break;
                            case 42:
                            if(_GLF_DEAD(false))
                             barrier();
                            mat4x3((+ mat2(14.34, -2.7, 899.267, -9.7)));
                            default:
                            1;
                           }
                         }
                       }
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    break;
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        barrier();
                       }
                     }
                    case 3:
                    bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), true);
                    case 19:
                    ivec2 _GLF_SWITCH_2_0v;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    default:
                    1;
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  break;
                  default:
                  1;
                 }
                do
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
               barrier();
              mat4(9.9, 40.81, 16.48, 43.45, 7.5, -606.492, 6.4, 51.88, -2.1, -6.3, 9.3, _GLF_IDENTITY(16.86, (true ? _GLF_IDENTITY(16.86, (false ? _GLF_FUZZED(-378.224) : _GLF_IDENTITY(16.86, min(16.86, 16.86)))) : _GLF_FUZZED(normalize(350.075)))), -4727.3696, -3382.8938, 522.006, -188.608);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 65:
                 case 55:
                 case 99:
                 floor(_GLF_IDENTITY(smoothstep(_GLF_IDENTITY(474.481, clamp(_GLF_IDENTITY(474.481, min(474.481, 474.481)), 474.481, 474.481)), -7534.7607, vec4(-562.592, -1.0, -452.858, 24.52)), vec4(mat3x4(_GLF_IDENTITY(smoothstep(_GLF_IDENTITY(474.481, clamp(_GLF_IDENTITY(474.481, min(474.481, 474.481)), 474.481, 474.481)), -7534.7607, _GLF_IDENTITY(vec4(-562.592, -1.0, -452.858, 24.52), max(vec4(-562.592, -1.0, -452.858, 24.52), _GLF_IDENTITY(vec4(-562.592, -1.0, -452.858, 24.52), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(-562.592, -1.0, -452.858, 24.52)))))), max(smoothstep(_GLF_IDENTITY(474.481, clamp(_GLF_IDENTITY(474.481, min(474.481, 474.481)), 474.481, 474.481)), -7534.7607, vec4(-562.592, -1.0, -452.858, 24.52)), smoothstep(_GLF_IDENTITY(474.481, clamp(_GLF_IDENTITY(474.481, min(474.481, 474.481)), 474.481, _GLF_IDENTITY(474.481, mix(float(_GLF_FUZZED(1718.1938)), float(474.481), bool(true))))), -7534.7607, vec4(-562.592, _GLF_IDENTITY(-1.0, _GLF_IDENTITY(float(vec2(-1.0, length(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(-1.5) : float(vec2(-1.0, length(vec2(0.0, 0.0))))))), -452.858, 24.52)))), 1.0, 1.0, round(length(normalize(1.0))), log(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, sin(0.0)))));
                 case 46:
                 case 18:
                 case 45:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 53:
                 case 84:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       -834.351;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false) || false)))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 54:
                           (_GLF_IDENTITY(++ GLF_merged2_0_1_6_1_1_12read_1workgroup_id, (_GLF_IDENTITY(++ GLF_merged2_0_1_6_1_1_12read_1workgroup_id, ~ (~ (++ GLF_merged2_0_1_6_1_1_12read_1workgroup_id)))) / uvec2(1u, 1u)));
                           case 0:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 35:
                           case 52:
                           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                            barrier();
                           case 18:
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
                            barrier();
                           case 61:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 63:
                           case 49:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           break;
                           case 48:
                           bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 4:
                 mat3x4 _GLF_SWITCH_4_0v[43];
                 default:
                 1;
                }
              }
              mat2x4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[70], _GLF_SWITCH_0_4v;
              if(false)
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), (_GLF_IDENTITY(! ((! (true))), bool(_GLF_IDENTITY(bvec3(! ((! (true))), false, true), bvec3(bvec3(bvec3(! ((! (true))), false, true))))))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))) && true)))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 60:
                      case 69:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 30:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 59:
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      uvec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          barrier();
                         }
                        else
                         {
                         }
                       }
                      break;
                      case 22:
                      mat4x2 _GLF_SWITCH_1_0v[72], _GLF_SWITCH_1_1v[42];
                      default:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) * mat2(1.0), min((vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) * mat2(1.0), (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) * mat2(1.0))))))))).y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | 0)), 1));
                       }
                     }
                   }
                  else
                   {
                   }
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x))) / 1.0) > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                for(int _injected_loop_counter = (49791 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 barrier();
               }
              do
               {
                if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, max(0, 0)))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                           barrier();
                          barrier();
                         }
                        barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         barrier();
                       }
                      barrier();
                     }
                   }
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              case 90:
              if(_GLF_DEAD(false))
               barrier();
              _GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(true, ! (! (true)))), true)));
              do
               {
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              break;
              case 27:
              ((min(-14415, i) % _GLF_IDENTITY(i, (i) >> 0)) | bitfieldInsert(ivec2(-81182, -89999), ivec2(71135, 98642), i, i));
              default:
              1;
             }
           }
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))
             {
              do
               {
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          else
           {
           }
         }
        while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4904.0708) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), true, true, _GLF_IDENTITY(true, (true) && true))))));
        do
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.8) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
             {
              switch(_GLF_SWITCH((0 | 0)))
               {
                case 30:
                findLSB(ivec2(-23702, -32725));
                case 69:
                uint _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                case 0:
                case 5:
                if(_GLF_DEAD(false))
                 barrier();
                case 58:
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
                   {
                    case 24:
                    uint _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                    case 51:
                    vec3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                    case 0:
                    case 40:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                     barrier();
                    case 33:
                    case 29:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 50:
                    barrier();
                    break;
                    case 92:
                    bvec3(false, false, true);
                    default:
                    1;
                   }
                 }
                break;
                default:
                1;
               }
             }
           }
          else
           {
           }
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        do
         {
          do
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          do
           {
            uint _GLF_SWITCH_0_8v[39];
            -0.2;
            ivec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(true)
               {
                if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                 {
                  for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (vec3(injectionSwitch.x, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))))))))))
                     {
                      case 7:
                      ;
                      case 0:
                      barrier();
                      break;
                      case 10:
                      ivec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                      if(_GLF_DEAD(false))
                       barrier();
                      case 58:
                      if(_GLF_DEAD(false))
                       barrier();
                      virtual_gid;
                      default:
                      1;
                     }
                   }
                 }
                mat4(mat4x3(-294.010, _GLF_IDENTITY(-5497.9356, max(-5497.9356, -5497.9356)), -6124.6815, -7.4, -323.735, -2.5, 4.8, -7.8, -6.1, 9432.1961, -21.98, 3.3));
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-39.98)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.y), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(0.6))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
                     {
                      barrier();
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                bvec3 _GLF_SWITCH_0_11v[22], _GLF_SWITCH_0_12v[96];
               }
              else
               {
                bitfieldInsert(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, clamp(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y) * 1u), GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y)))), GLF_merged4_0_1_6_1_1_11_2_1_11_3_1_14read_2subgroup_idvirtual_gidworkgroup_size.y, -20607, bitCount((-85506 & _GLF_IDENTITY(i, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (true) || false) ? _GLF_IDENTITY(i, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)) & 1), min((_GLF_IDENTITY(1, (1) * (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)) & 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) * (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), ~ (~ ((1) * (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))))) & 1))) * (i)) : _GLF_FUZZED(69781))))));
                mat4(-8509.9422, -4.5, -2.7, 9.6, 380.081, 2.4, -5434.1141, -8663.4211, 3.8, -1.5, -1.1, 1.0, -944.305, -907.564, -8.3, 216.840);
                do
                 {
                  vec3(2425.1438, -0.1, -50.30);
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  _GLF_IDENTITY(_GLF_SWITCH_0_9v, _GLF_IDENTITY(ivec2(0, 0) | (_GLF_SWITCH_0_9v), clamp(ivec2(0, 0) | (_GLF_SWITCH_0_9v), ivec2(0, 0) | (_GLF_SWITCH_0_9v), ivec2(0, 0) | (_GLF_SWITCH_0_9v))));
                 }
                else
                 {
                 }
                do
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (false))))))))))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      barrier();
                     }
                   }
                  else
                   {
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                mat3x4 _GLF_SWITCH_0_13v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  else
                   {
                   }
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    barrier();
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                ivec4(6016, _GLF_IDENTITY(-59416, (-59416) >> 0), 8584, -40707);
               }
             }
            else
             {
             }
            uvec2 _GLF_SWITCH_0_14v;
            if(_GLF_DEAD(false))
             barrier();
            for(vec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v; false; _GLF_IDENTITY((ivec2(-10693, 33555) | 81574), (_GLF_IDENTITY((ivec2(-10693, 33555) | 81574), ~ (~ ((ivec2(-10693, 33555) | 81574))))) - ivec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-89.32))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))
             {
              do
               {
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 70:
                  ivec4(-61626, 90162, 75111, -95595);
                  case 58:
                  vec3 _GLF_SWITCH_4_0v;
                  case 0:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 34:
                  case 3:
                  case 79:
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))); _injected_loop_counter ++)
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.6)), bool(false)))))));
                       }
                      switch(_GLF_SWITCH(0))
                       {
                        case 83:
                        -5144.9355;
                        case 0:
                        case 31:
                        case 90:
                        case 62:
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                         {
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            do
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5560.4134)), float(injectionSwitch.y), bool(true)))))));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            _GLF_SWITCH_0_15v;
                           }
                          else
                           {
                           }
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        case 60:
                        if(_GLF_DEAD(false))
                         barrier();
                        ivec4(-1837, -49609, -11659, 25905);
                        case 95:
                        (- (70537 ^ -75394));
                        if(_GLF_DEAD(false))
                         barrier();
                        default:
                        1;
                       }
                     }
                   }
                  break;
                  case 7:
                  mat3x4(53.72, -5.9, -9.1, 5.1, 8.7, -661.303, -3.1, 26.13, -70.53, 6197.2769, -30.85, 7.0);
                  case 64:
                  ivec2(73140, -64242);
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asin(46.24)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8649.0250))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))));
              if(_GLF_DEAD(false))
               barrier();
              bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))))) || false))), false);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              _GLF_SWITCH_0_9v;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0)))))))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-943.996)), vec2(_GLF_FUZZED((- 1.9)), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))))))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          barrier();
                         }
                       }
                     }
                   }
                 }
                else
                 {
                 }
               }
             }
            uvec3 _GLF_SWITCH_0_17v;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false))))))))));
         }
        bool _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
        if(_GLF_DEAD(false))
         {
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
       }
       default:
       1;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2virtual_gidworkgroup_size.x], uint(GLF_merged2_0_1_6_1_1_12read_1workgroup_id.x + 1 == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, clamp(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)).y), ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, clamp(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)).y)) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)), min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))))) / uvec3(1u, 1u, 1u))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) / uvec3(1u, 1u, 1u))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, max(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, clamp(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id)))))) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id))) / uvec3(1u, 1u, 1u))))))).y) - 0u)) >> 0u)) | (GLF_merged3_0_1_13_1_1_6_2_1_17num_workgroupread_2subgroup_local_id.y))) + 1, 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(_GLF_IDENTITY(3200, min(_GLF_IDENTITY(_GLF_IDENTITY(3200, clamp(3200, 3200, 3200)), max(_GLF_IDENTITY(3200, clamp(3200, 3200, 3200)), _GLF_IDENTITY(3200, clamp(3200, 3200, 3200)))), _GLF_IDENTITY(_GLF_IDENTITY(3200, (3200) | (3200)), max(3200, 3200))))))), 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 1), min(_GLF_IDENTITY((0 ^ 1), ~ (~ ((0 ^ 1)))), (0 ^ 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0), 0, 0)))); _injected_loop_counter --)
  {
   switch(_GLF_SWITCH(0))
    {
     case 33:
     min(vec2(2.5, 4.8), -50.93);
     case 72:
     clamp(uvec4(9975u, 71674u, 157379u, 107270u), uvec4(23260u, 122835u, 197919u, 137836u), GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_12subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_id);
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 13:
     case 62:
     case 43:
     case 32:
     switch(_GLF_SWITCH(0))
      {
       case 24:
       uint _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[89];
       case 0:
       case 96:
       if(_GLF_DEAD(false))
        barrier();
       case 7:
       case 16:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))) - 0.0) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 8:
       case 75:
       case 5:
       case 63:
       case 39:
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       case 98:
       false;
       case 58:
       while(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         {
          switch(_GLF_SWITCH(0))
           {
            case 77:
            mat2x3(mat3(-5737.9075, 70.71, -825.753, 87.81, -848.298, -925.556, 12.31, 38.31, 35.80));
            case 0:
            bvec4 _GLF_SWITCH_3_2v;
            bvec2(true, true);
            case 46:
            equal(_GLF_IDENTITY(sqrt(vec4(6082.1940, -184.407, -7030.6706, -8.5)), (sqrt(vec4(6082.1940, -184.407, -7030.6706, -8.5))) * mat4(1.0)), vec4(4.4, 738.749, 3975.6516, -3304.6789));
            case 27:
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              bvec2(true, true);
             }
            case 38:
            if(_GLF_DEAD(false))
             barrier();
            mat4x2(-75.01, 15.38, 9633.3175, 82.03, 769.843, -38.72, 4855.8198, -4.6);
            bvec4 _GLF_SWITCH_3_3v;
            break;
            case 1:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            ;
            case 30:
            ;
            if(_GLF_DEAD(false))
             barrier();
            default:
            1;
           }
         }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       default:
       1;
      }
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     default:
     1;
    }
  }
}
