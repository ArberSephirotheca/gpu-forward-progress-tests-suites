#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))))))), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))))), false), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))))) && true))), false), false)))))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), false || (! (! ((_GLF_DEAD(false)))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), false || (! (! ((_GLF_DEAD(false)))))))) && true), ! (! (! ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), false || _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), true && ((! (! ((_GLF_DEAD(false)))))))))) && true))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true)) || false)))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true)) || false)))))))))), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true))))), false))))))))), false || (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true))))), false)))))))))))))), true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))))))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))) || false)))), true, false)))))) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true))))))) || false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), ! (! (_GLF_IDENTITY(false, false || (false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true))))))) || false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), true && ((_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, (true) || false))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))), true)))))) || _GLF_IDENTITY(false, (false) || false))))), ((! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true))))))) || false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), ! (! (_GLF_IDENTITY(false, false || (false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true)))))), ((! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(false))), false, true)), false || (bool(bvec3(((_GLF_DEAD(false))), false, true))))))) || false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), true && ((_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true), (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, (true) || false))) && true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), true, false))), true)))))) || _GLF_IDENTITY(false, (false) || false)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), (bool(_GLF_IDENTITY(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((53.73 + -7336.5894)), _GLF_FUZZED(-317.988)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true)))))), bool(bvec4(! (false), true, false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.8, 7755.2277)))).x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-52.44)))))))))))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, false)), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), true)))))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), true)))), true))), true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-575.836), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.9)), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (0u ^ 0u) + (subgroup_local_id + 1)))) - 0u))), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), 0u ^ (uint((subgroup_local_id + 1)))), min(uint(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)))), uint(_GLF_IDENTITY((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, 0u | (5u)), 0u | (5u))), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) * ((subgroup_local_id + 1)))))))))) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], _GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u, 1u * ((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u, 1u * ((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u)))), ~ (~ ((_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u, 1u * ((_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u))))))) : _GLF_FUZZED(subgroup_local_id))) / 1u) + 1), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(_GLF_IDENTITY(4, ~ (~ (4))), 4)), 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (4) - (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(4, (4) ^ 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(3.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(3.8)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || ((injectionSwitch.x > injectionSwitch.y)))), false, false, false)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false, false, false)), true, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true, true)))), (true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))) || false))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, exp(0.0), determinant(mat4(1.0, abs(0.0), 0.0, 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(54.43), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, 0.0))[1], min((vec4(0.0, 0.0, 0.0, 0.0))[1], (vec4(0.0, 0.0, 0.0, 0.0))[1])), _GLF_FUZZED(-3.0), _GLF_FUZZED(278.414)), vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], _GLF_FUZZED(3.3), (vec4(0.0, 0.0, 0.0, 0.0))[2], (vec4(0.0, 0.0, 0.0, 0.0))[3]), bvec4(true, false, true, true)))), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))).x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-729.477)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false, false, false)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false))))), false, false, false)), true, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))), 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0)))) * mat2(1.0)))).y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))), false, false, false)), true, true)))), (true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)), false, false, false)), true, true))))) || false))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bool(bool(! (true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bool(bool(! (true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bool(bool(! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bool(bool(! (true))))))))), false))))))) || false), (true) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-10.88, -54.64))))).y))) ? buf[virtual_gid] : _GLF_FUZZED((workgroup_base | virtual_gid)))), 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(806.931)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))))).y)) && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))) && true), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))) && true), false, true, false)), true, true, true)))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read_2), _GLF_IDENTITY(min((read_2), (read_2)), (_GLF_IDENTITY(min((read_2), (read_2)), (_GLF_IDENTITY(min((read_2), (read_2)), (min((read_2), (read_2))) + 0u)) >> 0u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), min(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), ~ (~ _GLF_IDENTITY(((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))), ((_GLF_IDENTITY((~ (read_2)), _GLF_IDENTITY(uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))) | ((_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), min(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max(_GLF_IDENTITY((~ (read_2)), max((~ (read_2)), (~ (read_2)))) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))))))))), (~ (read_2)) >> _GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u, (((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u) << 0u)) | (((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u))), (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))))) | 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), ~ (~ (~ (read_2))))) >> (0u & _GLF_IDENTITY(135239u, (135239u) | (135239u))), min((~ (read_2)) >> (0u & 135239u), (_GLF_IDENTITY(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), _GLF_IDENTITY(((read_2)) << 0u, min(_GLF_IDENTITY(((read_2)) << 0u, (((read_2)) << 0u) >> 0u), ((read_2)) << 0u))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u))), min(uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u), uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))))) >> (0u & 135239u))), _GLF_IDENTITY((~ (read_2)) >> _GLF_IDENTITY((0u & 135239u), ((0u & 135239u)) / 1u), ((~ (read_2)) >> (0u & 135239u)) >> 0u)))), 0u + _GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), min(~ (read_2), _GLF_IDENTITY(~ _GLF_IDENTITY((read_2), 0u | ((read_2))), (~ (read_2)) ^ 0u)))), ((~ (_GLF_IDENTITY(read_2, 0u ^ (read_2))))) + 0u), _GLF_IDENTITY((~ (read_2)), 0u ^ ((~ (read_2)))))), ((~ (read_2))) | ((~ (read_2)))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read_2), _GLF_IDENTITY(min((read_2), (read_2)), (_GLF_IDENTITY(min((read_2), (read_2)), _GLF_IDENTITY((_GLF_IDENTITY(min((read_2), (read_2)), (min((read_2), (read_2))) + 0u)), (1u ^ 0u) * ((_GLF_IDENTITY(min((read_2), (read_2)), (min((read_2), (read_2))) + 0u)))) >> 0u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, _GLF_IDENTITY(1u * (0u & 135239u), (1u * (0u & 135239u)) | (1u * (0u & 135239u))))), min(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), ~ (~ _GLF_IDENTITY(((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))), ((_GLF_IDENTITY((~ (read_2)), _GLF_IDENTITY(uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4((~ (read_2)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> (_GLF_IDENTITY(0u & _GLF_IDENTITY(135239u, 0u | (135239u)), 1u * (0u & 135239u))))) | ((_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), clamp(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), _GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), _GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))), 0u | (_GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))))), _GLF_IDENTITY((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), max((~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))))))), (~ (read_2)) >> (_GLF_IDENTITY(0u & 135239u, 1u * (0u & _GLF_IDENTITY(135239u, (135239u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), (~ (read_2)) >> _GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u, (((_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))) - 0u) << 0u)) | (((_GLF_IDENTITY(0u & 135239u, 1u * (_GLF_IDENTITY(0u & 135239u, (0u & 135239u) << 0u))))) - 0u))), (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u))), (_GLF_IDENTITY(0u & 135239u, 1u * (0u & 135239u)))))) | 0u))), max(_GLF_IDENTITY((~ (read_2)) >> (0u & 135239u), min((~ (read_2)) >> (0u & 135239u), (_GLF_IDENTITY(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), min((read_2), (read_2)))) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u), min(uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << _GLF_IDENTITY(0u, (0u) - 0u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u), uvec3(~ _GLF_IDENTITY((read_2), uint(uvec4(_GLF_IDENTITY((read_2), ((read_2)) << _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))))) >> (0u & 135239u))), _GLF_IDENTITY((~ (read_2)) >> _GLF_IDENTITY((0u & 135239u), ((0u & 135239u)) / 1u), ((~ (read_2)) >> (0u & 135239u)) >> 0u)))), 0u + _GLF_IDENTITY(_GLF_IDENTITY((~ (read_2)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), min(~ (read_2), _GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), ~ (_GLF_IDENTITY(~ ((~ (read_2))), (true ? ~ ((~ (read_2))) : _GLF_FUZZED(subgroup_local_id))))) ^ 0u)))), ((~ _GLF_IDENTITY((read_2), ((read_2)) | 0u))) + 0u), _GLF_IDENTITY((~ (read_2)), 0u ^ ((~ (read_2)))))), ((~ (read_2))) | ((~ (read_2)))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), ! (! (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))))), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), true && _GLF_IDENTITY(((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) + 1 == read_2)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) + 1 == read_2)), bool(bvec3(((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) + 1 == read_2)), true, true)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true), false || ((read_1 + 1 == read_2) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), false))), true))))), ! (! (! (bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2)), (read_1 + 1 == read_2) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + 1, _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (4)), 4, 4)), 0, (1 ^ 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) * 1), (4) | (4))) ^ (1 ^ 1)))))), 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
