#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) + 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY((_injected_loop_counter != 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_injected_loop_counter != 0))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), _injected_loop_counter))))) != 0, (_injected_loop_counter != 0) && true))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY((_injected_loop_counter != 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_injected_loop_counter != 0))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), _injected_loop_counter))))) != 0, (_injected_loop_counter != 0) && true))))))), true, false))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_FUZZED((_GLF_IDENTITY(35114, clamp(35114, 35114, 35114)) + 49914)) : _injected_loop_counter --)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(673.778), _GLF_FUZZED(8380.5653)), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), bvec2(true, true))))).x > injectionSwitch.y))))
          break;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-780.522)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-780.522)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ 791.345)) : injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acosh(-372.597))))))) && true))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).y))))
                continue;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.3) : injectionSwitch.x)) : _GLF_FUZZED(abs(7882.7871)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, ! (! (false))), true)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), int(ivec3(int(3), 0, 0)))) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)) > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(4u) : _GLF_FUZZED(126540u)))), ~ (~ ((uint(4u))))))))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))
  {
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false)))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (gl_WorkGroupID)).x)), gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.x))))), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.x))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.x))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         return;
        }
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) || false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))
                    return;
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.6, 0.0)))).x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) | (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))) / 1), 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-43.08), _GLF_FUZZED(vec2(6.5, -19.62).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? injectionSwitch.x : _GLF_FUZZED(mix(-406.734, 3.3, true)))))) < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-67.58, -2.3)) : injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), true, true))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (((32188 & 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             break;
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-686.290), _GLF_FUZZED(6.4)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))), injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-686.290), _GLF_FUZZED(6.4)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-686.290), _GLF_FUZZED(6.4)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tanh(injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), (vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1])) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))), injectionSwitch), 0.0, 0.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3x2(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-686.290, 1.0 * (_GLF_IDENTITY(-686.290, (-686.290) * exp(0.0))))), _GLF_FUZZED(6.4)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.1), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-7.1), clamp(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(41.37)), float(dot(vec3(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, false))), injectionSwitch), 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y)))))))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)));
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & ivec4(51169, -29864, -40416, 10873).z)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false))))))))) || false)))))
      return;
    }
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true)))))) && true)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9614.3304), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-5972.6921)), bool(false))), _GLF_FUZZED(18.65)), bvec2(true, false))))).y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(35.24)), vec2(_GLF_FUZZED(vec3(-59.18, -4.4, 1.3).t), (injectionSwitch)[1]), bvec2(false, true))).x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))) : _GLF_FUZZED(intBitsToFloat((ivec2(13614, _GLF_IDENTITY(57132, min(57132, 57132))) >> ivec2(-32275, 37262)))))).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4(injectionSwitch[1], 1.0, 1.0, 1.0, 0.0, length(sqrt(0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0), (true ? mat4(injectionSwitch[1], 1.0, 1.0, 1.0, 0.0, length(sqrt(0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(4.6, 4.2, -8.7, 374.328, 860.461, 2.2, -8330.1792, 1232.8872, -0.4, 538.197, -590.082, 5.0, 24.61, -456.288, -22.96, -1.2)))))))).x)))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-442.573))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(mat3x4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, sqrt(0.0), log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(42.69, float(_GLF_IDENTITY(mat4x3(42.69, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0), (mat4x3(42.69, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(798.508)), float(1.0), bool(true))), 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), bool(false))))), false), true, false)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(38974)))); _injected_loop_counter ++)
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u + (read_1)) + 1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))) || false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))
            return;
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7647.9718, -49.25)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ~ (int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-75231))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(143381u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, (true ? (subgroup_size) << 0u : _GLF_FUZZED(num_workgroup))))))) || false))
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u)))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), min(uint(1u), uint(1u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(1u, (1u) | (1u)))) - 0u, min(_GLF_IDENTITY((uint(1u)), ((uint(1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u, _GLF_IDENTITY((uint(1u)) - 0u, ((uint(1u)) - 0u) | ((uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) - 0u))))), uint(1u))))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)), (_GLF_IDENTITY(read_1, min(read_1, read_1))) * 1u) + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(75929u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(1, (1) ^ 0)) << 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0)), (true ? _GLF_IDENTITY((1) << 0, ((_GLF_IDENTITY(1, min(1, 1))) << 0) | (_GLF_IDENTITY((1) << 0, clamp(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, 0, 0)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0), _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(0, clamp(0, 0, 0))))))) << 0)))), _GLF_IDENTITY((1) << 0, max((_GLF_IDENTITY(1, 0 ^ (1))) << 0, (1) << 0)), (1) << 0)))) : _GLF_FUZZED(i))), (1) << 0))), 4, 64, 4);
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), bool(bool(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false)))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(mat2x3((injectionSwitch) * mat2(1.0), determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))).y)) && (false))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)))), 1.0, 1.0, 0.0, abs(0.0), length(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)), false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)))), 1.0, 1.0, 0.0, abs(0.0), length(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0)))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x < injectionSwitch.y), false)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), bool(bvec2(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec3(false, true, true)))) && true)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) && (false)), false || (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) && (false)), bool(bvec2((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) && (false)), false))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-637.350)), bool(false)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.0)), bool(false))))) + 0.0) < injectionSwitch.y)) && (false), _GLF_IDENTITY(false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && (false)), ! (! (false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && (false)))))))) && true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false || ((bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6408.4925)), vec2(_GLF_FUZZED(27.85), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))), (injectionSwitch), (injectionSwitch)))[1]), float(mat3x4(float((injectionSwitch)[1]), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat3x4(float((injectionSwitch)[1]), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-0.9)), bool(false))))), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), injectionSwitch)).y))))) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) * 1.0)), float(_GLF_FUZZED(58.92)), bool(false)))))))) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (false))))), true, false, true)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false))))), (! (true)) && true)))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         do
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          return;
        }
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u + (uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (int(4)) ^ 0))))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) | (4)));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, (true ? -313.496 : _GLF_FUZZED(5.6)))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(820.097)))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), float(mat2x4(float(vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0)))), 1.0, 1.0), (mat3x4(1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-21.24)), float(0.0), bool(true))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))))), bool(true))), 1.0, 1.0))))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-480.790) : 1.0)), 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)))[1]), vec2(_GLF_FUZZED(9585.6416), _GLF_FUZZED(-524.713)), bvec2(false, false)))).y, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), false, false, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), clamp(_GLF_IDENTITY(_GLF_FUZZED(-313.496), 1.0 * (_GLF_FUZZED(-313.496))), _GLF_FUZZED(-313.496), _GLF_FUZZED(-313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), clamp(_GLF_IDENTITY(_GLF_FUZZED(-313.496), 1.0 * (_GLF_FUZZED(-313.496))), _GLF_FUZZED(-313.496), _GLF_FUZZED(-313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y), (true ? _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), clamp(_GLF_IDENTITY(_GLF_FUZZED(-313.496), 1.0 * (_GLF_FUZZED(-313.496))), _GLF_FUZZED(-313.496), _GLF_FUZZED(-313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y) : _GLF_FUZZED(-7462.1732))), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), clamp(_GLF_IDENTITY(_GLF_FUZZED(-313.496), 1.0 * (_GLF_FUZZED(-313.496))), _GLF_FUZZED(-313.496), _GLF_FUZZED(-313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)))), _GLF_IDENTITY(min((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true)))) - length(0.0)), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), 0.0, sqrt(0.0)))) / _GLF_IDENTITY(1.0, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(8.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(3.3) : 1.0)))), injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, clamp(-313.496, -313.496, -313.496))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0))), max(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, clamp(-313.496, -313.496, -313.496))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0))), float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, clamp(-313.496, -313.496, -313.496))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))))) / 1.0)), injectionSwitch.y))), max(min((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)) : _GLF_FUZZED(mat2(14.31, 957.221, -2.8, 34.79)))), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))) : _GLF_FUZZED(-7.9))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))))), 0.0, sqrt(0.0))), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0, min(_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))), clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0, max((float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), sqrt(0.0)))) / 1.0, (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(32.72)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, sqrt(0.0)))) / 1.0)))), injectionSwitch.y))), _GLF_IDENTITY(min((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(54.72) : (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(48.30, clamp(_GLF_IDENTITY(48.30, max(48.30, 48.30)), 48.30, _GLF_IDENTITY(48.30, min(48.30, 48.30)))) / 9.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, max(-313.496, -313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(1.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, max(-313.496, -313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, max(-313.496, -313.496))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(1.0, 1.0, 1.0))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), (_GLF_FUZZED(-313.496)) - 0.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))) / exp(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-313.496), min(_GLF_FUZZED(-313.496), _GLF_IDENTITY(_GLF_FUZZED(-313.496), clamp(_GLF_FUZZED(-313.496), _GLF_IDENTITY(_GLF_FUZZED(-313.496), (true ? _GLF_FUZZED(-313.496) : _GLF_FUZZED(-6.3))), _GLF_FUZZED(-313.496))))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))), (false ? _GLF_FUZZED(vec2(-585.554, -2350.0414)) : _GLF_IDENTITY(min((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(48.30 / 9.9, (false ? _GLF_FUZZED(431.429) : 48.30 / 9.9))))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(48.30 / 9.9, (false ? _GLF_FUZZED(431.429) : 48.30 / 9.9))))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))))), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(atan(-753.668, -9.1))))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))), (min((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, determinant(mat4(1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-334.056) : 1.0)))), clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), sqrt(abs(1.0)) * (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + sin(0.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-334.056) : 1.0)))), clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), mix(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((48.30 / 9.9)), float(vec2(_GLF_FUZZED((48.30 / 9.9)), abs(1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-334.056) : 1.0)))), clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-61.41)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-334.056) : 1.0)))), clamp(1.0, 1.0, 1.0))))), bool(true)))), bool(true))), 0.0, sqrt(0.0)))), float(_GLF_FUZZED(-0.2)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0, min((float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0, (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)))), injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(float(_GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), max(float(float(_GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), float(float(_GLF_IDENTITY((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(61.83)), bool(false)))))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)))) - vec2(0.0, 0.0)))), min((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(48.30 / 9.9, max(_GLF_IDENTITY(48.30 / 9.9, (48.30 / 9.9) + 0.0), _GLF_IDENTITY(48.30 / 9.9, (_GLF_IDENTITY(48.30 / 9.9, clamp(48.30 / 9.9, 48.30 / 9.9, 48.30 / 9.9))) - length(0.0)))))), (true ? _GLF_FUZZED((_GLF_IDENTITY(48.30 / _GLF_IDENTITY(9.9, float(_GLF_IDENTITY(mat2(9.9, 0.0, 0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(134.118, 8.3, -25.90, 6533.9431)) : mat2(9.9, 0.0, 0.0, 1.0))))), max(_GLF_IDENTITY(48.30 / 9.9, (48.30 / 9.9) + 0.0), _GLF_IDENTITY(48.30 / 9.9, (_GLF_IDENTITY(48.30 / 9.9, clamp(_GLF_IDENTITY(48.30, max(48.30, 48.30)) / 9.9, 48.30 / 9.9, 48.30 / 9.9))) - length(0.0)))))) : _GLF_FUZZED(-244.825)))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(mod(vec2(2941.7888, -60.40), 2.9)))) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mix(float((false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(float(uvec4(197928u, 117079u, 121725u, 178071u).s))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(_GLF_FUZZED((48.30 / 9.9))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-313.496) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-7.6)))))), bool(true))), 0.0, sqrt(0.0))), (float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-313.496, mix(float(_GLF_FUZZED((+ 278.352))), float(-313.496), bool(true)))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))) / 1.0)), injectionSwitch.y))))))))).y) || false)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
