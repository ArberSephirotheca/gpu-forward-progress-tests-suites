#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec4(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, true, true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), false))))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec4(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, true, true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), false))))))), true, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false, false, false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec4(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, true, true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), false))))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))), false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec4(! (false || (bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))))))))), true, true, true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), false))))))), true, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false), false)))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bvec3(! ((false) || false), true, false), bvec3(bvec4(bvec3(! ((false) || false), true, false), true)))))))), true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), false)))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), false)))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), true)), false)))), true)))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, true)))), true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (true))), true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false))))), true)))))))) || false)), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))))))))))) || false)))) || false), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true)))), false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true))))))), true))), bvec3(bvec3(bvec3(false, false, true)))))))) || false)), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(bvec3(false, false, true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), true))), bvec3(bvec3(bvec3(false, false, true)))))))) || false)))) || false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0), (true ? mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0) : _GLF_FUZZED(mat3x4(7.7, 8940.3989, -973.163, -54.91, -581.180, -0.1, 8.6, 73.86, 204.005, -9.8, 1.6, 5.9)))))), injectionSwitch.y))), false, false)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0), (true ? mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0) : _GLF_FUZZED(mat3x4(7.7, 8940.3989, -973.163, -54.91, -581.180, -0.1, 8.6, 73.86, 204.005, -9.8, 1.6, 5.9)))))), injectionSwitch.y))), false, false))))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-878.798), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), false))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true)))), bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (gl_WorkGroupID), (true ? (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), (false ? _GLF_FUZZED(vec3(-2738.1238, -105.259, 79.68)) : vec3(injectionSwitch, log(1.0)))))).x)), min(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(4u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (4u))), uvec3(4u))) ^ (gl_WorkGroupID) : _GLF_FUZZED(uvec3(130211u, 164792u, 36855u))))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_size)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size) + 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id)), workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1), ~ (~ (clamp(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, (1) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))))))), _GLF_IDENTITY(4, (4) | 0), 64, _GLF_IDENTITY(4, (4) ^ 0));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.38) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.38) : injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-31.93, -236.509, -416.102, -6.4).y), _GLF_FUZZED(-975.076)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(51451)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2454.3827)), bvec2(false, false))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)), false))))))), false))))))))))), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bool(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(((-9685.9205 * 81.84) / -251.969)) : injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(((-9685.9205 * 81.84) / -251.969)) : injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(((-9685.9205 * 81.84) / -251.969)) : injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) && true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), _GLF_IDENTITY((bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), ((bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0)), (dot(vec2(exp(0.0), 0.0), vec2(1.0, 0.0))) - 0.0)), 1.0, exp(0.0), 1.0, 0.0))), injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x2(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6025.6329) : injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))).y, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false)))) || false) || false))))))
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1), max(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1)))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1))) << 0), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (0u | 0u))) / 1u), 0u)), (uint(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1))) << 0), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (0u | 0u))) / 1u), 0u))) | (uint(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, (1) >> 0))), 1, 1))) << 0), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << (0u | 0u))) / 1u), 0u))))))) < subgroup_size)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0)), mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0)), transpose(transpose(mat3x4(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0)))))))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec2((1), 0))) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1u * (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec2((1), 0))) | (1)))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u, ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u) | ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u, ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u) | ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u)))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u, ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u) | ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u, ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u) | ((_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))) | (0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), 1u)))), read_2))) / 1u)))))))))))) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) + 1, 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | (64)))), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.09)), float(1.0), bool(true))))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
