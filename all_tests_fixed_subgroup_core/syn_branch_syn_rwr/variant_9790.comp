#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 12:
       mat4x3 _GLF_SWITCH_7_0v;
       case 7:
       ivec4 _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v;
       case 0:
       case 41:
       case 19:
       case 97:
       case 34:
       case 9:
       case 42:
       case 4:
       case 15:
       case 8:
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       case 17:
       if(_GLF_DEAD(false))
        barrier();
       vec2 _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v, _GLF_SWITCH_7_6v;
       case 28:
       (97.56 + (mat3(-7593.8206, 96.90, -2759.4128, -9350.5675, -61.81, -6.8, 2.7, -291.281, 40.33) - mat3(-395.757, 69.83, 1.4, 3.0, 59.33, 9.3, 9.3, -5.3, -9717.2617)));
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(((55606 & 0) & -70731)))
        {
         case 0:
         case 18:
         case 3:
         barrier();
         break;
         case 9:
         vec4(22.64, 200.062, -672.806, 6.3);
         default:
         1;
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 25:
       case 63:
       case 59:
       case 36:
       case 94:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       default:
       if(_GLF_DEAD(false))
        barrier();
       1;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 50:
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         for(ivec4 _GLF_SWITCH_7_0v[19]; true; ((+ mat4x3(-6.2, -4.1, 240.992, -69.93, 68.70, 3501.2846, 9.6, -6.5, 57.37, -53.85, -4.3, 1.0)) , bvec4(false, true, true, true)))
          {
           if((mat3x2(418.923, 5772.5119, 15.32, 94.88, -81.97, -6229.9804) != mat3x2(-35.68, -5.8, 0.8, 64.13, -3.6, -3130.9549)))
            {
             {
              ivec2 _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v;
             }
             while((bvec4(true, false, false, false) != bvec4(false, true, false, true)))
              {
               mat2x3(4587.3791, roundEven(6994.7399), 97.82, -1.3, 551.123, -8.9);
               9.0;
               mat2 _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v[80];
               mat3x2 _GLF_SWITCH_7_6v;
               ;
               uvec3(138497u, 77129u, 156890u);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               bitfieldReverse(uvec4(38393u, 175768u, 173846u, 92993u));
               mat2x4(-1006.3429, -1.6, -3303.5325, 4.5, 5.4, -4.1, -970.386, 8.6);
              }
             while(true)
              {
               bvec2(false, true);
               vec2 _GLF_SWITCH_7_7v, _GLF_SWITCH_7_8v, _GLF_SWITCH_7_9v[31];
               mat4x3 _GLF_SWITCH_7_10v[38], _GLF_SWITCH_7_11v, _GLF_SWITCH_7_12v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 vec4(-515.799, -6957.0740, -619.475, -46.11);
                }
              }
             mat2 _GLF_SWITCH_7_13v;
            }
           ;
           mat4x2 _GLF_SWITCH_7_14v, _GLF_SWITCH_7_15v;
           {
            lessThanEqual(vec2(-6374.3663, 3.7), injectionSwitch);
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
             }
            ivec3(-92995, -39161, -7002);
            (mat4(-8.6, -24.12, 83.60, 1.5, 475.214, 4.4, 6042.4151, 650.704, -6.4, -646.286, -322.244, -7.4, 4729.5063, -8.7, 3.4, -59.78) , mat2x3(74.45, -55.70, 8.1, 2.4, 1244.6923, -94.05));
            (workgroup_id * uvec2(159797u, 11986u));
            {
             uvec4 _GLF_SWITCH_7_16v, _GLF_SWITCH_7_17v[61], _GLF_SWITCH_7_18v;
             float _GLF_SWITCH_7_19v[51], _GLF_SWITCH_7_20v, _GLF_SWITCH_7_21v[91];
             ;
             bvec2 _GLF_SWITCH_7_22v[33], _GLF_SWITCH_7_23v, _GLF_SWITCH_7_24v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           }
           int _GLF_SWITCH_7_25v, _GLF_SWITCH_7_26v;
           uvec4 _GLF_SWITCH_7_27v;
           bvec2 _GLF_SWITCH_7_28v, _GLF_SWITCH_7_29v;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       case 83:
       if(_GLF_DEAD(false))
        barrier();
       while(false)
        {
         bvec4(bvec2(false, true), false, (true && true));
         mat3x2 _GLF_SWITCH_7_30v, _GLF_SWITCH_7_31v;
         mat4 _GLF_SWITCH_7_32v[45], _GLF_SWITCH_7_33v;
         (exp(vec4(-83.20, -3081.1112, -21.45, -9156.0295)) - vec4(1.4, -44.22, -4004.8642, -4334.5003));
         while((findLSB(ivec4(-33183, -44737, -73016, -84823)) == ivec4(6079, 43529, 55519, -11412)))
          {
           vec2 _GLF_SWITCH_7_34v, _GLF_SWITCH_7_35v[39];
           for(ivec3 _GLF_SWITCH_7_36v, _GLF_SWITCH_7_37v; (ivec2(56213, 85333) == ivec2(73661, -78327)); outerProduct(injectionSwitch, vec4(-6.4, 2.8, 6855.9015, 81.00)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           vec4(-6.8, -2.4, -56.14, 4.1);
           ivec3(38669, -16433, -1313);
          }
         mat3x2 _GLF_SWITCH_7_38v[7], _GLF_SWITCH_7_39v;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             ivec2(-31949, 18525);
             if(_GLF_DEAD(false))
              barrier();
             uint _GLF_SWITCH_7_40v, _GLF_SWITCH_7_41v;
             vec3(414.863, 171.130, 13.64);
             distance(ceil(vec3(-899.810, -9.9, 4.2)), vec3(-2854.8162, 5.0, 5681.1165));
             if(true)
              {
               float _GLF_SWITCH_7_42v, _GLF_SWITCH_7_43v[15], _GLF_SWITCH_7_44v;
               mat2 _GLF_SWITCH_7_45v, _GLF_SWITCH_7_46v;
               vec4 _GLF_SWITCH_7_47v[88];
               uint _GLF_SWITCH_7_48v, _GLF_SWITCH_7_49v, _GLF_SWITCH_7_50v;
              }
             else
              {
               ;
               float _GLF_SWITCH_7_51v, _GLF_SWITCH_7_52v;
               _GLF_SWITCH_7_39v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 _GLF_SWITCH_7_41v;
                }
               (ivec2(40752, 20274) / (-40264));
               if(_GLF_DEAD(false))
                barrier();
               injectionSwitch;
               mat2x4 _GLF_SWITCH_7_53v;
               mat2x4 _GLF_SWITCH_7_54v[20];
               true;
              }
            }
           while((ivec2(-67972, -6480) == ivec2(56822, -94029)));
          }
         (matrixCompMult(mat4x2(-65.73, 4.2, 79.91, -41.58, -4.3, 19.88, 7.2, 695.106), mat4x2(-2.8, -3.1, -248.387, 4754.0375, -41.02, 13.03, 46.53, -80.90)) * _GLF_SWITCH_7_33v);
        }
       case 0:
       case 37:
       barrier();
       break;
       case 63:
       if(_GLF_DEAD(false))
        barrier();
       if(false)
        {
         while(((ivec2(91595, -52618) - 48016) != ivec2(68886, -13107)))
          {
           vec4(-708.314, 816.261, 726.241, 2.9);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(mat3x4 _GLF_SWITCH_7_55v, _GLF_SWITCH_7_56v; (mat2x4(97.56, -0.4, -17.57, -1.1, 1963.5318, -775.780, -7.2, 90.13) == mat2x4(3.4, -8.5, -2.5, -369.866, -3.1, 9.9, -2.5, -2.4)); (true ? bvec3(true, true, false) : bvec3(true, false, false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               uvec3 _GLF_SWITCH_7_57v, _GLF_SWITCH_7_58v;
               ;
               mat3 _GLF_SWITCH_7_59v, _GLF_SWITCH_7_60v, _GLF_SWITCH_7_61v[13];
               mat3x2 _GLF_SWITCH_7_62v[6];
               bvec4 _GLF_SWITCH_7_63v, _GLF_SWITCH_7_64v[47], _GLF_SWITCH_7_65v;
               ;
               mat4x3 _GLF_SWITCH_7_66v[97], _GLF_SWITCH_7_67v, _GLF_SWITCH_7_68v;
               3.8;
               do
                {
                 dot(5254.1314, -90.05);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           for(vec4 _GLF_SWITCH_7_69v[96], _GLF_SWITCH_7_70v; true; (uvec3(138054u, 94969u, 187002u) >> uvec3(171587u, 119622u, 29225u)))
            {
             mix((128493u ^ uvec3(108243u, 69716u, 108172u)), uvec3(193149u, 195177u, 114288u), bvec3(false, true, true));
             mat2(-692.387, 6.4, -8626.6789, 4609.4639);
             ivec2 _GLF_SWITCH_7_71v, _GLF_SWITCH_7_72v, _GLF_SWITCH_7_73v[16];
            }
           for(bool _GLF_SWITCH_7_74v, _GLF_SWITCH_7_75v, _GLF_SWITCH_7_76v[53]; (((+ mat3x2(-8.1, -7781.6509, -947.450, 5.7, 1.3, -43.91)) * mat2x3(0.4, 481.436, -121.086, -9741.2728, 9.2, 8.1)) != mat2(0.3, -722.654, 8.8, 31.81)); equal(bvec2(false, false), bvec2(false, true)))
            {
             mat2(6.5, 243.605, 3.3, 9.7);
             acosh(pow(vec3(2.6, 431.214, -1.9), vec3(-9.4, -4610.7623, 9.9)));
             (-3870.6945 / mat3x4(6109.4031, 50.17, 7771.8756, -1193.5335, 811.280, -7.8, -106.090, -6930.4894, 7.6, 249.733, -194.639, -1.2));
             ;
             mat4(747.172, 2827.9679, -1.1, -512.371, -235.016, -99.12, -805.952, -8.2, 6.9, -553.528, -46.23, -7.4, -674.702, -1490.1177, 346.544, 1.4);
             (ivec4(-47881, 3659, -72508, 72375) % -72129);
             if(_GLF_DEAD(false))
              barrier();
             mat4 _GLF_SWITCH_7_77v[41];
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               mat4x3(mat2x4(8974.6042, 5.5, 89.98, -52.63, -4.6, 88.43, -776.418, 84.14));
              }
            }
           mat2x4 _GLF_SWITCH_7_78v;
           {
            ;
            ivec2(2599, 48251);
            -64098;
            ;
           }
           vec2 _GLF_SWITCH_7_79v, _GLF_SWITCH_7_80v[30], _GLF_SWITCH_7_81v[29];
          }
         (true ? mat2(-1.4, 926.990, -2.1, 877.807) : mat2(injectionSwitch, injectionSwitch));
         ;
         {
          do
           {
            if(_GLF_DEAD(false))
             barrier();
            vec3 _GLF_SWITCH_7_82v, _GLF_SWITCH_7_83v, _GLF_SWITCH_7_84v[2];
            mat3x4(6.6, -4.7, 2.6, -25.59, -755.829, 5.7, -2.3, 2.9, 2374.9846, 7525.8864, -892.748, 709.347);
            mat3x4(8.8, -3.3, -727.149, 8.7, -67.01, 8.2, 6.4, 8553.1719, 81.16, -1.1, -8.0, 0.6);
           }
          while((smoothstep(vec3(16.29, 1.0, -3830.7956), vec3(-254.399, -2431.1804, -8.4), vec3(-3.7, 74.25, 7.7)) != vec3(-9.8, -131.103, 4.4)));
          uvec3 _GLF_SWITCH_7_85v, _GLF_SWITCH_7_86v[3], _GLF_SWITCH_7_87v;
         }
         {
         }
         ;
        }
       else
        {
         do
          {
           {
            bvec3 _GLF_SWITCH_7_88v[74];
            abs(ivec2(-59884, -78514));
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            fract(5.9);
            ;
            ivec4 _GLF_SWITCH_7_89v[26], _GLF_SWITCH_7_90v;
            (-9827.1671 / mat4x2(2.5, -2.4, 3.2, 83.81, -2.1, 8260.1714, -200.108, 670.726));
            if(_GLF_DEAD(false))
             barrier();
            uvec3 _GLF_SWITCH_7_91v, _GLF_SWITCH_7_92v[60], _GLF_SWITCH_7_93v;
           }
           {
            ;
            clamp(uvec4(182634u, 146156u, 132371u, 138228u), (uvec4(155317u, 21260u, 170156u, 19555u) * uvec4(3561u, 36792u, 81197u, 138983u)), uvec4(55778u, 18026u, 91023u, 100242u));
            uvec3(90339u, 191597u, 36411u);
            mat4x3 _GLF_SWITCH_7_94v[43], _GLF_SWITCH_7_95v, _GLF_SWITCH_7_96v;
            float _GLF_SWITCH_7_97v, _GLF_SWITCH_7_98v[46];
            mat4x2(697.604, -947.290, -1.2, -3454.7147, 0.2, 83.62, 6.5, -593.847);
            ;
            float _GLF_SWITCH_7_99v, _GLF_SWITCH_7_100v;
           }
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             ivec2 _GLF_SWITCH_7_101v;
             ;
            }
           for(uvec4 _GLF_SWITCH_7_102v; true; (injectionSwitch * ceil(sqrt(injectionSwitch))))
            {
             vec4 _GLF_SWITCH_7_103v;
             mat3x4(mat3(9212.4455, 2.1, 7.5, -8171.0047, -6.9, -467.888, -644.087, 9400.7005, 7.7));
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3x2(-5.3, 0.3, -4.6, 36.75, 7.9, 858.136);
           if(_GLF_DEAD(false))
            barrier();
           ;
           mat4(9939.6610, -59.33, -199.723, -0.1, 74.40, 291.701, 2.1, -1.2, -68.61, -2.0, -478.466, 38.47, -370.679, -9637.7323, -665.632, -5853.2499);
           ivec3 _GLF_SWITCH_7_104v[62], _GLF_SWITCH_7_105v;
           ivec2 _GLF_SWITCH_7_106v, _GLF_SWITCH_7_107v;
          }
         while(false);
         asin(vec4(4.2, -8.1, -2609.5717, 9.6));
         mat3x2 _GLF_SWITCH_7_108v[4], _GLF_SWITCH_7_109v;
         do
          {
           mat3(mat4x2(589.220, 32.85, -4.3, -5.1, -5.2, -2785.5603, 866.611, 533.032));
          }
         while(_GLF_WRAPPED_LOOP(false));
         vec4(66.92, 8.1, 7.4, -4.8);
         while(true)
          {
           while(isinf(9790.9758))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec2(true);
             do
              {
               outerProduct((+ vec2(817.601, 905.640)), injectionSwitch);
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat2x4 _GLF_SWITCH_7_110v[41];
             ivec2 _GLF_SWITCH_7_111v;
             float _GLF_SWITCH_7_112v;
            }
           uvec3(189302u, 2365u, 92058u);
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(false)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               uvec2(12359u, 80666u);
              }
             else
              {
              }
            }
           else
            {
            }
           (+ mat3x4(9.3, -9672.3695, -7.9, 888.872, -4824.5327, -267.622, -2.5, -1169.6195, 6819.5800, -1992.8390, 907.081, -8.6));
           while(false)
            {
             ivec2 _GLF_SWITCH_7_113v[86];
             ((distance(injectionSwitch, vec2(9.7, 676.847)) - mat2(2.6, 38.21, -2610.3970, -30.42)));
             mat3(-751.688, 18.23, -3037.5187, 6.3, -4420.1053, 5.4, -5.7, 7.2, -38.45);
             if(_GLF_DEAD(false))
              barrier();
            }
           bvec4 _GLF_SWITCH_7_114v, _GLF_SWITCH_7_115v, _GLF_SWITCH_7_116v;
          }
         while(false)
          {
           workgroup_base;
           mat2x4(-8.0, -7.0, 756.616, -8.8, 279.102, 229.485, 905.859, -6.0);
           bvec4 _GLF_SWITCH_7_117v;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(             uvec3(53722u, 164922u, 190201u);
 (workgroup_id < (subgroup_local_id >> subgroup_size)); uvec4(9516u, 13023u, 117350u, 175006u))
              {
               mat4x2 _GLF_SWITCH_7_118v;
               ;
               (18153);
               uvec2(125847u, 160390u);
               mat4x2 _GLF_SWITCH_7_119v, _GLF_SWITCH_7_120v[16], _GLF_SWITCH_7_121v;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           uvec4 _GLF_SWITCH_7_122v, _GLF_SWITCH_7_123v, _GLF_SWITCH_7_124v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(true)
          {
           while(true)
            {
             normalize(injectionSwitch);
            }
           uvec3 _GLF_SWITCH_7_125v, _GLF_SWITCH_7_126v;
           for(uvec3 _GLF_SWITCH_7_127v, _GLF_SWITCH_7_128v, _GLF_SWITCH_7_129v; bool(-443.745); fract((-1.8 / injectionSwitch)))
            {
             mat4x2 _GLF_SWITCH_7_130v, _GLF_SWITCH_7_131v;
             transpose(transpose(mat4(-0.9, -6.5, -5.5, 8.6, 1.9, 79.34, -7955.3025, -3652.4727, 6.5, -1.1, -2.4, -6.6, -30.09, 7.4, 90.52, 5.2)));
             ;
             (-77562 == -66069);
             mat4x2(transpose(mat3x2(-8251.2238, -42.60, -1.5, -5894.8729, 7.8, -46.74)));
             mat4x2 _GLF_SWITCH_7_132v[17], _GLF_SWITCH_7_133v, _GLF_SWITCH_7_134v;
            }
           int _GLF_SWITCH_7_135v[32], _GLF_SWITCH_7_136v[85];
          }
         {
          mat4x3(26.33, -6.1, 2350.7927, -9.7, -2.3, -1.6, 7.3, -432.131, -1608.2588, -6.6, 9688.4033, -933.535);
          vec4(vec2(77.86, 1.0), 986.128, -54.90);
          while((true ? (! true) : false))
           {
            if(_GLF_DEAD(false))
             barrier();
            (num_workgroup + uvec3(105637u, 107160u, 195724u));
            (ivec2(1034, 70786) % -57434);
            ivec2 _GLF_SWITCH_7_137v;
            ;
            _GLF_SWITCH_7_109v;
            ;
            uvec3(151065u, 14135u, 1881u);
            ;
           }
          ;
          if(_GLF_DEAD(false))
           barrier();
          for(mat2x4 _GLF_SWITCH_7_138v, _GLF_SWITCH_7_139v[28], _GLF_SWITCH_7_140v; true; vec3(-24.14, -47.89, -97.51))
           {
            mat3x2 _GLF_SWITCH_7_141v;
            mat2 _GLF_SWITCH_7_142v[23], _GLF_SWITCH_7_143v;
            mat2x4(mat4x2(3.0, 452.629, -7.5, 2.1, -9.5, -8.7, 8197.3378, -26.32));
            if(_GLF_DEAD(false))
             barrier();
            uint _GLF_SWITCH_7_144v, _GLF_SWITCH_7_145v[78], _GLF_SWITCH_7_146v;
            ;
           }
          float _GLF_SWITCH_7_147v[71], _GLF_SWITCH_7_148v, _GLF_SWITCH_7_149v[75];
          ivec3 _GLF_SWITCH_7_150v[71], _GLF_SWITCH_7_151v, _GLF_SWITCH_7_152v;
         }
        }
       case 72:
       if(true)
        {
         ivec2 _GLF_SWITCH_7_153v, _GLF_SWITCH_7_154v;
         uvec4(133257u, 12212u, 86840u, 104879u);
         vec2 _GLF_SWITCH_7_155v;
         if(_GLF_DEAD(false))
          barrier();
         if(true)
          {
           mat3(-179.796, -7.5, -210.292, 9.2, 893.526, -6.6, 759.872, 4429.8511, -61.66);
           if(_GLF_DEAD(false))
            barrier();
           vec3(1190.0275, -915.037, -3.4);
           if(_GLF_DEAD(false))
            barrier();
           mat4(-3.5, 571.116, -9.9, -611.590, -8.7, 92.79, -15.10, 9.1, 582.488, -8.8, 5.8, 28.71, 4413.5265, 9.9, 450.814, 3242.7409);
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         (-869.808 / mat2x4(1.7, 4922.0418, -487.885, -6855.2306, -61.37, -17.09, 0.9, -435.462));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           while(false)
            {
             while(false)
              {
               _GLF_SWITCH_7_154v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ivec3(2183, 78602, -67413);
               float _GLF_SWITCH_7_156v, _GLF_SWITCH_7_157v, _GLF_SWITCH_7_158v[78];
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_7_159v, _GLF_SWITCH_7_160v;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
                barrier();
              }
             do
              {
               mat4x3(-7.9, 55.30, -8178.3947, 4.6, -7.6, 5.4, -5.6, -2.4, 4.7, 467.598, -7829.0161, 43.06);
               bvec2(true, true);
               ;
               mat3x4(-2943.6501, 0.9, -4.7, -4.1, -848.056, 3.4, -2.8, -22.78, -15.13, -0.5, 1.1, -4.4);
               _GLF_SWITCH_7_155v;
               isnan(smoothstep(pow(vec4(2.7, -718.025, 5.3, 0.3), vec4(-665.391, 407.428, 1949.2877, -25.68)), vec4(-0.9, -8.0, 17.07, -0.3), vec4(8.3, -24.26, -82.83, 3.8)));
               mat3x2 _GLF_SWITCH_7_161v[13], _GLF_SWITCH_7_162v;
              }
             while(false);
             greaterThanEqual(smoothstep(9.8, -8.3, vec4(52.30, 4.6, 2.3, -199.852)), max(vec4(-23.07, -4479.5190, -7746.7448, 4.8), vec4(52.04, -770.314, -6.0, -4.5)));
            }
          }
        }
       default:
       1;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     switch(_GLF_SWITCH(0))
      {
       case 74:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       _injected_loop_counter;
       case 0:
       case 9:
       case 52:
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       break;
       case 47:
       ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
       default:
       1;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 90:
     (mat3(-76.84, 9.6, -326.678, -7045.5783, -9.4, 65.37, -50.08, -0.5, -85.90) * mat2x3(-4.2, -6688.3561, 561.885, -9.4, -9710.3274, -7.5));
     case 22:
     bvec2(true, false);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 0:
     case 15:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 40:
     barrier();
     break;
     case 79:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       uvec4(69640u, 12321u, 166752u, 88515u);
      }
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(9047) : int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           case 72:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH((1 ^ 1)))
                  {
                   case 87:
                   bvec2(false, false);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 0:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 96:
                   vec3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[99];
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   case 28:
                   -40557;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   default:
                   1;
                  }
                }
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               switch(_GLF_SWITCH((66781 & 0)))
                {
                 case 27:
                 bvec4 _GLF_SWITCH_6_0v;
                 case 0:
                 case 85:
                 case 71:
                 case 23:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 86:
                 case 75:
                 case 33:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 break;
                 case 72:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 9.2;
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   barrier();
                  }
                 case 53:
                 ivec3(-30534, 1797, 98149);
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) | ((0 >> _GLF_IDENTITY(int(1), int(1))) | 0))); _injected_loop_counter --)
                  {
                   1;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           int i = 0;
           atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
           case 48:
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while((mat3x4(mat2x4(-94.40, 4.4, -1587.7662, 3806.7706, -8463.2234, 62.68, -4407.4438, -0.2)) != mat3x4(2976.1411, 5.6, -165.402, -61.20, 7530.1373, -8732.4793, 2.7, 3.6, 0.2, -2671.9393, -9.7, -127.825)))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 7:
                 bvec2 _GLF_SWITCH_7_0v[12], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[84];
                 case 33:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat2x3(15.45, -18.61, -64.15, -7929.0637, -26.65, 6965.4778);
                  }
                 case 0:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     while(false)
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
                        {
                         case 38:
                         bvec4 _GLF_SWITCH_4_0v;
                         case 90:
                         if(_GLF_DEAD(false))
                          barrier();
                         ivec3 _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                         case 0:
                         case 98:
                         case 26:
                         case 77:
                         case 58:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                         switch(_GLF_SWITCH(((0 | 0) & (-71992 & int(3.8)))))
                          {
                           case 74:
                           uvec2 _GLF_SWITCH_3_0v;
                           case 0:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             barrier();
                            }
                           case 82:
                           if(_GLF_DEAD(false))
                            barrier();
                           bvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           int _GLF_SWITCH_0_2v[11];
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           case 7:
                           vec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                           case 77:
                           do
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 barrier();
                                }
                               barrier();
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), int(0)))))
                              {
                               case 34:
                               mat2 _GLF_SWITCH_2_0v;
                               case 55:
                               if(_GLF_DEAD(false))
                                barrier();
                               mat4x3 _GLF_SWITCH_2_1v;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               case 0:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                               case 12:
                               case 47:
                               mat4x3(24.87, 392.503, 6.3, -4958.3887, 0.7, 69.81, 8554.5855, 9827.5150, 412.349, 1.9, -5.9, 2641.6217);
                               break;
                               if(_GLF_DEAD(false))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 49:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   _GLF_SWITCH_2_0v;
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   case 0:
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         do
                                          {
                                           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0)))))
                                            {
                                             case 98:
                                             max(ivec4(19612, 72187, -66820, -37066), i);
                                             case 0:
                                             case 76:
                                             case 65:
                                             if(_GLF_DEAD(false))
                                              barrier();
                                             case 93:
                                             case 52:
                                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                             case 79:
                                             case 18:
                                             case 61:
                                             case 66:
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                              }
                                             case 87:
                                             barrier();
                                             break;
                                             case 34:
                                             bvec3(true, false, false).gg;
                                             default:
                                             if(_GLF_DEAD(false))
                                              barrier();
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              {
                                              }
                                             else
                                              {
                                               1;
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                    }
                                   barrier();
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                                      {
                                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                        {
                                         case 0:
                                         case 6:
                                         case 21:
                                         case 92:
                                         case 19:
                                         case 35:
                                         case 63:
                                         case 39:
                                         case 1:
                                         case 53:
                                         barrier();
                                         break;
                                         default:
                                         1;
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                   break;
                                   case 39:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   ;
                                   case 37:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   mat4x3(9.9, -9.6, -2803.0697, -76.68, -366.713, 2.6, 6611.9212, -576.370, -3.1, -372.326, -1792.1336, -77.39);
                                   default:
                                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     1;
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                                barrier();
                               case 69:
                               mat3x2(470.303, -2.1, 8.7, -380.893, 722.096, 7.4);
                               case 46:
                               (_GLF_SWITCH_2_1v --);
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 42:
                                   case 65:
                                   case 10:
                                   case 46:
                                   case 73:
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                   break;
                                   case 32:
                                   mat2x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   default:
                                   1;
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                               default:
                               if(_GLF_DEAD(false))
                                barrier();
                               1;
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           mat2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                           case 63:
                           mat2x3 _GLF_SWITCH_0_8v;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 41:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             switch(_GLF_SWITCH((1 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))
                              {
                               case 51:
                               ;
                               case 0:
                               case 18:
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               case 66:
                               case 74:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               case 87:
                               if(_GLF_DEAD(false))
                                barrier();
                               case 6:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               break;
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               default:
                               1;
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 36:
                           mat4(mat3(13.66, 651.689, 37.67, 1.9, 297.047, -6.9, -794.144, 4.0, -56.25));
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           1;
                          }
                         break;
                         case 74:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         (ivec2(-16872, 69797) == ivec2(68974, 88637));
                         default:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         1;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   vec4(56.46, 7.7, -5358.9370, -1.5);
                  }
                 else
                  {
                  }
                 case 4:
                 if(_GLF_DEAD(false))
                  barrier();
                 uint _GLF_SWITCH_0_9v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 greaterThanEqual(ivec3(21023, -17379, 99304), ivec3(-58129, 56195, -75562));
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 case 19:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(false)
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     switch(_GLF_SWITCH((0 & 10042)))
                      {
                       case 82:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         uvec3(87756u, 136611u, 44057u);
                        }
                       else
                        {
                        }
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       case 94:
                       bvec4(true, true, true, false);
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       case 0:
                       case 45:
                       case 51:
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                        }
                       case 24:
                       case 40:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         findMSB(ivec3(69541, 39475, -51805));
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       case 2:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((~ 91111) & 0)); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                  {
                                   case 51:
                                   mat4x3(4219.4829, 9.3, 5.1, 18.42, -71.66, 1.5, -2.4, -6.5, -1993.9467, 3.9, 1196.9474, -76.64);
                                   case 0:
                                   case 97:
                                   case 79:
                                   case 43:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   case 24:
                                   barrier();
                                   break;
                                   default:
                                   1;
                                  }
                                }
                              }
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       vec4(86.19, -6123.7858, 678.079, 98.18);
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       default:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       1;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            barrier();
                          }
                         else
                          {
                          }
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(9975))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                    {
                     do
                      {
                       float _GLF_SWITCH_0_10v[70], _GLF_SWITCH_0_11v;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       uvec3 _GLF_SWITCH_0_12v;
                       mat3x4 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[16];
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       vec3(5.7, 1463.9564, -8599.8519);
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         bvec4(true, bvec3(false, true, true));
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(false);
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                        }
                       else
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               switch(_GLF_SWITCH((-90924 & ((76629 & 0) << _GLF_IDENTITY(int(2), int(2))))))
                                {
                                 case 0:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                 case 24:
                                 case 48:
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 case 92:
                                 case 70:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 case 97:
                                 case 11:
                                 barrier();
                                 break;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 85:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 ivec2(-71163, 16450);
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                 1;
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                barrier();
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   bvec4(true, false, true, true);
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (58758 & 0)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 vec4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if((47464u >= num_workgroup))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     mat3x2(mat2x3(mat3x2(5729.9029, -811.322, 43.51, -4.0, 61.25, -9.5)));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         case 39:
                         case 86:
                         barrier();
                         break;
                         default:
                         1;
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     float _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                     mat4x3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[82], _GLF_SWITCH_0_22v;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 24:
                           case 45:
                           case 18:
                           case 74:
                           case 41:
                           case 6:
                           case 9:
                           case 87:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 5:
                               case 52:
                               case 46:
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               case 6:
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               case 50:
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               case 78:
                               case 39:
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 88:
                               case 23:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     barrier();
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                               break;
                               case 95:
                               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 mat2x4(645.400, -361.951, 5612.9803, -1.2, -13.15, 9.1, -3548.4734, 60.63);
                                }
                               case 32:
                               do
                                {
                                 vec2(-78.18, -987.960).ss;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               default:
                               1;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 barrier();
                                }
                               barrier();
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           break;
                           case 19:
                           mat3x4 _GLF_SWITCH_7_0v;
                           default:
                           1;
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     ;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                 break;
                 default:
                 1;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           default:
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((-63331) & 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
           1;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 22:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat3x4 _GLF_SWITCH_6_0v;
                 case 0:
                 case 91:
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 80:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 53:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 84:
                 case 36:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 28:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 83:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 27:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  barrier();
                 break;
                 case 95:
                 if(_GLF_DEAD(false))
                  barrier();
                 vec4(-3.2, -2478.7278, -76.05, 0.0).r;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         switch(_GLF_SWITCH((-94808 & 0)))
          {
           case 30:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             vec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[37], _GLF_SWITCH_1_2v;
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 26:
           int _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           case 0:
           case 22:
           if(_GLF_DEAD(false))
            barrier();
           case 14:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) / 1)))))))
                    {
                     case 0:
                     case 89:
                     case 98:
                     case 94:
                     case 52:
                     case 50:
                     case 75:
                     case 1:
                     barrier();
                     break;
                     case 99:
                     (mat4(-8.4, -651.916, 77.77, 618.379, 4121.2367, 4.7, -2.5, 3622.4779, -0.5, 3.7, 83.39, 17.67, -24.75, -996.882, -8049.1070, 7388.7583) / mat4(51.08, 2.5, -0.0, -55.96, 0.2, 7.5, 14.45, 32.60, -499.307, 887.170, -864.254, 6.4, 67.17, -3.5, 5123.4130, -5262.5032));
                     case 95:
                     floatBitsToUint((false ? -9.9 : 5823.5863));
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           case 73:
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           case 27:
           case 97:
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 9:
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           case 95:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 87:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
            barrier();
           case 72:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 94:
                 float _GLF_SWITCH_7_0v[27];
                 case 21:
                 vec3 _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v;
                 case 0:
                 case 85:
                 case 35:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 29:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 91:
                 case 76:
                 barrier();
                 break;
                 case 67:
                 ivec3(38553, 87188, 42332);
                 default:
                 1;
                }
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))))
                  {
                   case 0:
                   case 32:
                   case 31:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 66:
                   case 49:
                   barrier();
                   break;
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           default:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           1;
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
}
