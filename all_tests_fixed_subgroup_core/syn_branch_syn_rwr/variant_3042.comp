#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(acosh(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (acosh(injectionSwitch)), max(mat2(1.0) * (acosh(injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (acosh(injectionSwitch)), (true ? mat2(1.0) * (acosh(injectionSwitch)) : _GLF_FUZZED(vec2(-1832.4787, 939.115))))))), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], _GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), clamp(_GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), vec2(vec2((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))))), (acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), vec2(mat4x2((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0)))))[1]), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(-5.4)), bvec2(false, false))))), acosh(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(acosh(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (acosh(injectionSwitch)), max(mat2(1.0) * (acosh(injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (acosh(injectionSwitch)), (true ? mat2(1.0) * (acosh(injectionSwitch)) : _GLF_FUZZED(vec2(-1832.4787, 939.115))))))), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], _GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), clamp(_GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), vec2(vec2((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))))), (acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), vec2(mat4x2((acosh(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0)))))[1]), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(-5.4)), bvec2(false, false))))), acosh(injectionSwitch)))) * mat2(1.0))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(tanh(injectionSwitch))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(41.74), _GLF_FUZZED(5.1)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], (acosh(injectionSwitch))[1]), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(-5.4)), bvec2(false, false))))), acosh(injectionSwitch)))), min(_GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), acosh(injectionSwitch))), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], _GLF_IDENTITY((acosh(injectionSwitch))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1))))], float(_GLF_IDENTITY(mat4((acosh(injectionSwitch))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1))))], _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4((acosh(injectionSwitch))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1))))], _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)))))), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(_GLF_IDENTITY(-5.4, min(_GLF_IDENTITY(-5.4, max(-5.4, -5.4)), -5.4)))), bvec2(false, false))))), acosh(injectionSwitch)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], (acosh(injectionSwitch))[1]), vec2(_GLF_FUZZED(66.29), _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) * 1.0)), bvec2(false, false))))), acosh(injectionSwitch)))), min(_GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0), (vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0)) + vec3(0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-3803.2693), (vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0), (vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0)) + vec3(0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0), (vec3(vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]), 1.0)) + vec3(0.0, 0.0, 0.0))))[0], _GLF_FUZZED(7.0)), bvec2(true, false)))), vec2(_GLF_IDENTITY((acosh(injectionSwitch))[0], mix(float(_GLF_FUZZED(vec3(156.118, 2.1, 558.400).r)), float((acosh(injectionSwitch))[0]), bool(true))), (acosh(injectionSwitch))[1]))), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(-5.4)), bvec2(false, false))))), acosh(injectionSwitch)))), _GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], (acosh(injectionSwitch))[1]), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(-5.4)), bvec2(false, false))))), acosh(injectionSwitch)))))))))).y), false || (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-75.40)), bvec2(false, false))) : _GLF_FUZZED(vec2(41.65, -6.9)))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-920.054) : injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(acosh(injectionSwitch), max(_GLF_IDENTITY(acosh(injectionSwitch), min(acosh(injectionSwitch), _GLF_IDENTITY(acosh(injectionSwitch), mix(vec2((acosh(injectionSwitch))[0], (acosh(injectionSwitch))[1]), vec2(_GLF_FUZZED(66.29), _GLF_FUZZED(_GLF_IDENTITY(-5.4, mix(float(_GLF_FUZZED(-66.36)), float(-5.4), bool(true))))), bvec2(false, false))))), acosh(injectionSwitch)))))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-68.50), _GLF_FUZZED(1.6)), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0))[0], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0))[1]), bvec2(true, true)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), ! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))) || (! (false)))), ! (! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))) && true), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (! (! (false))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), ! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true)))))) || false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), ! (! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))))))))), ! (! ((! (false)))))) && true))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), ! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true)))))) || false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), ! (! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))))))))), ! (! ((! (false)))))) && true))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), ! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), (! (! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true)))))) || false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), ! (! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, false)), true)))))))))), ! (! ((! (false)))))) && true))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))))))))))))) || false) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ((true)) || false), false), bvec2(bvec4(bvec2((true), false), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)).x, min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)), max(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(_GLF_IDENTITY(uvec3(subgroup_id, _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ (1u ^ 1u)))), min(0u ^ 0u, 0u ^ 0u))), (0u ^ 0u)))), max((_GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (0u ^ 0u)))), (_GLF_IDENTITY((0u ^ 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), max((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))))), (0u ^ 0u))))))), (1u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : 0u)))), ~ (~ (uvec3(subgroup_id, (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), (1u | 0u))))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(_GLF_IDENTITY(uvec3(subgroup_id, _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), max((0u), (0u))), (~ (0u)) ^ (1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))))), min(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | 0u)))))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (0u ^ 0u))), max(_GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (0u ^ 0u))), _GLF_IDENTITY((0u ^ 0u), min((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (0u ^ 0u)))))), (_GLF_IDENTITY((0u ^ 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), max((_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))), (_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u))))), (0u ^ 0u))))))), (1u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : 0u)))), ~ (~ (uvec3(subgroup_id, (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), clamp(0u, 0u, 0u)), (0u ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), (1u | 0u))))))) * subgroup_size) / 1u), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, _GLF_IDENTITY((0u ^ 0u), 0u | ((0u ^ 0u))), (1u | 0u)), ~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (0u ^ 0u), (1u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)))), max((uvec3(subgroup_id, (0u ^ 0u), (_GLF_IDENTITY(1u, (1u) >> 0u) | _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), (0u ^ 0u), (1u | 0u))), uvec3(uvec4((_GLF_IDENTITY(uvec3(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u) << 0u)))) - 0u)), (1u | 0u)), (uvec3(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u) << 0u)))) - 0u)), (1u | 0u))) | (uvec3(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u) << 0u)))) - 0u)), (1u | 0u))))), 1u))))))))) * subgroup_size, 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(max(112798u, max(workgroup_base, workgroup_base))) : 0u)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(67008u)))), ((0u ^ 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1u)) | 0u), uint(_GLF_IDENTITY(uvec2((1u | 0u), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((1u | 0u), 0u), (_GLF_IDENTITY(uvec2((1u | 0u), 0u), (uvec2((1u | 0u), 0u)) >> uvec2(0u, 0u))) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2((1u | 0u), 0u), ~ (~ (uvec2((1u | 0u), 0u))))) + uvec2(0u, 0u))) | (uvec2((1u | 0u), 0u)))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec3(subgroup_id, (0u ^ 0u), (1u | _GLF_IDENTITY(0u, (0u) * 1u)))), ~ (~ ((uvec3(subgroup_id, (0u ^ 0u), (1u | 0u))))))), uvec3(0u, 0u, 0u) ^ ((~ _GLF_IDENTITY((uvec3(subgroup_id, (0u ^ 0u), (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 1u | 0u, ~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec4(_GLF_FUZZED(workgroup_id), 0u, ((1u ^ 1u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) : 1u | 0u)))))))), ~ (~ ((uvec3(subgroup_id, (0u ^ 0u), (1u | 0u)))))))))))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((1u)), ~ (~ (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)) ^ ((1u))))), 0u ^ ((1u))))) | (1u)) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), (true ? _GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), clamp((7u), (7u), (7u)))) >> 0u) : _GLF_FUZZED(workgroup_size))) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), max(_GLF_IDENTITY(uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), max(_GLF_IDENTITY(uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), min(uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))), (uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u))))))) - uvec3(0u, 0u, 0u)))), uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), ~ (~ (0u ^ ((1u))))), _GLF_IDENTITY(0u ^ ((1u)), (0u ^ ((1u))) << 0u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), uvec3(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) / 1u)), max(0u, 0u)) ^ 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), min(_GLF_IDENTITY(0u ^ ((1u)), ~ (~ (0u ^ ((1u))))), 0u ^ ((1u))))) | (1u)) | _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)))), clamp(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)))), _GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)))), (_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))) | (_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))))))), uint(7u))) * 1u)) | (_GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(min((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), (min((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | 0u), (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))))), uint(7u))) | (_GLF_IDENTITY(0u, max(0u, 0u))))) + 0u))))))), ~ (~ (uvec3(subgroup_id, (0u ^ 0u), (1u | 0u))))))) * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(injectionSwitch[1], injectionSwitch[1]), (min(injectionSwitch[1], injectionSwitch[1])) * 1.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(342.658)), bool(false)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(342.658)), bool(false)))) > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))) || false))) && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))) * subgroup_size, min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), (_GLF_IDENTITY(7u, (7u) | (7u))) | (_GLF_IDENTITY(7u, (7u) | (7u)))))))) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u))), (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), (false ? _GLF_FUZZED(117315u) : _GLF_IDENTITY(7u, (7u) | (7u)))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), (_GLF_IDENTITY(_GLF_IDENTITY(7u, ~ (~ (7u))), (7u) | (7u))) << 0u)))))))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, 0u + (7u)))))))) * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) ^ (-21350 & 0), ((64) ^ (-21350 & 0)) ^ (0 << _GLF_IDENTITY(int(1), int(1))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0), 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 0))))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))) ^ 0))), (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0), 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 0))))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))) ^ 0)))) >> (1u ^ 1u)), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(5.4)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(true ? read_1 + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? read_1 + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))) : _GLF_FUZZED(uint(ivec3(-1433, 3461, -34856)[0])))))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)), (true ? true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)), min(true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)), true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)))))))).x > injectionSwitch.y, false, false)))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.1)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)))).x > injectionSwitch.y, false, false)))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), false), true)))))), false || (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.1)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-41.27, -3.7)))).x > injectionSwitch.y, false, false)))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), false), true))))))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(93.40) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0))))), false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true)) && true))), (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))) && true))))), true))))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))))) + 1, 1u * (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))))) + 1)), uint(uvec4(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) + 1, 0u, 1u, 0u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true))), ! (! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true)))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y))))), true, false, true)), bool(bvec3(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y))))), true, false, true)), false, true)))))))))))) && true))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true)))), bool(bvec2(! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), injectionSwitch.y)))))))))) && true)))), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
