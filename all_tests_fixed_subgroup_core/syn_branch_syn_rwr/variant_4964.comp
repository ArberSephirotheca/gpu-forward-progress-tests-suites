#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED((6.7 * -2.9)), _GLF_FUZZED(-7.8)), vec2(_GLF_IDENTITY((vec2(1.0, 1.0) * (injectionSwitch))[0], min((vec2(1.0, 1.0) * (injectionSwitch))[0], (vec2(1.0, 1.0) * (injectionSwitch))[0])), (vec2(1.0, 1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), true, false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(92.88), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((0.1 - -6360.0009)), float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED((0.1 - -6360.0009)), (_GLF_FUZZED((0.1 - -6360.0009))) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true), true && (bool(injectionSwitch.x > injectionSwitch.y))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-30.26) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) || false), true, false, true))) ? injectionSwitch[0] : _GLF_FUZZED(-53.77), (true ? true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(-53.77, (-53.77) * 1.0)) : _GLF_FUZZED(1.5))))), _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(7.5)))), float(_GLF_FUZZED(-9819.5131)), bool(false))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-97.03), _GLF_FUZZED(4308.6459)), bvec2(false, false))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-841.577) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && _GLF_IDENTITY((false || (false)), false || (_GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 9.3 : -4836.7183))), vec2(_GLF_FUZZED(-18.48), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), 1u * (_GLF_IDENTITY(min(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_size * workgroup_id), (true ? min(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_size * workgroup_id) : _GLF_FUZZED(num_workgroup))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) + subgroup_local_id) >> 0u)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id), min(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) + subgroup_local_id) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))), max(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id))) >> 0u)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) + 0u) + subgroup_local_id) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id)) >> 0u))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(-6.4)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[0], _GLF_FUZZED(-82.43)), vec2(_GLF_FUZZED(-754.567), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, true))))).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))))))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false)), false, true)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true))))))) && true))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.3), determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_FUZZED(7.3), clamp(_GLF_FUZZED(7.3), _GLF_IDENTITY(_GLF_FUZZED(7.3), (_GLF_FUZZED(7.3)) / 1.0), _GLF_FUZZED(7.3)))))), float(0.0), bool(true)))))), max(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true)))))), _GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true)))))), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true)))))))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9569.6671) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)) + 0.0))), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9569.6671) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)) + 0.0))) : _GLF_FUZZED(5.2)))), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.04), max(_GLF_FUZZED(-89.04), _GLF_FUZZED(-89.04))) : _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, determinant(mat4(1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0))))), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.04), max(_GLF_FUZZED(-89.04), _GLF_FUZZED(-89.04))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-75.36)), bool(false))), 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0)), float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0)), exp(0.0), 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.04), max(_GLF_FUZZED(-89.04), _GLF_FUZZED(-89.04))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0))), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(determinant(mat4(-24.69, 4.4, -664.385, -966.098, 309.575, -6.3, -8.1, 2.1, 6.0, -4.0, -31.18, -89.20, 1552.5494, 51.42, 30.29, 509.012))))), 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.04), max(_GLF_FUZZED(-89.04), _GLF_FUZZED(-89.04))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x), tan(0.0), 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), clamp((mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))) * mat4(1.0), clamp((mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))) * mat4(1.0), (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))) * mat4(1.0), (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))) * mat4(1.0))))))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(57.33)), float(abs(1.0)), bool(true))), 1.0, abs(1.0), sqrt(1.0)))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.5, 3.0, 1.8)))), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(817.651), min(_GLF_IDENTITY(_GLF_FUZZED(817.651), (false ? _GLF_FUZZED(-83.23) : _GLF_FUZZED(817.651))), _GLF_IDENTITY(_GLF_FUZZED(817.651), float(mat4x2(_GLF_FUZZED(817.651), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.5, 3.0, 1.8)))), vec3(1.0, 0.0, 0.0)), clamp(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (mat3(1.0) * (vec3(1.0, 0.0, 0.0))) * mat3(1.0))) : _GLF_FUZZED(vec3(5.5, 3.0, 1.8)))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.5, 3.0, 1.8)))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(5.5, 3.0, 1.8)), min(_GLF_FUZZED(vec3(5.5, 3.0, 1.8)), _GLF_IDENTITY(_GLF_FUZZED(vec3(5.5, 3.0, 1.8)), mix(vec3(_GLF_FUZZED(-0.0), _GLF_FUZZED(-4496.5220), (_GLF_IDENTITY(_GLF_FUZZED(vec3(5.5, 3.0, 1.8)), min(_GLF_IDENTITY(_GLF_FUZZED(vec3(5.5, 3.0, 1.8)), (_GLF_FUZZED(vec3(5.5, 3.0, 1.8))) * vec3(1.0, 1.0, 1.0)), _GLF_FUZZED(vec3(5.5, 3.0, 1.8)))))[2]), vec3((_GLF_FUZZED(vec3(5.5, 3.0, 1.8)))[0], (_GLF_FUZZED(vec3(5.5, 3.0, 1.8)))[1], _GLF_FUZZED(572.245)), bvec3(true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))), vec3(1.0, 0.0, 0.0))))), bool(true)))))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(34.71), (false ? _GLF_FUZZED(-6.1) : true ? 0.0 : _GLF_FUZZED(34.71))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-660.555) : 0.0)), 0.0)))), 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1026.7320)), float(0.0), bool(true))), 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, cos(0.0), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)), mix(float(float(mat2x4(0.0, cos(0.0), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(36.41)), bool(false)))), 0.0)), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, true))) ? _GLF_FUZZED(-9.5) : float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) * abs(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat2x4(cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0)), (float(mat2x4(cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))) / 1.0)) : _GLF_FUZZED(869.369))), 1.0, 1.0))))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-279.152))))), 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.6)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.0)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false))))), injectionSwitch.x), tan(0.0), 0.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-65.00) : float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-88.62), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], float(mat2((vec3(1.0, 0.0, 0.0))[1], 0.0, 0.0, 1.0))), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-3704.6179), _GLF_FUZZED(994.145)), bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false)), clamp(mix(vec3(_GLF_FUZZED(-88.62), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], float(mat2((vec3(1.0, 0.0, 0.0))[1], 0.0, 0.0, 1.0))), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-3704.6179), _GLF_FUZZED(994.145)), bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec3(_GLF_FUZZED(-88.62), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], float(mat2((vec3(1.0, 0.0, 0.0))[1], 0.0, 0.0, 1.0))), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-3704.6179), _GLF_FUZZED(994.145)), bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec3(_GLF_FUZZED(-88.62), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], float(mat2((vec3(1.0, 0.0, 0.0))[1], 0.0, 0.0, 1.0))), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-3704.6179), _GLF_FUZZED(994.145)), bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false))))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sign(-4568.7192)) : 0.0)))), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(_GLF_IDENTITY(-9.5, (-9.5) - _GLF_ZERO(0.0, injectionSwitch.x)), -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4))))))), float(_GLF_FUZZED(60.22)), bool(false))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9.5, _GLF_IDENTITY(float(float(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) - 0.0))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) - 0.0))), float(mat2(float(float(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) - 0.0))), 0.0, 0.0, 1.0)))) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0, mix(float(_GLF_FUZZED(-7779.1906)), float((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0), bool(true))))) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))), float(_GLF_FUZZED(6825.1024)), bool(false)))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, max(-9.5, -9.5))) / 1.0), max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(796.877)), float(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, (-9.5) * 1.0)) + 0.0))), (true ? -9.5 : _GLF_IDENTITY(_GLF_FUZZED(-2.4), mix(float(_GLF_FUZZED(583.081)), float(_GLF_FUZZED(-2.4)), bool(true)))))) + 0.0)) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0, max((_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, max(-9.5, -9.5)), (true ? -9.5 : _GLF_FUZZED(-2.4)))) + 0.0)))) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec2(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), abs(1.0))))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), bool(true))))))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(13.40)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(855.715), _GLF_FUZZED(910.438), _GLF_FUZZED(846.285)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) + 0.0)), tan(0.0), 0.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))), float(_GLF_FUZZED(vec3(-29.67, 6.7, 4961.9911).g)), bool(false)))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7094.1623)), float(1.0), bool(true))), 1.0)), 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9.5) : float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(819.103)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x3(vec3(1.0, 0.0, 0.0), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (mat4x3(vec3(1.0, 0.0, 0.0), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-6.1, -249.945, 8.7)) : vec3(_GLF_IDENTITY(mat4x3(vec3(1.0, 0.0, 0.0), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (mat4x3(vec3(1.0, 0.0, 0.0), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) + 0.0)) - 0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -52.52))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED((- -52.52))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((- -52.52))), float(1.0), bool(true))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(3.2)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), tan(0.0), 0.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ _GLF_IDENTITY(0u, min(0u, 0u))) + 0u)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(1, 1))), min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec3(int(0), 1, (0 | 0))), (true ? int(ivec3(int(0), 1, (0 | _GLF_IDENTITY(0, min(0, 0))))) : _GLF_FUZZED(-85999)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, true)), false || (bool(bvec4(! (false), true, false, true))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-531.273), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(357.580)), bvec2(true, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79115))))), clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) >> 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79115))))), clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79115))))), clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (false ? _GLF_FUZZED(read_1) : uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79115))))), clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79115))))), clamp(read_1 + 1, read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1))) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 1u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u)), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (1)), (read_1 + 1) | 0u)), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, (1u & 1u)), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, (1u & 1u)), (uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, (1u & 1u))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, (1u & 1u)), uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, (1u & 1u)))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)))), 0u))) ^ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u))) | (0u ^ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u))))) / 1u)))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (read_1 + 1)), read_1 + 1))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0))));
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) ^ 0u) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))))), min(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)), float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-432.119))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, abs(0.0), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 1.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-432.119))), 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(63.79)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))))))), 1.0, 0.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(float(_GLF_FUZZED(-0.8))), float(_GLF_FUZZED(-499.285)), bool(false))), float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, float(_GLF_IDENTITY(mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), (true ? mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0) : _GLF_FUZZED(mat2(-5349.1528, -8.2, -2.1, 8334.4240))))))))), (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, float(_GLF_IDENTITY(mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0), (mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0)) * mat2(1.0))), (false ? _GLF_FUZZED(-662.269) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0), (mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0)) * mat2(1.0))), max(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0), (mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0)) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0), (mat2x3(0.0, 0.0, tan(0.0), 1.0, exp(0.0), 1.0)) * mat2(1.0)))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), (true ? mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0) : _GLF_FUZZED(mat2(-5349.1528, -8.2, -2.1, 8334.4240))))))))), (true ? float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, float(_GLF_IDENTITY(mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(127767u))), bool(false))) : _GLF_FUZZED(5.5))), 0.0, 1.0, 1.0))), 1.0, 0.0), (true ? mat2((0.0) + 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(55.25, 6.2, -4186.4439, 6.1)) : mat2(0.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0) : _GLF_FUZZED(mat2(-5349.1528, -8.2, -2.1, _GLF_IDENTITY(8334.4240, (true ? _GLF_IDENTITY(8334.4240, min(8334.4240, 8334.4240)) : _GLF_FUZZED(26.16)))))))))))) : _GLF_FUZZED(vec4(225.424, 6126.8517, -7888.1895, -23.28).y)))) + 0.0)), bool(true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (true ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(abs(-5.6), max(_GLF_IDENTITY(abs(-5.6), mix(float(abs(-5.6)), float(_GLF_FUZZED(-2.5)), bool(false))), abs(-5.6)))))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, tan(0.0), length(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))), (min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))) / 1.0)), float(_GLF_FUZZED((- 8911.5734))), bool(false)))), min(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(0.9)), float(abs(0.0)), bool(true)))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-6.2))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))))), mix(float(_GLF_FUZZED(643.184)), float(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), float(mat4(float(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-9.5) : float(_GLF_IDENTITY(float(0.0), float(mat4(float(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0))))))), bool(true)))) / 1.0)), 0.0))), mix(float(_GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))), (min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))) / 1.0)), float(_GLF_FUZZED((- 8911.5734))), bool(false)))), _GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))), (min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY((- 8911.5734), ((- 8911.5734)) / round(length(normalize(vec2(1.0, 1.0))))))), bool(false))))))), 0.0, 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (_GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0)))) - 0.0)), 0.0)), min(float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))), mix(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), (false ? _GLF_FUZZED(69.65) : float(_GLF_FUZZED(-0.8)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-0.8), mix(float(_GLF_FUZZED(-2362.3649)), float(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_FUZZED(-0.8), _GLF_IDENTITY(_GLF_FUZZED(-0.8), float(mat2x3(_GLF_FUZZED(-0.8), 1.0, 1.0, 0.0, 0.0, 0.0)))))), bool(true)))), float(_GLF_FUZZED(-0.8)), float(_GLF_FUZZED(-0.8)))), mix(float(float(_GLF_FUZZED(-0.8))), float(_GLF_FUZZED(_GLF_IDENTITY(-499.285, (-499.285) + 0.0))), bool(false))), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, 0.0), (_GLF_IDENTITY(true ? mat2(injectionSwitch.y, 1.0, 1.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(injectionSwitch, vec2(-4.6, -66.09))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(-5537.8693, 6.5, -3.1, 2.0) * mat2(-9727.9639, 5799.6036, -5.0, -2940.6775))) : _GLF_FUZZED(mat2(injectionSwitch, vec2(-4.6, -66.09))))), (true ? mat2(injectionSwitch.y, 1.0, 1.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(injectionSwitch, vec2(-4.6, -66.09))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(-5537.8693, 6.5, -3.1, 2.0) * mat2(-9727.9639, 5799.6036, -5.0, -2940.6775))) : _GLF_FUZZED(mat2(injectionSwitch, vec2(-4.6, -66.09)))))) * mat2(1.0)))))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), ! (! (bool(bool(bool(true))))))))))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))], uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1))), (false ? _GLF_FUZZED(i) : (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1)))))) == read_2) + 1, 4, _GLF_IDENTITY(64, (64) << 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, exp(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), vec2(vec2(vec2(mat3x4(injectionSwitch, 1.0, exp(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(-481.215, -1.5, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) | 0)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) + 0) : _GLF_FUZZED(-89462))))), 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
