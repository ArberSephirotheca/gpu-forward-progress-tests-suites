#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(68.70)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(68.70)), bool(false))) : _GLF_FUZZED(11.07))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(83.14)), bool(false))))) > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))), false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (vec2(vec3(injectionSwitch, 1.0))) * mat2(1.0))).y)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), abs(0.0), 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(distance(-8.6, 791.006)))) : _GLF_FUZZED(-7.6))), 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0)), (float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))), 1.0))) - 0.0)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-54.44, -67.54)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-54.44, -67.54)), max(_GLF_FUZZED(vec2(-54.44, -67.54)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-54.44, -67.54)), (_GLF_FUZZED(vec2(-54.44, -67.54))) + vec2(0.0, 0.0)))), _GLF_FUZZED(vec2(-54.44, -67.54)))) : (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.1, -57.98)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.1, -57.98)), clamp(_GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98))))), mix(vec2(((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.1, -57.98)), clamp(_GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98))))))[0], ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.1, -57.98)), clamp(_GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98)), _GLF_FUZZED(vec2(-4.1, -57.98))))))[1]), vec2(_GLF_FUZZED(1049.6056), _GLF_FUZZED(-23.33)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, true))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), true, true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), (bool(bvec2(! (false), true))) && true))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))), false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.4)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, false, false)), (bool(bvec4(! (false), false, false, false))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * (0u ^ 1u)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) ^ 0u))))) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) >> 0u)))) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u ^ (virtual_gid))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u ^ (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u ^ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u ^ (virtual_gid))))))) | 0u), 1u))) | 0u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(virtual_gid) : read_1)) + 1, max(read_1 + 1, read_1 + 1))) | 0u)), _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, 1 * (64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.28), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3421.0824)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y))) && true))) && true))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - tan(sqrt(vec2(0.0, 0.0))))).y), 0.0)) * mat2(1.0)), mat2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - tan(sqrt(vec2(0.0, 0.0))))).y), 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(0.1, -7.8, -8.8, 1.2)) : _GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - tan(sqrt(vec2(0.0, 0.0))))).y), 0.0)) * mat2(1.0)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_IDENTITY(_GLF_FUZZED(763.812), max(_GLF_FUZZED(763.812), _GLF_FUZZED(763.812))) : injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, 1, 0))))])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(abs(vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u) + 1) / 1u, 0u | ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u) + 1) / 1u))) < subgroup_size))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)) ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | 0u, ~ (~ ((subgroup_local_id + 1) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), max((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (true ? _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), (true ? _GLF_FUZZED(read_1) : _GLF_FUZZED(workgroup_id)))) | (_GLF_FUZZED(read_1))) : _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), max((_GLF_IDENTITY(true, ! (! (true))) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))))))) >> 0u) + 1) / 1u, ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), max((true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(subgroup_size)), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), max((_GLF_IDENTITY(true, ! (! (true))) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))))))) >> 0u) + 1) / 1u) ^ 0u)) < subgroup_size)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))))), subgroup_size)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) | (subgroup_size)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))))), ((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size))))))) | ((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))))))))) / 1u)) >> 0u) + 1) / 1u) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(true, ! (! (true))) ? 3u : _GLF_FUZZED(11294u)))), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(next_virtual_gid))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(subgroup_size, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))) | (subgroup_size))))))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec4(uint(3u), 1u, 0u, 0u)), (true ? uint(uvec4(uint(3u), 1u, 0u, 0u)) : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u)))))), (uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u))))))) / 1u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) / uvec3(1u, 1u, 1u)), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size))))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u)))))), (uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u))))))) / 1u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) / uvec3(1u, 1u, 1u)), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), min(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u)))))), (uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uint(3u))))))) / 1u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) / uvec3(1u, 1u, 1u)), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(subgroup_size, 1u, 1u)))))) | (subgroup_size))))) - 0u)))) - 0u))))) / 1u)) >> 0u) + 1) / 1u) < subgroup_size) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? subgroup_local_id + 1 : _GLF_FUZZED(read_1))) < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), (true ? _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), (true ? _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((workgroup_size)))))))) << 0u) >> 0u) + 1) / 1u) < subgroup_size))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && (true)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id)))) : _GLF_FUZZED(subgroup_size)), 0u | (~ (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))))))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u)) | 0u)), max((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uint(786.216)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(subgroup_local_id))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))) : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u) / 1u))) | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id) << 0u, clamp((subgroup_local_id) << 0u, (subgroup_local_id) << 0u, (subgroup_local_id) << 0u))) / (1u & 1u)))))), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u)) | 0u))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) - 0u)))))) >> 0u))) + 1) / 1u) < subgroup_size)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - 0u)), (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - 0u))) >> 0u)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_base)))))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) | 0u))) >> 0u)) | _GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 1) / 1u) < subgroup_size))), bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - 0u)), (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - 0u))) >> 0u)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_base)))))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) | 0u))) >> 0u)) | _GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 1) / 1u) < subgroup_size))), true, true, false)))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u))) >> 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) ^ (163564u & 0u))) >> 0u)) | 0u))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 1) / 1u) < subgroup_size), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u, (_GLF_IDENTITY(((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u, (_GLF_IDENTITY(((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u, min(((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u, ((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) - 0u))) ^ 0u)) - 0u)))) >> 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u, max((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))) && true) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u)))) | 0u))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 1) / 1u) < subgroup_size), (bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))))) - 0u))) >> 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_size), clamp(true ? subgroup_local_id : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_size), min(true ? subgroup_local_id : _GLF_FUZZED(subgroup_size), true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u)) | 0u))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 1) / 1u) < subgroup_size)) && true)) && true)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, 5u, 5u), clamp(clamp(5u, 5u, 5u), clamp(5u, 5u, 5u), _GLF_IDENTITY(clamp(5u, 5u, 5u), (clamp(5u, 5u, 5u)) - 0u)))) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), true && ((true)))))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(5u, (5u) ^ 0u)))) * (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size)))))))) && true)), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, 5u, 5u), clamp(clamp(5u, 5u, 5u), clamp(5u, 5u, 5u), _GLF_IDENTITY(clamp(5u, 5u, 5u), (clamp(5u, 5u, 5u)) - 0u)))) : _GLF_FUZZED(subgroup_size)))), uint(5u))) * (subgroup_local_id)) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), true && ((true)))))))))) || false))) ? _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(5u, (5u) ^ 0u)))) * (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u), 0u)) : _GLF_FUZZED((subgroup_local_id | 150274u))))) + 1))) / 1u) < subgroup_size)))))))) && true))))), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec3(-1.8, -7.7, -39.32) * mat2x3(-770.242, 226.002, -645.289, 260.299, -9.2, -994.132))) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))) | (0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))))), 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, exp(0.0), 1.0, 1.0))).x, 0.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true, false, true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), bool(bool(bool(bvec4(false, true, false, true))))))), false), true, true))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), (float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 1.0)), clamp(float(mat2(1.0, 1.0, 1.0, 1.0)), float(mat2(1.0, 1.0, 1.0, 1.0)), float(mat2(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)) : _GLF_FUZZED(8874.1824))))), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0))), mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), bool(true)))), max(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), 0.0, 0.0)))) > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true)))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))), bool(bool(bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))))), false), true, true))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat3x2(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), float(vec3(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), 0.0, 0.0))), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))))), 0.0, 0.0)))) > injectionSwitch.y)))), true && (true && ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true)))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))), bool(bool(bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true))))))), false), true, true))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat3x2(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-987.652) : tan(0.0)), min((false ? _GLF_FUZZED(-987.652) : tan(0.0)), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), float(vec3(_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))), 0.0, 0.0))), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-987.652) : tan(0.0)))), float(_GLF_FUZZED(-3994.0755)), bool(false))))))), 0.0, 0.0)))) > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), true), false, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), 1.0))))), true), false, false))), false), false))))))) && (false)), (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (read_1)) + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED((-- i)))), (true ? read_1 + 1 : _GLF_FUZZED(read_2))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), clamp((5u), (5u), (5u))) | (5u))) ^ 0u)))), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), clamp((5u), (5u), (5u))) | (5u))) ^ 0u))))), (~ ((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), clamp((5u), (5u), (5u))) | (5u))) ^ 0u)))))) << 0u))), 0u ^ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED((subgroup_size | subgroup_id)) : 5u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) - 0u)))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), uint(5u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (_GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (uint(uvec3(0u, 1u, (0u ^ 1u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id))))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (_GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (uint(uvec3(0u, 1u, (0u ^ 1u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))))))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (_GLF_IDENTITY(uint(uvec3(0u, 1u, (0u ^ 1u))), (uint(uvec3(0u, 1u, (0u ^ 1u)))) | (uint(uvec3(0u, 1u, (0u ^ 1u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | 0u))), _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(max(_GLF_IDENTITY(read_1, (read_1) * 1u), subgroup_local_id))))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u))))) + (read_1 + 1)) == read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))) << 0), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
