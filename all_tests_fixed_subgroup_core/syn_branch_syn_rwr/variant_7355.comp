#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(_GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y))), (true ? mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(mat2(92.20, 2.2, -459.828, 2079.5581)))))))) * _GLF_IDENTITY((vec2(1.0, 1.0)), clamp((vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec2((vec2(1.0, 1.0)))), mix(vec2((vec2(vec2((vec2(1.0, 1.0)))))[0], (vec2(vec2((vec2(1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(8.6)), bvec2(false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(342.195)), float(injectionSwitch.y), bool(true))))))) * (vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0, 1.0)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-3.6) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) * (vec2(1.0, 1.0))) / vec2(1.0, 1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), transpose(transpose(transpose(mat2x4(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) * (vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0, 1.0)), vec2(vec2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0, 1.0)))))))) / exp(vec2(0.0, 0.0)))))[0], ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-867.676, _GLF_IDENTITY(-925.737, 1.0 * (-925.737)))) : vec2(1.0, 1.0))))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, 1.0 * (3.1))), _GLF_FUZZED(626.795)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), false, true, false)), true, true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))[0], ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-867.676, -925.737)) : vec2(1.0, 1.0))))))[1]), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(626.795)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, true, false)), true, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, true, false)), true, true), true)))))), false)))).x) + 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || false))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))))))) || false)) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7.8), (false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)))), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7.8), _GLF_IDENTITY((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), max((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), (false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)))), (false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), _GLF_IDENTITY((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), max((false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)), (false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8))))))) / cos(0.0)))), bool(false))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_IDENTITY(_GLF_FUZZED(-7.8), (false ? _GLF_FUZZED(-864.074) : _GLF_FUZZED(-7.8)))), bool(false))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))), min((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))), (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) ^ 0u))))), (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))), min((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))), (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) ^ 0u)))))) - uvec3(0u, 0u, 0u))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), mat3(mat4(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.5, 5.5)), (false ? _GLF_FUZZED(vec2(-90.05, 9238.0584)) : _GLF_FUZZED(vec2(-8.5, 5.5)))))), 0.0, 0.0, _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.54)), bool(false))), 0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(6.0) : length(vec2(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 1.0, 1.0, sqrt(1.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))))), 0.0)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), 1.0, 1.0, sqrt(1.0)), mat3(mat4(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(6.0) : length(vec2(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 1.0, 1.0, sqrt(1.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))))), 0.0)))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, 5.5)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0)), mat3(mat4(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.5, _GLF_IDENTITY(5.5, max(5.5, 5.5)))))), 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(6.0) : length(vec2(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 1.0, 1.0, sqrt(1.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))))), 0.0)))).y)), false, false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, min(((subgroup_local_id + 1)) << 0u, _GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (_GLF_IDENTITY(true, (true) && true) ? ((subgroup_local_id + 1)) << 0u : _GLF_FUZZED(subgroup_local_id)))))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))) && true), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (0)))), (0) + 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (0)))), (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (0)))), (0) + 0)) * 1), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))) | (0))], _GLF_FUZZED((_GLF_IDENTITY(9.6, 0.0 + (9.6)) * -403.210))), vec2(_GLF_IDENTITY(_GLF_FUZZED(635.713), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(635.713), exp(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_FUZZED(635.713), exp(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3(_GLF_FUZZED(635.713), exp(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_FUZZED(635.713), exp(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-1105.0130 / -8.4))), float(1.0), bool(true))))), 0.0, 0.0, 1.0)))))))), (injectionSwitch)[1]), bvec2(false, true))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(117048u))), bool(false)))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), sin(0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), false, _GLF_IDENTITY(true, false || (true)), true))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), bool(bvec4(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), false, true, _GLF_IDENTITY(true, true && (true))))))), true)))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, false, false)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), (bool(bool(bvec3(false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bool(bool(bvec3(false, false, false)))))) || false)))) || (bool(_GLF_DEAD(false))), (_GLF_IDENTITY(false || (bool(_GLF_DEAD(false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false || (bool(_GLF_DEAD(false)))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true), false || (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), true)), (bool(bvec2(true, true))) || false)) || false, ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec3(bool(bvec3(true, false, true)), true, true)))), true)), (bool(bvec2(true, true))) || false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(true, true)))), (bool(bool(bool(bvec2(true, true))))) && true))) || false)) || false, ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true)), (bool(bvec2(true, true))) || false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80448) : 1))], injectionSwitch[1])))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)) / 1u)], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false), false, true)), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false, true))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true))))))))))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))), false, false, true)), bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))), false, false, true)), _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))))) || false))))))) && true))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))), false || ((! (_GLF_IDENTITY(false, (false) && true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u | (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + _GLF_IDENTITY(1, (1) + _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) + 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(_GLF_IDENTITY(1, ~ (~ (1)))), 1, 0, 0)), int(ivec4(int(1), 1, 0, 0))))), int(1))), _GLF_IDENTITY(int(1), 0 ^ (int(1))))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), clamp(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), clamp(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), max(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1))))))) / 1), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 0, 0)), max(int(ivec4(int(1), 1, 0, 0)), int(ivec4(int(_GLF_IDENTITY(1, min(1, 1))), 1, 0, 0))))), int(1))), int(1)))))) * 1)) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) + _GLF_IDENTITY(1, (1) + (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)) << _GLF_IDENTITY(int(1), int(1)))) < subgroup_size)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) * vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, tan(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) || false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, (false) && true)))), true && ((! ((_GLF_IDENTITY(false, (false) && true))))))), ((_GLF_IDENTITY(false, (false) && true))) || false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-313.312, 7419.5052)) : injectionSwitch)))).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, false))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), clamp((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), min((min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9878.5996) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(floor(-531.772)) : injectionSwitch[0])))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-261.462)), bool(false))), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-261.462)), bool(false))), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71.93) : float(injectionSwitch.y))), float(_GLF_FUZZED(-261.462)), bool(false))), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0)))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(read_1) : read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_IDENTITY(_GLF_FUZZED(read_1), ~ (~ (_GLF_FUZZED(read_1)))))) : read_2)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))))))) / 1u))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : read_2))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & 1u)) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))))))) / 1u))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : read_2)))) && true)))) && true)) + 1, max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - 0u) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u + (read_2), (0u + (read_2)) << (0u ^ 0u)))) + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)) : _GLF_FUZZED(-8959.3305)))), injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)) : _GLF_FUZZED(-8959.3305)))), injectionSwitch.y)) * round(length(normalize(1.0))))), (0 | 0) + (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))))) | (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)), uint(uvec3(uint(uvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)), 0u, 0u)))) | (uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) << 0u, (_GLF_IDENTITY((read_1 + 1) << 0u, clamp((read_1 + 1) << 0u, (read_1 + 1) << 0u, (read_1 + 1) << 0u))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) ^ 0u)) / (_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u))))) + 1) - _GLF_IDENTITY(0u, ~ (~ (0u)))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : read_2))) + 1, max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), (false ? _GLF_FUZZED(36454) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), ~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), (false ? _GLF_FUZZED(36454) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), ~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), (false ? _GLF_FUZZED(36454) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), ~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), (false ? _GLF_FUZZED(36454) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), ~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), (false ? _GLF_FUZZED(36454) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))), ~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), min((1), (1))), (1), _GLF_IDENTITY((1), min((1), (1))))))))))))))))))), _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - 0u) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_2) : read_2)), 0u + (read_2)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_2) : read_2)), 0u + (read_2))))) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)), int(int(int(ivec3(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)))))), max((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)), int(int(int(ivec3(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)), int(int(int(ivec3(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)))))), ((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1)), int(int(int(ivec3(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))), 1))))))) - 0)))))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ _GLF_IDENTITY(0u, (0u) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (_GLF_IDENTITY(1u, max(1u, 1u))))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) / (1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u)))) + 1) - _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), uint(uvec4(_GLF_IDENTITY((0u), min((0u), (0u))), 1u, 1u, 1u)))))) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : read_2))) + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (read_1 + 1) - 0u) == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), 0u | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), (read_1 + _GLF_IDENTITY(1, (1) / 1)) + 0u))), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1), _GLF_IDENTITY(uint(uvec3(false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1), 1u, 0u)), (uint(uvec3(false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1), 1u, 0u))) << 0u)))))) - 0u), 0u | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(subgroup_local_id))))), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), 1u * (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1)))) ^ 0u))))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))), clamp(uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))), uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))), uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))))), uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u))), uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, (1u & 1u)))))))))) << 0u) == _GLF_IDENTITY(read_2, 0u + (read_2))) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u), min(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) * 1)) - 0u, min((read_1 + _GLF_IDENTITY(1, (1) * 1)) - 0u, (read_1 + _GLF_IDENTITY(1, (1) * 1)) - 0u))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u + (read_1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_1, 0u + (read_1))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_1, 0u + (read_1))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3((_GLF_IDENTITY(read_1, 0u + (read_1))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_1, 0u + (read_1))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_1, 0u + (read_1))), 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(0u, 0u, 0u) | (uvec3((_GLF_IDENTITY(read_1, 0u + _GLF_IDENTITY((read_1), uint(_GLF_IDENTITY(uint((read_1)), min(uint((read_1)), _GLF_IDENTITY(uint((read_1)), uint(uvec4(uint((read_1)), 1u, 1u, 0u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uvec3(0u, 0u, 0u)))) * 1u))) + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - 0u) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u + _GLF_IDENTITY((read_2), ((_GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_2 : _GLF_FUZZED(atomicMin(next_virtual_gid, workgroup_base)))))) | 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_2, 0u + (read_2)), 1u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec3(_GLF_IDENTITY(read_2, 0u + (read_2)), 1u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u | (uint(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u + (read_2)), (_GLF_IDENTITY(read_2, 0u + (read_2))) / 1u), _GLF_IDENTITY(1u, (1u) << 0u), 0u)))), (0u | (uint(uint(uvec3(_GLF_IDENTITY(read_2, 0u + (read_2)), 1u, 0u))))) / 1u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) + 0), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) - 0), (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1))))))) - 0u), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - _GLF_IDENTITY(0u, ~ (~ (0u))))) << 0u) == _GLF_IDENTITY(read_2, 0u + (read_2))) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1))), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))) - 0u) == _GLF_IDENTITY(read_2, 0u + (read_2))) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.9) : 1.0)), injectionSwitch.y))), (true ? uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))) ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1)), ((false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))) ^ 0u)), (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1)))) << 0u)) | (_GLF_IDENTITY((read_1 + 1), (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1))))))) - 0u) == _GLF_IDENTITY(read_2, 0u + (read_2))) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(num_workgroup))))))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, max(4, 4)));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))) || false))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
}
