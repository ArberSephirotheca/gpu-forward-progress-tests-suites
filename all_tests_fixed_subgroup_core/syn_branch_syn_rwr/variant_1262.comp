#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8423.3180)), float(injectionSwitch.y), bool(true)))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), true, true, false))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true), true, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((_GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))) * (injectionSwitch))) * mat2(1.0)) * vec2(1.0, 1.0))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) * mat2(1.0)) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ float(85137u)))), float(1.0), bool(true)))))).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * vec2(1.0, 1.0))).y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)));
 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.y = _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(num_workgroup, num_workgroup)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(num_workgroup, num_workgroup)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(num_workgroup, num_workgroup)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(num_workgroup, num_workgroup)), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(num_workgroup, num_workgroup))))), uint(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)))))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(max(num_workgroup, num_workgroup), (_GLF_IDENTITY(max(num_workgroup, num_workgroup), (max(num_workgroup, num_workgroup)) | (max(num_workgroup, num_workgroup)))) << 0u))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))), (num_workgroup) * (1u & _GLF_IDENTITY(1u, (1u) * 1u))))), max(num_workgroup, num_workgroup))), uint(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), num_workgroup)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))))) | (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)) | 0u), num_workgroup))) ^ 0u)))))))))))) << 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) >> 0u) ^ 0u) ^ (_GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_size) : num_workgroup)), max(num_workgroup, num_workgroup))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & 1u)))), max(num_workgroup, num_workgroup))), uint(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(max(num_workgroup, num_workgroup), uint(_GLF_IDENTITY(uvec2(max(num_workgroup, num_workgroup), 0u), (uvec2(max(num_workgroup, num_workgroup), 0u)) - uvec2(0u, 0u))))))), (max(uint(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u & 1u)))), max(num_workgroup, num_workgroup))), uint(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(max(num_workgroup, num_workgroup), uint(_GLF_IDENTITY(uvec2(max(num_workgroup, num_workgroup), 0u), (uvec2(max(num_workgroup, num_workgroup), 0u)) - uvec2(0u, 0u)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)))))) * 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.0) : injectionSwitch.x)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))))))), ! (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.0) : injectionSwitch.x)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.0) : injectionSwitch.x)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.0) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) - 0.0), 0.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(4694.8297)), bool(false))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) + 0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) > injectionSwitch.y)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-39.17)), bool(false))), injectionSwitch.x)), float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.8), (_GLF_FUZZED(-0.8)) / abs(1.0)), clamp(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))))), 1.0))), log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))) > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ (0u & 194632u)), max(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))), (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ (0u & 194632u)), max(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))))) ^ _GLF_IDENTITY(0u, (0u) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), _GLF_IDENTITY(max(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (max(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u)))))))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, 39.11)))).x)) + (1u))) - 0u, clamp((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, 39.11)))).x)) + (1u))) - 0u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, 39.11)))).x)) + (1u))) - 0u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, 39.11)))).x)) + (1u))) - _GLF_IDENTITY(0u, (0u) | (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))), uint(1u)))), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 0u + (subgroup_id * subgroup_size))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, 1u), (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, 1u), clamp(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), 0u, 1u), uvec3((subgroup_local_id + 1), 0u, 1u), uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), 0u, 1u))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.x = next_virtual_gid;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) - 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), (buf[virtual_gid]) | (buf[virtual_gid])), (buf[virtual_gid]) | _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), clamp(_GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]), _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u ^ 0u)), ~ (~ (uvec2(virtual_gid, (0u ^ 0u)))))), max(uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u ^ 0u)), ~ (~ (uvec2(virtual_gid, (0u ^ 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u ^ 0u)), ~ (~ (uvec2(virtual_gid, (0u ^ 0u)))))), min(uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u ^ 0u)), ~ (~ (uvec2(virtual_gid, (0u ^ 0u)))))), uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u ^ 0u)), ~ (~ (uvec2(virtual_gid, (0u ^ 0u)))))))))))]))), ((buf[virtual_gid])) | ((buf[virtual_gid]))))), (_GLF_IDENTITY((buf[virtual_gid]), clamp(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) << 0u), (true ? (buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))]) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), uint(_GLF_IDENTITY(uvec4((buf[virtual_gid]), 0u, 1u, 0u), (uvec4((buf[virtual_gid]), 0u, 1u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((buf[virtual_gid]), 1u), uvec2(0u, 0u) ^ (uvec2((buf[virtual_gid]), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2((buf[virtual_gid]), 1u), uvec2(0u, 0u) ^ (uvec2((buf[virtual_gid]), 1u))))))), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid])))))) / 1u))) - 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u) | (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | 0u)) - 0u, 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-31.36)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.x], _GLF_IDENTITY(uint(read_1 + 1), clamp(uint(read_1 + 1), uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u), (_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u)) >> 0u), _GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u))), max(_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u), _GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(read_1 + 1), min(uint(read_1 + 1), uint(read_1 + 1)))) >> 0u))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) >> _GLF_IDENTITY(0, clamp(0, 0, 0))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (0u ^ 1u) * (buf[virtual_gid])), 1u, (0u & 120624u)))), buf[virtual_gid])), _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (false)) || (false), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))) || (false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z = read_2;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-236.043) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5595.9449), _GLF_FUZZED(11.09)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(538.570), _GLF_FUZZED(8200.8083)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-11.09)), bool(false))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), int(ivec3(_GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), 0 | (max(1, 1))), max(1, 1), max(1, 1))), 0, 1))), (_GLF_IDENTITY(max(1, 1), int(ivec3(_GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), 0 | (max(1, 1))), max(1, 1), max(1, 1))), 0, 1)))) * 1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))) * (1u | 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < injectionSwitch.y)), true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (bool(bool(bool(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (injectionSwitch.x < injectionSwitch.y)), true))))))))), ! (! ((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, false))))), true)))), ! (! (bool(bool(bool(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.x], uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) + 0u))), 0u), (uvec4(read_1, 1u, 0u, 0u)) | (uvec4(read_1, _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u) ^ 0u) + (0u)), 0u))))), read_1)) + 1 == _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2, clamp(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2, GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2), min((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2), (GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2))) ^ uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2), max((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2), (GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2)))))).z) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1 == GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAdd(next_virtual_gid, (subgroup_local_id >> next_virtual_gid))) : 0u)) | (uint(read_1 + 1 == _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z, clamp(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z, GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z, 0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_2.z))))))) + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0))))))))))), 1, 1, 0), (ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0)) << ivec4(0, 0, 0, 0))), min(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(1, 1, 1))), _GLF_IDENTITY(1, max(1, 1)), 1, 0), (ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0)) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0), (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0), (ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0)) + ivec4(0, 0, 0, 0))) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1))), (ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 0)) << ivec4(0, 0, 0, 0))))))) >> 0)), (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((false ? _GLF_FUZZED(-64300) : (1)), min((false ? _GLF_FUZZED(-64300) : (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1)))), (false ? _GLF_FUZZED(-64300) : (_GLF_IDENTITY(1, max(1, 1))))))) - 0))) >> 0), 1, 1))), 4, _GLF_IDENTITY(64, int(ivec4(64, (0 << _GLF_IDENTITY(int(7), int(7))), 1, 1))), 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
