#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        break;
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(uint(uint((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))), (uint(uint((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))))) >> 0u)) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 80:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     mat2x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     case 88:
     mat3x2(-931.610, -23.99, -6.6, 6.1, -352.368, 1554.5736);
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 71:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 34:
     case 1:
     if(_GLF_DEAD(false))
      barrier();
     case 94:
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     if(_GLF_DEAD(false))
      return;
     case 98:
     if(_GLF_DEAD(false))
      return;
     while(bool(subgroup_size))
      {
       ;
       {
        (-113.921 - mat2(-2244.8478, -59.03, 919.486, 2.0));
        mat3(mat3x4(-5.5, -966.821, -28.23, 73.54, 9.3, 547.797, -2608.3406, -9.1, 823.877, 9167.2265, 61.47, -189.117));
        vec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
        mat2(-5.1, -9784.3469, _GLF_IDENTITY(-3.4, min(-3.4, -3.4)), -76.36);
        mat2(-6774.4122, -3865.4021, 4.7, -4860.8886);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
       }
       if((injectionSwitch != reflect(injectionSwitch, vec2(292.738, 9542.9691))))
        {
         for(         bitCount(uvec3(199210u, 46007u, 67630u));
 (mat3x4(9052.8652, 1022.7985, 117.667, 711.745, 17.96, 5.6, -268.936, -4351.4610, -67.13, 90.00, 4.9, 4.8) != mat3x4(-102.634, 47.81, 7.6, -2948.0630, -1.0, -63.15, 4.3, 602.668, -6.3, 4.6, 4.1, 9779.6807)); (mat3(79.64, -3.8, -0.2, -1.1, 7.6, -1330.1504, -8134.2192, 7.9, -7.5) / -99.77))
          {
           uvec2 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v[60];
           ;
           mat3x4(-2.3, 68.95, 7.1, 2.8, 8.4, 734.001, -186.696, -0.4, 1356.2968, 1.5, 19.91, -5.8);
           mat2x4(-8889.3517, 2.9, 9.3, -3.0, 0.4, 3.6, -510.269, -0.0);
          }
         for(         (uvec2(30639u, 5333u) / subgroup_size);
 false; ivec3(60467, -19160, -36922).rb)
          {
           uvec3 _GLF_SWITCH_3_8v[8];
           mat3(_GLF_IDENTITY(-8.2, (-8.2) / 1.0), 5.2, 4150.2782, 5454.2615, 7002.8308, 9.8, 1.6, 28.18, 652.019);
          }
         ;
         ivec2 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v;
         uint _GLF_SWITCH_3_12v;
         mat2x4 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v[87], _GLF_SWITCH_3_15v;
         for(uint _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v; isnan(-9.9); (_GLF_SWITCH_3_12v ^ uvec2(167765u, 188014u)))
          {
           bvec3(true, false, false);
           clamp(ivec3(-90571, 81419, -35605), 7500, 73795);
           vec4 _GLF_SWITCH_3_18v[13], _GLF_SWITCH_3_19v[77], _GLF_SWITCH_3_20v[7];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4(mat3(1845.6442, -9.0, 9715.6158, -7546.9429, -42.54, -178.716, 6.2, -8455.4448, -4540.9696));
           uvec2(189870u, 57615u);
           bvec4 _GLF_SWITCH_3_21v;
           uint _GLF_SWITCH_3_22v;
           ((mat4x3(-2.2, -86.61, 966.681, -7089.9405, 87.47, -0.6, -1691.2315, -879.473, 6.8, -8.3, 376.784, -4.1) / mat4x3(3.8, -47.54, 3588.2564, 24.98, 746.677, -4132.2647, 0.3, 62.31, -4.1, 5.6, -335.400, -167.472)) * matrixCompMult(_GLF_SWITCH_3_13v, _GLF_SWITCH_3_0v));
           if(_GLF_DEAD(false))
            break;
           _GLF_SWITCH_3_22v;
          }
         mat3x4 _GLF_SWITCH_3_23v[12];
        }
       while(false)
        {
         {
          length(vec3(-0.7, 4318.9034, -2.5));
          equal(uvec2(155365u, 31918u), uvec2(170277u, 35882u));
          greaterThanEqual(uvec3(41862u, 170197u, 87355u), uvec3(150089u, 38720u, 9664u));
         }
        }
      }
     case 64:
     {
      -85833;
      {
       mat3(2.0, 9.6, 6.5, 5.5, 17.35, -8.7, -4.7, 128.661, -9.6);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       mat4x3 _GLF_SWITCH_3_24v[79], _GLF_SWITCH_3_25v;
       _GLF_IDENTITY(vec2(-1.6, -48.99), mat2(1.0) * (vec2(-1.6, -48.99)));
       if(_GLF_DEAD(false))
        return;
       mat3x4(4.0, _GLF_IDENTITY(8945.6687, (false ? _GLF_FUZZED(-431.253) : 8945.6687)), 9.2, 4862.0833, -5.7, 0.4, 1.7, 5.4, 20.92, 962.126, -1.6, 722.894);
       if(_GLF_DEAD(false))
        return;
       if((27.42 > _GLF_IDENTITY(-6007.6970, 0.0 + (-6007.6970))))
        {
         mat3 _GLF_SWITCH_3_26v[52], _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v;
         mat2 _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       else
        {
         vec4(-5.8, 3.9, 6.1, 7.4);
         mat4x3 _GLF_SWITCH_3_31v;
        }
       if((mat2(5.9, -18.52, -94.95, -9407.2424) != (mat4x2(1.1, _GLF_IDENTITY(-1085.1611, min(-1085.1611, _GLF_IDENTITY(-1085.1611, (-1085.1611) / 1.0))), 6.3, 400.460, -6.9, -4.6, 262.112, 7.8) * (mat2x4(-36.54, -5.0, 1.7, -387.553, 7075.8466, 3025.1942, -81.26, -2.0) * mat2(-3.0, 1.0, 314.415, 4.8)))))
        {
         if(_GLF_DEAD(false))
          return;
         clamp(ivec2(8896, 53613), -32868, (-36081 | 13891));
         -37657;
         mat2x3 _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v, _GLF_SWITCH_3_34v;
        }
       ;
       mat4(mat3(-8.7, 8432.9890, 77.66, -2.7, 8.3, 2.9, 750.624, -0.6, -68.75));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
      do
       {
        bool _GLF_SWITCH_3_35v, _GLF_SWITCH_3_36v[15];
        mat4x2(injectionSwitch, (-54.86 * vec2(-56.28, -6448.8805)), injectionSwitch, vec2(-4.0, -79.69));
        8.0;
        {
         bvec4(true, false, true, true);
         ;
         vec4(-26.60, 9.4, 4335.4032, -5.6);
         mix(bvec3(true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), bvec3(_GLF_SWITCH_3_35v), bvec3(true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)));
        }
        if((ivec3(83209, 94899, 83820) != ivec3(-10639, _GLF_IDENTITY(-55875, int(_GLF_IDENTITY(ivec2(-55875, 1), (ivec2(-55875, 1)) - ivec2(0, 0)))), 1843)))
         {
          ivec3(91277, 20427, 40817);
          ivec4(50816, 69769, -92910, -77947);
          vec2 _GLF_SWITCH_3_37v;
          uvec3 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v[1], _GLF_SWITCH_3_40v[62];
          uvec4(21474u, 147159u, 134644u, 30120u);
         }
        ivec3(ivec4(-44002, -499, -15523, 38452));
       }
      while(true);
      ;
      for(      bvec4(false, false, true, true);
 false; matrixCompMult(mat3x4(-2587.0139, -3.6, -4698.7436, -5.8, -52.35, 3.6, 1970.2799, -966.447, -7.4, 7.2, 36.80, -9486.5304), mat3x4(457.516, 2.8, 840.034, -4.5, 41.86, 664.373, 9.0, 8490.5868, 2.6, -199.499, -36.91, -5.6)))
       {
        mat4x3(-1.3, 3743.8705, -177.639, 33.29, -9.7, 341.204, 669.838, -13.26, 1.0, 101.513, 3.1, 5.2);
       }
      for(ivec2 _GLF_SWITCH_3_41v[96], _GLF_SWITCH_3_42v; (true && bvec3(false, false, true)[2]); -61442)
       {
        for(uvec2 _GLF_SWITCH_3_43v, _GLF_SWITCH_3_44v; (bitfieldInsert(-38852, 90131, (-95305 + -89148), -14815) != (+ 44478)); -4.6)
         {
          (10078u | uvec4(194028u, 70274u, 20111u, 43825u));
          mat2x4 _GLF_SWITCH_3_45v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           continue;
          ivec4(38908, 69299, -76507, 20538);
         }
        ;
        while((workgroup_id > atomicXor(workgroup_size, num_workgroup)))
         {
          mat2x3 _GLF_SWITCH_3_46v[71], _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v;
          if(_GLF_DEAD(false))
           continue;
         }
        matrixCompMult(mat4x3(7.7, 518.668, 518.623, -5517.8711, 4.0, -8545.9783, -854.374, 46.57, -5001.5156, 5102.4184, -3.9, 23.35), mat4x3(-117.804, 28.85, -8.8, -0.8, 241.465, 7.6, -0.7, 2.1, -11.07, -4984.9605, 1613.6286, -383.520));
        while(true)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
           barrier();
          (subgroup_local_id ^ uvec2(97108u, 32902u));
          if(_GLF_DEAD(false))
           return;
          ;
          (uvec3(82994u, 75534u, 103982u).z - (+ uvec4(184068u, 148292u, 140842u, 99433u)));
          ivec4((ivec3(-43265, _GLF_IDENTITY(-45898, (-45898) >> 0), 86498) << -64248), -71653);
          ivec4(6090, 29682, 84870, -7735);
          _GLF_SWITCH_3_1v;
          bvec2(false, true);
         }
        vec2(-3466.0353, -6.8);
        bvec4 _GLF_SWITCH_3_49v, _GLF_SWITCH_3_50v, _GLF_SWITCH_3_51v;
        while(true)
         {
          bvec3(false, false, true);
          bvec3(true, false, true);
          uvec3(112450u, 107620u, 85082u);
          mat3(mat2(-4.6, -5760.1099, -530.650, -3132.2172))[2];
         }
        if(_GLF_DEAD(false))
         return;
        {
         bvec3(true, true, true);
         mat3x4(mat3x2(99.20, -2.3, 6.8, 9.1, 6.6, 9.6));
         _GLF_SWITCH_3_50v;
         mat2x3(mat2(553.304, -881.485, 93.43, -5222.5483));
         mat2x4 _GLF_SWITCH_3_52v;
         ;
         -6.5;
         if(_GLF_DEAD(false))
          break;
         ivec2 _GLF_SWITCH_3_53v[13], _GLF_SWITCH_3_54v;
         mat4(-5.0, -4491.3043, 85.38, 98.68, 0.5, 87.17, 5.2, -1.9, -621.698, 5.2, -7008.9732, -0.4, 25.59, 250.470, 7114.5036, 8400.0589);
        }
       }
      for(uvec3 _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v, _GLF_SWITCH_3_57v[79]; (-1818 == int(true)); log2(round(vec3(0.9, -1.2, 528.229))))
       {
        while(bool(396.821))
         {
          mat4x3(77.43, -9.2, -432.036, 2458.7176, 8086.1200, -76.81, -8.3, 6.0, 54.13, 969.827, 157.459, 63.56);
          int _GLF_SWITCH_3_58v[58], _GLF_SWITCH_3_59v, _GLF_SWITCH_3_60v;
          if(_GLF_DEAD(false))
           barrier();
          mat3(0.1, 3306.5149, 591.354, 0.0, 6.4, -3.7, 88.16, -5716.0053, 1.0);
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        bool(-31676);
        if(_GLF_DEAD(false))
         barrier();
        mat4(12.29, 579.994, 6.5, 4.3, 4.7, -890.938, -3177.8078, 57.17, 8.9, -7.0, -1.1, -6633.5421, -6109.7523, 0.1, -3660.9065, _GLF_IDENTITY(413.872, mix(float(413.872), float(_GLF_FUZZED(291.961)), bool(false))));
        for(        uvec2(107608u, 90113u);
 _GLF_IDENTITY((vec3(357.039, 2.1, -3559.7511) != tanh(vec3(-726.748, -399.288, 7272.7386))), false || ((vec3(357.039, 2.1, -3559.7511) != tanh(vec3(-726.748, -399.288, 7272.7386))))); mat3x4(491.597, -8.7, -9734.9418, -249.858, 5.9, -246.418, -991.082, 40.24, -145.358, 1.1, -5.2, 0.2))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          uvec2(199395u, 115660u);
          uvec3 _GLF_SWITCH_3_61v;
          if(_GLF_DEAD(false))
           return;
          bvec4(false, false, false, false);
          mat2 _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v[86];
          ;
          _GLF_SWITCH_3_61v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            barrier();
           }
          greaterThanEqual(vec3(-399.637, -9.4, -6535.3285), vec3(-6.9, 0.4, -9.5)).yzzx;
          (_GLF_SWITCH_3_62v + -6934.5589);
          ivec2(-39224, -52666);
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
        mat4x3(mat3x4(-0.6, -6071.3900, 637.232, -9557.2607, -21.21, 9.0, -696.267, 5.8, 8.3, -2027.8500, -323.736, -244.587));
       }
      for(      ((uvec3(139095u, 194574u, 178105u) | subgroup_id) | subgroup_size);
 false; true)
       {
        uvec2(15490u, 74838u);
        bvec3 _GLF_SWITCH_3_64v[52], _GLF_SWITCH_3_65v;
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
     }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 69:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     mat3x4 _GLF_SWITCH_0_0v;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     case 47:
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), (0 >> _GLF_IDENTITY(int(8), int(8))), 0, 1))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         switch(_GLF_SWITCH(0))
          {
           case 58:
           {
            mat3(90.29, 1629.3509, -3723.2170, 28.70, 555.387, 14.21, -84.16, 2.5, -1712.8024);
           }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 40:
           case 21:
           case 53:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           case 18:
           case 86:
           case 4:
           if(_GLF_DEAD(false))
            return;
           case 26:
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(4923.1066, 1.6)))).y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
           case 74:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x3(max(59.37, distance(-49.45, 49.68)), 59.94, exp2(-7181.8909), acosh(-48.79), length(5.5), -7013.1027, -6800.7900, -95.49, -8495.3054, -42.71, -9279.6720, 0.7);
           case 83:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             mat2((mat4x3(-31.70, 5557.9818, 5053.3080, 6488.6107, 916.474, 8011.8535, 8145.3051, 8522.0704, -7.9, 7695.4078, 54.63, -7.3) - 54.05));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           default:
           1;
          }
        }
      }
     ;
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 38:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 23:
     if(_GLF_DEAD(false))
      return;
     case 82:
     case 63:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     int i = 0;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 46:
     case 1:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))) + 0.0) < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     case 10:
     case 52:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     break;
     if(_GLF_DEAD(false))
      return;
     case 77:
     if(((ivec4(96078, 45262, -6966, 11491).w ^ 43959) < -41703))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       atan(vec2(-3382.6996, -33.25), (true ? injectionSwitch : injectionSwitch));
       do
        {
         if(_GLF_DEAD(false))
          break;
         if((mat2(6.5, -9866.4926, -55.38, -1.6) == ((mat2(9309.8485, -91.70, -21.20, _GLF_IDENTITY(-7.2, min(_GLF_IDENTITY(_GLF_IDENTITY(-7.2, max(-7.2, -7.2)), clamp(-7.2, -7.2, -7.2)), -7.2))) - -74.33))))
          {
           ivec4 _GLF_SWITCH_0_1v[85], _GLF_SWITCH_0_2v[19];
           {
            uvec4 _GLF_SWITCH_0_3v[20], _GLF_SWITCH_0_4v;
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
             {
             }
            else
             {
              do
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                switch(_GLF_SWITCH(0))
                 {
                  case 12:
                  if(_GLF_DEAD(false))
                   return;
                  mat2x3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[9], _GLF_SWITCH_1_2v;
                  if(_GLF_DEAD(false))
                   break;
                  case 0:
                  case 71:
                  case 2:
                  case 79:
                  case 76:
                  if(_GLF_DEAD(false))
                   return;
                  break;
                  case 19:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                   barrier();
                  do
                   {
                    mat4(206.395, _GLF_IDENTITY(-5.4, mix(float(_GLF_FUZZED(75.74)), float(-5.4), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 9.7, -7048.8942, -6.8, -8.4, 31.05, -4.9, 545.280, -3671.1048, 3961.9376, 668.214, 942.967, 3389.3310, 24.81, 8.9);
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   barrier();
                  case 52:
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                    mat3x4(9066.8613, 216.428, -5839.4593, -19.39, 30.59, 3333.4946, _GLF_IDENTITY(46.68, log(1.0) + (46.68)), -712.807, 9.4, 6992.2895, 1.2, 3267.7696);
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  default:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     continue;
                    barrier();
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                   continue;
                  if(_GLF_DEAD(false))
                   continue;
                  1;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)));
             }
            (ivec4(8341, -69227, 40279, -58611) / -86133);
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              barrier();
             }
            ;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      barrier();
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  return;
                 }
               }
             }
            mat3x4 _GLF_SWITCH_0_5v[41];
            if(_GLF_DEAD(false))
             continue;
            mat4x3(mat2(-9.6, 8906.8491, -1755.7451, 10.55));
            if(_GLF_DEAD(false))
             continue;
            uvec2(uvec3(45280u, 172947u, _GLF_IDENTITY(46620u, uint(_GLF_IDENTITY(uint(46620u), min(uint(46620u), uint(46620u)))))));
            ((3.3 - -72.45) - mat3x2(21.25, -189.379, -9.9, -6.2, 72.08, 0.7));
            bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))));
            bvec2 _GLF_SWITCH_0_6v[41], _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
           }
           if(all(bvec4(true, false, _GLF_IDENTITY(true, false || (true)), true)))
            {
             mat4x3(8.0, -5.0, -0.7, -316.460, 6246.2427, -685.961, 6.0, 64.01, -838.977, 82.31, -772.291, 3.5);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(int(1)), min(int(int(1)), int(int(1)))))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), int(ivec3(1, 1, 1)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
              }
             mat2x4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               switch(_GLF_SWITCH(0))
                {
                 case 56:
                 mat2 _GLF_SWITCH_1_0v[92], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[32];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 case 96:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  return;
                 vec2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   continue;
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 79:
                 case 50:
                 if(_GLF_DEAD(false))
                  continue;
                 case 89:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 24:
                 case 80:
                 case 74:
                 case 45:
                 case 29:
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat4x2(-202.393, 6670.1796, -9248.3766, 36.64, _GLF_IDENTITY(-2.8, mix(float(-2.8), float(_GLF_FUZZED(-6.2)), bool(false))), 2.8, -0.9, _GLF_IDENTITY(856.428, max(856.428, 856.428)));
                  }
                 else
                  {
                  }
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0))).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if((ivec3(98114, -9554, -25494) != _GLF_IDENTITY(ivec3(-74415, 89775, 19900), min(ivec3(-74415, 89775, 19900), ivec3(-74415, 89775, 19900)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                }
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
             asinh(-22.60);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             vec4(-885.904, -3.1, -980.148, 0.3);
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              return;
             int _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v[91], _GLF_SWITCH_0_13v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             uvec2 _GLF_SWITCH_0_14v[80], _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[16];
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 break;
                 case 61:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   ivec4(86269, -5792, -553, 18012);
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 if(_GLF_DEAD(false))
                  return;
                 1;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             num_workgroup;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             do
              {
               min(uvec3(151922u, 139698u, 137833u), (uvec3(5439u, 174777u, 190382u) ^ 47689u));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             bool _GLF_SWITCH_0_17v;
             mat2x3(_GLF_IDENTITY(-5.6, float(vec2(-5.6, 0.0))), -332.267, 7.4, 3.7, -92.37, 0.2);
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             ;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false)
            {
             switch(_GLF_SWITCH(0))
              {
               case 22:
               ;
               case 0:
               case 50:
               40881;
               if(_GLF_DEAD(false))
                return;
               i;
               (7.1 , uvec4(161313u, 2541u, 614u, 88870u));
               bvec3(true, true, false);
               case 14:
               ivec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
                barrier();
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                return;
               case 42:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               -92987;
               break;
               if(_GLF_DEAD(false))
                break;
               case 40:
               ivec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[73];
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           mat2x3(vec3(-4.8, 1368.6967, 7.5), vec3(6700.4102, 64.61, -6.6));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           ivec4(24588, -96623, 16812, 11798).wwyw;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             (mat3(-40.97, 8.6, 5.7, -9.2, 11.75, -873.825, 5.2, -35.91, 2737.7975) * mat3(6329.8746, 6023.0946, 669.865, 711.021, -671.357, -8.2, -850.220, 6446.2244, -0.4));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             int _GLF_SWITCH_0_20v;
             uint _GLF_SWITCH_0_21v[70], _GLF_SWITCH_0_22v[5];
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))) && true))
              continue;
             (inversesqrt(_GLF_IDENTITY(5.4, (5.4) / sqrt(1.0))) , min(uvec2(69947u, 180750u), subgroup_size));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             mat2 _GLF_SWITCH_0_23v[19], _GLF_SWITCH_0_24v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
              barrier();
             (302.676 / mat2x3(-998.856, -71.16, _GLF_IDENTITY(-9.3, (-9.3) / 1.0), 52.96, 1.3, 991.524));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(true);
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 9:
                 mat2x4(-8.2, 4029.8983, -61.60, 2.1, 42.33, -32.17, 7.7, -4.1);
                 if(_GLF_DEAD(false))
                  return;
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 98:
                 case 39:
                 case 17:
                 case 12:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                    return;
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   barrier();
                  }
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 case 42:
                 mat2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[34];
                 default:
                 1;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
           for(uvec2 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v; lessThanEqual(vec2(5.4, -4.4), vec2(-17.52, -99.90))[1]; false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             bvec2(false, false);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             vec3(7.2, 2.8, 60.87)[0];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
                return;
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             mat3x4 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), ~ (~ ((0 >> _GLF_IDENTITY(int(2), int(2))))))); _injected_loop_counter --)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   case 4:
                   if(_GLF_DEAD(false))
                    break;
                   case 51:
                   case 56:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   (~ ivec4(-30152, -49418, -57604, -45893));
                   case 9:
                   case 36:
                   case 7:
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 35:
                       mat2x4(-7962.2446, 418.351, -0.0, -950.215, _GLF_IDENTITY(9.7, (9.7) * 1.0), 1.3, -8134.9991, -59.65);
                       case 44:
                       ;
                       case 0:
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     break;
                    }
                   break;
                   case 18:
                   float _GLF_SWITCH_2_0v[53], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                   case 70:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    break;
                   vec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
                   default:
                   1;
                  }
                }
              }
            }
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             return;
            bool _GLF_SWITCH_0_30v[91], _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) != (1 ^ 1)); _injected_loop_counter --)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
            if(_GLF_DEAD(false))
             continue;
            bvec2 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
            if(_GLF_DEAD(false))
             barrier();
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
             }
            ;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               return;
             }
            else
             {
              mat4(-702.111, 462.836, 3.9, 5.4, 7.4, -1436.8731, 279.310, 270.439, _GLF_IDENTITY(972.228, clamp(_GLF_IDENTITY(_GLF_IDENTITY(972.228, 1.0 * (972.228)), (true ? _GLF_IDENTITY(972.228, 1.0 * (972.228)) : _GLF_FUZZED(-28.88))), 972.228, 972.228)), 3090.1945, -343.652, _GLF_IDENTITY(3.0, max(3.0, 3.0)), 2.8, 988.736, -82.80, -318.721);
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            mat2(922.093, 254.167, 2.0, _GLF_IDENTITY(-1.8, (-1.8) - 0.0));
            mat4 _GLF_SWITCH_0_35v[39];
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.18)), bool(false)))))))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
                 break;
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               break;
             }
            do
             {
              if(_GLF_DEAD(false))
               return;
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             return;
            mat4x3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            uvec2 _GLF_SWITCH_0_38v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            greaterThanEqual(_GLF_SWITCH_0_0v[1].ywx, vec3(-6.1, 438.614, 0.0));
           }
           (- (980.075 - (mat4(_GLF_IDENTITY(-7137.9647, mix(float(_GLF_FUZZED(5.9)), float(-7137.9647), bool(true))), 305.404, -437.652, 70.15, 3090.4225, 72.52, 5.9, -121.534, 6352.9452, 6.5, 2.5, _GLF_IDENTITY(-6.2, float(mat2x3(-6.2, sqrt(0.0), 1.0, sqrt(0.0), 0.0, 1.0))), -2024.5842, -1639.8956, -38.15, 7.3) - 2.2)));
           int _GLF_SWITCH_0_39v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       ;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       {
        ivec2(-74771, -92546);
        for(mat2x4 _GLF_SWITCH_0_40v[29], _GLF_SWITCH_0_41v[66], _GLF_SWITCH_0_42v; false; subgroup_id)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          vec3 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           break;
          for(int _injected_loop_counter = ((1 | 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            lessThanEqual(uvec3(79145u, 106527u, _GLF_IDENTITY(189842u, (189842u) | (189842u))), uvec3(163570u, 180218u, 68116u));
           }
         }
        {
         vec4 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v[90];
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true))))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4x2 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           (((mat2(-8.7, 963.356, -629.301, -0.2) * mat2(-31.64, 2.4, 8.1, -6.8)) * vec2(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, _GLF_IDENTITY(-8.3, float(mat4(-8.3, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), -6788.9693)) , read_2);
          }
         bool _GLF_SWITCH_0_51v[85], _GLF_SWITCH_0_52v[39], _GLF_SWITCH_0_53v;
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                return;
               case 58:
               case 85:
               case 12:
               case 70:
               case 83:
               if(_GLF_DEAD(false))
                continue;
               case 97:
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90052))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 41:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     mat3x2 _GLF_SWITCH_2_0v[23], _GLF_SWITCH_2_1v[77];
                     case 0:
                     case 30:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      return;
                     case 88:
                     case 89:
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec2(1, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      return;
                     break;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               case 6:
               case 45:
               barrier();
               break;
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           (vec3(-12.53, -1.1, -1.0) - ((subgroup_id % next_virtual_gid) , (mat4x3(0.2, 7874.7154, -700.879, 7.5, 58.00, _GLF_IDENTITY(-7.2, (true ? -7.2 : _GLF_FUZZED(2.0))), -1.9, -5.2, 4.7, -394.935, -1409.8532, 4.5) * _GLF_SWITCH_0_46v)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         bvec2 _GLF_SWITCH_0_54v[51], _GLF_SWITCH_0_55v;
         if(_GLF_DEAD(false))
          return;
         ;
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          return;
         }
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-46090) : int(0))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         while((28.16 < 45.45))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 45:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4 _GLF_SWITCH_1_0v;
             case 0:
             case 23:
             if(_GLF_DEAD(false))
              break;
             case 34:
             case 67:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 39:
             switch(_GLF_SWITCH(0))
              {
               case 10:
               if(_GLF_DEAD(false))
                break;
               mat3x2(456.049, 6.6, -1.2, 631.850, 9.7, 39.33);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 91:
               (mat2(-0.8, 5952.1975, 201.571, 19.00) != mat2(mat4x3(2237.3249, -44.32, -4.2, -995.248, -0.9, _GLF_IDENTITY(596.481, (false ? _GLF_FUZZED(-2262.4049) : _GLF_IDENTITY(596.481, mix(float(_GLF_FUZZED(-0.9)), float(596.481), bool(true))))), -8874.4351, -0.8, 8.4, -8065.8345, -9.4, 7.0)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               case 87:
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(36935) : int(1)))))))
                 {
                  case 18:
                  intBitsToFloat(ivec2(27126, 20369));
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                  case 21:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    break;
                   }
                  if(_GLF_DEAD(false))
                   return;
                  min(ivec3(56705, -83468, -61857), findLSB(uvec3(163157u, 92077u, 145783u)));
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    continue;
                   }
                  case 0:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                  for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 66:
                      case 56:
                      case 88:
                      case 68:
                      case 19:
                      case 81:
                      case 86:
                      case 43:
                      (-47877 / ivec2(-89714, -31135));
                      break;
                      case 87:
                      if(_GLF_DEAD(false))
                       continue;
                      uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                      default:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      1;
                     }
                    if(_GLF_DEAD(false))
                     return;
                   }
                  vec4(-8546.4209, 9120.3241, 1.8, 2.2);
                  if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                   barrier();
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    continue;
                   }
                  vec3 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[97];
                  case 80:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  mat4x3 _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v[44], _GLF_SWITCH_0_60v[62];
                  mat4x2 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                  case 46:
                  do
                   {
                    _GLF_SWITCH_0_62v;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                         break;
                       }
                     }
                    continue;
                   }
                  break;
                  case 72:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  int _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[9];
                  if(_GLF_DEAD(false))
                   continue;
                  case 76:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  mat3(977.669, 110.058, -1.1, 991.357, 3.6, 42.39, -8.8, 8.7, 522.759);
                  default:
                  1;
                 }
               }
               case 64:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               {
                if(_GLF_DEAD(false))
                 return;
                (uvec2(189248u, 175643u) | uvec2(140023u, _GLF_IDENTITY(182985u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(workgroup_id) : 182985u))));
                ;
                if(_GLF_DEAD(false))
                 continue;
                uvec3 _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v[96], _GLF_SWITCH_0_65v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               break;
               default:
               1;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             break;
             if(_GLF_DEAD(false))
              barrier();
             case 40:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             vec2 _GLF_SWITCH_1_1v[57], _GLF_SWITCH_1_2v;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 32:
                 ;
                 case 82:
                 (ivec2(11300, -41636) & ivec2(-57114, 14807));
                 case 0:
                 case 73:
                 case 12:
                 case 56:
                 case 98:
                 case 20:
                 case 47:
                 case 60:
                 case 11:
                 case 70:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 1;
                }
              }
             case 95:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               uvec3(75336u, 46782u, 121602u);
              }
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             1;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(false)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               while(all(bvec3(true, true, false)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                 bvec2(false, true);
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x4 _GLF_SWITCH_0_66v;
                 (ivec2(81554, -83078) * ivec2(30063, -16154));
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             if(_GLF_DEAD(false))
              return;
             for(ivec3 _GLF_SWITCH_0_67v[15], _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v; (i == 98103); atan(vec2(7.6, 411.749), mix(injectionSwitch, injectionSwitch, vec2(6.8, -86.29))))
              {
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               mat4(mat2x3(33.08, -0.7, 4.0, -539.813, 2.6, -6.3));
              }
             {
              if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  continue;
                 }
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                continue;
               }
              mat2 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v[92];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               return;
              mat4x2 _GLF_SWITCH_0_73v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  return;
                 }
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               break;
              bvec4 _GLF_SWITCH_0_74v, _GLF_SWITCH_0_75v[39], _GLF_SWITCH_0_76v[2];
              ivec4 _GLF_SWITCH_0_77v;
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                ;
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                mat3(mat3x2(1.1, -359.308, -522.339, 18.68, 482.543, 7.6));
               }
              mat2x3 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v[26];
              bvec3 _GLF_SWITCH_0_80v;
             }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               (mat2x4(-9.0, -8.7, -1787.9598, -203.442, -497.779, -4.2, 44.24, 72.26) != mat2x4(-987.936, 0.5, -6.0, -8517.8529, 2.3, 8.1, 7.1, 2537.5998));
              }
             else
              {
              }
             mat4(-9.1, 5.3, -5.1, 71.68, -696.213, 36.06, -0.3, -65.74, _GLF_IDENTITY(4126.9284, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0)), (mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0)), (mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0)), (mat4x3(4126.9284, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, exp(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), -4076.4241, 9.5, 1.0, _GLF_IDENTITY(183.917, clamp(183.917, 183.917, 183.917)), 756.948, 5.6, 4355.9168);
             if(_GLF_DEAD(false))
              continue;
             while(_GLF_IDENTITY(false, ! (! (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               uvec3(173113u, 33193u, 144302u);
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 continue;
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat3x2(mat3(7.9, _GLF_IDENTITY(410.325, mix(float(410.325), float(_GLF_FUZZED(-4950.9544)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -8.6, _GLF_IDENTITY(-208.060, (_GLF_IDENTITY(-208.060, clamp(-208.060, -208.060, -208.060))) * 1.0), 6412.4831, -4.6, _GLF_IDENTITY(583.018, (583.018) / 1.0), 85.56, -251.857));
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 18:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
              }
             else
              {
               bvec2(false, false);
              }
             if(_GLF_DEAD(false))
              continue;
            }
           break;
           case 91:
           bvec4(true, true, true, true);
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         return;
        }
       while((bvec3(true, true, false) == bvec3(true, true, true)))
        {
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           continue;
          bitfieldExtract(bitfieldReverse(uvec2(194816u, 100161u)), 59533, _GLF_IDENTITY(findLSB(read_2), (true ? findLSB(read_2) : _GLF_FUZZED(88817))));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          mat3 _GLF_SWITCH_0_81v[11], _GLF_SWITCH_0_82v, _GLF_SWITCH_0_83v[1];
          ivec3(_GLF_IDENTITY(-50373, max(-50373, _GLF_IDENTITY(-50373, clamp(-50373, -50373, -50373)))), -62706, -27568);
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                barrier();
               }
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             continue;
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             barrier();
           }
          mat2(vec2(-8786.3992, -91.75), injectionSwitch);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
           break;
          uint _GLF_SWITCH_0_84v, _GLF_SWITCH_0_85v[80];
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
             barrier();
            continue;
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             continue;
            for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              true;
              if(_GLF_DEAD(false))
               break;
             }
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          uvec4 _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             break;
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              barrier();
             }
           }
         }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       {
       }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
