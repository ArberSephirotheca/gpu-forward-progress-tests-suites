#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, true && (false))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(1849.0288)) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(408.862)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1))]), bvec2(false, true))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(false, true))))[0], 0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-770.760), (_GLF_FUZZED(-770.760)) + 0.0)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[0])), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-770.760), max(_GLF_FUZZED(-770.760), _GLF_FUZZED(-770.760)))), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-7.8)), bvec2(false, false))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4x3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))[1], (injectionSwitch)[1]))), bvec2(false, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-7.8)), bvec2(false, false))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4995.7709)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)), (true ? mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9))))), mix(vec2(_GLF_FUZZED(5301.2956), _GLF_FUZZED(3001.5726)), vec2((vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9))))))[0], (vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9))))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9))))), (vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-5.0, -2.3, 6578.8893, 8.3, 4464.9122, 5891.6978, -7.1, 5.9)))))) + vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, exp(0.0)), transpose(transpose(mat3x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))) + vec2(0.0, 0.0)))))), 0.0, 1.0, 1.0, exp(0.0)))))), (vec2(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(96470) : 0))], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), _GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0)))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))]), bvec2(false, true)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1962.2568))), 1.0, 1.0, exp(0.0)), transpose(transpose(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, exp(0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.9, (false ? _GLF_FUZZED(-6.8) : -1.9))), _GLF_FUZZED(-7.8)), bvec2(false, false))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)) : _GLF_FUZZED(mat4x3(56.07, -8.5, -32.97, -1544.4215, -4.0, 2.8, -8.1, -526.874, -82.99, 3267.2534, _GLF_IDENTITY(-7234.6148, (_GLF_IDENTITY(-7234.6148, max(-7234.6148, -7234.6148))) * 1.0), 704.935))))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), clamp(_GLF_FUZZED(8966.3301), _GLF_FUZZED(8966.3301), _GLF_FUZZED(8966.3301)))), bool(true))), 1.0 * (_GLF_FUZZED(8966.3301))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), 1.0 * (_GLF_FUZZED(8966.3301))), (injectionSwitch)[1])) * mat2(1.0), min((vec2(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), 1.0 * (_GLF_FUZZED(8966.3301))), (injectionSwitch)[1])) * mat2(1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), 1.0 * (_GLF_FUZZED(8966.3301))), (injectionSwitch)[1])) * mat2(1.0), ((vec2(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), 1.0 * (_GLF_FUZZED(8966.3301))), (injectionSwitch)[1])) * mat2(1.0)) * mat2(1.0))))), bvec2(false, true))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[0], 0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), mix(vec2(_GLF_FUZZED(-56.34), (vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)))[1]), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)))[0], _GLF_FUZZED(979.542)), bvec2(true, false))))), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[0])), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-7.8)), bvec2(false, false))), sqrt(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(7489.0789)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], mix(float((vec3(injectionSwitch.x, 1.0, 0.0))[1]), float(_GLF_FUZZED(78.63)), bool(false))), 1.0 * ((vec3(injectionSwitch.x, 1.0, 0.0))[1])), _GLF_FUZZED(-46.16)), vec3(_GLF_FUZZED(-175.074), _GLF_FUZZED(-9.6), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], _GLF_IDENTITY((false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2]))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2]))), clamp((false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2]))), (false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2]))), _GLF_IDENTITY((false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2]))), mix(float((false ? _GLF_FUZZED(335.889) : _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[2], sqrt(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0))[2])))), float(_GLF_FUZZED(973.391)), bool(false))))) : _GLF_FUZZED(exp2(-5706.2861)))))), bvec3(true, true, true)))), mix(float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), mix(vec3(((vec3(injectionSwitch.x, 1.0, 0.0)))[0], _GLF_IDENTITY(((vec3(injectionSwitch.x, 1.0, 0.0)))[1], mix(float(((vec3(injectionSwitch.x, 1.0, 0.0)))[1]), float(_GLF_FUZZED(-1.7)), bool(false))), ((vec3(injectionSwitch.x, 1.0, 0.0)))[2]), vec3(_GLF_FUZZED(4.0), _GLF_FUZZED(5.9), _GLF_FUZZED(-1.4)), bvec3(false, false, false)))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true))))), float(_GLF_FUZZED(7.0)), bool(false)))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true)))), mix(float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0)), 0.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)) * (1.0)), 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 1.0, 0.0)), ((vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 1.0, 0.0))) * mat3(1.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true))))), float(_GLF_FUZZED(7.0)), bool(false)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3(_GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))) * vec3(1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * vec3(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * vec3(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec3(_GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), _GLF_IDENTITY(((vec3(injectionSwitch.x, 1.0, 0.0))) * mat3(1.0), min(((vec3(injectionSwitch.x, 1.0, 0.0))) * mat3(1.0), ((vec3(injectionSwitch.x, 1.0, 0.0))) * mat3(1.0))))[0], 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), _GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))), mix(float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true)), (mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min(_GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), min(_GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), max((vec3(injectionSwitch.x, 1.0, 0.0)), (vec3(injectionSwitch.x, 1.0, 0.0)))), (vec3(injectionSwitch.x, 1.0, 0.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true))) * vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(7.0)), bool(false)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_FUZZED(-55.03)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(98.60)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(-5987)) : 1.0))), bool(true))), 0.0))[2]), bvec3(true, true, true)))), mix(float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-6849.8963), _GLF_FUZZED(3.7), _GLF_IDENTITY(_GLF_FUZZED(-55.03), (_GLF_FUZZED(-55.03)) * 1.0)), vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0))[1], min((vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[1])), (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(true, true, true))))), float(_GLF_FUZZED(7.0)), bool(false)))) > injectionSwitch.y)) || false)) && true))))))))))), 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)), mat4x3(mat4x3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-770.760, max(-770.760, -770.760)))), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(_GLF_IDENTITY(8966.3301, (true ? 8966.3301 : _GLF_FUZZED(6219.8881)))), (injectionSwitch)[1]), bvec2(false, true))))[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-7.8)), bvec2(false, false))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)), (true ? mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-770.760), mix(float(_GLF_FUZZED(-770.760)), float(_GLF_IDENTITY(_GLF_FUZZED(-3718.9416), (true ? _GLF_FUZZED(-3718.9416) : _GLF_FUZZED(-1.4)))), bool(false)))), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), clamp(_GLF_IDENTITY(_GLF_FUZZED(8966.3301), (false ? _GLF_FUZZED(7899.5274) : _GLF_FUZZED(8966.3301))), _GLF_FUZZED(8966.3301), _GLF_FUZZED(8966.3301))), (injectionSwitch)[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, exp(0.0)), transpose(transpose(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, exp(0.0)))))), (vec2(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))))), 0.0, 1.0, 1.0, exp(0.0)), transpose(transpose(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-770.760, (-770.760) / 1.0))), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4814.6372)), bool(false))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-770.760)), vec2(_GLF_FUZZED(8966.3301), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-1.9), _GLF_IDENTITY(_GLF_FUZZED(-7.8), mix(float(_GLF_FUZZED((7.2 + -2936.6528))), float(_GLF_FUZZED(-7.8)), bool(true)))), bvec2(false, false))), sqrt(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) - 0.0)), 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, abs(0.0)) : _GLF_FUZZED(mat4x3(56.07, _GLF_IDENTITY(-8.5, min(_GLF_IDENTITY(-8.5, max(-8.5, -8.5)), -8.5)), -32.97, -1544.4215, -4.0, 2.8, -8.1, -526.874, -82.99, 3267.2534, -7234.6148, 704.935))))))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(19.78)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), bool(true))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))) + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(sign(vec2(31.11, 49.64))))), injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY((bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false, bool(bvec2((bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY((bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false, bool(bvec2((bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false, true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1) + 0u), read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 1u)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(51970u))) + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + _GLF_IDENTITY(1, (1) << 0) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, 4)), 1), ~ (~ (ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(1, min(1, 1))))))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0), 4)), 1), ~ (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)), 4)), 1), (ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)), 4)), 1)) - ivec2(0, 0)))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, 4)), 1), _GLF_IDENTITY(~ (~ (ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(6), int(6)))), 4)), 1))), (~ (~ (ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, _GLF_IDENTITY(4, (4) ^ 0)), max(4, 4)))), 1)))) | ivec2(0, 0))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(max(num_workgroup, subgroup_local_id))))) + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0)))) << 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true)))), true, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
