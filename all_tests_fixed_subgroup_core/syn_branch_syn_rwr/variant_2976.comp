#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(598.216, -15.25)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - _GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) >> 0u), (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 0u))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) / 1u), clamp(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size))), (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) / 1u), _GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), min(subgroup_size, subgroup_size)))) / 1u)))) | (50641u & 0u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), clamp(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), min(_GLF_IDENTITY(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) / uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) << 0u))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), clamp(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), min(_GLF_IDENTITY(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) / uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) << 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), clamp(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), min(_GLF_IDENTITY(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) / uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) << 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), clamp(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), min(_GLF_IDENTITY(uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(~ (subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) / uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) << 0u)))))))), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)) / 1u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), uint(uvec3(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (true ? ~ (subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_size))), 0u, 1u))), (~ (subgroup_id * subgroup_size)) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), uint(uvec3(~ (subgroup_id * subgroup_size), 0u, 1u))), (~ (subgroup_id * subgroup_size)) / 1u))) / 1u) : _GLF_FUZZED(uint(-41021)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (~ (subgroup_id * subgroup_size)) / 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), ((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), clamp((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)) | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_id * subgroup_size)))))) / 1u))))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / _GLF_IDENTITY(1u, (1u) ^ 0u), ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)))) << 0u)) / 1u) / 1u), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) ^ (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, ((~ (subgroup_id * subgroup_size)) / 1u) / 1u))), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size)))) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) : _GLF_FUZZED(82266u))), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u))) << 0u))))))), (1u ^ 1u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (~ (subgroup_id * subgroup_size)) / 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), ((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), clamp((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)) | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_id * subgroup_size)))))) / 1u))))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / _GLF_IDENTITY(1u, (1u) ^ 0u), ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)))) << 0u)) / 1u) / 1u), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) ^ (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, ((~ (subgroup_id * subgroup_size)) / 1u) / 1u))), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size)))) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) : _GLF_FUZZED(82266u))), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u))) << 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (~ (subgroup_id * subgroup_size)) / 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), ((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), clamp((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)) | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size)))) / 1u)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_id * subgroup_size)))))) / 1u))))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / _GLF_IDENTITY(1u, (1u) ^ 0u), ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)))) << 0u)) / 1u) / 1u), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) ^ (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, ((~ (subgroup_id * subgroup_size)) / 1u) / 1u))), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size)))) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) : _GLF_FUZZED(82266u))), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) / 1u, clamp((~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u, (~ (subgroup_id * subgroup_size)) / 1u))) << 0u)))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + _GLF_IDENTITY(1, int(int(1))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 94:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     {
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       equal(uvec2(54661u, 85934u), uvec2(138877u, 43225u));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       vec2 _GLF_SWITCH_0_0v[38], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(       mat2x3(693.814, 190.613, -224.348, 1.3, _GLF_IDENTITY(-696.542, (_GLF_IDENTITY(-696.542, mix(_GLF_IDENTITY(float(-696.542), mix(float(_GLF_FUZZED(3.9)), float(float(-696.542)), bool(true))), float(_GLF_FUZZED(-8.7)), bool(false)))) - 0.0), -53.60);
 (false || ((mat3x2(7519.8197, -9684.5696, 555.895, _GLF_IDENTITY(24.55, clamp(24.55, 24.55, 24.55)), -5.2, 86.06) * mat4x3(29.40, _GLF_IDENTITY(5.0, max(5.0, 5.0)), -3201.4589, 8.3, -0.4, 3.4, _GLF_IDENTITY(-8446.3915, mix(float(_GLF_FUZZED(0.0)), float(-8446.3915), bool(true))), -6525.6563, -774.362, -92.81, -2964.0255, 9197.1769)) != mat4x2(_GLF_IDENTITY(-5.9, (-5.9) + 0.0), _GLF_IDENTITY(9.5, min(9.5, 9.5)), -4379.5604, _GLF_IDENTITY(523.891, (523.891) / 1.0), -73.05, -2.1, 8388.7489, -567.654))); mat2x4(1.5, 7.3, -180.140, -91.00, 961.700, -8.3, -83.69, -4.4))
        {
         vec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         ivec3 _GLF_SWITCH_0_5v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, false)), (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         44145;
         (7652.0117 + mat4x2(mat3x2(-13.54, 2.9, 63.24, 430.181, -7983.1187, 5.7)));
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         matrixCompMult(mat3x2(-750.191, 16.55, -7279.8707, -5252.6217, 6298.8659, 167.575), mat3x2(mat4(0.4, -953.054, 855.242, -9.9, -980.096, 366.673, -6.5, -24.69, _GLF_IDENTITY(-3518.5631, (false ? _GLF_FUZZED(-1.1) : -3518.5631)), 79.29, 6836.3725, 8.4, -1.4, -4342.9834, 7.7, -1.3)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         vec4 _GLF_SWITCH_0_6v[38], _GLF_SWITCH_0_7v[11];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_SWITCH_0_1v) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_SWITCH_0_1v) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_SWITCH_0_1v) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false)))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         ivec3 _GLF_SWITCH_0_8v;
         bvec3 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         mat2x3(_GLF_IDENTITY(8345.1960, (8345.1960) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(-9615.7385, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-9615.7385, max(-9615.7385, -9615.7385)), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, length(tan(vec2(0.0, 0.0))), 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(-9615.7385, max(-9615.7385, -9615.7385)), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, length(tan(vec2(0.0, 0.0))), 1.0, 0.0, 0.0)))))), 41.73, 0.1, 7.7, -4659.0217);
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        ivec2 _GLF_SWITCH_0_12v[73], _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[77];
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), clamp(float(_GLF_FUZZED(-0.7)), float(_GLF_FUZZED(-0.7)), float(_GLF_FUZZED(-0.7)))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        uvec4((subgroup_id & workgroup_base));
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        lessThan(uvec3(56072u, 144363u, 191753u), (uvec3(53721u, 113887u, 69818u) - uvec3(132839u, 78923u, 74718u)));
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        vec3 _GLF_SWITCH_0_15v;
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
       }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       mat4(7262.4639, 5.9, 112.348, 198.038, -3.9, -8938.1706, -2646.1789, -572.816, 9.6, _GLF_IDENTITY(3.8, (3.8) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), -989.025, 4017.1458, -0.5, -8933.5448, 4.9, -0.0);
       ivec3(-71910, -89405, -49261);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       mat2x4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[82];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       ;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sqrt(0.0), 0.0)))[0], _GLF_FUZZED(4800.2113)), vec2(_GLF_FUZZED(-4.8), (vec2(vec4(injectionSwitch, sqrt(0.0), 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(float _GLF_SWITCH_0_19v; true; mat2(2.9, 6466.9843, 65.65, 483.015))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_1v) : injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(975.230, mix(float(_GLF_FUZZED(3.0)), float(975.230), bool(true))))), bool(false)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         outerProduct(step((+ vec4(3930.4921, 7.5, 45.33, 6872.5186)), _GLF_IDENTITY(vec4(-57.22, -69.79, -80.49, -5.2), _GLF_IDENTITY(max(vec4(-57.22, _GLF_IDENTITY(-69.79, clamp(-69.79, -69.79, -69.79)), -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, (_GLF_IDENTITY(_GLF_IDENTITY(true ? -80.49 : _GLF_FUZZED(_GLF_SWITCH_0_19v), mix(float(_GLF_FUZZED(85.00)), float(true ? -80.49 : _GLF_FUZZED(_GLF_SWITCH_0_19v)), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-983.168) : _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? -80.49 : _GLF_FUZZED(_GLF_SWITCH_0_19v), mix(float(_GLF_FUZZED(85.00)), float(true ? -80.49 : _GLF_FUZZED(_GLF_SWITCH_0_19v)), bool(true))))))), _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)))), _GLF_IDENTITY(mix(vec4(_GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), clamp(_GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), mix(vec4(_GLF_IDENTITY(((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[0], clamp(((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[0], ((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[0], ((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[0])), _GLF_FUZZED(-54.54), ((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[2], ((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[3]), vec4(_GLF_FUZZED(3.8), ((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))))[1], _GLF_FUZZED(775.100), _GLF_FUZZED((mat4x3(3.3, 0.4, -90.27, 878.375, -952.916, -7.8, 4.7, -92.47, -8.5, 3.2, 1.7, 41.45) * vec4(-889.998, -4481.9522, 62.66, -12.20)).z)), bvec4(false, true, false, false))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, _GLF_IDENTITY(mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true)), max(mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), -5.2))), clamp((_GLF_IDENTITY(max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)), mix(vec4((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))[0], (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))[1], _GLF_FUZZED(-1.8), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))[3]), vec4(_GLF_FUZZED(88.62), _GLF_FUZZED((9.4 * -3.9)), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))[2], _GLF_FUZZED(-3.8)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), (max(_GLF_IDENTITY(vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2), mix(vec4(_GLF_FUZZED(-0.2), (vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[1], (vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[2], _GLF_FUZZED(9.7)), vec4((vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[0], _GLF_FUZZED(-7.3), _GLF_FUZZED(180.028), _GLF_IDENTITY((vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[3], clamp((vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[3], (vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[3], (vec4(-57.22, _GLF_IDENTITY(-69.79, (-69.79) - 0.0), -80.49, -5.2))[3]))), bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_IDENTITY(_GLF_FUZZED(919.383), min(_GLF_FUZZED(919.383), _GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), _GLF_IDENTITY(bool(true), (bool(true)) && true))), -5.2)))))))[0], _GLF_FUZZED(-0.5), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[2], (max(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-57.22, float(_GLF_IDENTITY(float(-57.22), mix(float(float(-57.22)), float(_GLF_FUZZED(0.9)), bool(false))))), max(_GLF_IDENTITY(-57.22, min(_GLF_IDENTITY(-57.22, _GLF_IDENTITY((-57.22) - 0.0, clamp((-57.22) - 0.0, (-57.22) - 0.0, (-57.22) - 0.0))), -57.22)), -57.22)), -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(_GLF_SWITCH_0_19v) : -5.2)))))[3]), vec4(_GLF_FUZZED(-2.9), (max(vec4(_GLF_IDENTITY(-57.22, (-57.22) + 0.0), -69.79, -80.49, -5.2), vec4(-57.22, _GLF_IDENTITY(-69.79, (_GLF_IDENTITY(-69.79, (-69.79) / 1.0)) * 1.0), _GLF_IDENTITY(-80.49, (-80.49) - 0.0), -5.2)))[1], _GLF_FUZZED((false ? 0.8 : -1.1)), _GLF_FUZZED(5.9)), bvec4(false, true, false, false)), min(mix(vec4(_GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))), bool(true))), -5.2))), (max(_GLF_IDENTITY(vec4(-57.22, -69.79, -80.49, -5.2), mix(vec4(_GLF_FUZZED(0.5), _GLF_FUZZED(715.948), (vec4(-57.22, -69.79, -80.49, -5.2))[2], (vec4(-57.22, -69.79, -80.49, -5.2))[3]), vec4((vec4(-57.22, -69.79, -80.49, -5.2))[0], (vec4(-57.22, -69.79, -80.49, -5.2))[1], _GLF_FUZZED(-8.6), _GLF_FUZZED((+ -84.94))), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))))))[0], _GLF_FUZZED(-0.5), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[2], (max(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-57.22, float(_GLF_IDENTITY(float(-57.22), mix(float(float(-57.22)), float(_GLF_FUZZED(0.9)), bool(false))))), max(_GLF_IDENTITY(-57.22, min(_GLF_IDENTITY(_GLF_IDENTITY(-57.22, max(-57.22, -57.22)), _GLF_IDENTITY((-57.22) - 0.0, clamp((-57.22) - 0.0, (-57.22) - 0.0, (-57.22) - 0.0))), -57.22)), -57.22)), -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[3]), vec4(_GLF_FUZZED(-2.9), (max(vec4(_GLF_IDENTITY(-57.22, (-57.22) + 0.0), -69.79, -80.49, -5.2), vec4(-57.22, _GLF_IDENTITY(-69.79, (_GLF_IDENTITY(-69.79, _GLF_IDENTITY((-69.79), min((-69.79), (-69.79))) / 1.0)) * 1.0), -80.49, -5.2)))[1], _GLF_FUZZED((false ? 0.8 : -1.1)), _GLF_FUZZED(5.9)), bvec4(false, true, false, false)), _GLF_IDENTITY(mix(vec4(_GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))))))[0], _GLF_FUZZED(-0.5), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[2], (max(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-57.22, float(_GLF_IDENTITY(float(-57.22), mix(float(float(-57.22)), float(_GLF_FUZZED(0.9)), bool(false))))), max(_GLF_IDENTITY(-57.22, min(_GLF_IDENTITY(-57.22, _GLF_IDENTITY((-57.22) - 0.0, clamp((-57.22) - 0.0, (-57.22) - 0.0, (-57.22) - 0.0))), -57.22)), -57.22)), -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[3]), vec4(_GLF_FUZZED(-2.9), (max(vec4(_GLF_IDENTITY(-57.22, (-57.22) + 0.0), -69.79, -80.49, -5.2), vec4(-57.22, _GLF_IDENTITY(-69.79, (_GLF_IDENTITY(-69.79, (-69.79) / 1.0)) * 1.0), -80.49, -5.2)))[1], _GLF_FUZZED((false ? 0.8 : -1.1)), _GLF_FUZZED(5.9)), bvec4(false, true, false, false)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch.rggr) : mix(vec4(_GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (_GLF_IDENTITY(-80.49, clamp(-80.49, -80.49, _GLF_IDENTITY(-80.49, (-80.49) / 1.0)))) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY(clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))))), min(clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), _GLF_IDENTITY((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), clamp((max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(_GLF_IDENTITY(float(_GLF_FUZZED(919.383)), min(float(_GLF_FUZZED(919.383)), float(_GLF_FUZZED(919.383)))), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2))), (max(vec4(-57.22, -69.79, -80.49, _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(-5.2, 1.0 * (-5.2))) / 1.0)), vec4(-57.22, -69.79, _GLF_IDENTITY(-80.49, mix(float(_GLF_FUZZED(919.383)), float(_GLF_IDENTITY(-80.49, (-80.49) - 0.0)), bool(true))), -5.2)))))))))[0], _GLF_FUZZED(-0.5), (max(vec4(-57.22, -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[2], (max(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-57.22, float(_GLF_IDENTITY(float(-57.22), mix(float(float(-57.22)), float(_GLF_FUZZED(0.9)), bool(false))))), max(_GLF_IDENTITY(-57.22, min(_GLF_IDENTITY(-57.22, _GLF_IDENTITY((-57.22) - 0.0, clamp((-57.22) - 0.0, (-57.22) - 0.0, (-57.22) - 0.0))), -57.22)), -57.22)), -69.79, -80.49, -5.2), vec4(-57.22, -69.79, -80.49, -5.2)))[3]), vec4(_GLF_FUZZED(-2.9), (max(vec4(_GLF_IDENTITY(-57.22, (-57.22) + 0.0), -69.79, -80.49, -5.2), vec4(-57.22, _GLF_IDENTITY(-69.79, (_GLF_IDENTITY(-69.79, (-69.79) / 1.0)) * 1.0), -80.49, -5.2)))[1], _GLF_FUZZED((false ? 0.8 : -1.1)), _GLF_FUZZED(5.9)), bvec4(false, true, _GLF_IDENTITY(false, (false) || false), false))))))))), vec3(-2.0, 8778.7904, _GLF_IDENTITY(8.9, _GLF_IDENTITY((8.9) - 0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((8.9), (true ? (8.9) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_SWITCH_0_2v[1], mix(float(_GLF_FUZZED(vec4(4479.9709, 5454.9851, -9.2, 0.0).p)), float(_GLF_SWITCH_0_2v[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) - 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(sqrt(vec2(1.0, 1.0))))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(60.31, 3.1, 2946.4023, -539.191, 7.6, 8688.2130, 3.3, -1173.5132)) : mat4x2((8.9) - 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), round(length(normalize(sqrt(vec2(1.0, 1.0))))), 1.0, 1.0))))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            barrier();
           barrier();
          }
         uvec3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
         uvec4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[29];
         if(_GLF_DEAD(false))
          barrier();
         mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
         if(_GLF_DEAD(false))
          barrier();
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, (false) || false)))) || _GLF_IDENTITY(false, (false) && true))))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-2392.0767, -7.7, -8.2, -4.2)) : mat2(1.0))) * (injectionSwitch)).y))))
       barrier();
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
     }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 36:
     case 17:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      barrier();
     case 86:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, false || _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))))))) + 1, 4, _GLF_IDENTITY(64, (64) - 0), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, log(1.0)), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, log(1.0)), (false ? _GLF_FUZZED(vec4(-2.0, -64.58, 96.76, 232.873)) : vec4(1.0, 0.0, 1.0, log(1.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0)), 1.0)), float(vec2(dot(vec4(1.0, 0.0, 1.0, log(1.0)), vec4(0.0, 1.0, 0.0, 1.0)), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     break;
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     1;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}
