#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 vec3 _f0;
 bvec4 _f1;
 ivec3 _f2;
 vec2 _f3;
 float _f4;
 vec2 _f5;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 uint _f1;
 bvec4 _f2;
 mat2x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_10 {
 int _f0;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_8 {
 uint _f0;
 bvec3 _f1;
 bvec3 _f2;
 mat4 _f3;
 int _f4;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 vec4 _f1;
 mat4x2 _f2;
 float _f3;
 uvec3 _f4;
 uint _f5;
 float _f6;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 uint _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat2x4 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 mat2x4 _f4;
 mat2x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 bvec2 _f1;
 bvec3 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 float _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_9 _f2;
 mat2x3 _f3;
 _GLF_struct_13 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), false || (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true)))))))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))));
           barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true)))) - 0.0)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(! (_GLF_IDENTITY((false), ! (! ((false))))), false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(_GLF_struct_0(mat4(1.0), bvec2(true), bvec3(true), uvec3(1u), true), 1.0), _GLF_struct_6(_GLF_struct_2(ivec2(1)), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true ? 77.45 : vec4(8.3, -3.1, _GLF_IDENTITY(2.0, (2.0) / abs(1.0)), -68.29)[0], (true ? 77.45 : vec4(8.3, -3.1, _GLF_IDENTITY(2.0, (2.0) / abs(1.0)), -68.29)[0]) * 1.0)), mix(float((true ? 77.45 : vec4(8.3, -3.1, 2.0, -68.29)[0])), float(_GLF_FUZZED(-3.8)), bool(false))))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.5)), float(1.0), bool(true)))), bool(true))), float(vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.3))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, length(0.0), 1.0, 1.0, 1.0, sin(0.0)))))))))), _GLF_struct_3(ivec4(1), mat3x4(1.0), mat2x4(1.0), ivec2(_GLF_IDENTITY(1, (1) << 0)), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(13.57)), bool(false)))), mat2x3(1.0), ivec2(1)), _GLF_struct_4(mat4x2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))), mat2x4(1.0), gl_SubgroupInvocationID), _GLF_struct_5(bvec4(true), vec2(1.0))), _GLF_struct_9(mat4x2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), 1u, _GLF_struct_7(vec4(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(92.48, 9.3, 6.8, 41.77)) : _GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-14049))), bool(false))), 1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)), transpose(transpose(_GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7))))) : mat2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0)))))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) * 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))) / 1.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(92.48, 9.3, 6.8, 41.77)) : _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)) : mat2(1.0, 1.0, 1.0, 0.0)), mat2(mat4x2((false ? _GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)) : mat2(1.0, 1.0, 1.0, 0.0)))))))))) - 0.0), max(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)) - 0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)))) + 0.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(92.48, 9.3, 6.8, 41.77)) : _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)) : mat2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)), ((false ? _GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)) : mat2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)))) / 1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(mat2(92.48, 9.3, 6.8, 41.77)) : _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(17.88, 996.189, 773.799, -2.7)) : mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), max(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))))))))))), mat4x2(1.0), 1.0, uvec3(1u), 1u, 1.0), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u)), 0u))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u)), 0u))), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))), (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), ~ (~ ((_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : 1u)))))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 0u)) | ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u, 0u + ((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u, 0u + ((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), (0u ^ 0u), 1u)), uint(uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u, 0u + ((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), (0u ^ 0u), 1u)), 0u | (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u, 0u + ((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), (0u ^ 0u), 1u)))), 1u, 1u, 1u))))), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), _GLF_IDENTITY(1u, (0u & 7506u) | (1u))))) | 0u, ~ (~ (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), _GLF_IDENTITY(1u, (0u & 7506u) | (1u))))) | 0u, ((uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), _GLF_IDENTITY(1u, (0u & 7506u) | (1u))))) | 0u) | 0u)))))), bvec3(true), bvec3(true), mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1)))))), mat2x3(1.0), _GLF_struct_13(bvec4(true), _GLF_struct_10(1), _GLF_struct_11(mat4x3(1.0), 1u, bvec4(true), mat2x3(1.0), mat3x2(1.0)), _GLF_struct_12(vec3(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true)))))))))))))), ivec3(1), vec2(1.0), 1.0, vec2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false)), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))) && true))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x))) / 1.0), float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x))));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (workgroup_size)), ((~ (workgroup_size))) * 1u))) | (1u ^ 1u)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u))))) << 0u) + _GLF_struct_replacement_14._f1._f3.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u)), (uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) / 1u)) >> 0u)), (workgroup_base + subgroup_id * subgroup_size) + 0u))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(122774u) : _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_14._f1._f3.subgroup_local_id)), (false ? _GLF_FUZZED((mat4(9.2, -4.6, -636.927, 7811.6598, 716.552, -8269.4714, 29.95, -258.895, 6.7, -371.210, -2.3, -956.256, -9793.6454, 791.651, -23.18, 6.5) , workgroup_base)) : false ? _GLF_FUZZED(122774u) : _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_14._f1._f3.subgroup_local_id)))))) + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))))))) % subgroup_size) / 1u)), ((_GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))), min((_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))))) / 1u))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))) >> 0u)) | 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((true ? -65962 : 60699)) : 1)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))))), min((~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))))))))))) / 1u)))) >> 0u), _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))) / 1u)))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))) / _GLF_IDENTITY(1u, max(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, ~ (~ (_GLF_struct_replacement_14._f1._f3.subgroup_local_id)))) | 0u) + 1, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : _GLF_struct_replacement_14._f1._f3.subgroup_local_id)) + 1)))))))) / 1u))), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u) * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))) / 1u)))) >> 0u), _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(296.846)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1) ^ 0u), 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))))), 1u * (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1)))))))) / 1u)))))) % subgroup_size)))) / 1u))) | ((_GLF_IDENTITY((_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, max(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1, (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1) ^ (0u ^ 0u))) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id, (_GLF_struct_replacement_14._f1._f3.subgroup_local_id) * 1u) : _GLF_FUZZED(workgroup_id))) + 1))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) ^ 0u)) / 1u))));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), false, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), sqrt(0.0))), clamp(_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), sqrt(0.0))), mix(vec2((vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))))[0], _GLF_FUZZED(283.563)), vec2(_GLF_FUZZED(-3833.8998), (vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(9054.8262)), float(sqrt(0.0)), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))[1]), bvec2(false, true))), vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), sqrt(0.0))), vec2(vec3(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), sqrt(0.0))))))))[0])), injectionSwitch[0])), injectionSwitch[1])).y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(676.808), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))[1]), vec2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))[0], _GLF_FUZZED(399.520)), bvec2(true, false)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, (0) + 0))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), (true ? _GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), (int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))) | (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))) : _GLF_FUZZED(-16254))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, (1) ^ 0)), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), int(ivec2(4, 0)))) | (min(int(ivec2(4, 0)), int(ivec2(4, 0)))))) >> 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1)))))))))))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-32305) : 1))), (false ? _GLF_FUZZED(bitCount(-65010)) : ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-32305) : 1)))))))), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), ivec2(ivec3(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), 0)))))), min(int(ivec2(4, _GLF_IDENTITY(0, int(int(0))))), int(ivec2(4, 0))))), int(ivec3((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 0, 0))), (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, max((0) * 1, (0) * 1))), 0)))), min(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((4) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)), 0)), _GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | (int(ivec2(4, 0)))))))))) | 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), (true ? _GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), (int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))) | (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))) : _GLF_FUZZED(-16254))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, (1) ^ 0)), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), int(ivec2(4, 0)))) | (min(int(ivec2(4, 0)), int(ivec2(4, 0)))))) >> 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), int(ivec3(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))), 1, 1)))))))))))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-32305) : 1))), (false ? _GLF_FUZZED(bitCount(-65010)) : ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-32305) : 1)))))))), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), ivec2(ivec3(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), 0)))))), min(int(ivec2(4, _GLF_IDENTITY(0, int(int(0))))), int(ivec2(4, 0))))), int(ivec3((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 0, 0))), (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, max((0) * 1, (0) * 1))), 0)))), min(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((4) / int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)), 0)), _GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | (int(ivec2(4, 0)))))))))) | 0))))), 0 + (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, (0) + 0))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (_GLF_IDENTITY(0, int(int(0))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(741.801)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-4431.6903)), vec2(_GLF_FUZZED(vec2(-867.866, -893.601).s), (injectionSwitch)[1]), bvec2(false, true))).x)))), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp((0) * 1, _GLF_IDENTITY((0) * 1, ((0) * 1) - 0), (0) * 1))), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), int(ivec2(4, 0)))) | _GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), 0 | (_GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), ((min(int(ivec2(4, 0)), int(ivec2(4, 0))))) | (_GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), ((min(int(ivec2(4, 0)), int(ivec2(4, 0))))) / 1))))))) >> 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (0)), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, int(int(1)))), 0)), int(ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ (_GLF_IDENTITY(0, (0) ^ 0))) * 1))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1), 0)), 0, 0)))))))))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))), max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78762) : _GLF_IDENTITY((0) + 0, 0 + ((0) + 0))))), (0) * 1), 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), clamp(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), max(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) - 0))))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)))) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), (int(0)) + 0)), (int(int(0))) | (int(int(0))))), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))))))), ivec2(ivec3(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))) - 0), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), max(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), 0 ^ (int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))), int(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, (0) * 1), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), 0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))))))))))), 0)))))), min(int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), max(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 1 * (_GLF_IDENTITY(0, int(int(0))))))) : _GLF_FUZZED(47516))))), int(ivec2(4, 0))))), int(ivec3((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 0, _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(4, ~ (~ (4))))), (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), int(ivec2(4, _GLF_IDENTITY(0, (0) / 1))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp((0) * 1, _GLF_IDENTITY((0) * 1, ((0) * 1) - 0), (0) * 1))), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), int(ivec2(4, 0)))) | _GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), 0 | (_GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), ((min(int(ivec2(4, 0)), int(ivec2(4, 0))))) | (_GLF_IDENTITY((min(int(ivec2(4, 0)), int(ivec2(4, 0)))), ((min(int(ivec2(4, 0)), int(ivec2(4, 0))))) / 1))))))) >> 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (0)), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, int(int(1)))), 0)), int(ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), (~ (_GLF_IDENTITY(0, (0) ^ 0))) * 1))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1), 0)), 0, 0)))))))))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))), max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) << 0))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78762) : _GLF_IDENTITY((0) + 0, 0 + ((0) + 0))))), (0) * 1), 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), clamp(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), max(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) - 0))))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)))) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), (int(0)) + 0)), (int(int(0))) | (int(int(0))))), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))))))), ivec2(ivec3(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))) - 0), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), max(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), 0 ^ (int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))), int(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, (0) * 1), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))))))), 0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))))))))))), 0)))))), min(int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), max(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 1 * (_GLF_IDENTITY(0, int(int(0))))))) : _GLF_FUZZED(47516))))), int(ivec2(4, 0))))), int(ivec3((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 0, _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(4, ~ (~ (4))))), (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), int(ivec2(4, _GLF_IDENTITY(0, (0) / 1)))))))))) + (0 | 0)), (false ? _GLF_FUZZED(-13443) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp((0) * 1, _GLF_IDENTITY((0) * 1, ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(64327)))) * 1) - 0), (0) * 1))), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(_GLF_IDENTITY(4, 1 * (4)), 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), _GLF_IDENTITY(int(ivec2(4, 0)), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | (int(ivec2(4, 0))))) << 0))) | (min(int(ivec2(4, 0)), int(ivec2(4, 0)))))) >> 0))), (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp((0) * 1, _GLF_IDENTITY((0) * 1, ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(64327)))) * 1) - 0), (0) * 1))), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(_GLF_IDENTITY(4, 1 * (4)), 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), _GLF_IDENTITY(int(ivec2(4, 0)), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | (int(ivec2(4, 0))))) << 0))) | (min(int(ivec2(4, 0)), int(ivec2(4, 0)))))) >> 0))), 0 ^ ((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp((0) * 1, _GLF_IDENTITY((0) * 1, ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(64327)))) * 1) - 0), (0) * 1))), 0)))), _GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(_GLF_IDENTITY(4, 1 * (4)), 0))), (_GLF_IDENTITY(min(int(ivec2(4, 0)), int(ivec2(4, 0))), (min(int(ivec2(4, 0)), _GLF_IDENTITY(int(ivec2(4, 0)), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | (int(ivec2(4, 0))))) << 0))) | (min(int(ivec2(4, 0)), int(ivec2(4, 0)))))) >> 0)))))) / 1), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), (false ? _GLF_FUZZED(33109) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, int(int(1)))), 0)), int(ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1), 0)), 0, 0)))))))))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, ((0) * 1) | (_GLF_IDENTITY((0) * 1, ((0) * 1) / 1)))), _GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, 0 ^ (0))) * 1), 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, (false ? _GLF_FUZZED(40529) : _GLF_IDENTITY((0) * 1, ((0) * 1) | 0)))), 0)))))))), clamp(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, max(1, 1))), 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), max(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, int(ivec2(1, 1)))), 0)))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))), clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))))))))), ivec2(ivec3(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1))))), (0) * 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(ivec4(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, (1 ^ 1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), _GLF_IDENTITY(0 ^ (int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0))))), 0 | (0 ^ (int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), int(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0))))) / 1), _GLF_IDENTITY(0, (0) * 1), 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (true ? _GLF_IDENTITY(0, (0) * 1) : _GLF_FUZZED(26353))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0))), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0), _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), int(ivec3((~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (true ? _GLF_IDENTITY(0, (0) * 1) : _GLF_FUZZED(26353))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0))), 0)))), clamp(int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0), _GLF_IDENTITY(0, (0) * 1), 0)))), int(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))))))), 0, 0))))))))))), 0)))))), min(int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), max(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 1 * (_GLF_IDENTITY(0, int(int(0))))))) : _GLF_FUZZED(47516))))), int(ivec2(4, 0))))), int(ivec3((_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) * 1), 0)))), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 0, 0))), (_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1), 0)))), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(4, ~ (~ (4))))), (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), int(ivec2(4, _GLF_IDENTITY(0, (0) / 1))))))))))) | 0)))))), 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_14._f1._f3.subgroup_local_id + 1 < subgroup_size) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     int i = 0;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(+ -2249.0967, (false ? _GLF_FUZZED(-53.90) : + -2249.0967))))), bool(false))) > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)))), true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false, false || (false)), false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           do
            {
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))) == read_2), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))) == read_2), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(workgroup_size))), uint(uvec2(read_1 + 1, 0u))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))) == read_2))))), (~ (uint(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))) == read_2))) | (~ (uint(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))) == read_2)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, uint(uvec2(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), 0u))) == read_2))) + 1, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / 1) >> _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, 0 + (0))) ^ 0)), 4);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5392.8910)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), true))))))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), false, true))))));
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false), false)), (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false), false))) && true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2))))))) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, 0 | (1)), 0, 0, 0))))), 4, 64, 4);
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(61.46)), bool(false)))) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) && true)) || false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(73412u)), _GLF_FUZZED(3.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, float(mat4(injectionSwitch.y, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0)) / 1.0)))))), false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, true))))))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED((42895 / -78213)))) != (0 | _GLF_IDENTITY(0, (0) - 0))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(34626) : 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
