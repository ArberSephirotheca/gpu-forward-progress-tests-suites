#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED((vec2(5.0, 951.617) + injectionSwitch))))) / vec2(1.0, 1.0)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(366.192), _GLF_FUZZED((-7315.9069 / 54.11))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7481.0151)), bool(false))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).y)))))) || false), false, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-41.55, -156.169)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(871.249) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), (true ? float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))) : _GLF_FUZZED(0.1))), float(_GLF_FUZZED(1015.6556)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(1015.6556), max(_GLF_FUZZED(1015.6556), _GLF_FUZZED(1015.6556)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0)))))), mix(float(_GLF_FUZZED(6030.0140)), float(false ? _GLF_FUZZED(871.249) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), (true ? float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))) : _GLF_FUZZED(0.1))), float(_GLF_FUZZED(1015.6556)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(1015.6556), max(_GLF_FUZZED(1015.6556), _GLF_FUZZED(1015.6556)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0))))))), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED(-878.644), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(1015.6556)), bool(false))))) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-41.55, -156.169)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec2(0.0, -120.725))))[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])))[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1))))]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-86.52)), bool(false))), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(74.65)), vec2(_GLF_FUZZED((-2.5)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x))), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.8) : injectionSwitch.x)))) - 0.0)) > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(871.249) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))))), injectionSwitch.x))), (true ? float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))) : _GLF_FUZZED(0.1))), float(_GLF_FUZZED(1015.6556)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(1015.6556), max(_GLF_FUZZED(1015.6556), _GLF_FUZZED(1015.6556)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(42.52)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), _GLF_IDENTITY(float(_GLF_FUZZED(1015.6556)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(1015.6556)), min(float(_GLF_FUZZED(1015.6556)), float(_GLF_FUZZED(1015.6556)))))), bool(false))) + 0.0)))))), mix(float(_GLF_FUZZED(6030.0140)), float(false ? _GLF_FUZZED(871.249) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), (true ? float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))) : _GLF_FUZZED(0.1))), float(_GLF_FUZZED(1015.6556)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(1015.6556), max(_GLF_FUZZED(1015.6556), _GLF_FUZZED(1015.6556)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))) - 0.0))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.37) : injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)))), bool(true))))), float(_GLF_FUZZED(1015.6556)), bool(false))) + 0.0))))))), float(_GLF_FUZZED((- 8.5))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x))), float(_GLF_FUZZED(1015.6556)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED(-878.644), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED(-878.644), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x, injectionSwitch.x))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(0.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 5.8)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(1015.6556)), bool(false))))) > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-169.064)), bool(false))) : _GLF_FUZZED(235.427))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(false, ! (! (false)))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false)))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, true)), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, true)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)))))))), true && (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, true)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(21.02)), bool(false)))) * 1.0), 0.0)).y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), bool(bool(bool(bvec4(! (false), false, true, false))))))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) || false) || false, bool(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false), false || (((false) || false))) || false), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * ((((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-99.03)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), true, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (1u ^ 1u)), _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u))), 0u | (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (1u ^ 1u)), _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)))))), max(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), subgroup_local_id + 1)))))))), subgroup_local_id + 1), max(max(subgroup_local_id + 1, subgroup_local_id + 1), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4)))) - 0))) | (4)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4)))) - 0))) | (4))))), (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4)))) - 0))) | (4)))))) | (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(21498) : 4))) / 1, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), max(_GLF_IDENTITY((false ? _GLF_FUZZED(21498) : 4), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21498) : 4)), max(int((false ? _GLF_FUZZED(21498) : 4)), int((false ? _GLF_FUZZED(21498) : 4)))))), (false ? _GLF_FUZZED(21498) : 4))))) / 1))), 4)))) - 0))) | (4))))))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true, bool(bvec4((_GLF_DEAD(false)) && true, true, false, true)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))) || false)) && true, true, false, true)))), false, true, true)))))), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), (true ? (_GLF_IDENTITY(4, (4) << 0)) : _GLF_FUZZED(81633))), (4))) / 1))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false, false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false)), true && (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) || false, ((false) || false) && true))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))) && true)), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false), bool(bool(((false) || false)))) && true))) || false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && _GLF_IDENTITY((false), ! (! ((false)))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> _GLF_IDENTITY(0, (0) >> 0)) << 0))) / 1) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(780.206))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-90.52)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), true, true))))))) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(780.206))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-90.52)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), true, true))))))) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)))), true, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(7304.8908)), vec2(_GLF_FUZZED(37.01), (vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(7304.8908)), vec2(_GLF_FUZZED(37.01), (vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(7304.8908)), vec2(_GLF_FUZZED(37.01), (vec2(mat2x3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-22.00) : injectionSwitch.y)), injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-90.52)), bool(false))) + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-6.1))))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-90.52)), bool(false))) + (injectionSwitch.y)) : _GLF_FUZZED(-32.56))))) || false)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), 0 + ((_GLF_IDENTITY(1, max(1, 1))))) | (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 1 * ((4)))) | ((_GLF_IDENTITY(4, (4) >> 0))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.38), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.38), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.38), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.38), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y)))) || false)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.38), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y))))), true && (true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), vec2(0.0, 0.0) + (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-24.38), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_FUZZED(-24.38)), bool(true))), _GLF_FUZZED(0.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))) || false), true)), (bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))) || false), true))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-589.707))))) ? _GLF_FUZZED(-56781) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 0, 0, 1)), 0 ^ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (_GLF_IDENTITY(1, (1) | 0))), 0, 0, 1), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 0, 0, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 0, 0, 1), ivec4(0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 0) | (ivec4(_GLF_IDENTITY(1, (1) | 0), 0, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0)))) | (_GLF_IDENTITY(1, 0 + (1)))))))) / ivec4(1, 1, 1, 1)), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | 0), 0, 0, 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 0, 0, 1), ivec4(0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), ((1)) << 0)), max(~ (_GLF_IDENTITY((1), ((1)) << 0)), ~ (_GLF_IDENTITY((1), ((1)) << 0)))))) | 0), 0, 0, 1), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-79182) : (1))) | 0), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- 75.87)) : injectionSwitch.y)))))), (false ? _GLF_FUZZED(75247) : int(ivec4(0, 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1))))))))))))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
