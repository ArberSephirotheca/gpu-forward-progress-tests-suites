#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7523.9371))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.3))), injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) + 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), false, true)), false, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), false, true)), false, false)))))) || false)))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true, false))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (true ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-5.9, -5314.3380, 225.556, -91.86)))))).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))) | 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0 ^ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), ~ (_GLF_IDENTITY(~ (max(4, 4)), (~ (max(4, 4))) | (~ (max(4, 4))))))), min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 1, 1, 0)), min(int(ivec4(4, 1, 1, 0)), int(ivec4(4, 1, 1, 0)))), (_GLF_IDENTITY(int(ivec4(4, 1, 1, 0)), min(int(ivec4(4, 1, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4(4, _GLF_IDENTITY(1, ~ (~ (1))), 1, 0))))) / 1)))), _GLF_IDENTITY(4, max(4, 4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid))]) >> (0u | 0u)), buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 1u * (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(86269), (0 << _GLF_IDENTITY(int(3), int(3))) | (true ? 64 : _GLF_FUZZED(86269))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ 0), (0) + _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), int(1))), min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), int(1))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), int(1)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), false || (subgroup_local_id + 1 < subgroup_size)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(usubBorrow(workgroup_size, read_1, workgroup_id)) : subgroup_size)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(subgroup_local_id + _GLF_IDENTITY(1, (1) / ((0 ^ 1) & 1)) < subgroup_size), bool(bvec2(_GLF_IDENTITY(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / ((0 ^ 1) & 1)) < subgroup_size), (bool(subgroup_local_id + _GLF_IDENTITY(1, (1) / ((0 ^ 1) & 1)) < subgroup_size)) && true), true)))))))), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size)), false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-777.298, -19.04)) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) && true)))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), max(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), clamp(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) | (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u))), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, (1u) << 0u)), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), max(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), clamp(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) | (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u))), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, (1u) << 0u)), 1u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), max(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), clamp(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) | (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u))), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, (1u) << 0u)), 1u))))))))) / 1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), max(uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), clamp(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) | (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u))), _GLF_IDENTITY(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u), (uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, 1u), 1u)))))), uint(_GLF_IDENTITY(uvec3(read_1 + 1, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(read_1 + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), 1u)), max(uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u)), uvec3(uvec4(uvec3(read_1 + 1, 0u, _GLF_IDENTITY(1u, (1u) << 0u)), 1u))))))))))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) || false)) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, sqrt(sin(0.0)), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), float(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), tan(0.0)))))), clamp(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, sqrt(sin(0.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3472.7800, -5.1)) : injectionSwitch)).y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, sqrt(sin(0.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, abs(0.0), 1.0, 0.0), transpose(transpose(mat2(0.0, abs(0.0), 1.0, 0.0)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(sqrt(sin(0.0)), mix(float(_GLF_FUZZED(6.0)), float(sqrt(sin(0.0))), bool(true))), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, ~ (~ (read_1))))) + _GLF_IDENTITY(1, (1) >> 0) == read_2), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)) * 1u), uint(read_1 + 1 == read_2)), clamp(max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)) * 1u), uint(read_1 + 1 == read_2)), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)) * 1u), uint(read_1 + 1 == read_2)), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)) * 1u), uint(read_1 + 1 == read_2))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)) * 1u), uint(read_1 + 1 == read_2))) + 1) << 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1))) + _GLF_IDENTITY(1, max(1, 1))))) == read_2)) * 1u), uint(read_1 + 1 == read_2))) + 1) ^ 0u), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)) - sin(length(0.0))))), (true ? _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4245.6726) : injectionSwitch.x)))), 1.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(4.0)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) : _GLF_FUZZED(vec2(-85.45, -7422.7083)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(5.0))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-61.52) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true, false || ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true, false || ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true))), (! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true, false || ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-625.340)), bool(false))), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-22.22)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0))))))) && true)))) || false), false, false, false)))))))) && true)))), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(min(injectionSwitch, injectionSwitch), 1.0, sin(abs(0.0))), mix(vec4((vec4(min(injectionSwitch, injectionSwitch), 1.0, sin(abs(0.0))))[0], (vec4(min(injectionSwitch, injectionSwitch), 1.0, sin(abs(0.0))))[1], (vec4(min(injectionSwitch, injectionSwitch), 1.0, sin(abs(0.0))))[2], _GLF_FUZZED(-84.89)), vec4(_GLF_FUZZED(-53.63), _GLF_FUZZED(float(false)), _GLF_FUZZED(3069.1947), (vec4(min(injectionSwitch, injectionSwitch), 1.0, sin(abs(0.0))))[3]), bvec4(false, false, false, true)))))).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y)), 1.0, _GLF_IDENTITY(0.0, (0.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-29.74)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0, float(mat4x3((_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0 + ((_GLF_IDENTITY(0.0, (0.0) - 0.0)))) - 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0 + ((_GLF_IDENTITY(0.0, (0.0) - 0.0)))) - 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(9.6, 8751.5841, 2875.3940, -58.36, -907.705, -1.5, 5124.1058, -371.763, 6.6, -5.6, -293.046, -49.03, -8.8, 567.581, 817.478, -3226.0950))))))))))) || false)))), _GLF_IDENTITY((! ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5067.5372 * -787.898))), float(0.0), bool(true))), (0.0) - 0.0)) - 0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), false || ((! ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5067.5372 * -787.898))), float(0.0), bool(true))), (0.0) - 0.0)) - 0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))) || false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true))) && true)), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true))) && true)), true, false, false))))))))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true))) && true)), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), true, false, true))) && true)), true, false, false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
}
