#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * (1u | 1u))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)), 0u | (max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * _GLF_IDENTITY((1u | 1u), (true ? _GLF_IDENTITY((1u | 1u), 0u | ((1u | 1u))) : _GLF_FUZZED(packHalf2x16(vec2(2269.5579, 828.384))))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), 0u ^ ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * (1u | 1u))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * (1u | 1u))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * (1u | 1u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) * (1u | 1u)))) << 0u), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u), 0u | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))))) << 0u))) / 1u)))), (gl_WorkGroupSize.x) * 1u);
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(-2.9)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), vec2(0.0, 0.0))) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), max(uint(subgroup_local_id), uint(subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), (true ? _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), (true ? _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u))) << 0u)))) % subgroup_size)) / (1u | 1u));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), uint(uvec2(min(virtual_gid, virtual_gid), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), uint(uvec2(min(virtual_gid, virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, (1u & 1u))), 0u ^ (uint(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), uint(uvec2(min(virtual_gid, virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, (1u & 1u))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(86714) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0)))))), (uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(86714, (_GLF_IDENTITY(86714, (86714) - 0)) * 1)) : _GLF_IDENTITY(1, (1) ^ 0))))) >> 0u), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), (0 << _GLF_IDENTITY(int(1), int(1))) | (int(64))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) + 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) - 0u) * (subgroup_local_id)), (uint(1u * (subgroup_local_id))) / 1u)))), 0u, 0u)))) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1 < subgroup_size))))))
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, ~ (~ (0u))) | (read_2)), _GLF_IDENTITY((read_2) * 1u, (true ? _GLF_IDENTITY((read_2) * 1u, min(_GLF_IDENTITY((read_2) * 1u, ((read_2) * 1u) * 1u), _GLF_IDENTITY((read_2), 0u | ((read_2))) * 1u)) : _GLF_FUZZED(workgroup_id))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2, true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 0u)))) | (read_1 + 1)) == _GLF_IDENTITY(read_2, (read_2) | (read_2))), ! (! ((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(611.764)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) | 0u) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 0u)))) | (read_1 + 1)) == read_2)))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))))) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true))) || false) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) || false))) || _GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))) || _GLF_IDENTITY(false, ! (! (false))))))), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), min(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0))))), max(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), min(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0))))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), min(vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)), vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0))) : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-8.3, -7028.7833, 9.3).p)), float(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(496.104, (_GLF_IDENTITY(496.104, float(mat4x3(496.104, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), bool(false))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(496.104)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.4))))), bool(true))) * 1.0)))), 0.0, abs(0.0)))))))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false), bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false), bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false), bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false)))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
