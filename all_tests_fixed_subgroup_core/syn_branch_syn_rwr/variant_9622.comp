#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bvec3 _f0;
 vec2 _f1;
 uint read_2;
 mat2x3 _f2;
 bvec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_5 {
 uint workgroup_size;
 float _f0;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat3x4 _f1;
 _GLF_struct_5 _f2;
 float _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
 mat4 _f3;
 mat4x3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 float _f2;
 mat4x2 _f3;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, mat3x4(1.0), _GLF_struct_5(gl_WorkGroupSize.x, 1.0), 1.0, mat3(1.0));
 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z = _GLF_struct_replacement_6._f2.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(vec4(1.0), mat3x4(1.0), _GLF_struct_0(mat4x3(1.0)), mat4(1.0), mat4x3(1.0), uvec3(1u)), _GLF_struct_3(mat4x2(1.0), _GLF_struct_2(bvec3(true), uvec3(1u), mat3(1.0))), 1.0, mat4x2(1.0), GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z * workgroup_id);
 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y = _GLF_struct_replacement_4.workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x = next_virtual_gid;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(read_1 + 1), 4, 64, 4);
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(bvec3(true), vec2(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0), mat2x3(1.0), bvec4(true), vec3(1.0));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(read_1 + 1 == _GLF_struct_replacement_7.read_2) + 1, 4, 64, 4);
    }
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(read_1 + 1 == _GLF_struct_replacement_7.read_2) + 1, 4, 64, 4);
  }
}
