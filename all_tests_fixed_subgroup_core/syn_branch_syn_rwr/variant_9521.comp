#version 460
struct _GLF_struct_4 {
 vec4 _f0;
 mat4x2 _f1;
 uint workgroup_size;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 uint subgroup_size;
 uint _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_SubgroupSize, 1u, _GLF_struct_1(_GLF_struct_0(true), uvec3(1u)), _GLF_struct_2(mat2x3(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec4(1.0), mat4x2(1.0), gl_WorkGroupSize.x);
 GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.w = _GLF_struct_replacement_4.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.w * workgroup_id;
 GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.z + subgroup_id * _GLF_struct_replacement_3.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.z + subgroup_id * _GLF_struct_replacement_3.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_3.subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.x = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.x + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.y = read_2;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_3.subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.x + 1 == GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.y) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.x + 1 == GLF_merged4_0_1_6_1_1_6_2_1_14_3_1_14read_1read_2workgroup_baseworkgroup_size.y) + 1, 4, 64, 4);
  }
}
