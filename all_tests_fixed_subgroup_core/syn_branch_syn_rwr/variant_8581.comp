#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(550.566), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0))))[0], _GLF_FUZZED(32.03)), bvec2(true, false))).y)))))), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), true && (bool(bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y) || false))) && (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bool(false)))))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(99.28, -9.9), (injectionSwitch * -6.1))) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), false))))) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(49994u) : workgroup_size)))))) * workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))), subgroup_local_id))) : workgroup_id)), 1u * (workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(15.90) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), false, true, true)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((true), ! (! ((true)))), false, false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec2(! (bool(bvec3(false, false, false))), false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), bool(bvec2(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false)))))))))))), (! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 1.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))))) || false))), false, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(15.90) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), false, true, true)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((true), ! (! ((true)))), false, false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec2(! (bool(bvec3(false, false, false))), false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), bool(bvec2(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false)))))))))))), (! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 1.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))))) || false))), false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(15.90) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), false, true, true)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((true), ! (! ((true)))), false, false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec2(! (bool(bvec3(false, false, false))), false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), bool(bvec2(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false)))))))))))), (! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 1.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))))) || false))), false, true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(15.90) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), false, true, true)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((true), ! (! ((true)))), false, false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec2(! (bool(bvec3(false, false, false))), false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), bool(bvec2(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false)))))))))))), (! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 1.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))))) || false))), false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(15.90) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), false, true, true)))))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), bool(bvec2(bool(bvec3(! _GLF_IDENTITY((true), ! (! ((true)))), false, false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bvec2(! (bool(bvec3(false, false, false))), false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), bool(bvec2(bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)), false)))))))))))), (! (false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 1.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true, true)))))))))) || false))), false, true))))))), true, true), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0))))) / 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0, 0.0))))) / 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(69.72)), float(0.0), bool(true))), 0.0) + (vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0) + (vec4(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0))))) / 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(80.97, -7721.8069, 77.82, 5.7, 8073.9157, 21.51, 435.663, 8532.4264, -8.8, -0.5, 5966.4948, 5.5))))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, false)))), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90601)))), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 1u)), 1u * (uint(uvec3((subgroup_local_id + 1), 1u, 1u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(-23.54, 559.668))) : injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.5, 463.742))))) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(1.5, 463.742)), (true ? _GLF_FUZZED(vec2(1.5, 463.742)) : _GLF_FUZZED(injectionSwitch)))))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(-387.733)), vec2(_GLF_FUZZED(4.7), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), bvec2(false, true)))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-103.760)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? (- 2433.5305) : 9.6)), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-103.760)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? (- 2433.5305) : 9.6)), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-103.760)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? (- 2433.5305) : 9.6)), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-103.760)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? (- 2433.5305) : 9.6)), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), false))))))) && true) || false), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), float(_GLF_FUZZED(2704.7119)), bool(false)))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(2704.7119)), bool(false)))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((9.8 - -90.28)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) ^ 0))), 0 + (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | (64)), 64)))), _GLF_IDENTITY(0, int(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | (1)), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))) | (_GLF_IDENTITY(read_1, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) | (1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(int(7779.2029)) : _GLF_IDENTITY(_GLF_IDENTITY((0), (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), 0 + ((0)))) | ((0)))) | ((0))), ~ (~ (_GLF_IDENTITY((0), 0 ^ ((0)))))))) | (_GLF_IDENTITY(0, ~ (~ (0)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(27.34) : 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), float(vec4(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), 1.0, 0.0, 0.0)))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(10.38)), float(injectionSwitch.y), bool(true)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(vec2(33.04, -76.94))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-81.40) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (float(mat2(1.0, 1.0, 1.0, 0.0))) - 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (subgroup_local_id + 1) * 1u)), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.0)), bvec2(false, false)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true)) && true))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.0) : injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.36)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(479.106)), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, _GLF_IDENTITY(true, (true) || false))), true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)), bool(bvec2((false), false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))) || false)), bool(bvec2((false), false))) || false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5783.6224), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.8)), bvec2(true, false))), injectionSwitch)).y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ _GLF_IDENTITY((0), 0 | ((_GLF_IDENTITY(0, (0) - ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(2), int(2)))))))))), (~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ _GLF_IDENTITY((0), 0 | ((0))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(-96939) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))), (false ? _GLF_FUZZED(-96939) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))) << _GLF_IDENTITY(0, (0) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | _GLF_IDENTITY((~ (0)), ((~ (0))) ^ 0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-96939, _GLF_IDENTITY(int(ivec4(-96939, 1, 1, 1)), min(int(ivec4(-96939, 1, 1, 1)), _GLF_IDENTITY(int(ivec4(-96939, 1, 1, 1)), max(int(ivec4(-96939, 1, 1, 1)), int(ivec4(-96939, 1, 1, 1)))))))) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), ~ (_GLF_IDENTITY(~ (0), (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) | (0)))) | (~ (0))))), (false ? _GLF_FUZZED(-96939) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec3((0), 1, 0)), (true ? int(ivec3((0), 1, 0)) : _GLF_FUZZED(1518)))))))), (false ? _GLF_FUZZED(-96939) : 0))))) >> 0)) | (0 << _GLF_IDENTITY(int(6), int(6))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (injectionSwitch), max(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (injectionSwitch), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (injectionSwitch)))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(-9.3)))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * mat2(1.0)), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1987.0571)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && _GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, true)))), false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true && (false)), bool(bvec4((true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), true, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), true)))) && true))), false)))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((true && (false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((true && (false)), false, false))), true)))), false))), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && _GLF_IDENTITY(_GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, true)))), false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true && (false)), bool(bvec4((true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), true, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), true)))) && true))), false)))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((true && (false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((true && (false)), false, false))), true)))), false))), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))) && true), (_GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, true)))), false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true && (false)), bool(bvec4((true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), true, true, false))))), true))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), true)))) && true))), false)))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((true && (false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((true && (false)), false, false))), true)))), false))), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((true && (false)), false, false), bvec3(bvec4(bvec3((true && (false)), false, false), false)))))))), false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))) && true)) || false)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((false)) || false))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) && true)), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))) ? injectionSwitch.x : _GLF_FUZZED(-2206.3819))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((-39.68 / (+ -0.8)))), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-26.76)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-17.50)), bool(false))), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), (false ? _GLF_FUZZED(-11.02) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false)))), (_GLF_IDENTITY(bool(true), true && (bool(true)))) || false))))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) || false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! ((_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) || false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.2), max(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2))), _GLF_FUZZED((-9.7 + 8.2))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6884.7810, 0.6)))).y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(! (! (false)))))))))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), true && ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (_GLF_IDENTITY(~ (next_virtual_gid), 0u | (~ (next_virtual_gid)))) | 0u)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (read_1 + 1 == read_2)))) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) * 1)) | _GLF_IDENTITY((4), ((_GLF_IDENTITY(1, 1 * (1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * ((_GLF_IDENTITY(4, max(4, 4)))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(235.956, -5886.1217, 6439.6286, 9710.4446).p)), vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
