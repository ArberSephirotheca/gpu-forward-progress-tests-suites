#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, cos(0.0), log(1.0), 0.0, determinant(mat4(log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(37.34))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat3x4(1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(89.17)), bool(false)))), determinant(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 1.0))), false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, true)))), false))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7720.1911, _GLF_IDENTITY(9.6, float(_GLF_IDENTITY(mat2x4(9.6, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4262.8153), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y), _GLF_IDENTITY(dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, abs(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(-6.6)))), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(float(14012u)))), 0.0, 1.0))) / 1.0)), sin(0.0), _GLF_IDENTITY(dot(vec3(sin(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(sin(0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0), mat2x4(mat3x4(mat2x4(9.6, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), sin(0.0), _GLF_IDENTITY(dot(vec3(sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(sin(0.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0))), 0.0, 0.0)))))))))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), injectionSwitch.x) + (1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6.7), clamp(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), min((_GLF_IDENTITY(_GLF_FUZZED(6.7), clamp(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6.7), clamp(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), mix(float((_GLF_IDENTITY(_GLF_FUZZED(6.7), clamp(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7), _GLF_FUZZED(6.7))))), float(_GLF_FUZZED(124.699)), bool(false))))) / 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(6.7, float(mat4x3(6.7, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), mix(float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! _GLF_IDENTITY((! (true && (true))), (_GLF_IDENTITY((! (true && (true))), ! (! ((! (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))) || false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (true), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (true))))), false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))))))))) ? 0.0 : _GLF_FUZZED(6.7)), float(_GLF_FUZZED(8.0)), bool(false)))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(6.7, float(mat4x3(6.7, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), mix(float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! _GLF_IDENTITY((! (true && (true))), (_GLF_IDENTITY((! (true && (true))), ! (! ((! (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))) || false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (true), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (true))))), false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))))))))) ? 0.0 : _GLF_FUZZED(6.7)), float(_GLF_FUZZED(8.0)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(6.7, float(mat4x3(6.7, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), mix(float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! _GLF_IDENTITY((! (true && (true))), (_GLF_IDENTITY((! (true && (true))), ! (! ((! (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))) || false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (true), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (true))))), false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))))))))) ? 0.0 : _GLF_FUZZED(6.7)), float(_GLF_FUZZED(8.0)), bool(false)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false))) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(6.7, float(mat4x3(6.7, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false))) ? 0.0 : _GLF_FUZZED(6.7), mix(float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! _GLF_IDENTITY((! (true && (true))), (_GLF_IDENTITY((! (true && (true))), ! (! ((! (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))) || false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (true), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (true))))), false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && true), ! (! (true && (true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))))))))) ? 0.0 : _GLF_FUZZED(6.7)), float(_GLF_FUZZED(8.0)), bool(false))))) - 0.0)))))), 0.0), max(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), (vec4(injectionSwitch.x, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), true, true, true))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), (bool(bvec2(! (true), true))) && true)))) && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(true && (_GLF_DEAD(false)))), true && (bool(bool(true && (_GLF_DEAD(false)))))))), false), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))))))) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)))))) / 1u)) / 1u)), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))), 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))), 0u | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(94235u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)))))) | (1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), min(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec3(0u, 0u, 0u))), ~ (~ (~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(136644u, 9275u, 195789u)) : ~ (uvec3(0u, 0u, 0u))))))))) | (gl_WorkGroupID)).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))).x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))), max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))))) << 0u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))) ^ 0u)) | (gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u), uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u)))) ^ 0u), 1u, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false), true, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size)) >> 0u)), (max(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id)))))) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) * 1u)) % subgroup_size))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((injectionSwitch * mat2(3885.2460, 58.04, -4.2, -5608.5197))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * cos(0.0)) : _GLF_FUZZED(float(23883)))), 0.0), clamp(_GLF_IDENTITY(min(0.0, 0.0), float(mat4(min(0.0, 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(min(0.0, 0.0), float(mat2(min(0.0, 0.0), 1.0, tan(0.0), 0.0))), min(0.0, 0.0)))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), min(float(_GLF_FUZZED(float(true))), float(_GLF_FUZZED(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_FUZZED(3.2)), bool(false))))))), float(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), 0.0 + (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))))), bool(true))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), 1.0 * (_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), clamp(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))))))), float(_GLF_IDENTITY(mat2x3(min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0), (min(0.0, 0.0)) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))), mix(float(_GLF_FUZZED(float(true))), float(min(min(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(164.021)), float(0.0), bool(true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((min(0.0, 0.0)), max((min(0.0, 0.0)), _GLF_IDENTITY((min(0.0, 0.0)), _GLF_IDENTITY(float(vec2((min(0.0, 0.0)), 0.0)), (float(vec2((min(0.0, 0.0)), 0.0))) - 0.0)))) + 0.0, (_GLF_IDENTITY((min(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.7)), float(1.0), bool(true)))))) + 0.0, (_GLF_IDENTITY((min(0.0, 0.0)) + 0.0, max((min(0.0, 0.0)) + 0.0, (min(0.0, 0.0)) + 0.0))) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5190.8166)), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(true))))))) - 0.0)))))), bool(true))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.4) : 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), mat2x3(mat3x4(mat2x3(min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(40.67)), bool(false))), 0.0)) + 0.0)), mix(float(_GLF_FUZZED(float(true))), float(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) + 0.0))), bool(true))), _GLF_IDENTITY(min(_GLF_IDENTITY(min(0.0, 0.0), 0.0 + (min(0.0, 0.0))), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, abs(0.0), 0.0, 0.0))))) + 0.0)), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0))))))))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(min(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1447.6185)), bool(false)))), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), mix(float(_GLF_FUZZED(float(true))), float(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0)))) + 0.0))), bool(true))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-20.99, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), (float(_GLF_FUZZED(-0.8))) * round(length(normalize(sqrt(vec2(1.0, 1.0)))))), float(-20.99), bool(true))), (-20.99) + 0.0)) : 0.0)))) + _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))))), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)))))))))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(true)), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(float(true)), (_GLF_FUZZED(float(true))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(-4.3, -967.001, 6.9).x)), bool(false)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0 + (dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(897.222)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, determinant(mat3(0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), sqrt(1.0), 1.0)))), float(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.4)), (float(_GLF_FUZZED(-9.4))) * exp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), float(0.0), bool(true)))), (min(0.0, 0.0)) + 0.0))), bool(true))), _GLF_IDENTITY(min(min(_GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0))), 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2964.6318)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2964.6318)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), 0.0)), 0.0)) + 0.0)), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)))))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))), (true ? _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(717.320, -20.21, 6133.2335)))))))) : _GLF_FUZZED(float(workgroup_size))))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (min(0.0, 0.0)) + 0.0)), mix(float(_GLF_FUZZED(float(true))), float(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))), bool(true))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), clamp(_GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(4.5)), float(min(0.0, 0.0)), bool(true))), min(0.0, 0.0))), _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0))), _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(-2.5) : min(0.0, 0.0))))), (min(0.0, 0.0)) + 0.0)), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)))))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY((min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((-7.3 + -6786.1274) - -5.6))), bool(false))))), clamp((min(0.0, 0.0)), (min(0.0, 0.0)), (min(0.0, 0.0)))) + 0.0)), min(_GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(true)), (_GLF_FUZZED(float(true))) + 0.0), float(mat4(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), float(true), float(true)))), 0.0, 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), float(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) + 0.0))), bool(true))), _GLF_IDENTITY(min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + 0.0)), 1.0 * (min(min(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), float(mat2(min(0.0, 0.0), 1.0, 1.0, 1.0)))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), float(mat2(min(0.0, 0.0), 1.0, 1.0, 1.0)))) + 0.0), (true ? _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(0.0, 0.0), float(mat2(min(0.0, 0.0), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(min(0.0, 0.0), float(mat2(min(0.0, 0.0), 1.0, 1.0, 1.0)))) / 1.0)) + 0.0) : _GLF_FUZZED(-5749.0392)))) - 0.0))))))))))))))), float(_GLF_FUZZED(5.9)), bool(false))), 0.0) + (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0)), (vec2(mat2x4(injectionSwitch, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(vec4((0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) - log(exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (true ? min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED((bvec3(false, false, false) , -4016.8916))))), 0.0))))), 1.0))) * mat2(1.0))))), 1.0, exp(0.0), abs(0.0), length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec2(true && (_GLF_DEAD(false)), true)))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (0 | 0) | (64)), max(64, 64)), _GLF_IDENTITY(0, ~ (~ (0))));
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(((4)), _GLF_IDENTITY((_GLF_IDENTITY((4), 0 + ((4)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(4, max(4, 4))))), (int(int((_GLF_IDENTITY(4, max(4, 4)))))) | (int(int((_GLF_IDENTITY(4, max(4, 4)))))))) << 0)), _GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))) << 0, ((((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))) << 0) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(61098, (61098) | (61098)))))), ((_GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(4, max(4, 4))))), (int(int((_GLF_IDENTITY(4, max(4, 4)))))) | (int(int((_GLF_IDENTITY(4, max(4, 4)))))))) << 0)), _GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))) << 0, ((((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))) << 0) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(61098, (61098) | (61098))))))) << 0)))) | _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), min(((4)), ((4)))), ((4))))) << 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(false, false || (false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, false || (false))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(356.342, -3.9)) : injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || false), true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || false))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(2658.8233, 0.0 + (2658.8233)) * -0.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 3534.6360 : -2452.8403))), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.4, 823.881)))).y, (injectionSwitch.y) + sin(log(1.0)))))), true, true))), true, _GLF_IDENTITY(true, false || (true))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0)))))).y))), false, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true, _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, true, false)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, true, false)), true, false, true))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, ((_GLF_IDENTITY(false, (false) && true)) || false) && true)) && true))), false, true)), (bool(bvec3((_GLF_IDENTITY(false, (false) && true)) || false, false, true))) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY((injectionSwitch), vec2(mat4(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(abs(injectionSwitch)) : (injectionSwitch))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2.6, 7.7)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY((injectionSwitch), vec2(mat4(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(abs(injectionSwitch)) : (injectionSwitch))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))))).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(245.351) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.1, 5154.5318)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(4.1, 5154.5318)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.1, 5154.5318)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))), true)), false || (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4.1, 5154.5318), (true ? _GLF_IDENTITY(vec2(4.1, 5154.5318), mix(vec2(_GLF_FUZZED(75.74), _GLF_FUZZED(653.263)), vec2((vec2(4.1, 5154.5318))[0], (vec2(4.1, 5154.5318))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(injectionSwitch)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.1, 5154.5318)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))), true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), read_1 + 1)), min(read_1 + 1, read_1 + 1))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), 0 ^ (0 ^ (1)))), (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)) ^ (1)), _GLF_IDENTITY((1) | (1), int(_GLF_IDENTITY(ivec2((1) | (1), 0), max(ivec2((_GLF_IDENTITY(1, 1 * (1))) | (1), 0), ivec2((1) | (1), 0)))))))) << 0)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)), 0 ^ (1)), (1) | (1))))) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) | ((1)))), (1) | (1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), min((1), (1)))), (~ (_GLF_IDENTITY((1), min((1), (1))))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))) | (_GLF_IDENTITY(1, min(1, 1))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) | (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))), 1, 0)), 0 ^ (int(ivec3(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) | (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))), 1, 0))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(ivec4(14134, 16343, -27993, 29979)[3])))) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) ^ 0)), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | _GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1)), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ 0), 0 ^ (1)), (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)))), (1) | (1))) / 1) * 1)) ^ 0))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1) | (1), ((1) | (1)) << (0 << _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) | (1))) / 1))))) == read_2, (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(-72692))), 1)))), (1) | (1)) == read_2) && true))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), min(vec4(injectionSwitch, 0.0, 0.0), vec4(injectionSwitch, 0.0, 0.0))))))).y)), true)))), (bool(bool(bool(bvec4((false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(exp(0.0))), 0.0)), float(mat3x2(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0))) && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(mat3x2(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0))) && (injectionSwitch.x > injectionSwitch.y)))) || false)), true))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true))))))), true, false)))))), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), ! (! (_GLF_IDENTITY(true, false || (true))))))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), ! (! (_GLF_IDENTITY(true, false || (true))))))), true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), ! (! (_GLF_IDENTITY(true, false || (true))))))), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(298.381))), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.0)), bool(false))))))), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(298.381))), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.0)), bool(false)))))))))))) ? _GLF_FUZZED(88.65) : injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), min(_GLF_IDENTITY(read_2, (read_2) << 0u), _GLF_IDENTITY(read_2, (read_2) << 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), (true ? _GLF_IDENTITY(read_2, (read_2) << 0u) : _GLF_FUZZED(read_1)))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(1.0, (1.0) - abs(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * (injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76))))), mix(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76)))))), float(_GLF_FUZZED(2.2)), bool(false))))) - 0.0) < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(1.0, (1.0) - abs(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * (injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76))))), mix(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76)))))), float(_GLF_FUZZED(2.2)), bool(false))))) - 0.0) < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(1.0, (1.0) - abs(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * (injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76))))), mix(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec4(-8.0, 2311.8679, 120.181, 82.76)))))), float(_GLF_FUZZED(2.2)), bool(false))))) - 0.0) < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), false, false, false)))) && true), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, log(1.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, log(1.0), 0.0)), transpose(transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, log(1.0), 0.0))))))))), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((-797.819 * -3079.3443))), bool(false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x, (false ? _GLF_FUZZED(21.91) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.4) : 1.0)) * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), true, false, true))))) && true), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true, true && (true)), false, true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true, true && (true)), false, true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true, true && (true)), false, true)))))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true, true && (true)), false, true))))))) || false))))) && true), (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0])), injectionSwitch[1])))[0], _GLF_FUZZED(59.73)), vec2(_GLF_FUZZED(5844.8095), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
