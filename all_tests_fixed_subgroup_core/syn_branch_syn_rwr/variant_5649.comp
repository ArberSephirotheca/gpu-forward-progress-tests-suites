#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec3 _f0;
 vec2 _f1;
 bvec3 _f2;
 mat4 _f3;
 mat3x2 _f4;
 uint virtual_gid;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 bool _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
 int _f1;
 vec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x))))) / 1.0))))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-899.424) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-93.54)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-494.044, -51.54)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (true ? mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0) : _GLF_FUZZED(mat2(43.50, 987.674, -50.95, 0.5))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(-8187.4862)), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))))))), injectionSwitch, injectionSwitch)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(workgroup_size))), 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))))).x, _GLF_struct_0(bvec2(true)), 1, vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(3.6, 873.938, 4.7, -387.270, 968.803, -43.05, -1.1, -3.4, -452.040)) : mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_1.workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0), injectionSwitch.y)), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_2(vec3(1.0), uvec2(1u), 1u), true, mat4x2(1.0), _GLF_struct_3(vec3(1.0), vec2(1.0), bvec3(true), _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(transpose(mat4(1.0))))))), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u, ((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u) | ((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u))), 1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), workgroup_base)))), 0u, (0u ^ 1u), 1u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, subgroup_size))) * 1u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id))) >> 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id))) >> 0u), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, (0u ^ 1u), 1u))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((64099u & workgroup_size)) : 0u)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | 0u)) + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_5._f0._f3.virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), 0 + (_GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((4), ((4)) / 1) : _GLF_FUZZED(sign(-59544)))) | (4)))), 64, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0))))))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(next_virtual_gid)))) | (read_1 + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), vec2(_GLF_FUZZED(-8.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)), false, true)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bool(bool(bvec3(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-8027.3801), _GLF_FUZZED((7.7 / vec2(-9.2, -5244.7273).t))), bvec2(_GLF_IDENTITY(false, (false) || false), false))).y)), true, false)))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_5._f0._f3.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (read_1) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(read_1, min(read_1, read_1)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(-1936) : _GLF_IDENTITY(1, 0 + (1)))), (1) - 0) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), min(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), min(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << 0u), read_2))))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(1, 1))) >> 0), (1) / 1), 1)), min(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), _GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_1)))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true)))), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | 0u)) / 1u)), (uint(read_1 + 1 == read_2)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2), _GLF_IDENTITY((true ? uint(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) : _GLF_FUZZED(24304u)), clamp(_GLF_IDENTITY((true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(24304u)), 0u | (_GLF_IDENTITY((true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(24304u)), max((true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(24304u)), (true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(24304u)))))), (true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(24304u)), (true ? uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(24304u))))))), uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), 0u | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) * (_GLF_IDENTITY(1u & 1u, uint(uvec4(1u & 1u, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : 1u)), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), 1u, 1u))))) | (1u)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))))), uint(uvec3(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec3(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 1u)))) << 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (1u)))), 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true)))), uint(uvec3(uint(read_1 + 1 == read_2), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) | (1u), uint(uvec2((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) | (1u), 1u)))), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(197361u) : _GLF_IDENTITY(read_2, 0u ^ (read_2)))), bool(bvec3(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true)))), uint(uvec3(uint(read_1 + 1 == read_2), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) | (1u)), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1))) - 0), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) >> 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(48144) : max(1, 1)))), (1) / _GLF_IDENTITY(1, (1) | 0)), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1)))), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (1)), max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (1)), max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (1)), max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u))) << 0u)))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) / 1), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) >> 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(48144) : max(1, 1)))), (1) / _GLF_IDENTITY(1, (1) | 0)), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))) << 0u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) - 0u)) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_base))) : read_1 + 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(48144) : max(1, 1)))), (1) / _GLF_IDENTITY(1, (1) | 0)), 1)), (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true))))) >> 0u), uint(uvec3(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) | (1u)), 0u)))))), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(read_2)) : 1)), read_1 + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min(_GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0), _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))))))) >> 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(read_2)) : 1, ((0 << _GLF_IDENTITY(int(8), int(8))) & -2588) ^ (false ? _GLF_FUZZED(bitCount(read_2)) : 1)))), read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min(_GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0), _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))))))) >> 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(read_2)) : 1, ((0 << _GLF_IDENTITY(int(8), int(8))) & -2588) ^ (false ? _GLF_FUZZED(bitCount(read_2)) : 1)))), read_1 + 1))) | 0u), ~ (~ (_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(read_2)) : 1)), read_1 + _GLF_IDENTITY(1, max(1, 1))))))), _GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(read_2)) : 1)), read_1 + 1))))) | (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true)))), uint(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), clamp(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) | (1u)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u + (read_1)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), read_1 + 1))) | (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)))))) == read_2, bool(bvec3(read_1 + 1 == read_2, false, true)))), uint(uvec3(uint(read_1 + 1 == read_2), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), 1u * (clamp(1u, 1u, 1u))))))) | (1u)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (~ (read_1))))) + 1, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)), max(read_1 + 1, read_1 + 1))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read_1, (140809u & 0u) ^ (read_1)) + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1), ((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)) << 0u))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read_1, (140809u & 0u) ^ (read_1)) + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1), ((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)) << 0u))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read_1, (140809u & 0u) ^ (read_1)) + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))), 1u * ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1), ((false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)) << 0u))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1))))), (_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(workgroup_base) : read_1 + 1)))))))) == read_2, _GLF_IDENTITY(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), bool(bool(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec4(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (! (! (bool(bvec4(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (! (! (bool(bvec4(bool(bvec3(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec2(ivec2(1, 0)))))) == read_2, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))))))), uint(uvec3(uint(read_1 + 1 == read_2), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? clamp(1u, 1u, 1u) : _GLF_FUZZED(read_2)))) + 0u)))), min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) ^ (0u ^ 0u)), 1u, 1u)))), min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 0u)), ~ (~ (uint(uvec3(1u, 1u, 0u))))))) >> 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u))))))))))))) | (1u)), _GLF_IDENTITY(0u, (0u) | (0u))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, 0 | (64))))) / 1), _GLF_IDENTITY(4, (4) << (0 | 0)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), false, true, false)))) || false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
}
