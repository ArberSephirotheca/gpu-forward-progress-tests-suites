#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (injectionSwitch)))) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, int(ivec2(8, 1)))))), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ 0)))), _GLF_IDENTITY(int(int((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ~ (~ ((1 << _GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0))))), (int(int(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (true ? int(int(1)) : _GLF_FUZZED(-79938)))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (0))), int(ivec2(int(0), 0)))) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) * 1)))))), int(0)))))) ^ 0))); _injected_loop_counter ++)
      {
       GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = subgroup_size;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0)), 1 * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), int(0))) << 0)) >> _GLF_IDENTITY(int(0), int(0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), int(int(int(8))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED((44004 - _injected_loop_counter)) : 0))) * 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-43.47)), (float(_GLF_FUZZED(-43.47))) / 1.0), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-43.47)), float(injectionSwitch.y), bool(true)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), false))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(abs(16.80), max(abs(16.80), _GLF_IDENTITY(abs(16.80), (_GLF_IDENTITY(abs(16.80), (false ? _GLF_FUZZED(9.5) : abs(16.80)))) / 1.0)))) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))) && true))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))), bool(bool(bool(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) >> 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0 ^ (0)), _GLF_IDENTITY(0, 0 ^ (0))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))), false || (_GLF_IDENTITY(bool(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))), bool(bool(bool(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0)))))))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(103593u, 140499u, 86161u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x) : _GLF_FUZZED(atan((true ? -212.149 : 4616.8338)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = num_workgroup;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-198.644) : 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (false) && true)));
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))), false)))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false))))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (true ? _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(0.4)), float(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-2839.1521)), float(sqrt(0.0)), bool(true)))), bool(true))) : _GLF_FUZZED(-4.7)))))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false)))))))) || _GLF_IDENTITY(false, true && (false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))), false)))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false))))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (true ? _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(0.4)), float(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-2839.1521)), float(sqrt(0.0)), bool(true)))), bool(true))) : _GLF_FUZZED(-4.7)))))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false)))))))) || _GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))), false)))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false))))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (true ? _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(0.4)), float(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-2839.1521)), float(sqrt(0.0)), bool(true)))), bool(true))) : _GLF_FUZZED(-4.7)))))))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false), false)))))))) || _GLF_IDENTITY(false, true && (false))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(6, (6) | 0))))))); _injected_loop_counter --)
    {
     _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) ^ 0u)) + _GLF_IDENTITY(0u, 0u ^ (0u)))) * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z), uint(uvec4(_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z), ~ (~ (~ (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.z)))), 1u, 1u, 0u)))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), false, true, false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), false, true, false))), true))) || false), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false)), (bool(bvec3(false, false, false))) || false), false, true, false)))), true)), true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false) || false, bool(bvec3((true) || false, false, false)))) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, (1) + 0))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), int(5))), (~ (_GLF_IDENTITY(int(5), int(5)))) - 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), clamp((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(7516))), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(40.66))) > injectionSwitch.y))))), true && (injectionSwitch.x > injectionSwitch.y)))))))));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))) - 0.0))))))));
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))) || false)))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, max(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, clamp(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)) + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u), (uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(workgroup_id)))) ^ 0u) : 0u)) << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_size))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, _GLF_IDENTITY((1u & 1u), min((1u & 1u), _GLF_IDENTITY((1u & 1u), (false ? _GLF_FUZZED(num_workgroup) : (1u & 1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) & 1u), 1u)))), 0u | ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 1u)) & 1u), 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) * 1u), uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) * 1u), uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), 0u, 1u, 1u), min(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) * 1u), uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) * 1u), uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), 0u, 1u, 1u))))))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-82.65) : 0.0))) / round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0)), 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | 0u) + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u), max(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u), (_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u), uvec3(uvec4(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u), 1u)))) + uvec3(0u, 0u, 0u)), uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))), (true ? _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u)))))) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), max(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, uint(uint(1u)))))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, max(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec4(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, 1u, 0u, 1u))))))), uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u)))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec3(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (1u & 1u), 1u))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) >> uvec2(0u, 0u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, min(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y))) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, ~ (~ (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)))) * 1u)) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y))) >> 0u)) >> 0u))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, max(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u)) - 0u)), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y) | (GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, min(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size))) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y), ~ (~ ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)))))) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) << 0u)))))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u, max((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size), ~ (~ ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size))))) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size), ~ (~ ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)))))) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u), ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))), (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.bgr.zx) : (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u))))))), 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u, 0u ^ ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size), ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)) | ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size)).y))) ^ 0u))))))) << _GLF_IDENTITY(0u, min(0u, 0u)))) + subgroup_local_id;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.4) : injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((36621 & 0) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 1u, 0u)))) - 0u)) % GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.x = _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id)))));
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), max(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), _GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0))))))), false || (_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), _GLF_IDENTITY(int(ivec2(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), 1)), ~ (~ (int(ivec2(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), 1)))))), max(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), _GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, min(2, 2))))))), 1, 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec2(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : _GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0)), (int(ivec3((0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0))) + 0))))))))); _injected_loop_counter --)
      {
       do
        {
         atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.x], uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 : _GLF_FUZZED(virtual_gid)))), ((_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 : _GLF_FUZZED(virtual_gid))))) ^ 0u) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 : _GLF_FUZZED(virtual_gid)))) ^ 0u)) | (read_1 + 1))) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 : _GLF_FUZZED(virtual_gid)))) | (read_1 + 1)))), read_1 + _GLF_IDENTITY(1, min(1, 1))))), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))))], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], clamp(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), virtual_gid)), virtual_gid)), 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 0u + (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))))), min(_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (virtual_gid), max(0u | (virtual_gid), _GLF_IDENTITY(0u | (virtual_gid), (false ? _GLF_FUZZED(read_1) : 0u | (virtual_gid))))))))], 1u * (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))])))))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), _GLF_IDENTITY(max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))), 0u | (virtual_gid))])), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))]))) << 0u))))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])))), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, 0u ^ (0u)) | _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (virtual_gid)))) << 0u))]))), max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))])), _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))]))))))) << 0u), 4, 64, 0);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7708.7271, _GLF_IDENTITY(float(vec2(7708.7271, 0.0)), float(mat4(float(vec2(7708.7271, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, exp(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), float(mat3(float(_GLF_FUZZED(7708.7271)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0)))), bool(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.0) : injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(585.254) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0)) | (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0))))), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) - 0)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) | (int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(4))) | 0))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), int(4)))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) / 1))))
                    {
                     do
                      {
                       if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(((subgroup_local_id)), 1u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id)))), 1u, 1u)) - uvec3(0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec3(((subgroup_local_id)), 1u, 1u), (uvec3(((subgroup_local_id)), 1u, 1u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(((subgroup_local_id)), 1u, 1u), (uvec3(((subgroup_local_id)), 1u, 1u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(((subgroup_local_id)), 1u, 1u), (uvec3(((subgroup_local_id)), 1u, 1u)) - uvec3(0u, 0u, 0u)))))) ^ 0u, max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, uint(uvec2(((subgroup_local_id)) ^ 0u, 0u)))))), (uint(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, max(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, min(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, (((subgroup_local_id)) ^ 0u) >> 0u), ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u), (_GLF_IDENTITY(max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u), (true ? max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u) : _GLF_FUZZED(virtual_gid)))) | (max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u), clamp(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u), uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u), uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u))))), uint(uvec2(((subgroup_local_id)) ^ 0u, 0u))))))) | (uint(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, uint(uvec2(((subgroup_local_id)) ^ 0u, 0u))))))))), uint(uvec2(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, uint(uvec2(((subgroup_local_id)) ^ 0u, 0u)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, (_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, ~ (~ (((subgroup_local_id)) ^ 0u)))) << 0u), clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), 0u | (((subgroup_local_id)))) ^ 0u, uint(uvec2(((subgroup_local_id)) ^ 0u, 0u))))))) | (uint(_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, clamp(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) ^ 0u, max(((subgroup_local_id)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, (((subgroup_local_id)) ^ 0u) << 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) ^ 0u, uint(uvec2(((subgroup_local_id)) ^ 0u, 0u))))))))), 1u)))))), subgroup_local_id))) | 0u) + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size, ~ (~ (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size))).y)
                        {
                         int i = 0;
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) - vec2(0.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1.1)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(-6511.0891, 6338.2476, -5.4, 143.756)) : _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y) : _GLF_FUZZED(-80.26))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0), (mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0), mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0), (mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-334.836), _GLF_FUZZED(-979.251)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y)))))))))));
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(14.59)), bool(false)))) * 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-2.4)), max((true ? injectionSwitch.x : _GLF_FUZZED(-2.4)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-2.4)), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-2.4)), mix(float((true ? injectionSwitch.x : _GLF_FUZZED(-2.4))), float(_GLF_FUZZED(-8746.5252)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-2.4))))))))) > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec4(bool(_GLF_IDENTITY(false, false || (false))), true, true, _GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                              barrier();
                             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
                              barrier();
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.x], uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, 0 ^ (1)))) == _GLF_IDENTITY(read_2, (read_2) | 0u)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 | 0, (0 | 0) | 0)), 0 ^ (~ (_GLF_IDENTITY(0 | 0, (0 | 0) | 0))))))) | (1)), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         atomicStore(buf[GLF_merged3_0_1_16_1_1_14_2_1_12next_virtual_gidworkgroup_baseworkgroup_id.x], uint(read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(0 ^ 0, (0 ^ _GLF_IDENTITY(0, 0 ^ (0))) + 0), _GLF_IDENTITY(0 ^ 0, int(int(_GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0))))), 0 ^ 0))), ((1) >> (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) + 0), _GLF_IDENTITY(0 ^ 0, int(int(_GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0))))), 0 ^ 0)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), int(int(~ ((1))))))) : _GLF_FUZZED(-39678))) - (0 | 0), ((1) - (0 | 0)) | ((1) - (0 | 0))), (_GLF_IDENTITY((1) - (0 | 0), _GLF_IDENTITY(int(ivec2((1) - (0 | 0), 1)), (int(ivec2((1) - _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), max((0 | 0), (0 | 0)))) - 0), 1))) - 0))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((0), 0 | ((0))) >> 0))), 4, 64, 4);
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, bool(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
}
