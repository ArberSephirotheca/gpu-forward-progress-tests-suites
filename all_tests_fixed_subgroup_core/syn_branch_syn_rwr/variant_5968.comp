#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 uvec4 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeread_1;
 uvec4 GLF_merged2_0_2_54_2_2_43GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 uvec3 GLF_merged2_0_2_48_2_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idread_2;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id;
 uvec4 GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 uvec4 GLF_merged2_0_3_93_3_1_11GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basevirtual_gid;
 uvec4 GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidsubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_local_id;
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1;
 uvec4 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup;
 uvec4 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 GLF_merged2_0_2_54_2_2_43GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw = GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw = GLF_merged2_0_2_54_2_2_43GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw;
 uvec3 GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     GLF_merged2_0_3_93_3_1_11GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basevirtual_gid.xyz = GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_base;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.xyz = GLF_merged2_0_3_93_3_1_11GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basevirtual_gid.xyz;
  }
 uvec4 GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1;
 uvec4 GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id;
 uvec4 GLF_merged2_0_2_51_2_2_54GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeread_1.xyz = GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_local_id.xyz = GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeread_1.xyz;
        }
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_local_id.xyz;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizenext_virtual_gid.xyz;
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id;
 uvec4 GLF_merged2_0_2_48_2_2_48GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gid;
 GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidsubgroup_size.xyz = GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gid;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = (1 ^ (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           do
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz = GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidsubgroup_size.xyz;
                  }
                 else
                  {
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_2_54_2_2_43GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.xyz.xy = GLF_merged2_0_2_54_2_2_43GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_2_51_2_2_54GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw = GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.xyz.xy;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 | (0 >> _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.xy = GLF_merged2_0_2_51_2_2_54GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw;
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.xy = GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.xy;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw = GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.xy;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                    {
                                                     GLF_merged2_0_2_51_2_2_54GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw;
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)));
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 do
  {
   GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw = GLF_merged2_0_2_51_2_2_54GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 do
  {
   do
    {
     GLF_merged2_0_2_48_2_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idread_2.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               GLF_merged2_0_2_48_2_2_48GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.zw = GLF_merged2_0_2_48_2_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idread_2.xy;
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (((int(_GLF_ONE(1.0, injectionSwitch.y)) | 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                      {
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy = GLF_merged2_0_2_48_2_2_48GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.zw;
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uvec4 GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy = GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy;
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 GLF_merged2_0_2_48_2_2_48GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.xy = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy;
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.xy = GLF_merged2_0_2_48_2_2_48GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.xy;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             do
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                        {
                                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
                                                {
                                                 do
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                    {
                                                     GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.xy;
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.x = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.w = GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.x;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), ((0 | 0)) - 0)); _injected_loop_counter --)
                                        {
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.w = GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.w;
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = (1 ^ ((0 ^ 0) & -50418)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy.x = GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.w;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
uint subgroup_size = 16;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidsubgroup_size.w = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))));
 GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.y = GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidsubgroup_size.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.x = GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.y;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.w = subgroup_local_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_local_id.w = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.xy.x = GLF_merged2_0_3_71_3_1_17GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_local_id.w;
                  }
                }
               else
                {
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.z = GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.xy.x;
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.x = num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.y = GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.x;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.z = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.y;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.w = GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.z;
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ _GLF_IDENTITY(1, (1) >> 0))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.w = GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.w;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
      }
    }
   else
    {
    }
  }
 GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.z = GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw.y = GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.z;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.y = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = ((-72721 & 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.y = GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.y;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.xy.y = GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.y;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (((0 | ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                  {
                   do
                    {
                     GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw.x = GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.xy.y;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 | ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                {
                 do
                  {
                   do
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               do
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.y = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw.x;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 8:
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           uvec2(101556u, 52281u);
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 0:
                 case 4:
                 case 9:
                 case 10:
                 case 91:
                 case 46:
                 case 27:
                 GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy.y = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.y;
                 break;
                 case 35:
                 do
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                            {
                             do
                              {
                               while(true)
                                {
                                 mat4 _GLF_SWITCH_0_0v[81], _GLF_SWITCH_0_1v;
                                 float _GLF_SWITCH_0_2v[48];
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   min((vec3(869.635, -7.0, -1009.4687) + vec3(28.62, 8118.8615, -2.9)), vec3(-210.386, -7892.2600, 364.792));
                                  }
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               while(false)
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                    {
                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                                                      {
                                                       do
                                                        {
                                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0)))); _injected_loop_counter --)
                                                          {
                                                           do
                                                            {
                                                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                              {
                                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                {
                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(76835) : int(5))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                            {
                                                                            }
                                                                           else
                                                                            {
                                                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                                                                              {
                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                {
                                                                                 do
                                                                                  {
                                                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (29867 & 0)); _injected_loop_counter --)
                                                                                    {
                                                                                     do
                                                                                      {
                                                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                        {
                                                                                         for(int _injected_loop_counter = ((-29485) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                                          {
                                                                                           for(                                                                                           lessThan(ivec2(-69629, -14361), ivec2(-89893, -83719));
 (GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.xy == GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.xy); uvec4(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.y, GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.w, GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.y, GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.z))
                                                                                            {
                                                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                              {
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                  {
                                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                    {
                                                                                                     do
                                                                                                      {
                                                                                                       do
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                          {
                                                                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                            {
                                                                                                             for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                                                              {
                                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                {
                                                                                                                 (true ? notEqual(uvec3(189846u, 189796u, 197659u), uvec3(180420u, 55995u, 130931u)) : bvec3(true, bvec2(false, false)));
                                                                                                                }
                                                                                                               else
                                                                                                                {
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                           else
                                                                                                            {
                                                                                                            }
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                          }
                                                                                                        }
                                                                                                       while(_GLF_WRAPPED_LOOP(false));
                                                                                                      }
                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                    }
                                                                                                   else
                                                                                                    {
                                                                                                    }
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                             ivec4 _GLF_SWITCH_0_3v;
                                                                                             mat4x2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                                                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                              {
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                {
                                                                                                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                                                                                                  {
                                                                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                                                                                    {
                                                                                                    }
                                                                                                   else
                                                                                                    {
                                                                                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                                                      {
                                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                          {
                                                                                                           do
                                                                                                            {
                                                                                                             do
                                                                                                              {
                                                                                                               do
                                                                                                                {
                                                                                                                 do
                                                                                                                  {
                                                                                                                   do
                                                                                                                    {
                                                                                                                     mat3(-5.3, -6.1, 3828.7767, -7.7, -7014.3619, 241.298, 34.47, 2630.9691, -0.0);
                                                                                                                    }
                                                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                                                  }
                                                                                                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                                }
                                                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                                                              }
                                                                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                            }
                                                                                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                          }
                                                                                                        }
                                                                                                       else
                                                                                                        {
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                }
                                                                                              }
                                                                                             do
                                                                                              {
                                                                                               do
                                                                                                {
                                                                                                 do
                                                                                                  {
                                                                                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                                                                    {
                                                                                                     do
                                                                                                      {
                                                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                        {
                                                                                                        }
                                                                                                       else
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                          {
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                           do
                                                                                                            {
                                                                                                             ;
                                                                                                            }
                                                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                    }
                                                                                                  }
                                                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                                                }
                                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                                              }
                                                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                              {
                                                                                               for(int _injected_loop_counter = (0 & -29157); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                  {
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                    {
                                                                                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                                                                                                      {
                                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                                                                                                          {
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                            {
                                                                                                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_injected_loop_counter)))))); _injected_loop_counter --)
                                                                                                              {
                                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                {
                                                                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                  {
                                                                                                                  }
                                                                                                                 else
                                                                                                                  {
                                                                                                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                    {
                                                                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                      {
                                                                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                        {
                                                                                                                        }
                                                                                                                       else
                                                                                                                        {
                                                                                                                         do
                                                                                                                          {
                                                                                                                           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(5), int(5))) | 0)); _injected_loop_counter --)
                                                                                                                            {
                                                                                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                                                              {
                                                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                {
                                                                                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                  {
                                                                                                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                                    {
                                                                                                                                     do
                                                                                                                                      {
                                                                                                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                        {
                                                                                                                                        }
                                                                                                                                       else
                                                                                                                                        {
                                                                                                                                         do
                                                                                                                                          {
                                                                                                                                           do
                                                                                                                                            {
                                                                                                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                              {
                                                                                                                                              }
                                                                                                                                             else
                                                                                                                                              {
                                                                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                {
                                                                                                                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                                                                                                  {
                                                                                                                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                                    {
                                                                                                                                                    }
                                                                                                                                                   else
                                                                                                                                                    {
                                                                                                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                                                      {
                                                                                                                                                      }
                                                                                                                                                     else
                                                                                                                                                      {
                                                                                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                        {
                                                                                                                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                                                          {
                                                                                                                                                          }
                                                                                                                                                         else
                                                                                                                                                          {
                                                                                                                                                           do
                                                                                                                                                            {
                                                                                                                                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                                                                                                                                                              {
                                                                                                                                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                                                                                                                                                                {
                                                                                                                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                  {
                                                                                                                                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                                                    {
                                                                                                                                                                    }
                                                                                                                                                                   else
                                                                                                                                                                    {
                                                                                                                                                                     do
                                                                                                                                                                      {
                                                                                                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                        {
                                                                                                                                                                         do
                                                                                                                                                                          {
                                                                                                                                                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                                                                                                                                                                            {
                                                                                                                                                                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                                                                                                                              {
                                                                                                                                                                               do
                                                                                                                                                                                {
                                                                                                                                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                                                                                                                                  {
                                                                                                                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                                    {
                                                                                                                                                                                     do
                                                                                                                                                                                      {
                                                                                                                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                                        {
                                                                                                                                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                                          {
                                                                                                                                                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                                                                                                            {
                                                                                                                                                                                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                                                                                              {
                                                                                                                                                                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                                                                                {
                                                                                                                                                                                                }
                                                                                                                                                                                               else
                                                                                                                                                                                                {
                                                                                                                                                                                                 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-43628))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 90418))); _injected_loop_counter ++)
                                                                                                                                                                                                  {
                                                                                                                                                                                                   do
                                                                                                                                                                                                    {
                                                                                                                                                                                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                                                                                                      {
                                                                                                                                                                                                       do
                                                                                                                                                                                                        {
                                                                                                                                                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                                                          {
                                                                                                                                                                                                           do
                                                                                                                                                                                                            {
                                                                                                                                                                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                                                                                                                                              {
                                                                                                                                                                                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                       else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                         do
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                           else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                             else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (((0 >> _GLF_IDENTITY(int(2), int(2))) ^ 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))); _injected_loop_counter --)
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                 else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                         while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                   else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                                                          }
                                                                                                                                                                                                         else
                                                                                                                                                                                                          {
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                       while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                           else
                                                                                                                                                                                            {
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                         else
                                                                                                                                                                                          {
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                       else
                                                                                                                                                                                        {
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                                                                                                    }
                                                                                                                                                                                   else
                                                                                                                                                                                    {
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                         while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                        }
                                                                                                                                                                       else
                                                                                                                                                                        {
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                 else
                                                                                                                                                                  {
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                       else
                                                                                                                                                        {
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                               else
                                                                                                                                                {
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                                                          }
                                                                                                                                         while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                 else
                                                                                                                                  {
                                                                                                                                  }
                                                                                                                                }
                                                                                                                               else
                                                                                                                                {
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                                        }
                                                                                                                      }
                                                                                                                     else
                                                                                                                      {
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                               else
                                                                                                                {
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                           else
                                                                                                            {
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                       else
                                                                                                        {
                                                                                                        }
                                                                                                      }
                                                                                                     else
                                                                                                      {
                                                                                                      }
                                                                                                    }
                                                                                                   else
                                                                                                    {
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                             ivec2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[85], _GLF_SWITCH_0_8v;
                                                                                             mat4x3 _GLF_SWITCH_0_9v[88];
                                                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
                                                                                              {
                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                  {
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                   do
                                                                                                    {
                                                                                                     do
                                                                                                      {
                                                                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -54858)); _injected_loop_counter --)
                                                                                                        {
                                                                                                         do
                                                                                                          {
                                                                                                           do
                                                                                                            {
                                                                                                             do
                                                                                                              {
                                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                                {
                                                                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                  {
                                                                                                                  }
                                                                                                                 else
                                                                                                                  {
                                                                                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                                                                    {
                                                                                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 0), max(ivec4(int(1), 0, 0, 0), ivec4(int(1), 0, 0, 0)))))))); _injected_loop_counter --)
                                                                                                                      {
                                                                                                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                                                                                                                        {
                                                                                                                         do
                                                                                                                          {
                                                                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                                            {
                                                                                                                            }
                                                                                                                           else
                                                                                                                            {
                                                                                                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                                              {
                                                                                                                               for(int _injected_loop_counter = ((0 ^ 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
                                                                                                                                {
                                                                                                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                                                                  {
                                                                                                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                                                    {
                                                                                                                                     (mat3x2(4.4, 4.2, -6.4, 6252.2988, 967.881, -153.458) * mat2x3(-935.814, -93.26, 4122.0984, 8.0, -56.86, 8.4));
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                             else
                                                                                                                              {
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                               else
                                                                                                                {
                                                                                                                }
                                                                                                              }
                                                                                                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
                                                                                                            }
                                                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                                                          }
                                                                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                                        }
                                                                                                      }
                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                    }
                                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                                  }
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                    }
                                                                                  }
                                                                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                                                                }
                                                                               else
                                                                                {
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                     else
                                                                      {
                                                                      }
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                          }
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                 vec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
                                                 greaterThan(vec4(13.81, -2873.6333, 6.1, -71.85), max(vec4(6746.1344, 25.57, -9.6, -4.5), (_GLF_SWITCH_0_10v * mat4x2(36.31, 9.2, 56.73, -3.3, 4.8, -0.6, -3247.7778, -3.1))));
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   mat4x3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[97], _GLF_SWITCH_0_14v[87];
                                                   mat4 _GLF_SWITCH_0_15v[89];
                                                   do
                                                    {
                                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                      {
                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                            {
                                                             do
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                  {
                                                                   do
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                        {
                                                                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (_GLF_IDENTITY(int(6), (int(6)) | (int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                          {
                                                                           do
                                                                            {
                                                                             do
                                                                              {
                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                {
                                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                  {
                                                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                    {
                                                                                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                                                                                      {
                                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                        {
                                                                                         do
                                                                                          {
                                                                                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                                                                                            {
                                                                                             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(_injected_loop_counter) : int(2)))))); _injected_loop_counter --)
                                                                                              {
                                                                                               do
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                  {
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                    {
                                                                                                     do
                                                                                                      {
                                                                                                       do
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                          {
                                                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                            {
                                                                                                            }
                                                                                                           else
                                                                                                            {
                                                                                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                              {
                                                                                                               do
                                                                                                                {
                                                                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) | (~ (int(2)))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                                                                                                                  {
                                                                                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                                                    {
                                                                                                                    }
                                                                                                                   else
                                                                                                                    {
                                                                                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                                                                                                      {
                                                                                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                                                        {
                                                                                                                         ivec3(98483, -6447, -99811);
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                                                              }
                                                                                                             else
                                                                                                              {
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                          }
                                                                                                        }
                                                                                                       while(_GLF_WRAPPED_LOOP(false));
                                                                                                      }
                                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                                    }
                                                                                                   else
                                                                                                    {
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                                                                                        }
                                                                                       else
                                                                                        {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                   else
                                                                                    {
                                                                                    }
                                                                                  }
                                                                                 else
                                                                                  {
                                                                                  }
                                                                                }
                                                                               else
                                                                                {
                                                                                }
                                                                              }
                                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                            }
                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                          }
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                    }
                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(false));
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                   uvec4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[32], _GLF_SWITCH_0_18v;
                                                  }
                                                 ivec4 _GLF_SWITCH_0_19v;
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                 bvec4 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[24], _GLF_SWITCH_0_22v[97];
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 39:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(69269)) : int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(83496) : _GLF_IDENTITY(int(3), (int(3)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     vec2(-90.55, -9740.9600);
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                 default:
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))));
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint workgroup_base = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw.y * GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy.y;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (-34294 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.xyz.z = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.w = GLF_merged2_0_3_93_3_1_13GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basenum_workgroup.xyz.z;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-39396)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             do
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-71833 & 0)); _injected_loop_counter --)
                              {
                               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.w = GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.w;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint virtual_gid = GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.w + GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy.x * GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.x + GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.z;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y = virtual_gid;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged2_0_3_93_3_1_11GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basevirtual_gid.w = GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.z = GLF_merged2_0_3_93_3_1_11GLF_merged2_0_2_54_2_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idworkgroup_basevirtual_gid.w;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         for(int _injected_loop_counter = (1 | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                          {
                                                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 do
                                                                  {
                                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0)))); _injected_loop_counter ++)
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                                            {
                                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                                              {
                                                                              }
                                                                             else
                                                                              {
                                                                               do
                                                                                {
                                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                  {
                                                                                  }
                                                                                 else
                                                                                  {
                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                    {
                                                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                                                                                      {
                                                                                      }
                                                                                     else
                                                                                      {
                                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                        {
                                                                                        }
                                                                                       else
                                                                                        {
                                                                                         do
                                                                                          {
                                                                                           do
                                                                                            {
                                                                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                              {
                                                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                {
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                                                                                                  {
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                   GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.x = GLF_merged3_0_2_54_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idvirtual_gidworkgroup_base.z;
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                            }
                                                                                           while(_GLF_WRAPPED_LOOP(false));
                                                                                          }
                                                                                         while(_GLF_WRAPPED_LOOP(false));
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                   else
                                                                                    {
                                                                                    }
                                                                                  }
                                                                                }
                                                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
                                                                              }
                                                                            }
                                                                           else
                                                                            {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                          }
                         else
                          {
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
  }
 uint next_virtual_gid = GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.w + GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.xy.x * GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.x + ((GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.z + 1) % GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.x);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.x = next_virtual_gid;
  }
 GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizenext_virtual_gid.w = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.x;
 GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.z = GLF_merged2_0_3_71_3_1_16GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizenext_virtual_gid.w;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             do
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       do
                                        {
                                         GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.z = GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.xyz.z;
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.x], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeread_1.w = read_1;
  }
 else
  {
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.z = GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeread_1.w;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.w = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_17next_virtual_gidnum_workgroupread_1subgroup_local_id.z;
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.w = GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupread_1.w;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               do
                {
                 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.z = GLF_merged2_0_3_89_3_1_6GLF_merged2_0_2_48_2_1_16GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidread_1.w;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.x = GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idread_1subgroup_id.z;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     atomicStore(buf[GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.z], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.x + 1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(buf[GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy.x], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged2_0_2_48_2_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idread_2.z = read_2;
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.x = GLF_merged2_0_2_48_2_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idread_2.z;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.y = GLF_merged2_0_2_48_2_2_43GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.x;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (1 ^ 1))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                                {
                                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                  {
                                   case 98:
                                   for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                    {
                                                     do
                                                      {
                                                       do
                                                        {
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           injectionSwitch;
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(false));
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   case 0:
                                   case 16:
                                   case 25:
                                   case 23:
                                   case 61:
                                   case 70:
                                   case 64:
                                   case 92:
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                                    {
                                     do
                                      {
                                       do
                                        {
                                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                              {
                                               do
                                                {
                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                  {
                                                   do
                                                    {
                                                     do
                                                      {
                                                       if(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.z + 1 < GLF_merged2_0_3_71_3_1_11GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizesubgroup_id.xyz.x)
                                                        {
                                                         int i = 0;
                                                         do
                                                          {
                                                           do
                                                            {
                                                             do
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 do
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                    {
                                                                    }
                                                                   else
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       do
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           atomicStore(buf[GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.z], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.x + 1 == GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.y) + 1, 4, 64, 4);
                                                                          }
                                                                        }
                                                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                      }
                                                                    }
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(false));
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(false));
                                                        }
                                                       else
                                                        {
                                                         do
                                                          {
                                                           do
                                                            {
                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 do
                                                                  {
                                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                    {
                                                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                            {
                                                                            }
                                                                           else
                                                                            {
                                                                             do
                                                                              {
                                                                               do
                                                                                {
                                                                                 for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-98266 & 0)); _injected_loop_counter --)
                                                                                  {
                                                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                    {
                                                                                     do
                                                                                      {
                                                                                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                        {
                                                                                         do
                                                                                          {
                                                                                           atomicStore(buf[GLF_merged3_0_2_48_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idnext_virtual_gidnum_workgroup.z], uint(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.x + 1 == GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_14read_1read_2subgroup_local_idworkgroup_base.y) + 1, 4, 64, 4);
                                                                                          }
                                                                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                                                                        }
                                                                                      }
                                                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                    }
                                                                                   else
                                                                                    {
                                                                                    }
                                                                                  }
                                                                                }
                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                              }
                                                                             while(_GLF_WRAPPED_LOOP(false));
                                                                            }
                                                                          }
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                              }
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(false));
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             else
                                              {
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   else
                                    {
                                    }
                                   break;
                                   case 29:
                                   do
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                            {
                                             do
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   do
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                            {
                                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                                                              {
                                                               do
                                                                {
                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                  {
                                                                  }
                                                                 else
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       mat3x2(mat4x3(8.6, 9.7, 6.6, -9.5, -0.5, -2.7, -146.662, 8678.1372, -5350.2635, -5.7, 4.1, -7.1));
                                                                      }
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                }
                                                               while(_GLF_WRAPPED_LOOP(false));
                                                              }
                                                            }
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                   default:
                                   do
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               do
                                                {
                                                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                                                          {
                                                           1;
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                    }
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
