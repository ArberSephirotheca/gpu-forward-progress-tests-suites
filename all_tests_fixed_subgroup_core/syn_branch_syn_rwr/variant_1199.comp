#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec4((! ((false))), true, true, true))))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) || false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))), true)))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), min(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), min(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) | (max(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))))))))) << 0u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, max((subgroup_id) >> 0u, (subgroup_id) >> 0u)))))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) + 0u)))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true && (false)) ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true && (false)) ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u))) * subgroup_size, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) ^ 0u))))), max((subgroup_id), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(0u | ((subgroup_id)), 0u ^ (_GLF_IDENTITY(0u | ((subgroup_id)), min(0u | ((subgroup_id)), 0u | ((subgroup_id))))))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u))) * subgroup_size, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), 0u + (_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), ~ (~ (0u | (subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) >> 0u)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), ((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u)) * uvec4(1u, 1u, 1u, 1u))), max(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u)) * uvec4(1u, 1u, 1u, 1u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 1u, 1u, 0u)) * uvec4(1u, 1u, 1u, 1u))))))) << 0u))))))) << 0u))) * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(min(subgroup_local_id, workgroup_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, workgroup_id), (min(subgroup_local_id, workgroup_id)) >> 0u), min(subgroup_local_id, workgroup_id), min(subgroup_local_id, workgroup_id)))) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 0u + ((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u)), max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size) * 1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))) * subgroup_size) >> 0u)) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), min((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), ((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) | 0u))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, max((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, uint(uvec4((clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))) << 0u, 1u, (0u ^ 0u), 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(min(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))) - 0u)) << 0u)))))) * subgroup_size) + 0u))))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(true)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, false))))), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false)))), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))))) || false), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))))) || false), (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
