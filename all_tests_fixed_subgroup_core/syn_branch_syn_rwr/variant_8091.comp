#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.z = subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.z = subgroup_id) << 0u);
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w = subgroup_size) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))), true, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), min(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), (gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * 1u), 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), clamp(clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), min(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))) - uvec3(0u, 0u, 0u))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))) | uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), true, true))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), true, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) - (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (0u ^ 0u)))) ^ 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) - (0u ^ 0u)) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) - (0u ^ 0u)) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), (~ (gl_WorkGroupSize.x)) ^ 0u)))) - 0u), 0u, 1u), max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))), 0u, _GLF_IDENTITY(1u, (1u) | (1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(59124u))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))).x)), 0u, 1u))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u ^ (~ (gl_WorkGroupSize.x))), ~ (gl_WorkGroupSize.x))), (0u | 0u) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u)))) ^ 0u))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ (_GLF_IDENTITY(0u, 0u ^ (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ (_GLF_IDENTITY(0u, 0u ^ (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), 0u, 0u)) / uvec3(1u, 1u, 1u)), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), uint(0u)))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), 0u, 0u)))) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) - 0u))), ~ (~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) - 0u)), ~ (~ ((~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(54300u)))))))))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))), gl_WorkGroupSize)).x)) ^ 0u))), 0u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (1u | 1u), 0u), (uvec3(1u, (1u | 1u), 0u)) + uvec3(0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED((num_workgroup - subgroup_size)) : gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)), (true ? ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)), (true ? ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u))) : _GLF_FUZZED(subgroup_size))))))), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))) / 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (~ (gl_WorkGroupSize.x)) ^ 0u))))))), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), max((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x)) ^ 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x)) ^ 0u), 1u, 0u)))))))))))) << 0u), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | 0u)) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ (gl_WorkGroupSize.x)))) ^ 0u)), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ (gl_WorkGroupSize.x)))) ^ 0u))) | ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ (gl_WorkGroupSize.x)))) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), (true ? (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) ^ 0u, ((~ (gl_WorkGroupSize.x)) ^ 0u) | 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(uint(2860.7305)) : gl_WorkGroupSize.x)))))) ^ 0u))))))) / (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), (true ? (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) ^ 0u, ((~ (gl_WorkGroupSize.x)) ^ 0u) | 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(uint(2860.7305)) : gl_WorkGroupSize.x)))))) ^ 0u))))))) / (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), (true ? (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) ^ 0u, ((~ (gl_WorkGroupSize.x)) ^ 0u) | 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(uint(2860.7305)) : gl_WorkGroupSize.x)))))) ^ 0u))))))) / (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u)) | 0u)) << 0u)), 1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u, ((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u, ((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u) >> 0u)), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u, ((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u) >> 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u, ((~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) ^ 0u) >> 0u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (~ (gl_WorkGroupSize.x)) ^ 0u))) - 0u) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (gl_WorkGroupSize.x)))))) ^ _GLF_IDENTITY(0u, (0u) - (1u ^ 1u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) : _GLF_FUZZED(packUnorm4x8(vec4(2.3, 6.0, 8.5, -8.5)))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))), gl_WorkGroupSize.x))) << ((0u ^ 0u) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) ^ 0u, ((~ (gl_WorkGroupSize.x)) ^ 0u) | 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), min((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x)))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))).x) | 0u)), (~ (gl_WorkGroupSize.x)) ^ 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)), uint(uvec4((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)), 0u, 1u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)), (min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x))) - 0u)), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x)), (min((gl_WorkGroupSize.x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x))) - 0u))) << 0u)) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) ^ 0u)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(2860.7305)), (_GLF_IDENTITY(_GLF_FUZZED(uint(2860.7305)), ~ (~ (_GLF_FUZZED(uint(2860.7305)))))) * 1u) : gl_WorkGroupSize.x)))))) ^ 0u))))))) / (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u))))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u))))))))) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, true))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(false, true, false)))), (! (! (bool(bvec3(false, true, false))))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(workgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (1u) | 0u))), 0u)), ~ (~ (uint(uvec3(workgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), ~ (~ (1u))), 1u, _GLF_IDENTITY(1u, (1u) | 0u))), 0u)))))) | _GLF_IDENTITY((uint(uvec3(workgroup_size, 1u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : (uint(uvec3(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size)), 1u, 0u)))))))) ^ 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)))).w + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))).w, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w, 0u | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w)), 0u), ~ (~ (uvec2((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w, 0u | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w)), 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(4.2)), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), true && (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! ((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! ((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, false), false))))) || false)))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))) && true, false, false, true))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), min(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), ~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), ~ _GLF_IDENTITY((~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))), ~ (_GLF_IDENTITY(~ ((~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))), uint(uvec4(_GLF_IDENTITY(~ ((~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))), (~ ((~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))) - 0u), 0u, 0u, 0u))))))) + 0u), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))), (~ (~ (~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))) | 0u))))) + 0u)) * (0u | 1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)))) >> (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(5u), (uvec4(5u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(5u)))).y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), min(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), _GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (false ? _GLF_FUZZED(virtual_gid) : ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), min(~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), max((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))), 0u ^ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), max((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))), ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size[0], GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size[1], GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size[2], GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size[3])).y), min(~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), max((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))), 0u ^ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), max((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))), ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))))) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))), min(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))), min(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), ~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y))))))) << 0u)))) + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-10.33, 1948.3221)))).x), bool(true))) < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED((-240.457 * -9.9)), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.8), clamp(_GLF_IDENTITY(_GLF_FUZZED(-7.8), min(_GLF_FUZZED(-7.8), _GLF_FUZZED(-7.8))), _GLF_IDENTITY(_GLF_FUZZED(-7.8), (_GLF_FUZZED(-7.8)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(-7.8), min(_GLF_FUZZED(-7.8), _GLF_FUZZED(-7.8)))))), vec2(_GLF_FUZZED((-240.457 * -9.9)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), true, true))))) : _GLF_FUZZED(vec2(-62.19, -84.88)))).y) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(48.91), mix(float(_GLF_FUZZED(((uvec4(4694u, 148790u, 138300u, 87792u) != uvec4(123200u, 42986u, 20013u, 134527u)) ? 82.51 : -7.3))), float(_GLF_FUZZED(48.91)), bool(true))), _GLF_FUZZED(-1.7)), bvec2(false, false))), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), (vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch), vec2(mat4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch), cos(0.0), 0.0, 1.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(91.86), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0]) / 1.0))), _GLF_FUZZED(6.9)), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), false))))), injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED((-240.457 * -9.9)), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), sqrt(abs(1.0)), 0.0, tan(0.0), exp(0.0)))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))).y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(mat3x2(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(float(116305u), (float(116305u)) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(1.0, 1.0)))), (false ? _GLF_FUZZED(-86.18) : _GLF_FUZZED(float(116305u))))), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-16.17), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0))) >> 0))], ((injectionSwitch)[1]) - 0.0)), mix(vec2((vec2(_GLF_FUZZED(-16.17), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> 0))], ((injectionSwitch)[1]) - 0.0)))[0], _GLF_FUZZED(-74.94)), vec2(_GLF_FUZZED(39.23), (vec2(_GLF_FUZZED(-16.17), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> 0))], ((injectionSwitch)[1]) - 0.0)))[1]), bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[0]))) + 0.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(7.9, -629.378).x, max(_GLF_IDENTITY(vec2(7.9, -629.378).x, 1.0 * (vec2(7.9, -629.378).x)), vec2(7.9, -629.378).x)))), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(-16.17), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec2(7.9, -629.378), (_GLF_IDENTITY(vec2(7.9, -629.378), vec2(mat2x3(vec2(_GLF_IDENTITY(7.9, (false ? _GLF_FUZZED(-42.08) : 7.9)), -629.378), 0.0, 1.0, 1.0, 0.0)))) * abs(vec2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, sqrt(0.0), 1.0))), 1.0))).x)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false)))), false))))))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-3.4))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), false, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))], _GLF_IDENTITY(0u | (buf[virtual_gid]), clamp(_GLF_IDENTITY(0u | (buf[virtual_gid]), clamp(0u | (buf[virtual_gid]), 0u | (buf[virtual_gid]), 0u | (buf[virtual_gid]))), 0u | (buf[virtual_gid]), 0u | (buf[virtual_gid])))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u)))) | (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u)))) | (virtual_gid))) << 0u)) | (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 0u + (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))], 0u | (buf[virtual_gid])) : _GLF_FUZZED(virtual_gid)))) ^ 0u), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(int(4))))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.w, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))))))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)).w)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(abs(0.0))))).x > injectionSwitch.y))) && true)) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), max(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), max(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), max(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), clamp(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)))), false, false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true && (false))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec3((_GLF_IDENTITY(false, (false) || false)), false, false))), ((_GLF_IDENTITY(false, (false) || false))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)))))), bool(bvec2(! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)))), ((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))))) && true), false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true, true))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)))))))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec3((_GLF_IDENTITY(false, (false) || false)), false, false))), ((_GLF_IDENTITY(false, (false) || false))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)))))), bool(bvec2(! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)))), ((! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))))) && true), false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true, true, true))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)))))))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || false)))), _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), (mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), (mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), (mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)) * mat4(1.0))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true))
    return;
   int i = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) - 0)))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-2.2)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u)) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u)))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y) ^ 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), _GLF_IDENTITY((0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), 0u ^ (_GLF_IDENTITY((0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)) ^ 0u), (0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)) ^ 0u)), 0u | ((0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))), (_GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)) | 0u)))))) | (_GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (_GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (true ? _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y), (0u ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)) * 1u) : _GLF_FUZZED(167774u)))) | 0u))))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))) + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u), read_2)), false || (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1) ^ (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)))) == read_2))) + _GLF_IDENTITY(1, (1) >> 0), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, uvec4(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)).y + 1 == read_2, false || (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))))) + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), false || (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 == read_2)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y)))))) + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2)), false || (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 == read_2)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 1)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)))), false, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (_GLF_IDENTITY(true, ! (! (true))) ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid), 0u ^ (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid))))) | _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u)) - 0u)))) : _GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid)) >> 0u)) - 0u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), 0u)) ^ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)).y + _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)).y + _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)).y + _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(subgroup_size))))))) : _GLF_FUZZED(next_virtual_gid)) | 0u))))) | _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size)))))).y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size))))).y + 1 : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid), 0u ^ (true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(sign(-54593)))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), clamp((true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(subgroup_size), (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size)) << 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)) : _GLF_FUZZED(subgroup_size), (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size)) << 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))), 0u ^ (true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), min(1, 1)) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(next_virtual_gid))))) | _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2)), bool(bvec4(! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, (_GLF_IDENTITY(true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_FUZZED(subgroup_size), (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size)))) << 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), 0u ^ (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, clamp(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + 1)), (_GLF_IDENTITY(true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), min(1, 1)) : _GLF_FUZZED(subgroup_size), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_13num_workgroupread_1subgroup_idsubgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), min(1, 1)) : _GLF_FUZZED(subgroup_size)))))) : _GLF_FUZZED(next_virtual_gid))))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u))))))) == read_2)), true, false, true)))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
