#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(mat2(365.469, -5.6, 1.5, 6279.3624))))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(mat2(365.469, -5.6, 1.5, 6279.3624))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (mat2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(mat2(365.469, -5.6, 1.5, 6279.3624))))), injectionSwitch)).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = (0 & 94867); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), 1, _GLF_IDENTITY(1, min(1, 1))))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))), (true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(56843) : int(2)))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), ~ (~ (~ ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ 1u) + (~ ((subgroup_local_id + 1) % subgroup_size))), ~ ((subgroup_local_id + 1) % subgroup_size)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), ~ (~ (~ ((subgroup_local_id + 1) % subgroup_size)))), ~ ((subgroup_local_id + 1) % subgroup_size), ~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), (true ? (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), ~ (~ (~ ((subgroup_local_id + 1) % subgroup_size)))), ~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-34198) : 1))))) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size)))) : _GLF_FUZZED(workgroup_id)))))))), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), 0u ^ (_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) >> 0u), min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)) ^ (0u | 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, 1.0, 0.0, log(_GLF_IDENTITY(exp(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) : _GLF_FUZZED(-6.6)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0))), (mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))) * mat2(1.0)))) - 0.0), float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-46.23)), float(0.0), bool(_GLF_IDENTITY(true, false || (true))))))))), float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-591.155) : 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(vec3(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(808.322)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) * vec2(1.0, 1.0)).y, 1.0, 0.0, log(exp(0.0))))), min(clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0))), (mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))) * mat2(1.0)))) - 0.0), float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-46.23)), float(0.0), bool(_GLF_IDENTITY(true, false || (true))))))))), float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-591.155) : 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(vec3(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(808.322)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) * vec2(1.0, 1.0)).y, 1.0, 0.0, log(exp(0.0))))), clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0))), (mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))) * mat2(1.0)))) - 0.0), float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-46.23)), float(0.0), bool(_GLF_IDENTITY(true, false || (true))))))))), float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-591.155) : 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(vec3(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(808.322)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) * vec2(1.0, 1.0)).y, 1.0, 0.0, log(exp(0.0)))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-541.025)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, 1.0, 0.0, log(_GLF_IDENTITY(exp(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(-6.6))))), mat2(mat3x4(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-541.025)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, 1.0, 0.0, log(_GLF_IDENTITY(exp(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(-6.6))))))))), clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0))), (mat2(injectionSwitch.y, 1.0, 0.0, log(exp(0.0)))) * mat2(1.0)))) - 0.0), float(mat2(injectionSwitch.y, 1.0, 0.0, log(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-46.23)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) || (true))))))))), float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-591.155) : 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))), dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), float(vec3(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-937.907)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(808.322)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) * vec2(1.0, 1.0)).y, 1.0, 0.0, log(exp(0.0))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)) || false))) && true); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = ((0 & 71988) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)))), 4, 64, 4);
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(1, int(ivec3(1, 0, 0))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), subgroup_local_id))))) + 1 < subgroup_size) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(vec2(6897.0754, -62.69)))).y), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(vec2(6897.0754, -62.69)))).y), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))).x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))))) || false)))) || false))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5292.3335) : injectionSwitch.x))) + 0.0, max((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5292.3335) : injectionSwitch.x))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5292.3335) : injectionSwitch.x))) + 0.0))))) > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 + (1))), (~ (1)) ^ 0))))) == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), clamp(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), ivec4(1, 1, 1, 1) * (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))) - ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true, ! (! (true))) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((_GLF_IDENTITY(true ? ivec4(1, 1, 0, _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (true ? ivec4(1, 1, 0, _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))) >> ivec4(0, 0, 0, 0))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), _GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), (true ? max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38008 : _GLF_FUZZED(-90200))), 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))) : _GLF_FUZZED(ivec4(63019, -43330, 91527, 97941)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (false ? _GLF_FUZZED(ivec4(99217, -28281, 16195, 47638)) : _GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), _GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, _GLF_IDENTITY(85071, int(_GLF_IDENTITY(ivec4(85071, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), ~ (~ (ivec4(85071, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))))), 17189)))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_IDENTITY(_GLF_FUZZED(i), (true ? _GLF_FUZZED(i) : _GLF_FUZZED(findLSB(-29849)))))), 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), max(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), ivec4(0, 0, 0, 0) | (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (false ? _GLF_FUZZED(ivec4(7193, -72959, 26604, -13382)) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 1), ~ (~ (ivec4(1, 0, 1, 1)))))), 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true, ! (! (true))) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY(_GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))), (_GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))) + ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, _GLF_IDENTITY(17189, (17189) ^ 0)))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (false ? _GLF_FUZZED(ivec4(99217, -28281, 16195, 47638)) : _GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), _GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, _GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ivec4(0, 0, 0, 0) ^ (max((_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))) | (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))), (true ? ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, ~ (~ (0))), 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_FUZZED(i))), 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))), clamp(~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, min(1, 1)), 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? _GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) - ivec4(0, 0, 0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((ivec4(-82207, -81543, 91876, -70496) / i)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), max(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, min(1, 1)), 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? _GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) - ivec4(0, 0, 0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((ivec4(-82207, -81543, 91876, -70496) / i)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), max(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, min(1, 1)), 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? _GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) - ivec4(0, 0, 0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((ivec4(-82207, -81543, 91876, -70496) / i)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), max(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, min(1, 1)), 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? _GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) - ivec4(0, 0, 0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((ivec4(-82207, -81543, 91876, -70496) / i)) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), max(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))))))) - ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true, ! (! (true))) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))), 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (38008) + 0), 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (false ? _GLF_FUZZED(ivec4(15023, 72693, -52943, -90961)) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (false ? _GLF_FUZZED(ivec4(99217, -28281, 16195, 47638)) : _GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), clamp(_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))) | (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), _GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))) | ivec4(0, 0, 0, 0)), true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) | (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))), _GLF_IDENTITY(_GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (_GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))) * ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(1), ivec4(1))) >> _GLF_IDENTITY(ivec4(1), ivec4(1))))) | ivec4(0, 0, 0, 0))))))) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_FUZZED(i)) | 0))), 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))), ~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true, ! (! (true))) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), min((_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(0, (0) | (0))))))))) / (0 | 1))))), 1) : _GLF_FUZZED(ivec4(75792, 38008, _GLF_IDENTITY(85071, (85071) << 0), 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_FUZZED(findMSB(i)))), 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((_GLF_IDENTITY(true, false || (true)) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (false ? _GLF_FUZZED(ivec4(99217, -28281, 16195, 47638)) : _GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), _GLF_IDENTITY(max((true ? ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (_GLF_IDENTITY(true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), ivec4(1, 1, 1, 1) * (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_FUZZED(i))), 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 0, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(75792, 38008, 85071, 17189), (ivec4(75792, 38008, 85071, 17189)) | ivec4(0, 0, 0, 0)))))))))) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))), ~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), ~ (~ (_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), min(_GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), min(_GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) >> ivec4(0, 0, 0, 0)), _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), max(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), _GLF_IDENTITY(ivec4(1, 1, 0, 1), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), ~ (~ (_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), ~ (~ (_GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), ((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))) - ivec4(0, 0, 0, 0))))))))))) - ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1, 1, 0, 1), (_GLF_IDENTITY(true, ! (! (true))) ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0)))), 1) : _GLF_FUZZED(ivec4(_GLF_IDENTITY(75792, (75792) - 0), 38008, 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))))), (false ? _GLF_FUZZED(ivec4(99217, -28281, 16195, 47638)) : _GLF_IDENTITY(ivec4(1, 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), _GLF_IDENTITY(max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189)))), ivec4(0, 0, 0, 0) ^ (max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))), (true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))))) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ 0))), 1, 0, 1), _GLF_IDENTITY((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, (true ? 38008 : _GLF_FUZZED(i))), 85071, _GLF_IDENTITY(17189, (_GLF_IDENTITY(17189, (false ? _GLF_FUZZED(26962) : 17189))) << (0 | 0))))), max((true ? ivec4(1, 1, 0, 1) : _GLF_FUZZED(ivec4(75792, _GLF_IDENTITY(38008, _GLF_IDENTITY(int(int(38008)), (int(int(38008))) + 0)), 85071, 17189))), (true ? ivec4(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED((i | ivec3(-88956, -85366, -83865)).s))), 1, 0, 1) : _GLF_FUZZED(ivec4(75792, 38008, 85071, 17189))))))))) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))))))), 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), 1 * (~ (7)))))) | (_GLF_IDENTITY(7, ~ (~ (7)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(566.662)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(566.662)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true)) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false, true)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0))) + log(1.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)), bvec2(true, false))))).y)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), 0u | (~ (next_virtual_gid))), ~ (~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) << 0u))))))], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(0 ^ (~ (1)), (_GLF_IDENTITY(0 ^ (~ (1)), (0 ^ (~ (1))) | (0 ^ (~ (1))))) * 1)), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (_GLF_IDENTITY(1, 1 * (1)))))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))), (0 ^ 0) + (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))), ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0)))))) | ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))))), 1, 0, 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))), ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0)))))) | ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) | (~ (1))))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY((~ (~ (~ (1)))) + 0, 0 | ((~ (~ (~ (1)))) + 0))))))), 1, 0, 0))) << 0)))))), (1 & (1 ^ _GLF_IDENTITY(0, min(0, 0)))) * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (1))), min(~ (~ (~ (1))), ~ (~ (~ (1))))), (~ (~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ _GLF_IDENTITY((~ (1)), (true ? _GLF_IDENTITY((~ (1)), 0 | ((~ (1)))) : _GLF_FUZZED(50349))))) + 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (_GLF_IDENTITY(1, (1) | 0))))) + 0)), 0 ^ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (_GLF_IDENTITY(1, (1) | 0))))) + 0))))))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))), (false ? _GLF_FUZZED(-43854) : _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))), (true ? (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ _GLF_IDENTITY((1), max((1), (1)))))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) : _GLF_FUZZED(60137)))))))), int(_GLF_IDENTITY(ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1), (ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1)) | (ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (1))), min(~ (~ (~ (1))), ~ (~ (~ (1))))), (~ (~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ _GLF_IDENTITY((~ (1)), (true ? _GLF_IDENTITY((~ (1)), 0 | ((~ (1)))) : _GLF_FUZZED(50349))))) + 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (_GLF_IDENTITY(1, (1) | 0))))) + 0)), 0 ^ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (_GLF_IDENTITY(1, (1) | 0))))) + 0))))))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))), (false ? _GLF_FUZZED(-43854) : _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))), (true ? (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ _GLF_IDENTITY((1), max((1), (1)))))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) : _GLF_FUZZED(60137)))))))), int(_GLF_IDENTITY(ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1), (ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1)) | (ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0))) | (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (~ (~ (~ (1)))) + 0)))))), 1, 1, 1))))))))) << 0))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))))), true && (bool(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))) && (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || (false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))) && (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || (false)))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))) && (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || (false))))))))) || false)))))))))) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(6), int(6))) & 60066), max(((0 >> _GLF_IDENTITY(int(6), int(6))) & 60066), ((0 >> _GLF_IDENTITY(int(6), int(6))) & 60066))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0)) >> 0))
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
}
