#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y = subgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, 0 | (0)))), (0) << (1 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y = _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base % subgroup_id).r)))) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) + 0u))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) + 0u)) ^ 0u)), (((subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(((subgroup_size) | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), (((subgroup_size) | (subgroup_size))) + 0u))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + 0u), _GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) + 0u))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << (0u ^ 0u)), uint(0u))))), _GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) + 0u))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(((subgroup_size) | (subgroup_size)), (((subgroup_size) | (subgroup_size))) + 0u))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(159593u, (159593u) * 1u)) : _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))) | (subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(167796u, (_GLF_IDENTITY(false ? _GLF_FUZZED(167351u) : 167796u, min(false ? _GLF_FUZZED(167351u) : 167796u, false ? _GLF_FUZZED(167351u) : 167796u))))) : (subgroup_size) | (subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(159593u) : _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167796u, (_GLF_IDENTITY(false ? _GLF_FUZZED(167351u) : _GLF_IDENTITY(167796u, min(167796u, 167796u)), min(false ? _GLF_FUZZED(167351u) : 167796u, false ? _GLF_FUZZED(_GLF_IDENTITY(167351u, max(167351u, 167351u))) : 167796u))))) : (subgroup_size) | (subgroup_size))))))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter)) != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(47680), (true ? _GLF_FUZZED(47680) : _GLF_FUZZED(_injected_loop_counter))) : 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.6))), 1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
  }
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ (0 >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0), int(int(int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) && true)))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / 1.0))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(135652u), (_GLF_FUZZED(135652u)) | 0u)), (_GLF_IDENTITY(true, true && (true)) ? (true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(135652u), (_GLF_FUZZED(135652u)) | 0u)) : _GLF_FUZZED(subgroup_id))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (false ? _GLF_FUZZED(159745u) : GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup))))) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(83241u, _GLF_IDENTITY((83241u) + 0u, (true ? (83241u) + 0u : _GLF_FUZZED(num_workgroup)))), 153075u, _GLF_IDENTITY(_GLF_IDENTITY(136850u, min(_GLF_IDENTITY(136850u, 0u ^ (136850u)), 136850u)), (136850u) + 0u), _GLF_IDENTITY(120841u, min(_GLF_IDENTITY(120841u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (120841u)), 120841u)))[2]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, _GLF_IDENTITY(~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup)), (~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup))) >> 0u)) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(83241u, (83241u) | (83241u)), _GLF_IDENTITY((83241u) + 0u, (true ? (83241u) + 0u : _GLF_FUZZED(num_workgroup)))), 153075u, _GLF_IDENTITY(136850u, (136850u) + 0u), _GLF_IDENTITY(120841u, min(_GLF_IDENTITY(120841u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (120841u)), 120841u)))[2]))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup))) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(83241u, _GLF_IDENTITY((83241u) + 0u, (true ? (83241u) + 0u : _GLF_FUZZED(num_workgroup)))), 153075u, _GLF_IDENTITY(136850u, (136850u) + 0u), _GLF_IDENTITY(120841u, min(_GLF_IDENTITY(120841u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (120841u)), 120841u)))[2]))))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup))), 0u | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup) >> (0u | 0u))))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup, _GLF_IDENTITY(~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup)), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup)))))))) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(83241u, _GLF_IDENTITY((83241u) + 0u, (true ? (83241u) + 0u : _GLF_FUZZED(num_workgroup)))), 153075u, _GLF_IDENTITY(136850u, (136850u) + 0u), _GLF_IDENTITY(120841u, min(_GLF_IDENTITY(120841u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)).x)) + (120841u)), 120841u)))[2])))) * 1u) : _GLF_FUZZED(num_workgroup)));
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 1)))))))), _GLF_IDENTITY(int(ivec3(int(2), 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-89614) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0))))), (int(ivec3(int(2), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 1 * (2))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z = workgroup_size;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), true, false))), true, false))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(742.425)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0)), mat3(mat4x3(transpose(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0)))))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0)), mat3(mat4x3(transpose(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0))))))))) / 1.0)) < injectionSwitch.y))), true, true, true)))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-149.336, 955.315, -3314.7251, 2830.1711, -0.4, -724.305, -9.6, -55.08)) : mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(742.425)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(742.425)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(742.425)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), true), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true, false), true))))));
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))), false)))));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))) || false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), float(_GLF_FUZZED((81.20 / -1644.8445))), bool(false))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (int(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | (int(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec4(int(2), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), clamp(ivec4(int(2), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(int(2), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(int(2), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), int(2), int(2))))), ~ (~ _GLF_IDENTITY((int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 + (2))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(2)))), ((int((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 + (2))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(2))))) / 1)))), min(int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))), ~ (~ _GLF_IDENTITY((int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) / 1))) >> _GLF_IDENTITY(int(2), int(2)))), ((int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) / 1))) >> _GLF_IDENTITY(int(2), int(2))))) ^ 0)))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (~ (int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), (false ? _GLF_FUZZED(-32912) : ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (0) ^ 0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-5.7)), (_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-5.7)), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(-5.7))), float(_GLF_FUZZED(3.7)), bool(false)))) - 0.0)), float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-145.661) : injectionSwitch.y))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      barrier();
                    }
                  }
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) - 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-59.72)), float(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), int(int(int(5))))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_WRAPPED_IF_TRUE(true)))), false || (_GLF_IDENTITY(! (bool(bool(_GLF_WRAPPED_IF_TRUE(true)))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_TRUE(true))))), bool(bvec3(! (! (bool(bool(_GLF_WRAPPED_IF_TRUE(true))))), true, true)))))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), false || ((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), false || ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), false || ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), _GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), 0 ^ (int(2)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), _GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), 0 ^ (int(2)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), _GLF_IDENTITY(int(2), int(int(_GLF_IDENTITY(int(2), 0 ^ (int(2)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, false)))), ((! (bool(bvec4(false, true, false, false))))) || false))), false, _GLF_IDENTITY(false, (false) && true)))) || false))));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(4u, 0u | (4u))), uvec3(4u)))).x;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z * workgroup_id, max(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z * workgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z * workgroup_id));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.2)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (true ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED((~ 81972))))) >> _GLF_IDENTITY(int(0), int(0))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3241.8103)), float(0.0), bool(true))), injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.3)))) / 1.0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (int(1))) << 0, clamp((~ (int(1))) << 0, (~ (int(1))) << 0, _GLF_IDENTITY((~ (int(1))) << 0, ~ (~ ((~ (int(1))) << 0))))))))), clamp(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (int(1))) << 0, clamp((~ (int(1))) << 0, (~ (int(1))) << 0, _GLF_IDENTITY((~ (int(1))) << 0, ~ (~ ((~ (int(1))) << 0))))))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (int(1))) << 0, clamp((~ (int(1))) << 0, (~ (int(1))) << 0, _GLF_IDENTITY((~ (int(1))) << 0, ~ (~ ((~ (int(1))) << 0))))))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (int(1))) << 0, clamp((~ (int(1))) << 0, (~ (int(1))) << 0, _GLF_IDENTITY((~ (int(1))) << 0, ~ (~ ((~ (int(1))) << 0))))))))))), (true ? (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) << 0)))) : _GLF_FUZZED(44325))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(485.206, -2.3)) : (injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.65, -9.5)) : injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))));
  }
 else
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w + GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 1, 0))) < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
            barrier();
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2516.6469), clamp(_GLF_FUZZED(-2516.6469), _GLF_FUZZED(-2516.6469), _GLF_FUZZED(-2516.6469))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2516.6469), clamp(_GLF_FUZZED(-2516.6469), _GLF_FUZZED(-2516.6469), _GLF_FUZZED(-2516.6469))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size) ^ uvec3(0u, 0u, 0u)).y) ^ 0u) * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))) : _GLF_FUZZED(subgroup_local_id))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u)))))))))) << 0u), (_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) >> 0u), GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))))) : _GLF_FUZZED(subgroup_local_id))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, 0u)))))))))) << 0u)) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) - 0u), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) >> 0u)) + 0u) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base)).y)) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) | (0u | 0u)) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)), ((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) | (0u | 0u)) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u))) ^ 0u))), (_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, (1) >> 0)) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u))), max(max(_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x) / 1u) + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)).x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)))), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u)))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), clamp(((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u)))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u)))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u)))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)))) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)))), (_GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)))))) ^ 0u), _GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y)) << 0u)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) << 0) != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (24770 & 0), false || (_injected_loop_counter > (24770 & 0)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(304.373)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) + uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) + uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))), 0u))) >> uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))).z], 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z), 0u | (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z)))))], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((752 & 0) ^ (0 << _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1 < GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x + 1 < _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y) - 0u)) ^ 0u)) || false))
      {
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         do
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), uint(uvec2(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u)))))), _GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) ^ 0u))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) && true)) + 1, (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))))))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))))))) | 0, ~ (~ ((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0)) | (_GLF_IDENTITY(ivec2(1, 0), ~ (~ (ivec2(1, 0))))))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) / 1))))), 0, 0))))))) | 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) == read_2) + 1, 0u | (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2) + 1))) >> 0u), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), ((0 | 0)) * 1)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)))))))))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) - 0u) + 1) ^ 0u)) | (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)))) == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) / 1u))), ((true ? read_1 : _GLF_FUZZED(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) / 1u)))) << 0u)), read_1)) + 1 == read_2, false, true)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))) == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(num_workgroup))), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), true, false, false)))), uint(read_1 + 1 == read_2))), 1u, 1u))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1) == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, false, true, true)), true && (bool(bvec4(read_1 + 1 == read_2, false, true, true)))))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2))), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 1u, 1u)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1) == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, false, true, true)), true && (bool(bvec4(read_1 + 1 == read_2, false, true, true)))))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2))), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 1u, 1u))))))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(read_2, 1u, 0u)), (uint(uvec3(read_2, 1u, 0u))) | (uint(uvec3(read_2, 1u, 0u))))) ^ 0u))), uint(read_1 + 1 == read_2))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) - 0u)) | 0u))))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) - 0u)) | 0u))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) - 0u)) | 0u))))))), (false ? _GLF_FUZZED(workgroup_size) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, (1) | 0) == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) - 0u)) | 0u)))))))))))), 1u, 1u)))))))) / 1u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (~ (uint(read_1 + 1 == read_2))) << 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (~ (uint(read_1 + 1 == read_2))) << 0u)), uint(uvec4(~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (~ (uint(read_1 + 1 == read_2))) << 0u)), 1u, 1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) / 1u))), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), 1u, 1u)))))))))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((0u & 36987u), (true ? (0u & 36987u) : _GLF_FUZZED(num_workgroup))) + (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2) && true) || false), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)) == read_2) && true) || false), true, false)))) || false))))))) >> 0u) + 1, 4, 64, 4);
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))) && true)))
                barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, false), false, true)))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       do
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 1 * (0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     barrier();
    }
  }
}
