#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 mat3x4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_35 {
 bvec3 _f0;
} ;

struct _GLF_struct_37 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
} ;

struct _GLF_struct_33 {
 mat2x3 _f0;
 mat4 _f1;
 float _f2;
} ;

struct _GLF_struct_32 {
 uint _f0;
 vec3 _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_31 {
 mat4x2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_30 {
 uvec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_29 {
 mat4x3 _f0;
 mat3 _f1;
 bvec4 _f2;
 mat2 _f3;
 mat2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_34 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
 uvec2 _f3;
 uvec3 _f4;
 _GLF_struct_32 _f5;
 _GLF_struct_33 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_34 _f0;
 _GLF_struct_37 _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_26 {
 bool _f0;
 bool _f1;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
} ;

struct _GLF_struct_24 {
 uint _f0;
 uvec4 _f1;
 uint workgroup_base;
 mat4x2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
} ;

struct _GLF_struct_28 {
 _GLF_struct_25 _f0;
 mat4x2 _f1;
 mat2 _f2;
 int _f3;
 _GLF_struct_27 _f4;
} ;

struct _GLF_struct_23 {
 mat2x4 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_20 {
 mat4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat2x4 _f1;
 mat2 _f2;
 mat3x4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_21 {
 uvec4 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 ivec4 _f3;
 vec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 mat3 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 mat3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 bvec3 _f1;
 mat3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 mat2x4 _f2;
 _GLF_struct_16 _f3;
 uint subgroup_size;
 ivec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 mat2x3 _f2;
 _GLF_struct_21 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 float _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 mat4 _f3;
 mat2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 vec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 int i;
 mat2x4 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 float _f2;
 _GLF_struct_12 _f3;
 uint _f4;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 uint subgroup_local_id;
 mat2 _f1;
 mat3x2 _f2;
 int _f3;
 mat4 _f4;
} ;

struct _GLF_struct_2 {
 float _f0;
 uint _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat3x4 _f1;
 uint _f2;
 mat4 _f3;
 ivec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat4x2 _f3;
 _GLF_struct_3 _f4;
 bvec2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 _GLF_struct_5 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_0 {
 uint virtual_gid;
 bool _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_17(_GLF_struct_14(mat2x4(1.0), bvec3(true), mat3(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-323.097), (vec2(1.0))[1]), vec2(_GLF_IDENTITY((vec2(1.0))[0], float(mat4x3((vec2(1.0))[0], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_FUZZED(3.4)), bvec2(true, false)))), _GLF_struct_15(bvec2(true), mat4x2(1.0), uvec2(1u), mat3(1.0), mat3(1.0)), mat2x4(1.0), _GLF_struct_16(uvec3(1u), mat3(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat3x4(1.0)), gl_SubgroupSize, ivec2(_GLF_IDENTITY(1, (1) | 0)), vec4(1.0)), _GLF_struct_18(bvec4(true), bvec3(true)), mat2x3(1.0), _GLF_struct_21(uvec4(1u), _GLF_struct_19(1u, mat2x4(1.0), mat2(1.0), mat3x4(1.0), mat2(1.0)), _GLF_struct_20(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0)), min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), ivec3(1), mat2x3(1.0)), ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) * 1)))), vec4(1.0), mat3x2(1.0)), uvec2(1u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), true)))))), _GLF_IDENTITY(true, true && (true))))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3x2(1.0), _GLF_struct_5(mat4x3(1.0), _GLF_struct_1(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) || false)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) || false)) || false))))), mat3x4(1.0), 1u, mat4(1.0), ivec3(1), mat3x2(1.0)), _GLF_struct_2(1.0, 1u, mat4(1.0)), mat4x2(1.0), _GLF_struct_3(bvec4(true), gl_SubgroupInvocationID, mat2(1.0), mat3x2(1.0), 1, mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), bvec2(true), _GLF_struct_4(bvec3(true))), mat3x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(103609u, 79707u, 1542u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(true ? gl_NumWorkGroups : _GLF_FUZZED((false ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), (_GLF_IDENTITY(162553u, (162553u) | 0u)) - 0u), _GLF_IDENTITY(162553u, (162553u) | 0u), _GLF_IDENTITY(162553u, (162553u) | 0u))), 171551u, 197428u))), max(true ? gl_NumWorkGroups : _GLF_FUZZED((false ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(162553u, _GLF_IDENTITY((162553u), ~ (~ ((162553u)))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), (_GLF_IDENTITY(162553u, (162553u) | 0u)) - 0u), _GLF_IDENTITY(162553u, (162553u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), (_GLF_IDENTITY(162553u, (162553u) | 0u)) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u))), 171551u, 197428u))), true ? gl_NumWorkGroups : _GLF_FUZZED((false ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(162553u, (162553u) | 0u), (_GLF_IDENTITY(162553u, (162553u) | 0u)) - 0u), _GLF_IDENTITY(162553u, (162553u) | 0u), _GLF_IDENTITY(162553u, (162553u) | 0u))), 171551u, 197428u))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.1)), bool(false))))) < injectionSwitch.y), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))) ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(162553u, clamp(162553u, 162553u, _GLF_IDENTITY(162553u, clamp(162553u, 162553u, 162553u)))), (162553u) | _GLF_IDENTITY(0u, max(0u, 0u))), 171551u, 197428u))))), max(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2067.8792) : injectionSwitch.y)) : _GLF_FUZZED(length(-57.26)))))), false, false))) ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(162553u, (162553u) | 0u), 171551u, 197428u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), false))) ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(162553u, (_GLF_IDENTITY(162553u, max(162553u, _GLF_IDENTITY(162553u, min(162553u, 162553u))))) | 0u), 171551u, 197428u))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) ? uvec3(109714u, 26824u, 82486u) : uvec3(_GLF_IDENTITY(162553u, (162553u) | 0u), 171551u, 197428u)))))))))).x) - 0u)) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_34(_GLF_struct_29(mat4x3(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), bvec4(true), mat2(1.0), mat2(1.0), mat4x3(1.0)), _GLF_struct_30(uvec3(1u), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))), _GLF_struct_31(mat4x2(1.0), vec4(1.0), mat2x4(1.0), mat2x3(1.0), vec4(1.0)), uvec2(1u), uvec3(1u), _GLF_struct_32(1u, vec3(1.0), mat4x3(1.0), bvec4(true)), _GLF_struct_33(mat2x3(1.0), mat4(1.0), 1.0)), _GLF_struct_37(_GLF_struct_35(bvec3(true)), _GLF_struct_36(mat3x4(1.0), mat2x3(1.0))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_25(_GLF_struct_24(1u, uvec4(1u), workgroup_size * _GLF_struct_replacement_38.workgroup_id, mat4x2(1.0), mat4x3(1.0))), mat4x2(1.0), mat2(1.0), 1, _GLF_struct_27(_GLF_struct_26(true, true)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-68.90)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_struct_replacement_28._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, (_GLF_struct_replacement_22._f0.subgroup_size) | (_GLF_struct_replacement_22._f0.subgroup_size)) + _GLF_struct_replacement_6._f1._f4.subgroup_local_id, true);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_28._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, (_GLF_struct_replacement_22._f0.subgroup_size) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, _GLF_IDENTITY((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size))), max(((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size))), ((true ? _GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, 0u + (_GLF_struct_replacement_22._f0.subgroup_size)) : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size))), max(((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size))), ((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size)))))) ^ 0u) / 1u)), _GLF_struct_replacement_22._f0.subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1._f4.subgroup_local_id, (_GLF_struct_replacement_6._f1._f4.subgroup_local_id) / (1u ^ 0u)) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_6._f1._f4.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_6._f1._f4.subgroup_local_id) / (1u ^ 0u), ~ (~ ((_GLF_struct_replacement_6._f1._f4.subgroup_local_id) / (1u ^ 0u))))) + 1) / 1u)) % _GLF_struct_replacement_22._f0.subgroup_size), uint(uvec2(_GLF_struct_replacement_28._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, (_GLF_struct_replacement_22._f0.subgroup_size) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size)))), ((true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size))) / 1u)), (_GLF_IDENTITY(_GLF_struct_replacement_22._f0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size), (true ? true ? _GLF_struct_replacement_22._f0.subgroup_size : _GLF_FUZZED(workgroup_size) : _GLF_FUZZED((workgroup_size - 37271u)))))) / 1u))) << 0u), _GLF_struct_replacement_22._f0.subgroup_size)) + ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1._f4.subgroup_local_id + _GLF_IDENTITY(1, (1) << (1 ^ 1)), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_struct_replacement_6._f1._f4.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1)))), (_GLF_IDENTITY(1, (1) << (1 ^ 1))) >> 0)))) % _GLF_struct_replacement_22._f0.subgroup_size), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u))), min(_GLF_IDENTITY(uint(2u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u))))), (_GLF_IDENTITY(uint(2u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(2u)))) * 1u))))), _GLF_IDENTITY(uint(2u), 0u ^ (uint(2u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, 0 ^ (64)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(workgroup_size)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.8)), bool(false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_0.virtual_gid], ~ (_GLF_IDENTITY(~ (buf[_GLF_struct_replacement_0.virtual_gid]), (~ (buf[_GLF_struct_replacement_0.virtual_gid])) * 1u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_6._f1._f4.subgroup_local_id + 1 < _GLF_struct_replacement_22._f0.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_7(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), 0, mat2x4(1.0)), _GLF_struct_10(_GLF_struct_8(mat2x4(1.0), bvec4(true), mat3x2(1.0), vec4(1.0), mat3(1.0)), mat2x3(1.0), mat2x4(1.0), mat4x3(1.0), _GLF_struct_9(uvec4(1u), bvec3(_GLF_IDENTITY(true, (true) && true)), mat3(1.0), mat4(1.0), mat2(1.0), mat4x3(1.0))), 1.0, _GLF_struct_12(_GLF_struct_11(vec4(1.0), 1.0, uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), mat3(1.0), bvec4(true)), mat2x3(1.0), bvec3(true), true), 1u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, (false) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))))).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4((injectionSwitch), 0.0, 0.0), min(vec4((injectionSwitch), 0.0, 0.0), vec4((injectionSwitch), 0.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4((injectionSwitch), 0.0, 0.0), min(vec4((injectionSwitch), 0.0, 0.0), vec4((injectionSwitch), 0.0, 0.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4((injectionSwitch), 0.0, 0.0), min(vec4((injectionSwitch), 0.0, 0.0), vec4((injectionSwitch), 0.0, 0.0)))))[0], _GLF_FUZZED(-191.672)), vec2(_GLF_FUZZED(67.60), (vec2(_GLF_IDENTITY(vec4((injectionSwitch), 0.0, 0.0), min(vec4((injectionSwitch), 0.0, 0.0), vec4((injectionSwitch), 0.0, 0.0)))))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, (64) / 1), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(5612.0788)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))), false, true, true))))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(6102.0111), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(6102.0111), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat3((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(2.7))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), exp(0.0), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-18.45, 480.248))))), exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))) + vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(2.7), (true ? _GLF_FUZZED(2.7) : _GLF_FUZZED(-91.48))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(502.033)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(502.033)), vec2((injectionSwitch)[0], _GLF_FUZZED(502.033)), vec2((injectionSwitch)[0], _GLF_FUZZED(502.033)))), vec2(_GLF_FUZZED(-26.15), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7808.8798), _GLF_FUZZED(-9.3)), bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3691.5732), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9260.7851, 15.07)) : injectionSwitch)))))), mat2(1.0) * (injectionSwitch)))).y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], tan(0.0) + (injectionSwitch[0])), injectionSwitch[1])), mat2(1.0) * (injectionSwitch)))).y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), false))))), _GLF_IDENTITY(true, ! (! (true))))))), false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(502.033)), vec2(_GLF_FUZZED(-26.15), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-6.2, 9.0) - injectionSwitch)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3691.5732), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true))))) ? _GLF_FUZZED(vec2(-9260.7851, 15.07)) : injectionSwitch)))))), mat2(1.0) * (injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-6.2, 9.0) - injectionSwitch)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3691.5732), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true))))) ? _GLF_FUZZED(vec2(-9260.7851, 15.07)) : injectionSwitch)))))), mat2(1.0) * (injectionSwitch)))).y) - sin(tan(0.0)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], tan(0.0) + (injectionSwitch[0])), injectionSwitch[1])), mat2(1.0) * (injectionSwitch)))).y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), false))))), _GLF_IDENTITY(true, ! (! (true))))))), false))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
