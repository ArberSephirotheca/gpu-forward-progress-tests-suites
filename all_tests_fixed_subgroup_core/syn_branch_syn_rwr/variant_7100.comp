#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 vec2 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat2x4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat2 _f1;
 _GLF_struct_7 _f2;
 float _f3;
 mat2x3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4 _f1;
 ivec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bool _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 float _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 float _f2;
 mat4 _f3;
 _GLF_struct_1 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, true)))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) - 0.0), min(float(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))) / exp(0.0)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false, true)))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), false, true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), false, true, true)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), true, false))))) || false, ! (! ((false) || false))), ! (_GLF_IDENTITY(! ((false) || false), false || (! ((false) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))) ^ uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))))), min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), (true ? uvec3(56869u, 76369u, 111936u) : _GLF_FUZZED(uvec3(69622u, 49133u, 169327u)))))), uvec3(160914u, _GLF_IDENTITY(155955u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 155955u)), 191158u)), uvec3(0u, 0u, 0u) | (min(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), (uvec3(56869u, 76369u, 111936u)) | (uvec3(56869u, 76369u, 111936u))), (true ? uvec3(56869u, 76369u, 111936u) : _GLF_FUZZED(uvec3(69622u, 49133u, 169327u)))))), uvec3(160914u, 155955u, 191158u))))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! _GLF_IDENTITY((! (true)), false || ((! (true))))))))))) ? gl_NumWorkGroups : _GLF_FUZZED(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(min(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), ~ (~ (uvec3(56869u, 76369u, 111936u)))), (uvec3(56869u, 76369u, 111936u)) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(54122u, 94319u, 188595u))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(56869u, 76369u, 111936u), ~ (~ (uvec3(56869u, 76369u, 111936u)))), (uvec3(56869u, 76369u, 111936u)) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(54122u, 94319u, 188595u))))))) << uvec3(0u, 0u, 0u)), uvec3(160914u, 155955u, 191158u))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))), _GLF_IDENTITY(uvec3(uvec4(_GLF_FUZZED(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_FUZZED(_GLF_IDENTITY(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u)), min(min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u)), min(uvec3(56869u, 76369u, 111936u), uvec3(160914u, 155955u, 191158u))))), 0u))))))), 0u))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), 1u))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), min(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), min(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) >> 0u)))))))).x));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(workgroup_size * workgroup_id, _GLF_struct_2(mat2x3(1.0), _GLF_struct_0(mat2(1.0)), 1.0, mat4(1.0), _GLF_struct_1(mat4x2(1.0)), ivec3(1)), _GLF_struct_6(bvec2(true), 1.0, _GLF_struct_3(vec3(1.0), true, mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), 0.0 + (_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), 0.0 + ((1.0))))))) - 0.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((1.0), 0.0 + (_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), 0.0 + ((1.0))))))) - 0.0, (_GLF_IDENTITY((1.0), 0.0 + (_GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), max((1.0), (1.0))), _GLF_IDENTITY((1.0), 0.0 + ((1.0))))))) - 0.0) + 0.0))))), mat4x2(1.0), mat2x3(1.0)), _GLF_struct_4(ivec2(1), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.1) : 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 1.0, 1.0))))), max(min(1.0, 1.0), min(1.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)) * mat2(1.0))), max(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(1.0), bool(true)))), max(min(1.0, 1.0), min(1.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-129.900))), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), min(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))))), _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0))), int(int(1))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(atomicExchange(num_workgroup, workgroup_size))) : 1))), (max(1, 1)) | (max(1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0))), int(int(1))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(atomicExchange(num_workgroup, workgroup_size))) : 1))), (max(1, 1)) | (max(1, 1)))))) + ivec4(0, 0, 0, 0))), _GLF_struct_5(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))), mat4(1.0), ivec3(1), true)), _GLF_struct_8(mat2x3(1.0), mat2(1.0), _GLF_struct_7(vec4(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-56.20)), float(_GLF_IDENTITY(1.0, float(float(1.0)))), bool(true)))))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))))))))), true))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), false)))))), 1.0, mat2x3(1.0), mat4x2(1.0)), _GLF_struct_9(vec2(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_10.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) >> 0u))) + 1) % subgroup_size), (true ? _GLF_struct_replacement_10.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / (1u ^ 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), (true ? _GLF_struct_replacement_10.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u)))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) | (subgroup_size)), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(virtual_gid)))) >> (0u | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))) && true) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * 1.0)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, false, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-59.03, -127.317)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(8.6)), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(8.6)), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(8.6)), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(8.6)), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0)) - 0.0))))), max(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, max(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, (1.0) / 1.0))), float(_GLF_FUZZED(-564.928)), bool(false))), (1.0) / 1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(8.6)), max(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (true ? float(_GLF_FUZZED(8.6)) : _GLF_FUZZED(6979.8127))), float(_GLF_FUZZED(8.6)))), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0))), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(8.6, float(vec2(_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, exp(0.0)))))))), bool(false)))), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(log(1.0), 1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))) ? _GLF_FUZZED(-2.0) : 1.0)), 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(805.568)), float(0.0), bool(true)))))))), 1.0, 0.0, abs(1.0), 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), (1.0) + 0.0)))))) : _GLF_FUZZED(smoothstep(32.36, 6136.4706, injectionSwitch))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) ^ 0)), 0u + (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) ^ 0), (read_1 + _GLF_IDENTITY(1, (1) ^ 0)) >> 0u)))), _GLF_IDENTITY(4, int(ivec4(4, 0, (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3))), 0 ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))), 1))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), uint(8u))), ((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) >> _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u) | (virtual_gid)), (virtual_gid) / 1u)), (1u ^ 0u) * (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u))))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u) | (virtual_gid)), (virtual_gid) / 1u)))) : _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))) ^ _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)), true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 1)))], _GLF_FUZZED(5764.5770)), vec2(_GLF_FUZZED(8627.0531), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-91.47) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))))) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9607.8515))), 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true, true)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-91.47) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))))) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9607.8515))), 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true, true)))), true), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-91.47) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))) / 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))))) - 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) + mat2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9607.8515))), 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true, true)))), true), false, true)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0))), (0 << _GLF_IDENTITY(int(0), int(0))), 0), max(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0))), (0 << _GLF_IDENTITY(int(0), int(0))), 0), ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), (0 ^ (1 & 1)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638))))), (_GLF_IDENTITY(_GLF_FUZZED(sign(-83638)), ~ (~ (_GLF_FUZZED(sign(-83638)))))) ^ 0))) : _GLF_IDENTITY(0, (0) - 0))), (0 << _GLF_IDENTITY(int(0), int(0))), 0))))))), int(ivec2(0, 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(71.65), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7523.3781)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(161382u), clamp(_GLF_FUZZED(161382u), _GLF_FUZZED(161382u), _GLF_FUZZED(161382u))) : _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(161382u, 0u + (161382u))), clamp(_GLF_FUZZED(161382u), _GLF_FUZZED(_GLF_IDENTITY(161382u, min(161382u, _GLF_IDENTITY(161382u, clamp(161382u, 161382u, 161382u))))), _GLF_FUZZED(161382u))) : _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid, next_virtual_gid))))) / 1u), max(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(161382u), clamp(_GLF_FUZZED(161382u), _GLF_FUZZED(161382u), _GLF_FUZZED(161382u))) : _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))), next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(161382u), clamp(_GLF_FUZZED(161382u), _GLF_FUZZED(161382u), _GLF_FUZZED(161382u))) : _GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)) ^ 0u))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(next_virtual_gid, 0u)), max(uint(uvec2(next_virtual_gid, 0u)), uint(uvec2(next_virtual_gid, 0u)))))))))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (1u ^ 1u))))))], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))) / (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | 0u))))), clamp((read_1 + 1) / (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (true ? vec3(injectionSwitch, 0.0) : _GLF_FUZZED(vec3(-7.0, -4.8, -27.06)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((177332u & _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), uint(uvec2(uint(uvec2(0u, 1u)), 0u))))) | (0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), _GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) << (0u | 0u))) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), (_GLF_IDENTITY((177332u & 0u) | (0u), (_GLF_IDENTITY((177332u & 0u), max((177332u & 0u), (177332u & 0u))) | (0u)) >> 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u ^ (_GLF_IDENTITY((177332u & 0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) << 0u), (0u), (0u))), ((177332u & 0u) | (0u)) >> 0u))), 0u, 0u)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((177332u & 0u) | (0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), clamp(uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u)))))), (_GLF_IDENTITY((177332u & 0u) | (0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((177332u & 0u), min((177332u & 0u), _GLF_IDENTITY((177332u & 0u), uint(uvec2((177332u & 0u), 0u))))) | (0u), max(_GLF_IDENTITY(_GLF_IDENTITY((177332u & 0u), min((177332u & 0u), _GLF_IDENTITY((177332u & 0u), uint(uvec2((177332u & 0u), 0u))))) | (0u), 0u + (_GLF_IDENTITY((177332u & 0u), min((177332u & 0u), _GLF_IDENTITY((177332u & 0u), uint(uvec2((177332u & 0u), 0u))))) | (0u))), _GLF_IDENTITY((177332u & 0u), min((177332u & 0u), _GLF_IDENTITY((177332u & 0u), uint(uvec2((177332u & 0u), 0u))))) | (0u))), ((_GLF_IDENTITY(177332u & 0u, (_GLF_IDENTITY(177332u & 0u, 0u ^ (177332u & 0u))) * 1u)) | (0u)) >> 0u), 0u, 0u), uvec3(_GLF_IDENTITY((177332u & 0u) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(177332u & 0u, clamp(_GLF_IDENTITY(177332u, min(177332u, 177332u)) & 0u, _GLF_IDENTITY(177332u & 0u, (177332u & 0u) | (177332u & 0u)), 177332u & 0u))) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(177332u & 0u, clamp(_GLF_IDENTITY(177332u, min(177332u, 177332u)) & 0u, _GLF_IDENTITY(177332u & 0u, (177332u & 0u) | (177332u & 0u)), 177332u & 0u))) | (0u), ((177332u & 0u) | (0u)) >> 0u), 0u, 0u))))))))) | (0u & 98473u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((read_1 + 1) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (read_1 + 1) / 1u))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))), 1u * (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))), ((~ (~ (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))) - 0u)))) >> 0u)))))) / (uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0, cos(0.0)))), 1.0), mix(float(_GLF_FUZZED(5.0)), float(min(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0, cos(0.0)))), 1.0)), bool(true)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uint(0u)))))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp((read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uint(0u)))))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uint(0u)))))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u | ((read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uint(0u)))))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uint(0u)))))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (true ? (read_1 + 1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) << 0u)))) + 0u), 0u), (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) + 0u), 0u)) | (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), min(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))) + 0u), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED((+ virtual_gid))))))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u | (read_2), clamp(0u | (read_2), 0u | (read_2), 0u | (read_2))))) + 1, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), clamp(_GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(min(min(4, 4), min(4, 4)), _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))) | (_GLF_IDENTITY(min(min(4, 4), min(4, 4)), clamp(min(min(4, 4), min(4, 4)), min(min(4, 4), min(4, 4)), min(min(4, 4), min(4, 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) | 0), clamp(min(4, _GLF_IDENTITY(4, (4) / 1)), min(4, 4), min(4, 4))), min(4, 4)))), _GLF_IDENTITY(4, ~ (~ (4))), 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(0.0, 0.0) + (sqrt(vec2(0.0, 0.0)))), 1.0, sqrt(0.0), sqrt(0.0), 0.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) + (sqrt(vec2(0.0, 0.0)))), 1.0, sqrt(0.0), sqrt(0.0), 0.0)))[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(-250.979), (vec2(mat2x3(_GLF_IDENTITY(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), vec2(0.0, 0.0) + (sqrt(vec2(0.0, 0.0)))), 1.0, sqrt(0.0), sqrt(0.0), 0.0)))[1]), bvec2(false, true)))) + (injectionSwitch)).x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-92.13)))))), 1.0, 1.0)), (true ? vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1720.8160)), float(0.0), bool(true))))) : _GLF_FUZZED(-705.762)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)))) && true))))))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-92.13)), mix(float((true ? 0.0 : _GLF_FUZZED(-92.13))), float(_GLF_FUZZED(-7.2)), bool(false))))))), 1.0, 1.0)), (true ? vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
