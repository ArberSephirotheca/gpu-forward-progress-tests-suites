#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 25:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           case 95:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((0 | 0)))
            {
             case 0:
             case 31:
             case 70:
             case 82:
             case 13:
             case 96:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             else
              {
              }
             break;
             case 61:
             90308;
             default:
             1;
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 77:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       switch(_GLF_SWITCH(((88399 & 62601) & 0)))
        {
         case 68:
         for(bool _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[85]; true; uvec3(131487u, 163968u, 100535u))
          {
           mat2x3 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
           vec3(-4.1, -5.3, -589.333);
           for(           bvec4(true, false, true, false);
 false; mat2x3(mat3(mat2(-749.639, -5015.8429, -480.015, -983.060))))
            {
             {
              subgroup_id;
             }
             bvec3 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v[57];
             equal(uvec2(122095u, 9450u), uvec2(77141u, 20485u));
             while((-19566 >= -76267))
              {
               ;
               (ivec4(86313, 94111, 39315, -62507) * -51358);
               38133;
               clamp(uvec3(68842u, 180259u, 147886u), 84696u, packHalf2x16(injectionSwitch));
               mat2x4 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
               (_GLF_SWITCH_5_8v + _GLF_SWITCH_5_7v);
              }
             while(true)
              {
               mix(bvec2(false, true), bvec2(true, false), bvec2(true, false));
               max(uvec2(65695u, 43315u), uvec2(58488u, 195694u));
              }
            }
           mat3x2(-2.0, -359.959, 4.7, 813.764, 0.9, -8.9);
           if(all(bvec3(true, true, false)))
            {
             ivec2(-76920, 48381);
             if(isinf(-135.545))
              {
               (mat3x2(6129.3663, 7.3, 386.565, 68.87, 7882.2132, 7.9) * mat3(2.1, -1062.0471, 236.277, -9.3, 4.1, 756.474, 4.1, -985.471, -634.452));
               (- mat4x2(5.9, -42.29, 5856.5359, 5.8, -70.71, -4.0, 792.371, 501.588));
               ;
               uvec2 _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v[54];
               vec3 _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v, _GLF_SWITCH_5_14v[64];
               vec2 _GLF_SWITCH_5_15v, _GLF_SWITCH_5_16v, _GLF_SWITCH_5_17v[44];
              }
             ;
             while((mat3x2(-57.83, 2.3, -7842.0950, -867.827, -9122.6277, -198.822) != outerProduct(vec2(7.8, -486.798), vec3(-8082.6006, 3173.8667, -668.109))))
              {
               mat3x2(3.6, -5.0, 97.95, 6.1, -0.1, 7.4);
               uvec2 _GLF_SWITCH_5_18v[97], _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v;
               injectionSwitch;
               lessThan(_GLF_SWITCH_5_20v, _GLF_SWITCH_5_20v);
               bvec2 _GLF_SWITCH_5_21v;
               uvec4(30217u, 12410u, 19072u, 25353u);
               (mat3x2((_GLF_SWITCH_5_4v - mat2x3(9.9, -5.4, 667.077, -5.9, -6.8, 2.0))) / mat3x2(-3573.9459, 1.2, 6.1, -129.851, -4.2, 35.19));
              }
            }
           else
            {
            }
           mat3x2(7.3, -13.01, -45.02, 95.40, 3951.8030, -4.4);
          }
         case 31:
         if((uvec3(uvec2(66543u, 124361u), subgroup_id) == uvec3(1655u, 121174u, 42291u)))
          {
           vec4(91.03, 8.2, -81.11, 9.3);
          }
         else
          {
           smoothstep(vec3(7460.9926, -6.1, 1.1), vec3(30.67, 9549.4115, 37.77), vec3(-559.064, -6314.1735, 69.30));
           {
           }
           mat4(mat3x4(-6.6, -21.28, -14.46, 39.30, -8.8, -61.09, -521.190, -4.5, -8.3, 1.1, -5.8, 7.9));
           -6005.3623;
          }
         case 0:
         case 1:
         case 92:
         case 73:
         case 44:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
         default:
         1;
        }
      }
     case 82:
     return;
     break;
     case 58:
     {
      for(      mat3(injectionSwitch[0], -67.92, -56.37, -9.8, determinant(mat3(0.5, 2.1, -30.91, -6.3, -5.6, -515.061, -1.9, -68.07, 80.01)), -91.12, -466.738, -7.0, -5115.6849);
 false; bvec4(true, false, true, false))
       {
       }
     }
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 52:
           ;
           case 0:
           case 29:
           case 47:
           case 98:
           case 84:
           case 68:
           case 14:
           case 90:
           case 54:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           break;
           case 67:
           {
            uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[48];
            vec3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
            (false ? mat3(-50.98, -4.9, 71.63, -70.83, -73.51, 1.8, 53.60, -9.4, 8815.8980) : mat3(5382.1190, 7.3, -4.6, 90.45, -6.4, 397.608, 6724.1466, 5373.9868, -9.4));
            (mat3(-66.73, 1.2, 8.4, 3913.5740, 98.29, -29.04, -8.7, 8.4, -8.0) / inversesqrt(5997.4045));
            mat4x3(48.77, 33.81, 9.1, 453.527, 2.4, -8.5, 2265.9336, -32.42, -938.823, 65.02, -66.60, -1788.7029);
            (num_workgroup | uvec4(42807u, 3516u, 55040u, 31110u));
            _GLF_SWITCH_5_0v;
           }
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH((0 & 11358)))
      {
       case 0:
       case 57:
       if(_GLF_DEAD(false))
        return;
       case 52:
       case 4:
       barrier();
       break;
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
            {
             case 71:
             do
              {
              }
             while(false);
             case 0:
             case 65:
             case 93:
             case 31:
             case 69:
             barrier();
             case 98:
             case 45:
             case 2:
             case 7:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             break;
             case 35:
             mat3 _GLF_SWITCH_5_0v;
             default:
             1;
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       switch(_GLF_SWITCH((1 ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))
        {
         case 17:
         bool _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
         case 0:
         case 87:
         case 27:
         case 96:
         return;
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 14:
         while(_GLF_SWITCH_5_1v)
          {
           vec2 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v[93], _GLF_SWITCH_5_5v;
           while(bvec3(false, true, true)[2])
            {
             mat2x4(vec4(-9.7, 132.043, -2644.2251, 4.4), (vec4(-8.1, 33.90, 981.153, -5.0) / 7079.5218));
             _GLF_SWITCH_5_2v;
             (ivec4(38858, -34288, -68820, -73279) != ivec4(-70463, 3953, 67269, -49921));
             mat3x2(-5067.5074, 1395.3159, 1.9, 4.2, -86.57, 0.3);
             mat4x3(mat3(-3.9, 2.9, -8657.1812, -790.899, -4.5, 7.6, 8875.4171, -7.0, 73.16));
             uvec2(146375u, 80071u);
            }
           if(_GLF_SWITCH_5_2v)
            {
             bvec2(true, true);
             bvec3(true, false, false);
             bvec4 _GLF_SWITCH_5_6v[99], _GLF_SWITCH_5_7v;
             ;
             mat3x4 _GLF_SWITCH_5_8v[27], _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v;
             vec4(-3119.6791, 360.614, -8548.0425, -897.597);
            }
           else
            {
             mat4(-7.6, 399.790, -36.29, -278.058, -6.5, 6.9, 170.248, 6129.8986, 4.6, -7.4, -468.701, -7.3, 5.6, -88.63, 2374.8737, -103.988);
             bvec3(false, true, true);
             mat2(-572.288, 57.73, -7.2, -646.257);
             80465;
             bvec2 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v[52];
            }
          }
         default:
         1;
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
            {
             if(_GLF_DEAD(false))
              break;
             switch(_GLF_SWITCH(0))
              {
               case 99:
               mat3x4(3.8, 21.81, -7300.0736, 54.89, 13.60, 407.347, 6.7, 80.42, 62.44, 725.901, 2.1, 44.19);
               case 3:
               ivec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[70];
               case 0:
               case 46:
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               case 26:
               case 70:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               case 32:
               ;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 36:
               int _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[55];
               case 40:
               ivec2 _GLF_SWITCH_5_3v[63], _GLF_SWITCH_5_4v[31], _GLF_SWITCH_5_5v;
               case 0:
               case 72:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 55:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               case 1:
               case 35:
               barrier();
               break;
               default:
               1;
              }
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 64:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 80:
             bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
             default:
             1;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
    {
     case 20:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(all(bvec2(false, true)))
      {
       if(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             while((mat3(-1.3, -66.19, 15.69, -0.0, -95.03, -9.9, 7.6, 7.1, 2.5) != mat3(-356.436, 4374.1165, 58.46, 7.3, 5.1, -509.917, -9837.8181, 875.702, -8476.5650)))
              {
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, 1 * (0))))
                  {
                   case 0:
                   case 32:
                   case 79:
                   case 65:
                   case 11:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 73:
                   case 41:
                   case 94:
                   case 62:
                   case 66:
                   continue;
                   break;
                   case 24:
                   float _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[32], _GLF_SWITCH_5_2v;
                   case 85:
                   mat2x3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
                   default:
                   1;
                  }
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 0:
                 case 29:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 case 69:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 case 14:
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 87:
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 59:
                     mat3x2(-7.1, 7.5, 441.117, -2.8, 388.445, -1.1);
                     case 34:
                     mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                     case 0:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                         do
                          {
                           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))))))
                            {
                             case 26:
                             mat2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                             case 0:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             case 48:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if(_GLF_DEAD(false))
                              barrier();
                             case 16:
                             case 45:
                             case 67:
                             case 53:
                             if(_GLF_DEAD(false))
                              return;
                             case 64:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
                              continue;
                             case 69:
                             case 37:
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                return;
                               barrier();
                              }
                             break;
                             if(_GLF_DEAD(false))
                              barrier();
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     case 23:
                     uvec4(169451u, 63296u, 29114u, 62468u);
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 mat2x3 _GLF_SWITCH_0_0v;
                 break;
                 case 83:
                 uvec2 _GLF_SWITCH_1_0v[78];
                 case 2:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 uvec2 _GLF_SWITCH_1_1v[53], _GLF_SWITCH_1_2v;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                  }
                 1;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       case 58:
                       case 36:
                       barrier();
                       break;
                       case 6:
                       bool _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[73], _GLF_SWITCH_5_2v;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
          }
         vec3(-5875.6058, -49.94, 6.2);
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 44:
             bvec3(false, true, true);
             case 85:
             mat3x2(injectionSwitch, vec2(vec4(679.634, -988.809, 16.20, 3.4)), vec2(66.90, 2.5));
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
             case 0:
             case 67:
             if(_GLF_DEAD(false))
              return;
             case 87:
             case 56:
             case 2:
             case 81:
             case 99:
             case 10:
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))))
                {
                 case 38:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3x2(3.5, 5.5, -8.1, 1.1, 63.55, 821.397);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 0:
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   1;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 17:
             mat2x3 _GLF_SWITCH_4_0v[44];
             default:
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         ivec4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         ;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 44:
             mat4(-4448.4025, 8566.2031, -78.88, 2891.5638, -5.1, 8.0, -61.78, 555.403, 1.2, 7.9, -275.810, -2.5, 9044.9654, 3.2, 601.561, -71.66);
             case 26:
             mat3(0.6, -396.232, -4385.9769, -532.408, -9763.8528, -9195.7555, -2.7, -5670.9735, 9577.1254);
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             case 98:
             case 40:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
         while(false)
          {
           switch(_GLF_SWITCH(0))
            {
             case 94:
             (uvec2(189242u, 70496u) << 116033u);
             case 0:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
               vec2(7330.5696, 38.63);
              }
             case 46:
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))
                {
                 case 60:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   break;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 injectionSwitch;
                 case 0:
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH((0 | (0 << _GLF_IDENTITY(int(7), int(7))))))
                    {
                     case 97:
                     vec3(-806.149, vec3(3233.5547, 6116.3626, 4.4).ss);
                     case 14:
                     uvec2(123412u, 135039u);
                     case 0:
                     case 19:
                     case 42:
                     if(_GLF_DEAD(false))
                      continue;
                     case 88:
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     case 83:
                     abs(ivec3(-52583, 76391, 58851));
                     case 94:
                     mod(vec4(8554.9711, 92.47, 2.3, 2.5), -7.9);
                     default:
                     1;
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 case 21:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 18:
                 case 12:
                 case 38:
                 case 57:
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                      }
                    }
                  }
                 break;
                 case 11:
                 if(_GLF_DEAD(false))
                  break;
                 mat2 _GLF_SWITCH_3_0v[11];
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 74:
             mat4x3(5.9, 5.1, -4.8, 554.260, -64.81, 5340.1614, -8.4, 49.19, -6.6, 2.8, 1817.2867, -934.454);
             default:
             1;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         mat2x4 _GLF_SWITCH_0_4v[27], _GLF_SWITCH_0_5v[16];
         uint _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[31];
         for(         mat3x2(mat2(57.37, -7.5, -0.8, 12.65));
 (-77024 < 49410); bvec4(true, false, true, false))
          {
           bvec4(bvec2(true, false), true, isnan(18.28));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bvec3 _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           vec4(30.41, -666.970, 1.3, -0.1);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       while(true)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         while((bvec4(true, false, false, true) == bvec4(true, true, true, true)))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
          {
           for(ivec2 _GLF_SWITCH_0_9v; false; mat4x2(1.7, -0.6, -2.5, 2.4, 511.291, -7.4, -704.224, -3334.4654))
            {
             switch(_GLF_SWITCH(0))
              {
               case 83:
               do
                {
                 uvec2(198384u, 97398u);
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               vec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
               ivec3(47214, 31963, 46262);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               vec3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[31], _GLF_SWITCH_0_15v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               bvec3(false, (bvec2(false, false) == bvec2(false, true)), true);
               mat3x4 _GLF_SWITCH_0_16v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + ((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))
                  {
                   case 58:
                   float _GLF_SWITCH_5_0v;
                   case 0:
                   if(_GLF_DEAD(false))
                    return;
                   case 46:
                   case 11:
                   case 49:
                   if(_GLF_DEAD(false))
                    return;
                   case 54:
                   case 86:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 99:
                   case 45:
                   case 17:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   break;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH((1 ^ 1)))
                  {
                   case 64:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   ;
                   case 0:
                   case 5:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           return;
                          }
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             return;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           return;
                          }
                         barrier();
                        }
                      }
                    }
                   case 66:
                   case 74:
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 45:
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 1:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           return;
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         _GLF_SWITCH_0_16v;
                        }
                      }
                     else
                      {
                      }
                     case 68:
                     if(_GLF_DEAD(false))
                      barrier();
                     vec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[15], _GLF_SWITCH_1_2v;
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
                     case 0:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      break;
                     case 3:
                     case 70:
                     continue;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) << 0)))
                          {
                           case 71:
                           ivec3(86101, -84998, -46210);
                           case 0:
                           case 38:
                           case 92:
                           case 40:
                           case 5:
                           case 17:
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            barrier();
                           case 31:
                           barrier();
                           break;
                           case 62:
                           _GLF_SWITCH_0_16v;
                           case 14:
                           ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                           default:
                           1;
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                        barrier();
                       continue;
                      }
                     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     case 9:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH((-59281 & 0)))
                          {
                           case 0:
                           case 68:
                           case 67:
                           case 22:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           case 35:
                           case 47:
                           barrier();
                           break;
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                      }
                     ;
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0)))); _injected_loop_counter ++)
                      {
                       1;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 89:
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           return;
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                    }
                   break;
                   default:
                   1;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                    {
                     case 54:
                     mat3x2(-366.884, 0.2, -193.942, -608.229, -4.2, -352.803);
                     case 84:
                     ivec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[85], _GLF_SWITCH_4_2v;
                     case 0:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     case 20:
                     case 38:
                     case 62:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     case 43:
                     case 55:
                     switch(_GLF_SWITCH(0))
                      {
                       case 23:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         (uvec3(169469u, 176611u, 123370u) != min(uvec3(124718u, 178186u, 29201u), num_workgroup));
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                          {
                           case 12:
                           mat4x2(-56.48, -3.5, -9845.8074, -9855.3909, 0.6, 111.405, -8.7, 1669.8797);
                           case 42:
                           injectionSwitch;
                           case 0:
                           case 10:
                           case 31:
                           case 21:
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             return;
                            }
                           break;
                           default:
                           1;
                          }
                        }
                       case 26:
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        barrier();
                       ;
                       case 0:
                       for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), (false ? _GLF_FUZZED(mix(70705, 47048, true)) : (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 52:
                       (+ mat2(-694.104, -7.3, 92.96, -1.8));
                       case 62:
                       (ivec2(77737, 27266) << -31383).gr;
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     case 94:
                     mat2x3(8963.9257, 16.99, -9.4, -1.5, 5.6, -3.1);
                     if(_GLF_DEAD(false))
                      return;
                     case 66:
                     mat3x4 _GLF_SWITCH_4_3v;
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     barrier();
                    }
                   continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               1;
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         mat2x3 _GLF_SWITCH_0_17v[43], _GLF_SWITCH_0_18v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (85736 & 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          continue;
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          -73894;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              continue;
             }
            break;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            break;
           }
          if(_GLF_DEAD(false))
           {
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
             }
            while(_GLF_WRAPPED_LOOP(false));
            break;
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(false))
           break;
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           bvec4(true, false, false, false).g;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
         int _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       bvec4(true, true, true, true);
       bitfieldInsert(uvec3(6314u, 143362u, 50587u), uvec3(89715u, 106013u, 165062u), abs(-3627), -74459);
       ivec2 _GLF_SWITCH_0_21v[25], _GLF_SWITCH_0_22v[87], _GLF_SWITCH_0_23v;
       (ivec4(63553, -13898, -44466, 22655) + -38564);
       if((mat3x2(228.452, 595.675, 4543.6016, -8101.8895, -2344.6860, -4.3) != mat3x2(-3417.6861, 0.7, -4.3, -77.68, -7280.1200, 44.13)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(mat3x2 _GLF_SWITCH_0_24v; false; vec3(8.3, 9.7, 4.1))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               roundEven(vec4(9.9, 36.81, 2.0, -4.3));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             vec3(7959.8677, -3550.8382, -7894.3846);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             mat2x4(4.2, 937.606, -48.69, 9721.3283, 1.7, 37.51, 827.978, 1.6);
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 44:
                 _GLF_SWITCH_0_23v.rrg;
                 case 0:
                 case 38:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 61:
                 uvec4(89779u, 4352u, 124476u, 65259u);
                 case 22:
                 (mat4x3(68.71, -6.2, -7.0, 3774.9879, -12.69, -5056.3387, -3.0, -514.420, 3.2, 525.339, 146.210, -6.2) * vec4(-683.933, 95.30, -9477.8291, 1.6));
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             uvec2 _GLF_SWITCH_0_25v[30], _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[56];
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             mat3x2 _GLF_SWITCH_0_28v;
             bvec3 _GLF_SWITCH_0_29v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               barrier();
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) * (0 ^ 1)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   vec4(-99.31, -9.7, -5539.6791, 3.7);
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         for(         bvec2(false, true);
 true; (- (mat2(-5215.5709, 7872.5152, 32.20, -572.940) * (-8.9 - mat3x2(-9.1, -9.6, -2.3, -3.9, -9.9, 2.9)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_0_30v[29], _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[93];
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
            {
             case 96:
             ivec3(78557, -53857, -46911);
             case 69:
             lessThan(injectionSwitch, injectionSwitch);
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 81:
             case 38:
             case 52:
             case 50:
             case 59:
             case 14:
             barrier();
             break;
             case 58:
             -43333;
             case 97:
             mat4x3(366.878, -96.32, -9127.0547, 7914.6962, -82.15, -27.64, 1945.8561, 3313.7573, 7.2, 9740.0960, -96.07, 7.6);
             default:
             1;
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       {
        do
         {
          if(_GLF_DEAD(false))
           return;
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 0:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                continue;
               }
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            break;
            case 2:
            int _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
            default:
            1;
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          while((mat4x3(3.1, -6.5, -21.73, -9.0, 1.9, -1.1, 312.355, 581.736, -54.57, -94.84, 57.22, 7.9) != mat4x3(-71.27, 5291.2115, 46.83, -573.305, -16.27, -3.3, 1.2, 8.8, 8734.8614, -299.232, 4340.6906, 2.2)))
           {
            if(_GLF_DEAD(false))
             barrier();
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 break;
                ;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   break;
                 }
                if(_GLF_DEAD(false))
                 return;
               }
              else
               {
                if(_GLF_DEAD(false))
                 break;
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            ivec3(47371, 88788, 86222);
            if(_GLF_DEAD(false))
             break;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              ldexp(injectionSwitch, ivec2(-97003, -39870));
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                return;
               }
              break;
             }
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
               }
              barrier();
             }
            do
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 8:
                  mat3x4 _GLF_SWITCH_3_0v[2], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                  case 55:
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  uint _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[14];
                  case 0:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      barrier();
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    return;
                   }
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  else
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                       barrier();
                     }
                   }
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    return;
                   }
                  else
                   {
                   }
                  break;
                  if(_GLF_DEAD(false))
                   barrier();
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            do
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  else
                   {
                   }
                 }
               }
              else
               {
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             return;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 42:
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                case 69:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                case 55:
                uvec3(114282u, 151417u, 178804u);
                case 25:
                case 84:
                case 53:
                case 15:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   break;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                   barrier();
                  continue;
                 }
                break;
                case 74:
                (1115.6083 - (mat2(13.46, 13.15, -1.2, -428.257) * mat4x2(-423.266, -219.023, -37.03, 0.5, -5634.7800, 7.0, 20.86, 58.30)));
                default:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                1;
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            ;
            if(_GLF_DEAD(false))
             continue;
            vec2 _GLF_SWITCH_0_33v[20];
            if(_GLF_DEAD(false))
             continue;
            for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
               barrier();
              barrier();
             }
            vec4(-8.8, 117.550, -6622.7698, 303.941);
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
             {
              if(_GLF_DEAD(false))
               return;
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           continue;
         }
       }
      }
     if(_GLF_DEAD(false))
      continue;
     case 21:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     ;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     case 0:
     case 37:
     case 10:
     case 64:
     case 26:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 16:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
            {
             case 38:
             uvec2 _GLF_SWITCH_5_0v;
             case 46:
             86843;
             case 0:
             case 95:
             if(_GLF_DEAD(false))
              barrier();
             break;
             case 45:
             (mat2x4(-0.7, -2965.7606, 0.5, 5.9, -17.90, 52.30, 6.3, 659.270) * mat4x2(mat4x3(8634.0118, 36.52, -9.4, -2.5, 442.912, 6997.8928, 67.02, 3875.7814, 4934.5569, 2.0, -0.1, -4324.4191)));
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         case 1:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         case 67:
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         mat4x3(1.2, 9.7, -6.4, 7747.6779, 7.5, 2804.3487, 387.779, 218.452, -2.3, -67.87, 5.3, 2351.7676);
         default:
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         1;
        }
       if(_GLF_DEAD(false))
        return;
      }
     case 36:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 48:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
          {
           case 12:
           ;
           case 59:
           do
            {
             injectionSwitch;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 0:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           case 19:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           case 66:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
              barrier();
             return;
            }
           case 85:
           barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           case 22:
           mat2x3 _GLF_SWITCH_3_0v[81], _GLF_SWITCH_3_1v[69], _GLF_SWITCH_3_2v;
           default:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                  {
                   case 0:
                   case 91:
                   case 80:
                   case 6:
                   case 71:
                   case 67:
                   case 29:
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                   break;
                   default:
                   1;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
              }
            }
           1;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 85:
         while((91250 < (42619 & -56997)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3x4 _GLF_SWITCH_3_0v;
           mat2 _GLF_SWITCH_3_1v;
           uvec3(67171u, 76094u, 179877u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         case 3:
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              continue;
             return;
            }
           (false || false);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           vec3(735.878, 5.7, -3776.9230);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 0:
         case 8:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         case 37:
         case 18:
         case 41:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         case 70:
         case 55:
         case 15:
         case 64:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         case 51:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         continue;
         break;
         case 14:
         7111.8575;
         case 42:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 3:
             -14613;
             case 0:
             case 96:
             case 99:
             case 16:
             case 61:
             case 51:
             case 76:
             case 46:
             case 37:
             case 12:
             ivec4(-84954, 89306, -48494, -22007);
             break;
             case 56:
             ;
             default:
             1;
            }
          }
         default:
         1;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     case 23:
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 47:
             mat3x2 _GLF_SWITCH_5_0v;
             case 64:
             vec4 _GLF_SWITCH_5_1v;
             case 0:
             case 86:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             case 24:
             case 87:
             continue;
             case 97:
             case 95:
             case 58:
             case 4:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     for(int _injected_loop_counter = (0 & -89575); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 56:
           case 14:
           case 21:
           if(_GLF_DEAD(false))
            break;
           case 69:
           case 4:
           case 78:
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 46:
                   int _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[46];
                   case 0:
                   case 35:
                   case 41:
                   case 6:
                   case 82:
                   case 87:
                   case 13:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 57:
                   case 39:
                   case 60:
                   return;
                   break;
                   default:
                   1;
                  }
                }
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
           case 33:
           mat2x3(-2.1, 5.3, -1.4, -9307.0895, 7.6, 93.17);
           case 23:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             switch(_GLF_SWITCH((0 & 48170)))
              {
               case 93:
               mat4x3(-298.573, 217.342, 7334.7726, 49.85, -3541.4474, -0.7, -346.242, -5.3, 774.449, -352.462, 4.2, -73.15);
               case 75:
               uint _GLF_SWITCH_5_0v[38], _GLF_SWITCH_5_1v;
               case 0:
               case 58:
               case 35:
               case 64:
               ivec4(-30891, -34603, 88964, -5287);
               break;
               case 18:
               mat3x4(-499.438, -9551.2513, 76.07, 506.079, 607.145, -4.9, -27.41, 1543.5824, -2.2, 5.7, -77.69, -168.956);
               case 87:
               mat3x4 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
               default:
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) - 0)))
          {
           case 63:
           mat4x2 _GLF_SWITCH_5_0v[49], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           case 0:
           case 34:
           case 72:
           if(_GLF_DEAD(false))
            return;
           case 3:
           case 18:
           case 62:
           case 81:
           case 88:
           barrier();
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     case 93:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 91:
           ivec4 _GLF_SWITCH_5_0v[10], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           case 58:
           bvec2(false, true);
           case 0:
           case 41:
           case 1:
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           break;
           case 81:
           subgroup_id;
           default:
           1;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     mat3x2 _GLF_SWITCH_0_34v;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 88:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(     mat2x3(4482.0106, -8.4, 1062.9761, 56.60, -3591.8566, -5.0);
 (uvec3(180201u, 48560u, 167889u) == uvec3(93531u, 37499u, 19602u)); greaterThanEqual(cross(vec3(1.8, 73.85, -1669.5090), vec4(574.895, -928.680, -964.613, -9.7).brg), (vec4(-7.8, 6584.7386, -55.73, -22.98) * mat3x4(88.70, 79.43, -4.5, -3.4, 5.4, 159.596, 911.547, 6.1, -39.13, 619.529, -8.9, 5.8))))
      {
       mat3 _GLF_SWITCH_0_35v;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 | ((0 & -14364) << _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           ivec2(-22787, 33318);
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 28:
       vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       case 52:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 74:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       case 84:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 78:
       if(_GLF_DEAD(false))
        barrier();
       case 27:
       case 40:
       case 67:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(bitfieldInsert(-18951, _injected_loop_counter, -6232, 82847)) : int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       default:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       1;
      }
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 27:
     3.2;
     case 0:
     case 1:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     case 13:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         switch(_GLF_SWITCH(0))
          {
           case 51:
           bvec3 _GLF_SWITCH_2_0v[61], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 17:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 42:
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           break;
           if(_GLF_DEAD(false))
            return;
           case 5:
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 43:
               (true && bvec2(true, false).x);
               case 0:
               case 15:
               case 27:
               case 96:
               case 39:
               case 31:
               case 72:
               case 4:
               if(_GLF_DEAD(false))
                return;
               break;
               case 86:
               ivec2(-98084, 91547);
               case 69:
               ;
               default:
               1;
              }
            }
           mat4 _GLF_SWITCH_2_3v[53], _GLF_SWITCH_2_4v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 41:
           do
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
               {
                case 47:
                mat2x3(-0.8, 30.95, -84.83, 2486.8822, 1.7, 0.2);
                case 76:
                bool _GLF_SWITCH_5_0v[73], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[16];
                case 0:
                case 60:
                case 52:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  return;
                 }
                case 89:
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  do
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     return;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      return;
                     }
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 return;
                case 98:
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                break;
                default:
                1;
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            int _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v[2];
            ivec2(94660, 36955);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            for(            vec3(2.0, -7.0, -26.02);
 (vec4(8.4, 1.6, -1.3, -8776.9373) != vec4(-59.71, 0.2, -1.5, -4890.4313)); lessThanEqual(uvec4(160372u, 180167u, 35437u, 131425u), uvec4(49747u, 132281u, 130533u, 123631u)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               barrier();
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              do
               {
                switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(2), int(2))) & (-82289 + -21118))))
                 {
                  case 57:
                  vec4(9650.3438, -6.2, -9.8, -1.8);
                  case 0:
                  if(_GLF_DEAD(false))
                   barrier();
                  vec2 _GLF_SWITCH_2_8v;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  ;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  ivec3 _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 56:
                      case 12:
                      case 19:
                      case 28:
                      case 37:
                      case 60:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          barrier();
                         }
                       }
                      break;
                      case 26:
                      workgroup_base;
                      default:
                      1;
                     }
                   }
                  case 65:
                  ;
                  case 11:
                  if(_GLF_DEAD(false))
                   return;
                  mat3 _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v[67], _GLF_SWITCH_2_13v;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  case 91:
                  if(_GLF_DEAD(false))
                   return;
                  break;
                  case 39:
                  vec4(-757.264, 3515.9788, -3857.6414, 5.1);
                  case 28:
                  mat2(0.3, 534.949, exp(1.2), 2667.3853);
                  default:
                  1;
                 }
               }
              while(true);
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
             }
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               barrier();
              -6.9;
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
               {
                case 50:
                ;
                case 49:
                _GLF_SWITCH_2_4v;
                case 0:
                case 60:
                case 23:
                case 68:
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                 barrier();
                break;
                case 10:
                mat2x4(-6569.3276, -4.6, -5783.1651, 716.536, 99.12, 7.1, -0.2, 775.642);
                default:
                1;
               }
             }
            mat4x2 _GLF_SWITCH_2_14v[34], _GLF_SWITCH_2_15v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
           }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           default:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             1;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 5:
     for(     mat3x2(3.4, 1742.7819, 2291.0503, -2.3, -81.22, -534.114);
 (matrixCompMult(mat4x3(-58.88, 2.4, 9.9, -2547.3013, 5.8, 35.96, -68.88, 347.694, -76.73, 5.3, 75.16, -456.876), mat4x3(0.3, -0.7, 8.4, -8.1, -8.6, 7.4, -1906.3917, -338.141, 12.16, -309.112, -0.3, -7.5)) != mat4x3(-5.6, -92.06, 1.0, 23.17, 81.65, -229.060, 648.904, -4564.0511, -127.505, 2686.9286, 9.8, -2.4)); mat2(4637.9447, 209.781, -93.98, 2693.0292))
      {
       mat2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
       {
        if(false)
         {
          mat3x2 _GLF_SWITCH_5_3v;
          ;
          vec2(6.4, -9.9);
         }
        else
         {
          mat3 _GLF_SWITCH_5_4v[90], _GLF_SWITCH_5_5v;
          mat4x2 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v;
         }
        if(true)
         {
          mat4x3 _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v;
          ;
          float _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v;
          false;
          (_GLF_SWITCH_5_12v);
         }
        else
         {
          int _GLF_SWITCH_5_13v, _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v;
          ;
         }
        while(true)
         {
          ivec2 _GLF_SWITCH_5_16v;
          mat3x4 _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v[46];
          mat3x4(7.3, -91.87, 8.2, -9.8, -9.3, -322.502, 258.933, 4.8, -560.798, -5114.1980, -3.7, -13.21);
          uvec3 _GLF_SWITCH_5_19v;
          ;
          false;
          (_GLF_SWITCH_5_19v / (++ subgroup_id));
          mat4 _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v[86], _GLF_SWITCH_5_22v;
          abs(ivec4(98717, 67204, -16131, -59188));
         }
        while((bvec2(true, false) != bvec2(true, true)))
         {
          mat2x3(8.5, -62.55, -641.122, 267.588, 3.0, 665.880);
          mat4((mat3x2(258.864, -2188.3659, -4610.8039, -3792.9026, -0.5, 34.83) * mat3(-53.21, -63.34, -15.12, -4.4, -6.8, -1.9, -93.02, -2572.4044, 512.441)));
          uvec4 _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v;
          bvec4(false, false, true, true);
          (_GLF_SWITCH_5_23v.spqt + num_workgroup);
          vec4(5075.7403, -277.563, 67.71, 0.5);
          ivec2 _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v[82];
          int _GLF_SWITCH_5_27v;
          mat4(-270.903, -798.037, 2.7, -24.01, 5418.5117, 0.8, 4086.6069, 1.8, 79.51, 73.49, -60.37, 8.1, 5.5, -3957.8886, 1012.8095, 345.239);
         }
        mat3x4(527.201, -9.7, -579.461, -91.89, 69.81, 3.8, 459.424, -2.9, 3.3, 268.687, 3.7, 44.06);
       }
       {
        (mat2(-599.167, -9.7, -9168.0073, -7547.2774) == outerProduct(injectionSwitch, injectionSwitch));
        mat3x4 _GLF_SWITCH_5_28v[9], _GLF_SWITCH_5_29v[80];
        mat3x4(916.850, -719.117, 8181.2612, -8.9, 934.680, -872.795, 0.8, 8.8, -551.771, -642.917, -2.8, -9.5);
        while(false)
         {
          ;
          findMSB(uvec2(128689u, 84778u));
          uvec2 _GLF_SWITCH_5_30v[12], _GLF_SWITCH_5_31v;
          ivec4 _GLF_SWITCH_5_32v[95];
         }
        mat3x4(outerProduct(vec3(-808.044, -8806.0351, -9.2), vec3(-721.127, 9.4, 7.7)));
       }
       notEqual((uvec2(109008u, 76362u) & uvec2(33291u, 64124u)), uvec2(28114u, 182913u));
       uvec2(119778u, 168408u);
       while(false)
        {
         {
          mat3(-4.5, 234.415, -6805.6167, 970.174, 65.79, -711.483, 863.361, -5391.7100, -7.0);
          exp(injectionSwitch);
          equal(ivec4(-58447, -14714, 22829, 14230), ivec4(76559, 32995, 76114, 18947));
          bvec2(false, true).x;
          float _GLF_SWITCH_5_33v;
          bvec3(true, false, true);
          mat3 _GLF_SWITCH_5_34v[31];
          ivec4 _GLF_SWITCH_5_35v;
          mat3x4 _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v;
         }
         ;
         {
          injectionSwitch;
          uvec3(164273u, 28045u, 3629u);
          mat2x4(715.439, -3.9, 38.44, -525.205, -5644.6491, 7.1, 3.3, -9.8);
          mat4 _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v[87];
          uvec2(155108u, 163665u);
          vec3 _GLF_SWITCH_5_40v, _GLF_SWITCH_5_41v, _GLF_SWITCH_5_42v;
          ivec2(-35899, -97423);
         }
         ivec3(-61795, -74461, -42182);
         (25023 | ivec2(81754, 90913));
         for(         uvec2(89606u, 171155u);
 true; greaterThan(ivec3(58373, -12958, -21158), mix(ivec3(-32951, 29690, -36369), (91611 | ivec3(8171, -93540, 37942)), bvec3(false, true, false))))
          {
          }
         ivec3 _GLF_SWITCH_5_43v, _GLF_SWITCH_5_44v;
         mat4 _GLF_SWITCH_5_45v[98];
        }
      }
     case 45:
     if(false)
      {
       if(false)
        {
         while(false)
          {
           (workgroup_size & (uvec2(99246u, 167534u) & uvec2(39104u, 152086u)));
           mat2x3(-6784.7543, 0.4, -2.9, -7.2, -8355.5303, 5.5);
           ivec2(41855, 32718);
           ivec3(-31578, -45222, -18905);
           mat4(84.55, 758.337, 5.0, 958.141, 9.0, 5.1, -7.0, 0.5, -3.9, -6.6, 66.19, 1501.0791, 7075.2518, -571.351, 600.574, -5484.3222);
           mat3x4 _GLF_SWITCH_5_46v[29];
           virtual_gid;
           ivec4(-11858, 87829, -82506, 8399).xyx;
           vec2 _GLF_SWITCH_5_47v[36], _GLF_SWITCH_5_48v, _GLF_SWITCH_5_49v;
          }
         if((virtual_gid == workgroup_id))
          {
           mat4x3(762.998, 223.016, -42.33, -6.3, 4.8, -5.7, 5.1, -5.4, -385.058, 2.9, -697.674, -160.214);
           ivec3(87011, 5500, 37095);
           bvec3(true, true, false);
           ;
           floatBitsToInt(vec4(-7.7, -7.9, -451.022, -8.4));
           vec4 _GLF_SWITCH_5_50v[67];
           uvec4 _GLF_SWITCH_5_51v;
           notEqual(bvec2(false, false), bvec2(true, false));
          }
         while(bvec2(true, true).s)
          {
           bvec3 _GLF_SWITCH_5_52v;
           (- mat3x4(-6.2, 9.4, 8.0, 32.64, -8874.8118, -846.242, 4127.0146, -1264.7731, 8319.4448, 403.225, -5.7, 5.2));
           mat2x3 _GLF_SWITCH_5_53v, _GLF_SWITCH_5_54v;
           (ivec2(-956, 3650) % 42284);
           uvec3 _GLF_SWITCH_5_55v;
           uvec2 _GLF_SWITCH_5_56v, _GLF_SWITCH_5_57v;
           vec2 _GLF_SWITCH_5_58v[73];
           ;
          }
         if(false)
          {
           int _GLF_SWITCH_5_59v, _GLF_SWITCH_5_60v[25];
           bvec2 _GLF_SWITCH_5_61v[94];
           uvec3 _GLF_SWITCH_5_62v, _GLF_SWITCH_5_63v;
          }
         else
          {
           greaterThan(ivec4(69561, -37574, -43648, 42001), ivec3(-85742, 31313, -42644).tspt);
           6.6;
           bvec3 _GLF_SWITCH_5_64v[20], _GLF_SWITCH_5_65v;
           mat2(-273.973, 3489.9870, -8351.8420, 5762.5245);
           ldexp(vec3(3778.2728, 80.05, -7.5), max(ivec3(-32179, -91706, 97165), ivec3(-78401, -81774, 37474)));
           ;
          }
        }
       else
        {
         vec3(5959.6579, 827.051, 1.5);
         if(true)
          {
           mat2x4 _GLF_SWITCH_5_66v, _GLF_SWITCH_5_67v, _GLF_SWITCH_5_68v;
           ivec3(82587, -6088, -43475);
          }
         else
          {
           (ivec2(-21685, -96331) - -13917);
           uvec4(121616u, 183290u, 183963u, 9100u);
           mat2x4 _GLF_SWITCH_5_69v, _GLF_SWITCH_5_70v, _GLF_SWITCH_5_71v[85];
           (mat2x3(2156.6443, 9.5, -7850.8848, 23.55, -7.2, -1768.4441) * mat2(-95.49, 0.4, 6405.9323, -94.09));
           fract(asin(vec2(47.52, 3.3)));
           mat3(174.325, 0.6, 6.3, -2118.5958, 86.10, -94.28, 70.84, -9.4, 3.8);
           (mat3(4.0, -3188.6315, -3127.3214, -2527.8476, 49.32, 304.944, 4.0, 635.779, -3259.0259) * mat2x3(-8.8, -5797.0130, -753.561, 8560.9184, -2.6, 3.4));
           virtual_gid;
          }
         ivec2 _GLF_SWITCH_5_72v[51], _GLF_SWITCH_5_73v[32], _GLF_SWITCH_5_74v;
         (mat3x4(-6.5, -9205.9614, -1690.2345, -33.20, 4599.2347, 5.2, -3719.4512, 3863.3620, -38.78, -69.23, -0.6, -2.1) - -3.9);
         uint _GLF_SWITCH_5_75v[89], _GLF_SWITCH_5_76v;
         mat2x4(7117.8398, -679.964, 3.6, -0.9, -18.44, -0.7, 1.4, 9126.6714);
        }
       (mat4(12.56, 3469.3370, 6115.8770, -2.4, 2.6, -5483.3294, 354.090, -9.7, -5.3, 7.9, -75.17, 6.3, 3.6, 0.8, 507.713, -4.5) / 8.0);
       mat4x3(407.346, -4.6, -9676.1424, 1.6, 75.31, 6.4, -1984.1065, -1.9, 374.519, -34.14, -625.540, 0.1);
       for(ivec2 _GLF_SWITCH_5_77v[16]; true; 46272)
        {
         mat2x4 _GLF_SWITCH_5_78v, _GLF_SWITCH_5_79v;
         (mat3x4(7.1, 5.3, 9.2, -4.3, -68.27, -6252.1361, -1.0, -4.1, -474.362, 3.3, 3656.8202, -5.0) + mat3x4(mat4x3(-2270.2865, -6.5, 58.76, 3.1, 103.479, -0.0, 2.9, 50.34, -1331.9409, 63.06, -28.38, 230.517)));
         int _GLF_SWITCH_5_80v, _GLF_SWITCH_5_81v, _GLF_SWITCH_5_82v[93];
         ((uvec2(165873u, 65314u) % read_2) != uvec2(43262u, 132329u));
         mat3x2(26.58, 6159.9923, -4.6, 906.222, -5.7, 106.247);
         while(true)
          {
           inversesqrt(vec3(572.805, -98.99, -4.5));
           mat2(-2011.5666, 8774.1925, 9721.3845, 2.7);
           float _GLF_SWITCH_5_83v, _GLF_SWITCH_5_84v, _GLF_SWITCH_5_85v;
           uint _GLF_SWITCH_5_86v;
           ivec2 _GLF_SWITCH_5_87v;
           matrixCompMult(mat2x4(734.335, 1555.6965, 4.2, -3.2, 57.72, 452.491, -9.3, 6.9), mat2x4(-473.855, 4.5, 1.6, -0.6, -71.68, -12.30, 68.61, 9001.0647));
           mat2x3(-6.4, -94.07, 0.7, 3.7, -5.8, 1.5);
          }
        }
       bvec2(true, false).yyyx;
       mat4(8.9, -4.5, 4.4, 655.450, -6279.0793, -648.301, 219.943, 116.257, 600.576, 817.803, 9.2, 26.52, -356.926, -5722.0993, -1940.1978, -0.1);
       if(true)
        {
         mat2x4 _GLF_SWITCH_5_88v, _GLF_SWITCH_5_89v, _GLF_SWITCH_5_90v[19];
         while((length(vec4(2.5, 7770.8296, -87.82, 5.0)) < -6.6))
          {
           ;
           ivec2 _GLF_SWITCH_5_91v;
           ;
          }
         (mat3(-6.8, 8.4, 1.8, 404.749, -6.3, -8746.9994, 2246.1453, -834.328, -7.2) / vec3(56.01, -653.890, -3385.5493).y);
         if(true)
          {
           ;
           ivec3(-58713, -45881, -2705);
           uvec2(74548u, 60737u).xxxy;
           uvec3(16049u, 187116u, 159474u);
           91423;
           mat2x3(mat3x2(-499.190, 9137.4082, 8.4, -165.227, 677.996, -7.3));
           mat4x3 _GLF_SWITCH_5_92v[92], _GLF_SWITCH_5_93v;
           ;
           mat2x3 _GLF_SWITCH_5_94v[31];
          }
         vec4 _GLF_SWITCH_5_95v, _GLF_SWITCH_5_96v, _GLF_SWITCH_5_97v;
         11313;
         int _GLF_SWITCH_5_98v, _GLF_SWITCH_5_99v[56], _GLF_SWITCH_5_100v;
         ivec2(-12426, -50491);
         mat2x3(-98.44, 742.849, 2.5, 4201.3777, -9.3, 7.1);
        }
       else
        {
         ivec4 _GLF_SWITCH_5_101v, _GLF_SWITCH_5_102v[35];
         ivec4 _GLF_SWITCH_5_103v[39], _GLF_SWITCH_5_104v;
         if((-0.4 >= atan((-5.1 * -97.55))))
          {
           ;
           vec4 _GLF_SWITCH_5_105v[7], _GLF_SWITCH_5_106v, _GLF_SWITCH_5_107v;
           mat2(114.058, 7.4, -2989.6093, -3.8);
          }
         else
          {
           mat4x2(4.5, -5.0, 9.4, 363.407, -931.954, 8.7, -81.32, 1229.8284);
           mat2x3 _GLF_SWITCH_5_108v;
           mat4x2 _GLF_SWITCH_5_109v[77];
           float _GLF_SWITCH_5_110v[62], _GLF_SWITCH_5_111v;
           true;
           mat2x3 _GLF_SWITCH_5_112v[19], _GLF_SWITCH_5_113v[22];
          }
         ;
         uvec3(103336u, 58427u, 100491u);
         {
          ivec2(81474, -90948);
         }
        }
      }
     else
      {
       uvec2 _GLF_SWITCH_5_114v[67];
       mat4x2 _GLF_SWITCH_5_115v, _GLF_SWITCH_5_116v;
       float _GLF_SWITCH_5_117v;
       ivec4(18332, 52683, -3938, 36886);
       bvec2(true, false);
       mat2x3 _GLF_SWITCH_5_118v, _GLF_SWITCH_5_119v, _GLF_SWITCH_5_120v;
      }
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 53:
         if((mat2x4(99.53, -1317.3757, -8418.0846, -6.3, -4.3, 798.042, 7.4, 45.60) , false))
          {
           int(2873.5002);
           vec2(7.0, 3407.1342);
           if(bvec2(true, true).y)
            {
             if((true == true))
              {
               bvec2(true, true);
               uvec2(182340u, 74132u);
               mat3x2(995.558, -167.236, -4.3, -2415.0273, -0.8, -5.9);
               ivec3(29418, -89934, 32082);
              }
             uvec2(37963u, 193301u);
             mat2(3.9, 56.34, -5.2, -4.8);
            }
           float(num_workgroup);
           ;
           ;
           uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           mat3x4(1.4, -83.01, -1125.4092, 2.3, -9668.4965, -9.1, -5.5, -7.5, 130.441, -1383.6855, -937.122, 7.7);
          }
         else
          {
           mat2(mat4(-7007.6465, 7.9, -1505.3024, 3.3, -89.69, -7.6, -78.38, -9.5, -3.9, -90.04, 7978.8494, -9842.0849, 3013.7508, 1.2, 77.75, 4.8));
           {
            bvec2(false, false);
            mat2 _GLF_SWITCH_5_3v;
            equal(uvec4(33624u, 99571u, 118866u, 22271u), uvec4(53820u, 131484u, 138306u, 39930u));
            if(true)
             {
              mat4x2 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
              mat4x2(-79.51, 334.186, 2113.2988, -9.2, 4.5, -11.77, 1.3, -5.6);
              vec3(27.80, 5.7, -6.3);
              fract(atan(vec4(1.2, -436.012, 2.0, -7.2), vec4(-11.91, -9.6, -66.85, 1.3)));
              mat3 _GLF_SWITCH_5_6v[24], _GLF_SWITCH_5_7v;
              6.5;
              read_2;
              (- fract(2.8));
             }
            {
            }
            while(false)
             {
             }
            uint _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v[15], _GLF_SWITCH_5_10v[91];
            (lessThan(uvec2(156171u, 195033u), uvec2(8614u, 119002u)));
           }
           vec2 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v;
           vec3 _GLF_SWITCH_5_13v;
           mat4x3 _GLF_SWITCH_5_14v[82];
           do
            {
             {
              uvec2(40327u, 2533u).xxyx;
              mat3x2(-4.5, 82.83, -36.16, 5.9, -3.1, -58.90);
              int(true);
              (mat4x3(-6.3, 1195.3837, 8.4, -9.5, -1.6, -7528.2489, 9.1, 832.912, 66.17, 964.747, 67.55, 3.8) + -3.1);
              uint _GLF_SWITCH_5_15v;
              mat3x4(6.1);
             }
             ;
             ;
             uvec3 _GLF_SWITCH_5_16v;
             ;
             mat4x3(-7926.3291, 539.578, -7.7, -8.3, 3422.6564, 5.0, -8.9, -2253.1992, 78.80, -8939.6496, 809.121, 5.1);
             for(mat3x4 _GLF_SWITCH_5_17v[5]; (mat4x2(2.8, -62.68, -43.79, -318.027, 3.0, 8773.1693, 9603.9802, 65.37) == mat4x2(7405.4764, -239.691, 5.8, 7742.0534, -80.78, 4.7, 17.39, -1949.5657)); vec3(1652.5803, -7.1, -3.0))
              {
               mat4x2(mat2(-768.012, 6.7, -155.423, 6116.6308));
               vec2 _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v[66];
               acos(reflect(vec4(-1.0, 3804.3522, -9.0, -70.53), vec4(8.9, 2.8, -140.957, -153.012)));
               ;
               ;
               not(bvec3(false, false, true).sppt);
               bvec4(false, false, false, true);
               ivec4 _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v, _GLF_SWITCH_5_22v;
              }
             bvec2(false, false);
             vec4 _GLF_SWITCH_5_23v;
            }
           while(true);
           if(false)
            {
             true;
            }
           else
            {
             uvec2(82212u, 100186u);
             if(bool(54184))
              {
               float _GLF_SWITCH_5_24v;
               ivec2(10776, 8365);
               uvec4(91077u, 8010u, 180104u, 90300u);
               mat4x2 _GLF_SWITCH_5_25v;
               mat2(-62.06, -6749.4258, _GLF_SWITCH_5_11v.s, -1.0);
               (mat4x3(-9752.0024, 3.6, -782.418, -2.6, -1193.1821, -6630.2185, 185.931, -52.88, 28.99, 34.64, 0.7, -2.4) * mat3x4(-6.1, -626.205, -4.6, -5228.3603, -15.24, 431.882, -1.0, 4.8, -546.539, 12.97, 218.341, -1930.0993));
               mat4x2(mix(3331.6319, _GLF_SWITCH_5_24v, 41.46), (_GLF_SWITCH_5_24v --), reflect(_GLF_SWITCH_5_24v, -51.61), _GLF_SWITCH_5_24v, -2.3, 3.2, -40.54, _GLF_SWITCH_5_24v);
               mat4x3 _GLF_SWITCH_5_26v, _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v;
               mat2(-75.35, 2964.8220, 9.7, 97.87);
              }
            }
           mat3x2 _GLF_SWITCH_5_29v[60];
          }
         case 0:
         case 81:
         if(_GLF_DEAD(false))
          return;
         return;
         break;
         case 29:
         mat4x3(9277.4909, 4.0, -215.937, 1.6, -326.240, -7.4, 6464.4795, -9.8, -94.28, -418.797, -264.997, 945.293);
         case 94:
         while(true)
          {
           if(isinf(-6399.5175))
            {
             {
              347.526;
              (uvec2(28519u, 142943u) - uvec2(153332u, 93539u));
              ;
              mat3x2(-599.787, -23.54, -1023.8847, -185.470, 8.8, -74.17);
              smoothstep(-0.5, length(-0.1), vec2(67.57, 7.1));
             }
             {
              uvec3 _GLF_SWITCH_5_30v[67], _GLF_SWITCH_5_31v;
              mat2x4 _GLF_SWITCH_5_32v, _GLF_SWITCH_5_33v[29], _GLF_SWITCH_5_34v;
              bvec2(true);
              (mat3(-525.610, 7.9, -73.17, 1.1, -19.40, 9.3, 56.80, -8.1, 7.9) / mat3(944.670, 3167.0160, -6.6, -9.6, 4757.2948, 85.31, -4.4, -5.9, -29.37));
              injectionSwitch;
              mat3 _GLF_SWITCH_5_35v;
              mat3x2(-689.720, 5611.6674, (-5.4), faceforward(-6849.5524, -31.42, -2665.7528), mix(-549.251, -5856.8504, false), 6394.6023);
             }
             for(mat4x3 _GLF_SWITCH_5_36v; false; findLSB(uvec2(subgroup_id, read_1)))
              {
               (mat2x3(-880.349, 58.80, -45.63, 5489.1015, 7.1, 6372.9743) + -4.2);
               (~ 96818);
               equal(uvec3(104457u, 169886u, 115565u), uvec3(78878u, 72582u, 162426u));
               mat3 _GLF_SWITCH_5_37v[63], _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v;
               ;
               ;
              }
             ivec4 _GLF_SWITCH_5_40v, _GLF_SWITCH_5_41v;
             do
              {
               ;
               vec4 _GLF_SWITCH_5_42v, _GLF_SWITCH_5_43v[50], _GLF_SWITCH_5_44v[50];
               uvec2(110058u, 69953u);
               _GLF_SWITCH_5_41v.st;
               bvec4(false, false, false, true);
               ivec4 _GLF_SWITCH_5_45v, _GLF_SWITCH_5_46v;
               (49969 * ivec3(-81782, 54733, -60983));
               bvec3(false, true, false);
              }
             while(true);
             _GLF_SWITCH_5_40v;
             mat2x3 _GLF_SWITCH_5_47v, _GLF_SWITCH_5_48v[32], _GLF_SWITCH_5_49v;
             mat3 _GLF_SWITCH_5_50v[97];
             while((mat3x2(mat4x3(616.808, -7311.2164, -81.34, -1352.5937, 97.72, -22.71, -284.388, 0.2, -7904.0963, -3.8, 88.87, -4979.2895)) != (mat3x2(-2010.9670, -6823.6581, -9940.0629, 3.9, 44.45, -37.37) / mat3x2(-63.18, -6.2, 3.4, -1133.8885, -844.623, -6782.3247))))
              {
               bvec2(true, true);
               mat2 _GLF_SWITCH_5_51v[17], _GLF_SWITCH_5_52v[11];
               uint _GLF_SWITCH_5_53v[18];
               max(uvec3(198911u, 99616u, 164776u), uvec3(81371u, 27013u, 143712u));
               ;
               vec2(939.244, -944.292);
               ;
              }
            }
           else
            {
            }
           ((3.2 < -8.7) ? (min(uvec3(5288u, 32350u, 66643u), uvec3(44075u, 72516u, 65402u)) % workgroup_id) : uvec3(12060u, 57941u, 110067u));
           vec4(9.3, 3.6, 5.8, -7.8);
           for(ivec4 _GLF_SWITCH_5_54v; any(bvec2(true, true)); tanh(vec4(15.84, -6986.4999, -6.1, 74.08)))
            {
             mat4x3(878.321, -8.1, -4898.4439, -69.63, -53.63, -4008.3701, 69.71, -6.9, 5.6, -9.7, 5655.8532, 99.60);
             for(mat2 _GLF_SWITCH_5_55v; (subgroup_id < num_workgroup); matrixCompMult(_GLF_SWITCH_5_55v, mat2(4.2, -77.61, 735.267, -8177.4525)))
              {
               mat3 _GLF_SWITCH_5_56v, _GLF_SWITCH_5_57v, _GLF_SWITCH_5_58v;
               mat2 _GLF_SWITCH_5_59v[87], _GLF_SWITCH_5_60v, _GLF_SWITCH_5_61v[23];
               uint _GLF_SWITCH_5_62v, _GLF_SWITCH_5_63v;
               ivec4 _GLF_SWITCH_5_64v, _GLF_SWITCH_5_65v, _GLF_SWITCH_5_66v;
               int _GLF_SWITCH_5_67v, _GLF_SWITCH_5_68v[98];
              }
             {
             }
             equal(uvec3(133016u, 14208u, 31783u), uvec3(65627u, 14040u, 71070u));
             max(ivec2(-95175, -95412), ivec2(-82100, 70963));
             for(             greaterThanEqual(vec2(8533.2153, 5.6), injectionSwitch);
 (vec4(217.334, -9.3, 4.9, 99.69) == vec4(5734.7862, 6122.3451, 6.2, -8.1)); mat3(-4690.9021, -5.3, -824.913, -958.944, 2.7, -710.390, -5.0, 54.00, -3.1))
              {
               ;
               mat4(mat3(36.04, -562.053, 684.273, 53.89, -604.432, 222.814, 1.6, -354.433, -18.22));
               ((abs(8.2) / mat4x2(-162.948, -6494.3170, -4983.9314, 894.692, 713.939, -2637.5940, 585.165, 981.979)) / -0.0);
               mat3x4(-6.3, -712.424, -2477.2785, -4.3, -531.781, -739.062, 5.2, -27.30, 6824.8663, -12.65, -34.68, 1.7);
               ;
               mat2(-2.9, -1183.0264, -40.92, -30.76);
               vec4 _GLF_SWITCH_5_69v[91];
               (27945 % ivec3(-92149, 74526, 56381));
               ivec2 _GLF_SWITCH_5_70v[28];
              }
            }
          }
         default:
         1;
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> (0 | 0))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(0, 0, 0))))
          {
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 20:
           return;
           break;
           case 45:
           uvec3(83397u, 119577u, 5045u);
           case 60:
           bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[47];
           default:
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
