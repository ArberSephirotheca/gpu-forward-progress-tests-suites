#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u) | uvec3(1u, 1u, 1u)) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(42.38)))), _GLF_ZERO(_GLF_IDENTITY(0.0, tan(0.0) + (0.0)), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))))))) | uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), _GLF_FUZZED((-2.4 / -27.18))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups)))) | (_GLF_IDENTITY((gl_NumWorkGroups), (true ? (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(83575u, 37659u, 77745u)))))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), false))))))) ? _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(69687u, 129192u, _GLF_IDENTITY(105263u, (_GLF_IDENTITY(105263u, 0u | (105263u))) * 1u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) + (uvec3(69687u, 129192u, 105263u)))))))) | uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_FUZZED(vec2(1.6, -8.3).r)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(1.6, -8.3).r, float(mat4(_GLF_IDENTITY(vec2(1.6, -8.3).r, min(vec2(1.6, -8.3).r, vec2(1.6, -8.3).r)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(1.0, abs(0.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_FUZZED(vec2(1.6, -8.3).r)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x), mix(float(_GLF_FUZZED(vec2(1.6, -8.3).r)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))) * _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5914.9405)), bool(false)))), float(_GLF_FUZZED(-5172.1914)), bool(false)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_FUZZED(vec2(1.6, -8.3).r)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * _GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(373.291)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))), float(mat2x3(_GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(373.291)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), (true ? (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(373.291)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) : _GLF_FUZZED(-5.9))), 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((117.887 + 98.48))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u)), ((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u))) << uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(4894.5895) : _GLF_ZERO(0.0, injectionSwitch.x))))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(-5302.7857, -638.420, 3.4, 2.1, 1.6, -6.2, -1.1, 78.23)) : mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0 * (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x))))) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((117.887 + 98.48))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u)), ((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u))) << uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(4894.5895) : _GLF_ZERO(0.0, injectionSwitch.x))))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(-5302.7857, -638.420, 3.4, 2.1, 1.6, -6.2, -1.1, 78.23)) : mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0 * (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((117.887 + 98.48))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u)), ((_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u))))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) << 0u), 3u))))))))), (true ? uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(_GLF_IDENTITY(3u, min(3u, 3u))))))))) : _GLF_FUZZED(uvec3(100002u, 66422u, 16744u))))) & uvec3(134379u, 66576u, 124335u))) << uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(4894.5895) : _GLF_ZERO(0.0, injectionSwitch.x))))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(-5302.7857, -638.420, 3.4, 2.1, 1.6, -6.2, -1.1, 78.23)) : mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0 * (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x))))) ^ uvec3(0u, 0u, 0u))))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) >> uvec3(0u, 0u, 0u))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)))) << uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), true && (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), true && (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(false))))) && true)))) || false), true))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))))))), false), false, true)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(! (bool(false)), false, true, false)), (bool(bvec4(! (bool(false)), false, true, false))) && true)), (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)) && true)))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(! (bool(false)), false, true, false)), (bool(bvec4(! (bool(false)), false, true, false))) && true)), (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)) && true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || _GLF_IDENTITY(false, false || (false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (! (_GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) && true))))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) && true))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))))))), (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (_GLF_IDENTITY(! (! (! (bool(false)))), (! (! _GLF_IDENTITY((! (bool(false))), false || ((! (bool(false))))))) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))))))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))))) || false), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(49003))))))))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(true, ! (! (true))), false, false)))), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false))), bool(bool(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false))))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false))), bool(bool(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, true)))))) || false))))))))))))), true)))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false), false, true, true))) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false)), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))))))), false, false, false)))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, true))), false))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), bool(bvec4(false, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(false))))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), false, false)), (bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), false, false))) || false)), false, false, true)))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))), ! (! (! ((! (bool(false)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, true))), false))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), bool(bvec4(false, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(false))))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), false, false)), (bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), false, false))) || false)), false, false, true)))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (bool(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))), ! (! (! ((! (bool(false)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))), (! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true)))) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))), (! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true)))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))), (! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true)))) && true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (bool(false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(9.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) || false))))))))))))))), false, true))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (! (_GLF_IDENTITY(false, true && (false)))) || false))) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), false))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) && true))))), ! (! ((! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) && true)))))))), bool(bvec2(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) && true)), bool(bool(true && (_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, true)))))) || false), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(126.321), max(_GLF_FUZZED(126.321), _GLF_FUZZED(126.321)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false, false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + subgroup_local_id) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), (uint(_GLF_IDENTITY(0u, (0u) >> 0u))) | 0u))) ^ (subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), 0u ^ (subgroup_size)) + subgroup_local_id) - 0u)) << 0u), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) ^ 0u))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) << 0u)) | 0u) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), 0u ^ (subgroup_local_id))) / 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 0u))))) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0), (false ? _GLF_FUZZED(mat3x4(-6169.0799, 1.0, 2.1, -18.77, -87.08, -9.3, 4.3, 2247.4455, 7.4, -941.101, -0.1, -310.657)) : _GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0), (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), _GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(165159u) : (_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (true ? uint(uvec3(0u, 1u, 1u)) : _GLF_FUZZED(virtual_gid))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))), uint(0u))))), 0u)) / uvec3(1u, 1u, 1u)), uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))), _GLF_IDENTITY(0u, uint(uvec3(0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u ^ 1u)))))))), 0u | (uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) - _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, 0u ^ (1u))))))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))), min(uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(min(subgroup_id, subgroup_id), (true ? min(subgroup_id, subgroup_id) : _GLF_FUZZED(50228u))), min(subgroup_id, subgroup_id), _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))), min(subgroup_id, subgroup_id), _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))))))) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 1u, (157813u & 0u)), (uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 1u, (157813u & 0u))) | (uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 1u, (157813u & 0u))))))), uint(0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))))), uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) + 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec4((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 1u))))) - 0u)))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) - 0u), 0u)))), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))))))), (uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u, 1u))) << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (~ (1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))), 0u)))))) | 0u)))) - 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), _GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u), min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) | ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), min(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))))))) - 0u), uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), clamp(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) >> 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(uint(0u), uint(0u))))) << 0u)), 0u), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (((subgroup_local_id + 1) % subgroup_size))))))) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), (_GLF_IDENTITY(true, ! (! (true))) && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(vec2(1.0, 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec3(71.70, 6.9, -1.5), vec3(49.17, 7387.8161, -575.402))))), 0.0))), vec2(1.0, 1.0))))) + log(cos(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], abs(0.0) + ((vec2(0.0, 0.0))[1]))), vec2(_GLF_FUZZED(87.11), _GLF_FUZZED(3599.6649)), bvec2(false, false))), vec2(0.0, 0.0)))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ((_GLF_IDENTITY(4, (4) << 0))) >> 0), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) << 0)), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) << 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) << 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) << 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) << 0))) | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) << 0))))))) << (0 << _GLF_IDENTITY(int(0), int(0))))) / 1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false), false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true, false, true))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + length(vec3(0.0, 0.0, 0.0))) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + length(vec3(0.0, 0.0, 0.0))) / 1.0))), ((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + length(vec3(0.0, 0.0, 0.0))) / 1.0)))) && true)), bool(bool(! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + length(vec3(0.0, 0.0, 0.0))) / 1.0))), ((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + length(vec3(0.0, 0.0, 0.0))) / 1.0)))) && true)))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(ldexp(-486.853, bitCount(84718))))))))))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, log(1.0), 0.0, log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(1.0, 0.0, 0.0, log(1.0), 0.0, log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-6209.6345))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, read_1)) + 1 == read_2) || false)), true && (bool(bool((read_1 + 1 == read_2) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2) || false))))), true && (bool(bool((read_1 + 1 == read_2) || false))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), (_GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), 1u * (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) | (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), (_GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), 1u * (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) | (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2) || false))))), ! (! (bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), (_GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), 1u * (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) | (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2) || false)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), (_GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), 1u * (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) | (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2) || false))))), ! (! (bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), (_GLF_IDENTITY(clamp(read_1 + 1, read_1 + 1, read_1 + 1), 1u * (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) | (clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2) || false)))))))), true, false), false))))), true && (bool(bool((read_1 + 1 == read_2) || false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2) || false))))), true && (bool(bool((read_1 + 1 == read_2) || false)))))), false || (bool((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2) || false))))), true && (bool(bool((read_1 + 1 == read_2) || false)))))))))), true)))))))), clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))))))) == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | 0u) + 1 == read_2) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((bool(bool((read_1 + 1 == read_2) || false))), true && (_GLF_IDENTITY((bool(bool((read_1 + 1 == read_2) || false))), ((bool(bool((read_1 + 1 == read_2) || false)))) && true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool((read_1 + 1 == read_2) || _GLF_IDENTITY(false, ! (! (false)))), ! (! (bool((read_1 + 1 == read_2) || _GLF_IDENTITY(false, ! (! (false)))))))) && true)), (bool(bool((read_1 + 1 == read_2) || false))) && true)))))), true && (bool(bool((read_1 + 1 == read_2) || false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))) == read_2), bool(bvec4(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((15027 & 31985)) : _GLF_IDENTITY(1, (1) ^ 0))), ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))) == read_2), bool(bvec2(_GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))) == read_2), ! (! ((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))) == read_2)))), true))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false)), (bool(bool((read_1 + 1 == read_2) || false))) && true)))))), true && (bool(bool((read_1 + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(i) : 1)) == read_2) || false))))))), _GLF_IDENTITY(bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), ! (! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (bool(bool((read_1 + 1 == read_2) || false))) && true)))))), true && (bool(bool((read_1 + 1 == read_2) || false))))))))), ! (! (bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), ! (! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (bool(bool((read_1 + 1 == read_2) || false))) && true)))))), true && (bool(bool((read_1 + 1 == read_2) || false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, true && ((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) || false)))), true && (bool(bool((read_1 + 1 == read_2) || false))))))), (((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, true && ((read_1 + 1 == read_2) || false)))), true && (bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(! ((read_1 + 1 == read_2)), false, false), bvec3(bvec3(bvec3(! ((read_1 + 1 == read_2)), false, false)))))))) || false)))))))) || false)))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1))) / 1u) == read_2) || false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), ! (! (_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), bool(bvec4(bool((read_1 + 1 == read_2) || false), true, true, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_IDENTITY(true, (true) && true) && (bool(bool((read_1 + 1 == read_2) || false))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool((read_1 + 1 == read_2) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool((read_1 + 1 == read_2) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false))))))), false || (! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false))))))))))), false || ((bool(bool((read_1 + 1 == read_2) || false))))))), ((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false))))))), false || (! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false))))))))))), false || ((bool(bool((read_1 + 1 == read_2) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), false || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(bool(bool(bool((read_1 + 1 == read_2) || false))))))), true && (bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, bool(bvec2((read_1 + 1 == read_2) || false, false))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false)), false || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(bvec2(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (bool(bool((read_1 + 1 == read_2) || false))) && true), false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), (bool((read_1 + 1 == read_2) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (bool(bool(bool((read_1 + 1 == read_2) || false)))), bool(bool(! (bool(bool(bool((read_1 + 1 == read_2) || false)))))))))))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false, (_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! ((read_1 + 1 == read_2) || false)))) && true)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2), true && ((read_1 + 1 == read_2))) || false)), true && (bool(bool((read_1 + 1 == read_2) || false))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (bool(bool((read_1 + 1 == read_2) || false))) || false))))), ((! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)))))) || false))) || false)), (bool(bool((read_1 + 1 == read_2) || false))) || false)))))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) | 0u) + 1))) / 1u) == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), (true ? uint(uvec3(read_2, 0u, 0u)) : _GLF_FUZZED(workgroup_id)))), 0u, 0u, 1u)))) || false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2) || false)), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), ! (! (_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), bool(bvec4(bool((read_1 + 1 == read_2) || false), true, true, false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_IDENTITY(true, (true) && true) && (bool(bool((read_1 + 1 == read_2) || false))))), true && ((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), _GLF_IDENTITY(true, (true) && true) && (bool(bool((read_1 + 1 == read_2) || false))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), (_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), (bool((read_1 + 1 == read_2) || false)) || false)) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((read_1 + 1 == read_2), true && (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), true, true))))) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), (bool((read_1 + 1 == read_2) || false)) || false), true)), false, true, false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((read_1 + 1 == read_2), true && (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))), true, true))))) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), (bool((read_1 + 1 == read_2) || false)) || false), true)), false, true, false))))))) || false), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2))) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false))))))), false || (! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(bool(bvec4((read_1 + 1 == read_2) || false, false, false, true)), bool(bvec4(bool(bvec4((read_1 + 1 == read_2) || false, false, false, true)), true, true, false)))))))), true)), false, true, false))))))))))), false || ((bool(bool((read_1 + 1 == read_2) || false))))))), ((_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), false, true, false)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY((read_1 + 1 == read_2), bool(bool((read_1 + 1 == read_2)))) || false), true)), false, true, false))))))), false || (! ((bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), _GLF_IDENTITY(bool(bvec2(bool((read_1 + _GLF_IDENTITY(1, (1) / 1) == read_2) || false), true)), bool(bvec4(bool(bvec2(bool((read_1 + 1 == read_2) || false), true)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true, false))))))))))), false || ((bool(bool((read_1 + 1 == read_2) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), false || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(bool(bool(bool((read_1 + 1 == read_2) || false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) || false, bool(bvec2((read_1 + 1 == read_2) || false, false))), (_GLF_IDENTITY((read_1 + 1 == read_2) || false, bool(bvec2((read_1 + 1 == read_2) || false, false)))) || false))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false)), false || (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), bool(bvec2(_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), ! (! (bool(bool((read_1 + 1 == read_2) || false)))))) && true), false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) || false), (bool((_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_local_id))))) + 1 == read_2) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (bool(bool(bool((read_1 + 1 == read_2) || false)))), bool(bool(! (bool(bool(bool((read_1 + 1 == read_2) || _GLF_IDENTITY(false, ! (! (false))))))))))))))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), ! (_GLF_IDENTITY(! ((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))), ! (! (_GLF_IDENTITY(! ((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))), false || (! ((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))))))))))) || false, (_GLF_IDENTITY((read_1 + 1 == read_2) || false, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) || false), (! ((read_1 + 1 == read_2) || false)) && true)))) && true)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2), true && ((read_1 + 1 == read_2))) || false)), true && (bool(bool((read_1 + 1 == read_2) || false))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), (bool(bool((read_1 + 1 == read_2) || false))) || false))))), ((! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false, true)))))) || false))) || false)), (bool(bool((read_1 + 1 == read_2) || false))) || false)))))) || false)))))) && _GLF_IDENTITY(true, true && (true))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2), true && ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2))) || false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false || (bool(bvec2(read_1 + 1 == read_2, false))))), false)))) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), bool(bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), true && (bool((read_1 + 1 == read_2) || false))))))))), ! (! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool((_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u)))) + 0u)) >> 0u), (clamp(read_1, read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) + (0u | 0u))) + 1 == read_2) || false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false || (bool(bvec2(read_1 + 1 == read_2, false))))), false)))) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), bool(bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), true && (bool((read_1 + 1 == read_2) || false))))))))), ! (! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool((_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u)))) + 0u)) >> 0u), (clamp(read_1, read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) + (0u | 0u))) + 1 == read_2) || false))))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false || (bool(bvec2(read_1 + 1 == read_2, false))))), false)))) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), bool(bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) || false), true && (bool((read_1 + 1 == read_2) || false))))))))), ! (! (_GLF_IDENTITY(bool(bool((read_1 + 1 == read_2) || false)), true && (bool(bool((_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u))), (clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | 0u))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u, 0u | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) | ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) / 1u)))) + 0u)) >> 0u), (clamp(read_1, read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) + (0u | 0u))) + 1 == read_2) || false))))))), false, true))) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-639.924)), float(0.0), bool(true))), injectionSwitch.x)) | 0u))))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) | ((read_2))) << 0u)))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), uint(_GLF_IDENTITY(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), 0u | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), 1u, 0u)) | (uvec3((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), 1u, 0u)))))))) >> 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(96.75, 3.6)))).x)) | 0u), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) | 0u))))), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u)))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), uint(_GLF_IDENTITY(uvec3((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(3202.4677) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), 1u, 0u), (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u)) | (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u)))))), ! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u)))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), uint(_GLF_IDENTITY(uvec3((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))) ? _GLF_FUZZED(3202.4677) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)))) | 0u), 1u, 0u), (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u)) | (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u))))))))))) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))) - 0u)), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))))), uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))))), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)))))) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), min((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(true))))) | 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))))) ^ 0u)), _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_2) << 0u)))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), uint(_GLF_IDENTITY(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u), (uvec3((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | 0u), 1u, 0u)) | (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u)))))))) >> 0u, ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_2) << 0u)))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), uint(_GLF_IDENTITY(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u), (uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, 0u)) | (_GLF_IDENTITY(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, _GLF_IDENTITY(0u, (0u) + (1u ^ 1u))), min(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, _GLF_IDENTITY(0u, (0u) + (1u ^ 1u))), uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), 1u, _GLF_IDENTITY(0u, (0u) + (1u ^ 1u)))))))))))) >> 0u) >> 0u)))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1)) + 1, min(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(virtual_gid))), ((read_1 + 1)) | 0u), clamp(0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(virtual_gid))), ((read_1 + 1)) | 0u), 0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY((read_1 + 1), uint(uvec4((read_1 + 1), _GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)))) | 0u), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(virtual_gid))), ((read_1 + 1)) | 0u), max(0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + 1) : _GLF_FUZZED(virtual_gid))), ((read_1 + 1)) | 0u), 0u | _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), (true ? (read_1 + _GLF_IDENTITY(1, (1) >> 0)) : _GLF_FUZZED(virtual_gid))), ((read_1 + 1)) | 0u)))))), read_1 + 1)), _GLF_IDENTITY(read_1, (read_1) << 0u) + 1)), (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | 0u)), read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(read_1, (read_1) << 0u) + 1))) - _GLF_IDENTITY(0u, min(0u, 0u))) == _GLF_IDENTITY(read_2, min(read_2, read_2))), (uint(read_1 + 1 == read_2)) / 1u))) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))) | (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) << _GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) << _GLF_IDENTITY(uint(8u), uint(8u)))))) | (read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(bool(bvec3((read_1 + 1 == read_2) && true, false, true)), (bool(bvec3((read_1 + 1 == read_2) && true, false, true))) || false))))))) + 1, 4, 64, _GLF_IDENTITY(4, 0 + (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3659.5006)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(0.9, -26.02, 4397.4487).y)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
}
