#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.9)), float((injectionSwitch)[0]), bool(true))), 0.0, 1.0, determinant(mat4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, tan(0.0), 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)), 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(true ? (90.62 + -0.4) : _GLF_IDENTITY(-590.013, float(vec2(-590.013, 1.0))), mix(float(true ? (90.62 + -0.4) : -590.013), _GLF_IDENTITY(float(_GLF_FUZZED(-9744.6104)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(_GLF_FUZZED(-9744.6104)), min(float(_GLF_FUZZED(-9744.6104)), float(_GLF_FUZZED(-9744.6104)))) : _GLF_FUZZED(5.8))), bool(false))))), _GLF_FUZZED(682.454)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), false))).x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)), true))), bool(bvec3(! _GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), ! (! ((bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), false, false))), false, false, false))))), (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true))), (_GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true))), ((bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true)))) && true)) || false), bool(bvec4(! (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-900.644)), float(0.0), bool(true))), round(length(_GLF_IDENTITY(normalize(1.0), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-900.644)), float(0.0), bool(true))), round(length(_GLF_IDENTITY(normalize(1.0), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat3(float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-900.644)), float(0.0), bool(true))), round(length(_GLF_IDENTITY(normalize(1.0), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0), clamp(float(mat4(injectionSwitch.y, _GLF_IDENTITY(sqrt(0.0), abs(1.0) * (sqrt(0.0))), 0.0, 1.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ (60.03 * 18.58)))), bool(false))), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), true))), false, false, false)))))) || false)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (! ((_GLF_IDENTITY(false, (false) || false)) || false)))), true)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 ^ 1) & -34219); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-61264) : 0))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), (1 ^ 1) | (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0), 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(653.178)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, 1.0, 0.0)))), 0.0, 1.0, abs(tan(0.0)), 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(653.178)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, 1.0, 0.0)))), 0.0, 1.0, abs(tan(0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(653.178)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-685.837))), 0.0), vec2(1.0, 0.0)), float(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, 1.0, 0.0)))), 0.0, 1.0, abs(tan(0.0)), 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(653.178)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, 1.0, 0.0)))), 0.0, 1.0, abs(tan(0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y) || false)))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u) >> _GLF_IDENTITY(uint(4u), uint(4u))));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (0 ^ (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1), (_GLF_IDENTITY(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1), (ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)) >> ivec3(0, 0, 0))) | ivec3(0, 0, 0))))); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                     barrier();
                    }
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, false)))) || false); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) >> 0))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), min(float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true), true, true, true)))))), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(989.357, -4.4, -6458.6898).r)), bool(false))))), true, false, true))) || false))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false, false))))));
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, int(ivec4(0, 0, 1, (1 ^ 1)))) : _GLF_FUZZED(13007))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, int(int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (false))) && true))))))))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0)), clamp((false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0)), (false ? _GLF_FUZZED(-9189) : (false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0)), ((false ? _GLF_FUZZED(29569) : _GLF_IDENTITY(1, (1) + 0))) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u)))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117265u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, 0u ^ ((subgroup_local_id + 1) - 0u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (subgroup_local_id + 1) - 0u), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))), subgroup_local_id + 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) / 1u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (true ? 0u >> _GLF_IDENTITY(uint(5u), uint(5u)) : _GLF_FUZZED(virtual_gid)))) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) * 1u) + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))) | (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), max(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) << 0u), (subgroup_local_id + 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) / 1u))))) ^ 0u)), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u, clamp(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u, _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u, 1u * (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (0u) >> 0u))), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + 1) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, ((subgroup_local_id + 1) - 0u) - 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) - 0u)) ^ 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + 1) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u))))) + 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) ^ _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))))))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)), subgroup_local_id + 1))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) ^ 0u), (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u)))) - 0u) + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) - 0u)) ^ 0u))), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) ^ 0u), (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))) - 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u)))))) - 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u)))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u)))))) - 0u)))) - 0u) + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 1u, 0u)), (uint(uvec4(0u, 1u, 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, virtual_gid)) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (uint(uvec4(0u, 1u, 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) | 0u))))))))) + 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), min(clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u)))), 0u, (174889u & 0u), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u)))), 0u, (174889u & 0u), 1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)), (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, min(3u, 3u)), 3u, _GLF_IDENTITY(3u, 1u * (3u)))))))))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(28083) : 0 | _GLF_IDENTITY((1), 0 + ((1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(uvec4(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u), 1u))))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(uvec4(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, 0u | (_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), 0u ^ (~ (4u)))))))))), 0u), 1u))))) + 1) | (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(uvec4(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u), 1u))))) + 1))) - _GLF_IDENTITY(0u, (0u) >> 0u))), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), max(1, 1)), 1, 1)), (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), min(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id))))), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u))))))), ~ (~ ((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), min(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id))))), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, min(0u, 0u))))))))))) ^ (0u | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(virtual_gid, workgroup_size)) : subgroup_local_id)) + 1) - _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(virtual_gid, workgroup_size)) : subgroup_local_id)) + 1) - _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u | 0u)))), (subgroup_local_id + 1) - 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u ^ 0u) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u ^ 0u), (false ? _GLF_FUZZED((-- virtual_gid)) : (0u ^ 0u))) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) | (_GLF_IDENTITY(subgroup_local_id, (0u ^ 0u) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1)), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))))) - 0u))), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (0u) | (0u)))))) >> 0u, ((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (0u ^ 1u) * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))))) >> 0u) / 1u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1)), (int(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1))) / 1))), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (uvec3((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - 0u) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 1u, 1u, 1u))) : _GLF_FUZZED(workgroup_id))) + 1, 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))), subgroup_local_id, subgroup_local_id)) + 1) - _GLF_IDENTITY(0u, (0u) >> 0u))), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + 1) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> 0)) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) * 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) - _GLF_IDENTITY(0u, (0u) | (0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), max(_GLF_IDENTITY(((subgroup_local_id)), uint(uvec2(((subgroup_local_id)), 0u))), ((subgroup_local_id)))) / 1u) >> 0u)) ^ 0u) + 1) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, min(((subgroup_local_id)) / 1u, ((subgroup_local_id)) / 1u)), (((subgroup_local_id)) / 1u) >> 0u)) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 0u))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u), (_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u), ~ (~ (_GLF_IDENTITY(((subgroup_local_id)) / _GLF_IDENTITY(1u, (1u) >> 0u), (((subgroup_local_id)) / 1u) >> 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), max(((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) >> 0u)), (~ (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) >> 0u))) | (~ (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) >> 0u)))))))) / 1u, (((subgroup_local_id)) / 1u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), 0u | (((subgroup_local_id)))) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id)))) / 1u, ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id)))) / 1u) | ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id)))) / 1u)), (((subgroup_local_id)) / 1u) >> 0u), (_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) / 1u)) | (0u & 17724u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED(uvec2(58544u, 195667u)))))))) / 1u) >> 0u)))), 0u | (uint(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED(uvec2(58544u, 195667u)))))))) / 1u) >> 0u)))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), ~ (~ (((subgroup_local_id))))), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))))) / 1u) >> 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(186753u, 1u * (186753u))))) / 1u) >> 0u))), (uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))) / 1u) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), clamp(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), clamp(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), clamp(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u))), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)))))) / 1u), 1u))))))) : _GLF_FUZZED(186753u))) / 1u) >> 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))) / 1u) >> 0u))), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))) / 1u) >> 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))) / _GLF_IDENTITY(1u, 1u * (1u))) >> 0u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ _GLF_IDENTITY((0u), ((0u)) | 0u))))) ^ (uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))) / 1u) >> 0u))))))), uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (_GLF_IDENTITY(((subgroup_local_id)), _GLF_IDENTITY((true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u)), 0u ^ ((true ? ((subgroup_local_id)) : _GLF_FUZZED(186753u))))) / 1u) >> 0u))), uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id)), (true ? ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) : _GLF_FUZZED(186753u))) / 1u) >> 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(((subgroup_local_id)), (true ? ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) : _GLF_FUZZED(186753u))) / 1u) >> 0u, 1u), uvec2(0u, 0u) | (uvec2((_GLF_IDENTITY(((subgroup_local_id)), (true ? ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) : _GLF_FUZZED(186753u))) / 1u) >> 0u, 1u)))))))))))) / 1u))))) ^ 0u) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) / 1u, ((_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) / _GLF_IDENTITY(1u, uint(uvec3(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) * 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) * 1u, 0u | ((_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) * 1u)), (_GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) * 1u)))) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) / 1u, (((subgroup_local_id)) / 1u) >> 0u)) ^ 0u) + 1) ^ 0u) : _GLF_FUZZED(subgroup_id)))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) * 1u)), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) * 1u, max((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) * 1u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) * 1u)))) : _GLF_FUZZED(virtual_gid)))], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) - 0.0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(0, min(0, 0)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))), true && (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))) / 1u)))) | (next_virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))) / 1u)))) | (next_virtual_gid)), (true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))) / 1u)))) | (next_virtual_gid)) : _GLF_FUZZED(read_1))))))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u))) ^ (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, (0) * 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8627.8824), _GLF_FUZZED(-759.509)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, abs(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, abs(0.0)))), sqrt(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(2.9, -373.739, 45.22, 1.5, 487.955, 0.4)) : mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, abs(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, abs(0.0)))), sqrt(1.0), 1.0, 1.0))))).y)), injectionSwitch.y)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.8, 7.4, -5.4, -9.3)) : mat2(1.0))) : _GLF_FUZZED((mat2(864.772, 57.30, 6.0, -1344.6421) / length(vec3(-2.2, 5.2, -6282.1263))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.8, 7.4, -5.4, -9.3)) : mat2(1.0))) : _GLF_FUZZED((mat2(864.772, 57.30, 6.0, -1344.6421) / length(vec3(-2.2, 5.2, -6282.1263))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.8, 7.4, -5.4, -9.3)) : mat2(1.0))) : _GLF_FUZZED((mat2(864.772, 57.30, 6.0, -1344.6421) / length(vec3(-2.2, 5.2, -6282.1263))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), false)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.8, 7.4, -5.4, -9.3)) : mat2(1.0))) : _GLF_FUZZED((mat2(864.772, 57.30, 6.0, -1344.6421) / length(vec3(-2.2, 5.2, -6282.1263))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / cos(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.8, 7.4, -5.4, -9.3)) : mat2(1.0))) : _GLF_FUZZED((mat2(864.772, 57.30, 6.0, -1344.6421) / length(vec3(-2.2, 5.2, -6282.1263))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, true)))))), (injectionSwitch.x < injectionSwitch.y)), true && ((bool(bool(true))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, true)))))), (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))), ! (! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))))) || false)))) || false)) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), false)))))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool(bool(injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), false))))))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), max(0, 0))) | (0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(~ (_injected_loop_counter), 0 | (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-71190) : (_injected_loop_counter))), ((_injected_loop_counter)) / 1))), (int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / 1)))) | (_GLF_IDENTITY(int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))), ~ (~ (int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / 1)))))))), (true ? _GLF_IDENTITY(int((false ? _GLF_FUZZED(max(21010, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))) : _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)) / 1, (((_injected_loop_counter)) / 1) | 0)))), (int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) / 1)))) | (_GLF_IDENTITY(int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))), (_injected_loop_counter))), ((_injected_loop_counter)) / 1))), ~ (~ (int((false ? _GLF_FUZZED(max(21010, _injected_loop_counter)) : _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / 1)), ((_injected_loop_counter)) / 1)))))))) : _GLF_FUZZED(37581)))))), (~ (_injected_loop_counter)) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0), (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0)) | (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0))), _GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0))), _GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0)))), 1, 0))))))) != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(49849) : 0)), ~ (~ (0))), _GLF_IDENTITY(0, 0 ^ (0)), 0))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), _GLF_IDENTITY(((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u), (((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u)) >> 0u))) << 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))), _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), max(max(subgroup_local_id + 1, subgroup_local_id + 1), max(subgroup_local_id + 1, subgroup_local_id + 1))))) - (_GLF_IDENTITY(0u, (0u) << 0u) | 0u)), subgroup_local_id + 1), (clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 0u)))))) | (subgroup_local_id + 1)) - (0u | 0u), (((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u))) << 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) - (0u | 0u)), subgroup_local_id + 1)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1) | (subgroup_local_id + 1)), min(((subgroup_local_id + 1) | (subgroup_local_id + 1)), ((subgroup_local_id + 1) | (subgroup_local_id + 1))))) | (((subgroup_local_id + 1) | (subgroup_local_id + 1)))) - (0u | 0u), (((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u))) << 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) - (0u | 0u)), subgroup_local_id + 1), 1u * (clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY(((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u), _GLF_IDENTITY((((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u, clamp((((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u, _GLF_IDENTITY((((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u, ~ (~ ((((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u))), (((subgroup_local_id + 1) | (subgroup_local_id + 1)) - (0u | 0u)) >> 0u))))) << 0u)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) - (0u | 0u)), subgroup_local_id + 1)))))) < subgroup_size)
            {
             if(_GLF_DEAD(false))
              barrier();
             int i = 0;
             atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 do
                  {
                   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((! (false)), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2((! (false)), true), false, true)), false, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! ((! (false))))))) || false), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) && true)))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, abs(0.0), 0.0, 1.0)), float(_GLF_IDENTITY(mat4x2(float(mat3x2(injectionSwitch.x, 0.0, 1.0, abs(0.0), 0.0, 1.0)), exp(0.0), 0.0, 0.0, 0.0, length(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), (mat4x2(float(mat3x2(injectionSwitch.x, 0.0, 1.0, abs(0.0), 0.0, 1.0)), exp(0.0), 0.0, 0.0, 0.0, length(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)) * mat4(1.0))))) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
