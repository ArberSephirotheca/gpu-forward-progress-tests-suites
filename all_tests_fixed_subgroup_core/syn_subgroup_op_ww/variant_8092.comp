#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), true && ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-78.56, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.9) : -78.56)), 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0)))), 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(mat3x4((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0)), dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))))))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : vec4(injectionSwitch, 0.0, 0.0))))))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-78.56, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.9) : -78.56)), 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0)))), 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(mat3x4((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0)), dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))))))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : vec4(injectionSwitch, 0.0, 0.0))))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-78.56, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.9) : -78.56)), 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(log(1.0), 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0)))), 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(mat3x4((false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0)), dot(vec2(1.0, exp(0.0)), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))))))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-78.56, 23.87, -3.2, 8035.9403)) : vec4(injectionSwitch, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, sqrt(1.0)))))).x > injectionSwitch.y)), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false)))), true))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (false ? _GLF_FUZZED(878.866) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), bool(bvec3(bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec2(! ((_GLF_DEAD(false))), false))))))), false, false))))), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), true)))))), bool(bvec3(! (! (_GLF_DEAD(false))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), 1.0 * (float(float(injectionSwitch.y)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u)))))), 0u ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u, 0u, 1u))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (subgroup_id * subgroup_size) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((subgroup_local_id)) << 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), clamp((subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id))), ~ (~ ((subgroup_local_id) | (subgroup_local_id))))) ^ (1u ^ 1u))))), subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) >> 0))), (1) | _GLF_IDENTITY((1), clamp((1), (1), (1))))) - 0 : _GLF_FUZZED(findMSB(-85771)))))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id))))))) | ((subgroup_local_id))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))), min((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id)))) - 0u), ((subgroup_local_id)) | ((subgroup_local_id))))), (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))))))))), subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min((1) << 0, (1) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)))), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), max(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1)))), (1) | (1))) - 0)) - 0)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), min((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | 0)) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, min((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (false ? _GLF_FUZZED(83107) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-32177) : _GLF_IDENTITY((1), ~ (~ ((1)))))), (_GLF_IDENTITY(0, 1 * (0)) + _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-32177) : _GLF_IDENTITY((1), ~ (~ ((1))))))) - 0)), (1) | (1))) - 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - _GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) ^ 0)))), 0 + (1)), (1) | (1))) - 0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), (int(_GLF_IDENTITY(1, 0 + (1)))) - 0))), (1) | (1))) - 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0) | 0), (false ? _GLF_FUZZED(83107) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0)) << 0)), 1 * (~ (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0)) << 0))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(34739), (_GLF_FUZZED(34739)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - 0) + (1)), (1) | (1))) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), 0 | (0 + (1)))), (1) | (1))) - 0, (false ? _GLF_FUZZED(83107) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-32177) : _GLF_IDENTITY((1), ~ (~ ((1)))))), (_GLF_IDENTITY(0, 1 * (0)) + _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-32177) : _GLF_IDENTITY((1), ~ (~ ((1))))))) - 0)), (1) | (1))) - 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - _GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(40089) : _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))))) - 0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) ^ 0)))), 0 + (1)), (1) | (1))) - 0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), (int(_GLF_IDENTITY(1, 0 + (1)))) - 0))), (1) | (1))) - 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0) | 0), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(83107) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 + (1) : _GLF_FUZZED(935))))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 | (0)) + (1)), (1) | (1))) - 0), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0)) << 0)), 1 * (~ (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ((_GLF_IDENTITY(1, 0 + (1)))) + 0) | 0), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (1) | (1))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (~ (0 + (1))))), (1) | (1))) - 0)) << 0))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(34739), (_GLF_FUZZED(34739)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))))))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1)))))), subgroup_local_id + 1)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))), (true ? min(subgroup_local_id + 1, subgroup_local_id + 1) : _GLF_FUZZED((subgroup_size)))), (true ? min(subgroup_local_id + 1, subgroup_local_id + 1) : _GLF_FUZZED(subgroup_size))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true), (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), ! (! (bool(bvec3((! (false)), true, true))))))))) && true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, true))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 0.1))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(68860) : 1)), 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), true))), true), false))))))) && _GLF_IDENTITY(true, bool(bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) && true)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true))))))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)))))))), false))))), true, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) && true, bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false))))) && true))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) && true)))))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y : _GLF_FUZZED(determinant(mat3(_GLF_IDENTITY(-2.0, (-2.0) / 1.0), 9126.7316, 7.1, 928.153, -49.25, -1.4, 9.7, 268.820, _GLF_IDENTITY(9.4, max(9.4, 9.4))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.3) : 0.0))), float(_GLF_FUZZED(71.74)), bool(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4755.8970) : injectionSwitch.y))))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))), true))))), false, false))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.67), _GLF_FUZZED((80.02 * 72.53))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, true)), true, false)), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, true)), true, false)), false, false, false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (max(2, 2)) | 0)), 2))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 | ((64))) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) | (_GLF_IDENTITY(4, (4) ^ 0))));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0)), float(_GLF_FUZZED(5801.5013)), bool(false)))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), ! (! (! (_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), _GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}
