#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(180544u) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1))) % subgroup_size), 0u + (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - (74733u & 0u)) : (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - (74733u & 0u)) : (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - (74733u & 0u)) : (subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - (74733u & 0u)) : (subgroup_local_id + 1))) % subgroup_size))) * 1u))))));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(1), (uint(1)) + 0u)), max(1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), max(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), _GLF_IDENTITY(uint(1), (uint(1)) + 0u))), _GLF_IDENTITY(uint(1), (uint(1)) + 0u)))), 1u * (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), min((uint(1)), _GLF_IDENTITY((uint(1)), ((uint(1))) | 0u)))) / 1u) + 0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(0))
    {
     case 97:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch.y), bool(true)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       while(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))[1])
        {
         for(mat2x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v; true; _GLF_IDENTITY(atanh(vec3(_GLF_IDENTITY(-4.4, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(-4.4, float(mat3(-4.4, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0))))), _GLF_IDENTITY(-3.3, float(mat4x2(-3.3, 1.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 0.0, 1.0, 1.0))), -849.290)), clamp(atanh(vec3(-4.4, -3.3, -849.290)), atanh(vec3(-4.4, -3.3, -849.290)), _GLF_IDENTITY(atanh(vec3(-4.4, -3.3, _GLF_IDENTITY(-849.290, (_GLF_IDENTITY(-849.290, (-849.290) - 0.0)) * 1.0))), _GLF_IDENTITY((atanh(vec3(-4.4, -3.3, -849.290))), (true ? (atanh(vec3(-4.4, -3.3, -849.290))) : _GLF_FUZZED(vec3(72.35, -9.6, 336.060)))) - vec3(0.0, 0.0, 0.0)))))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), max((0 >> _GLF_IDENTITY(int(7), int(7))), (0 >> _GLF_IDENTITY(int(7), int(7))))) : _GLF_FUZZED(_injected_loop_counter)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), max(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 31:
                 _GLF_IDENTITY(abs(vec2(-5245.5359, -14.61)), vec2(mat2(abs(vec2(-5245.5359, -14.61)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)));
                 case 2:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   notEqual(bvec4(true, false, false, true), greaterThanEqual(uvec4(35814u, 43427u, _GLF_IDENTITY(55244u, (55244u) ^ 0u), 123990u), uvec4(188100u, 35020u, 189275u, 156502u)));
                  }
                 case 0:
                 lessThan(injectionSwitch, vec2(-738.566, -760.203));
                 break;
                 case 64:
                 ;
                 default:
                 1;
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 73:
               uint _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
               case 0:
               case 25:
               case 65:
               case 82:
               case 95:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 92:
               case 66:
               case 68:
               return;
               break;
               default:
               1;
               if(_GLF_DEAD(false))
                return;
              }
            }
           ivec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[14], _GLF_SWITCH_0_5v[12];
           for(ivec4 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[96]; (mat3x4(-16.79, 8685.7443, 0.3, -2.2, -93.02, -776.337, -2120.5841, 7.2, -5.9, -59.74, -5979.8751, 380.418) != mat3x4(_GLF_IDENTITY(-8782.8076, max(-8782.8076, -8782.8076)), -298.555, -5575.1957, 9.0, 3.8, 2.1, 7781.2776, 99.78, -5027.6972, _GLF_IDENTITY(-2.8, (_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, min(5.0, _GLF_IDENTITY(5.0, (false ? _GLF_FUZZED(-266.901) : 5.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-2.8, max(-2.8, -2.8)), clamp(_GLF_IDENTITY(-2.8, max(-2.8, -2.8)), _GLF_IDENTITY(-2.8, max(-2.8, -2.8)), _GLF_IDENTITY(_GLF_IDENTITY(-2.8, max(-2.8, -2.8)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(-2.8, max(-2.8, -2.8)), (_GLF_IDENTITY(-2.8, max(-2.8, -2.8))) * 1.0) : _GLF_FUZZED(roundEven(-2.4))))))), bool(true)))) / 1.0), -7.1, -4.0)); mat3x4(_GLF_IDENTITY(-240.056, _GLF_IDENTITY(min(_GLF_IDENTITY(-240.056, (-240.056) + 0.0), -240.056), (min(_GLF_IDENTITY(-240.056, (-240.056) + 0.0), -240.056)) - 0.0)), -4013.6456, -0.9, _GLF_IDENTITY(3.2, clamp(3.2, 3.2, 3.2)), -0.2, 61.69, _GLF_IDENTITY(381.706, float(mat2x4(381.706, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(137.727) : 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), -222.339, 2.9, 1.8, 2279.2427, _GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(-1.1, (false ? _GLF_FUZZED(3.3) : -1.1)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(-1.1, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.3), (_GLF_FUZZED(_GLF_IDENTITY(3.3, (_GLF_IDENTITY(3.3, mix(float(_GLF_FUZZED(-5619.4072)), float(3.3), bool(true)))) - 0.0))) - 0.0) : -1.1)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))) / 1.0))) / 1.0)))
            {
             switch(_GLF_SWITCH(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), (true ? _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), 0 | ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))))) : _GLF_FUZZED(-78244)))))
              {
               case 81:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               uvec4(78755u, 104698u, 102267u, 118470u);
               case 0:
               case 63:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))
                {
                }
               else
                {
                 _GLF_IDENTITY(normalize(-704.928), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(normalize(_GLF_IDENTITY(-704.928, max(-704.928, -704.928))), max(normalize(-704.928), normalize(-704.928))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)) + 0.0), 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0))), vec2(exp(0.0), 0.0))), 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((smoothstep(-1.7, -26.76, -1.2) - 9.1))))), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(2074.6659))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(normalize(-704.928), max(normalize(-704.928), normalize(-704.928))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(normalize(-704.928), max(normalize(-704.928), normalize(-704.928))), max(_GLF_IDENTITY(normalize(-704.928), max(normalize(-704.928), normalize(-704.928))), _GLF_IDENTITY(normalize(-704.928), _GLF_IDENTITY(max(normalize(-704.928), normalize(-704.928)), max(max(normalize(-704.928), normalize(-704.928)), _GLF_IDENTITY(max(normalize(-704.928), normalize(-704.928)), clamp(max(normalize(-704.928), normalize(-704.928)), max(normalize(-704.928), normalize(-704.928)), max(normalize(-704.928), normalize(-704.928))))))))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(-704.928), (false ? _GLF_FUZZED(637.708) : normalize(-704.928))), max(normalize(-704.928), normalize(-704.928))), _GLF_IDENTITY(normalize(-704.928), max(normalize(-704.928), normalize(-704.928))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0)))), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y)))))));
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               case 47:
               ;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch * -5.8)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
                continue;
               1;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
                break;
               break;
              }
            }
           while((_GLF_IDENTITY(mat3(41.15, -6.1, _GLF_IDENTITY(-5.8, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)), float(float(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)))))), -5.5, _GLF_IDENTITY(-7.1, float(vec2(-7.1, 1.0))), _GLF_IDENTITY(-723.909, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9051.8056)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) ? -723.909 : _GLF_FUZZED(8.3))), -4.4, 11.18, -2172.3253), (_GLF_IDENTITY(mat3(41.15, -6.1, _GLF_IDENTITY(-5.8, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)), float(float(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)))))), -5.5, _GLF_IDENTITY(-7.1, float(vec2(-7.1, 1.0))), _GLF_IDENTITY(-723.909, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9051.8056)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) ? -723.909 : _GLF_FUZZED(8.3))), -4.4, 11.18, -2172.3253), mat3(mat3x4(mat3(41.15, -6.1, _GLF_IDENTITY(-5.8, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)), float(float(1.0 * (_GLF_IDENTITY(-5.8, (-5.8) / 1.0)))))), -5.5, _GLF_IDENTITY(-7.1, float(vec2(-7.1, 1.0))), _GLF_IDENTITY(-723.909, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9051.8056)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) ? -723.909 : _GLF_FUZZED(8.3))), -4.4, 11.18, -2172.3253))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) != mat3(-887.587, -0.6, _GLF_IDENTITY(75.06, float(mat2x3(75.06, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), -6928.9698, -9.3, 1.8, 493.961, 2.7, 628.403)))
            {
             bvec2(true, true).xy;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               (mat3x2(-7437.9366, -49.48, -3500.2708, 7395.6107, _GLF_IDENTITY(9877.6990, _GLF_IDENTITY((_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0, min((_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0, (_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0)), (_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0, (_GLF_IDENTITY(9877.6990, (false ? _GLF_FUZZED(26.10) : 9877.6990))) / 1.0))), 5.1) * mat3(0.5, -7330.3523, -3.2, 8.9, -5.3, -792.462, 2322.3664, _GLF_IDENTITY(437.027, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(437.027, (_GLF_IDENTITY(437.027, max(437.027, 437.027))) - 0.0), (false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(437.027, (_GLF_IDENTITY(437.027, max(437.027, 437.027))) - 0.0)) + _GLF_ZERO(0.0, injectionSwitch.x)))), -96.20));
              }
            }
           mat3x2 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[97], _GLF_SWITCH_0_10v;
           (~ uvec3(30137u, 66587u, 21355u));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             while(true)
              {
               vec4(-2.8, -7.9, -8.5, 1.0);
               uvec2(115299u, 48955u);
               23220;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 392.049;
                }
               mat2x4 _GLF_SWITCH_0_11v[2], _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[98];
               uvec4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                continue;
               ;
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
           {
            mat2x4 _GLF_SWITCH_0_17v[82];
            ;
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))))), true, true, true))))))
             break;
           }
           bvec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[70];
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true, bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 0.0), (mat4x2(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           bvec3(true, true, true);
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))) && true))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat3x2(-765.681, _GLF_IDENTITY(18.18, 1.0 * (18.18)), -5.6, 180.069, -997.163, 227.410);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(float(1627))), vec2(_GLF_FUZZED(float(-54393)), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.8, -7.3))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))).x > injectionSwitch.y))))
          break;
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat4x3(966.204, 2282.7185, -6295.7371, -569.117, -6817.1055, -3.3, 6.7, _GLF_IDENTITY(9.1, (false ? _GLF_FUZZED(exp(-15.06)) : 9.1)), -6.3, 94.69, 971.021, 6197.1847);
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         vec3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[45];
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(false)
            {
            }
           else
            {
             ((76933 + clamp(-52022, -30051, 61006)) & ivec3(37006, 92953, 54799));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), true && (bool(_GLF_IDENTITY(true, true && (true)))))))))
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
              }
             {
              uvec3 _GLF_SWITCH_0_22v[86];
             }
             while(all(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false)))
              {
               (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(39725u, 120658u, 78561u) >> bitfieldInsert(uvec3(116664u, 99543u, 197306u), uvec3(185674u, 74210u, 24145u), -8608, _GLF_IDENTITY(-62445, max(-62445, -62445))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(39725u, 120658u, _GLF_IDENTITY(78561u, uint(_GLF_IDENTITY(uvec2(78561u, 1u), min(uvec2(78561u, 1u), uvec2(78561u, 1u)))))) >> bitfieldInsert(uvec3(116664u, 99543u, _GLF_IDENTITY(197306u, (197306u) / 1u)), uvec3(185674u, 74210u, 24145u), -8608, _GLF_IDENTITY(-62445, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-62445))), (uvec3(39725u, 120658u, 78561u) >> bitfieldInsert(uvec3(116664u, 99543u, 197306u), uvec3(185674u, 74210u, 24145u), -8608, -62445)) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(uvec3(39725u, 120658u, _GLF_IDENTITY(78561u, uint(_GLF_IDENTITY(uvec2(78561u, 1u), min(uvec2(78561u, 1u), uvec2(78561u, 1u)))))) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(99543u, max(99543u, 99543u)), _GLF_IDENTITY(197306u, (197306u) / 1u)), uvec3(185674u, 74210u, 24145u), -8608, _GLF_IDENTITY(-62445, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-62445))), (uvec3(39725u, 120658u, 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(99543u, (_GLF_IDENTITY(99543u, 0u + (99543u))) | 0u), 197306u), uvec3(185674u, 74210u, 24145u), -8608, -62445)) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(39725u, _GLF_IDENTITY(120658u, max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size))))), 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(99543u, (99543u) | (99543u)), 197306u), uvec3(185674u, 74210u, 24145u), -8608, -62445), (false ? _GLF_FUZZED(uvec3(185186u, 102961u, 168666u)) : uvec3(39725u, _GLF_IDENTITY(120658u, _GLF_IDENTITY(max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(uint(uvec4(max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size)))), 1u, 0u, 0u)), max(uint(uvec4(max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size)))), 1u, 0u, 0u)), uint(uvec4(max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size)))), 1u, 0u, 0u)))))), 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(_GLF_IDENTITY(99543u, ~ (~ (_GLF_IDENTITY(99543u, 0u ^ (99543u))))), (99543u) | (99543u)), 197306u), uvec3(185674u, 74210u, 24145u), -8608, -62445))), (uvec3(39725u, _GLF_IDENTITY(120658u, max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size))))), 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(_GLF_IDENTITY(99543u, max(99543u, 99543u)), (99543u) | (99543u)), 197306u), uvec3(185674u, 74210u, 24145u), _GLF_IDENTITY(-8608, (false ? _GLF_FUZZED(78416) : -8608)), -62445)) | (uvec3(39725u, _GLF_IDENTITY(120658u, max(120658u, _GLF_IDENTITY(120658u, (_GLF_IDENTITY(true ? 120658u : _GLF_FUZZED(workgroup_size), min(true ? 120658u : _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(true ? 120658u : _GLF_FUZZED(workgroup_size), ~ (~ (true ? 120658u : _GLF_FUZZED(workgroup_size)))))))))), 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(99543u, (99543u) | (_GLF_IDENTITY(99543u, (_GLF_IDENTITY(99543u, (_GLF_IDENTITY(99543u, min(99543u, 99543u))) | (99543u))) | 0u))), _GLF_IDENTITY(197306u, (197306u) | (197306u))), uvec3(185674u, 74210u, 24145u), -8608, -62445))) : _GLF_FUZZED(uvec3(171180u, _GLF_IDENTITY(103433u, uint(uvec4(103433u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), 143875u))), ((true ? uvec3(39725u, _GLF_IDENTITY(120658u, max(120658u, _GLF_IDENTITY(120658u, (true ? 120658u : _GLF_FUZZED(workgroup_size))))), 78561u) >> bitfieldInsert(uvec3(116664u, _GLF_IDENTITY(99543u, (99543u) | (_GLF_IDENTITY(99543u, (99543u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), 197306u), uvec3(185674u, 74210u, 24145u), -8608, -62445) : _GLF_FUZZED(uvec3(171180u, 103433u, 143875u)))) << uvec3(0u, 0u, 0u))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               ivec3(-20858, 84664, _GLF_IDENTITY(21287, (_GLF_IDENTITY(21287, clamp(21287, 21287, _GLF_IDENTITY(21287, ~ (~ (21287)))))) - 0));
               do
                {
                 mat2x3(35.53, 5.4, 2532.6491, -171.125, -445.487, -459.515);
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               (bvec4(true, true, true, true));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
              }
             mat4x3(-6802.1301, -59.28, _GLF_IDENTITY(8.7, _GLF_IDENTITY((_GLF_IDENTITY(8.7, max(8.7, 8.7))), max((_GLF_IDENTITY(8.7, max(8.7, 8.7))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(8.7, max(8.7, 8.7))), 1.0 * ((_GLF_IDENTITY(8.7, max(8.7, 8.7))))), float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(8.7, max(8.7, 8.7))), 1.0 * ((_GLF_IDENTITY(8.7, max(8.7, 8.7))))), 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))) / 1.0), _GLF_IDENTITY(61.89, mix(float(_GLF_FUZZED((-24.67 - 56.74))), float(61.89), bool(true))), 5.2, -90.16, 1085.3835, -4.2, -52.65, -5.5, -628.270, 8.5);
             if(_GLF_DEAD(false))
              continue;
            }
          }
         int _GLF_SWITCH_0_23v[5], _GLF_SWITCH_0_24v;
         {
          uint _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          ;
          uvec2(38751u, 125745u);
          if(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(67390 % (_GLF_IDENTITY(ivec2(37064, -7532), ivec2(ivec4(ivec2(37064, -7532), 0, 0))) & ivec2(-99714, -44049)), (67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) / ivec2(1, 1))) != ivec2(38020, 28697), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (-7532) - 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (true ? _GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), ivec2(0, 0) ^ ((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049)))))) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(-98809, -28720)))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), _GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))))) & ivec2(-99714, _GLF_IDENTITY(-44049, clamp(-44049, -44049, -44049))))) != ivec2(38020, 28697)))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, (38020) | (38020)), 28697)))))), ! (! (! (! (_GLF_IDENTITY((67390 % (ivec2(_GLF_IDENTITY(37064, ~ (_GLF_IDENTITY(~ (37064), (~ (37064)) / 1))), -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, _GLF_IDENTITY(-7532, 1 * (-7532))) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049))), (ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049)))) ^ ivec2(0, 0)))))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, _GLF_IDENTITY(~ (~ (38020)), clamp(~ (~ (38020)), ~ (~ (38020)), ~ (~ (38020))))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)))))))))))), ((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049)))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | ivec2(0, 0)))))) != ivec2(_GLF_IDENTITY(_GLF_IDENTITY(38020, (38020) >> 0), ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))))))))))))) && true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (-7532) - 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (true ? _GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), ivec2(0, 0) ^ ((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049)))))) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(-98809, -28720)))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), _GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))))) & ivec2(-99714, _GLF_IDENTITY(-44049, clamp(-44049, -44049, -44049))))) != ivec2(38020, 28697)))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, (38020) | (38020)), 28697)))))), ! (! (! (! (_GLF_IDENTITY((67390 % (ivec2(_GLF_IDENTITY(37064, ~ (_GLF_IDENTITY(~ (37064), (~ (37064)) / 1))), -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, _GLF_IDENTITY(-7532, 1 * (-7532))) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049))), (ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049)))) ^ ivec2(0, 0)))))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, _GLF_IDENTITY(~ (~ (38020)), clamp(~ (~ (38020)), ~ (~ (38020)), ~ (~ (38020))))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)))))))))))), ((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049)))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | ivec2(0, 0)))))) != ivec2(_GLF_IDENTITY(_GLF_IDENTITY(38020, (38020) >> 0), ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))))))))))))) && true))))))) && true))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(67390 % (_GLF_IDENTITY(ivec2(37064, -7532), ivec2(ivec4(ivec2(37064, -7532), 0, 0))) & ivec2(-99714, -44049)), (67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) / ivec2(1, 1))) != ivec2(38020, 28697), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (-7532) - 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (true ? _GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), ivec2(0, 0) ^ ((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049)))))) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(-98809, -28720)))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), _GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))))) & ivec2(-99714, _GLF_IDENTITY(-44049, clamp(-44049, -44049, -44049))))) != ivec2(38020, 28697)))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, (38020) | (38020)), 28697)))))), ! (! (! (! (_GLF_IDENTITY((67390 % (ivec2(_GLF_IDENTITY(37064, ~ (_GLF_IDENTITY(~ (37064), (~ (37064)) / 1))), -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, _GLF_IDENTITY(-7532, 1 * (-7532))) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049))), (ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049)))) ^ ivec2(0, 0)))))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, _GLF_IDENTITY(~ (~ (38020)), clamp(~ (~ (38020)), ~ (~ (38020)), ~ (~ (38020))))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)))))))))))), ((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049)))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | ivec2(0, 0)))))) != ivec2(_GLF_IDENTITY(_GLF_IDENTITY(38020, (38020) >> 0), ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))))))))))))) && true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (-7532) - 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (true ? _GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), (_GLF_IDENTITY((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049))), ivec2(0, 0) ^ ((67390 % (ivec2(37064, _GLF_IDENTITY(-7532, (false ? _GLF_FUZZED(atomicMin(_GLF_SWITCH_0_24v, _GLF_SWITCH_0_24v)) : _GLF_IDENTITY(-7532, clamp(_GLF_IDENTITY(-7532, clamp(-7532, -7532, -7532)), -7532, -7532))))) & ivec2(-99714, -44049)))))) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(-98809, -28720)))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), _GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, 0)) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))), true && (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (_GLF_IDENTITY(ivec2(37064, -7532), (ivec2(37064, -7532)) << ivec2(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))))) & ivec2(-99714, _GLF_IDENTITY(-44049, clamp(-44049, -44049, -44049))))) != ivec2(38020, 28697)))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, (38020) | (38020)), 28697)))))), ! (! (! (! (_GLF_IDENTITY((67390 % (ivec2(_GLF_IDENTITY(37064, ~ (_GLF_IDENTITY(~ (37064), (~ (37064)) / 1))), -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697), ! (! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(38020, 28697)))))))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, _GLF_IDENTITY(-7532, 1 * (-7532))) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), _GLF_IDENTITY(ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049))), (ivec2(ivec2(ivec2(37064, -7532) & ivec2(-99714, -44049)))) ^ ivec2(0, 0)))))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, _GLF_IDENTITY(~ (~ (38020)), clamp(~ (~ (38020)), ~ (~ (38020)), ~ (~ (38020))))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697)))))))))))), ((! (! (_GLF_IDENTITY((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), clamp(ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049), ivec2(37064, -7532) & ivec2(-99714, -44049)))) << ivec2(0, 0)))) != ivec2(38020, 28697), ! _GLF_IDENTITY((! ((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))), ! (! ((! _GLF_IDENTITY(((67390 % (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | (_GLF_IDENTITY(ivec2(37064, -7532) & ivec2(-99714, -44049), (ivec2(37064, -7532) & ivec2(-99714, -44049)) | ivec2(0, 0)))))) != ivec2(_GLF_IDENTITY(_GLF_IDENTITY(38020, (38020) >> 0), ~ (~ (38020))), 28697)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((67390 % (ivec2(37064, -7532) & ivec2(-99714, -44049))) != ivec2(_GLF_IDENTITY(38020, ~ (~ (38020))), 28697))))))))))))) && true))))))) && true))))))
           {
            uint _GLF_SWITCH_0_28v[19];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))
                 continue;
                return;
               }
              continue;
             }
            uvec3 _GLF_SWITCH_0_29v[22];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-956.672 + 940.622))), vec2(_GLF_FUZZED(457.320), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).y))))
             {
              if(_GLF_DEAD(false))
               break;
              continue;
             }
            vec4 _GLF_SWITCH_0_30v[10];
            if(_GLF_DEAD(false))
             return;
            ivec4 _GLF_SWITCH_0_31v[56], _GLF_SWITCH_0_32v;
            ;
            if(_GLF_DEAD(false))
             return;
            mat3x4(-659.807, 8.1, -95.49, -1585.0443, -6.4, -9936.0042, -80.88, -9.0, 3.1, 3184.6146, -1677.9218, -96.92);
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, log(1.0), 0.0, 0.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), 1.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat3x4(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, log(1.0), 0.0, 0.0, 0.0, abs(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), mat2(mat4(mat2(1.0, 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), mat2(mat4(mat2(1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), mat2(mat4(mat2(1.0, 0.0, 1.0, 1.0)))))))), injectionSwitch.y)), sqrt(1.0), 1.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, log(1.0), 0.0, 0.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), 1.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
           continue;
          for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(false ? _GLF_FUZZED((95285 ^ -31585)) : _injected_loop_counter ++, (false ? _GLF_FUZZED((95285 ^ -31585)) : _injected_loop_counter ++) / 1))))
           {
            if(false)
             {
              ;
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0))))) < 1); _injected_loop_counter ++)
               {
                mat4x2(8.5, -744.970, 6.2, 728.857, 5028.3049, 4.2, -8523.2918, -4.1);
               }
             }
            if(_GLF_DEAD(false))
             continue;
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             continue;
            outerProduct(vec4(4.0, 33.50, -7.3, -422.966), injectionSwitch);
           }
          for(          ((_GLF_SWITCH_0_26v * uvec2(1127u, 84022u)) >> uvec3(184078u, 119250u, 118735u).y);
 false; (+ uvec3(65656u, 31302u, 28642u)))
           {
            vec3 _GLF_SWITCH_0_33v;
            ivec3 _GLF_SWITCH_0_34v[29], _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v[97];
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              vec4(-5.7, -795.948, _GLF_IDENTITY(9333.9088, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(9333.9088, (9333.9088) / 1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(9333.9088, (9333.9088) / 1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0))))), -5089.8105);
             }
            uvec4 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
               continue;
              continue;
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
           break;
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
            if(_GLF_DEAD(false))
             continue;
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            while(false)
             {
              uint _GLF_SWITCH_0_39v;
              ivec2 _GLF_SWITCH_0_40v;
              int _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
              num_workgroup;
              (mat3(9.2, -0.2, -5.9, 1.0, 95.58, -8789.4959, -7.9, 158.322, -785.976) - _GLF_IDENTITY(mat3(7.6, _GLF_IDENTITY(34.84, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), max(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), _GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0))))), -886.127, _GLF_IDENTITY(5.1, max(_GLF_IDENTITY(5.1, (false ? _GLF_FUZZED(-697.426) : 5.1)), 5.1)), -790.790, -4.6, 52.17, 209.737, -3.9), transpose(transpose(_GLF_IDENTITY(mat3(7.6, _GLF_IDENTITY(34.84, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), max(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), _GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0))))), -886.127, _GLF_IDENTITY(5.1, max(_GLF_IDENTITY(5.1, (false ? _GLF_FUZZED(-697.426) : 5.1)), 5.1)), -790.790, -4.6, 52.17, 209.737, -3.9), mat3(_GLF_IDENTITY(mat3x4(mat3(7.6, _GLF_IDENTITY(34.84, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), max(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), _GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0))))), -886.127, _GLF_IDENTITY(5.1, max(_GLF_IDENTITY(5.1, (false ? _GLF_FUZZED(-697.426) : 5.1)), 5.1)), -790.790, -4.6, 52.17, 209.737, -3.9)), mat4(1.0) * (mat3x4(mat3(7.6, _GLF_IDENTITY(34.84, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), max(_GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0), _GLF_IDENTITY(34.84, (_GLF_IDENTITY(34.84, (34.84) / sqrt(1.0))) * 1.0))))), -886.127, _GLF_IDENTITY(5.1, max(_GLF_IDENTITY(5.1, (false ? _GLF_FUZZED(-697.426) : 5.1)), 5.1)), -790.790, -4.6, 52.17, 209.737, -3.9))))))))));
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                break;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
               {
                if(_GLF_DEAD(false))
                 continue;
                break;
               }
              ivec2 _GLF_SWITCH_0_43v;
              mat2x4(2.9, 3999.7123, 5927.4855, 6.4, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.4, 6.3, _GLF_IDENTITY(4.2, 1.0 * (4.2)));
              _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
              (mat4x2(-5297.7149, -66.28, 979.987, -4.6, 329.141, 9.2, 7.5, -302.652) * mat4(-5135.0783, -1634.2861, 35.17, 40.87, -4799.4027, 0.5, -44.54, _GLF_IDENTITY(2252.6702, (_GLF_IDENTITY(2252.6702, _GLF_IDENTITY(max(_GLF_IDENTITY(2252.6702, mix(float(_GLF_FUZZED(-176.376)), float(2252.6702), bool(true))), _GLF_IDENTITY(2252.6702, (_GLF_IDENTITY(_GLF_IDENTITY(2252.6702, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (2252.6702)), max(2252.6702, 2252.6702))) + 0.0)), max(max(_GLF_IDENTITY(2252.6702, mix(float(_GLF_FUZZED(-176.376)), float(2252.6702), bool(true))), _GLF_IDENTITY(2252.6702, (_GLF_IDENTITY(_GLF_IDENTITY(2252.6702, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (2252.6702)), max(2252.6702, 2252.6702))) + 0.0)), max(_GLF_IDENTITY(2252.6702, mix(float(_GLF_FUZZED(-176.376)), float(2252.6702), bool(true))), _GLF_IDENTITY(2252.6702, (_GLF_IDENTITY(_GLF_IDENTITY(2252.6702, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (2252.6702)), max(2252.6702, 2252.6702))) + 0.0)))))) * round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 7.7, 7.1, -23.79, 3758.1729, -2.4, _GLF_IDENTITY(-345.152, mix(float(_GLF_FUZZED(50.75)), float(-345.152), bool(true))), 9.9, _GLF_IDENTITY(-488.114, mix(float(_GLF_FUZZED(-3704.0871)), _GLF_IDENTITY(float(-488.114), clamp(float(-488.114), float(-488.114), float(-488.114))), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))))));
              if(_GLF_DEAD(false))
               return;
             }
           }
          mat4x3(mat3(_GLF_IDENTITY(-6.8, mix(float(-6.8), float(_GLF_FUZZED(-59.92)), bool(false))), 4753.1287, -19.40, -2.0, -9440.4046, 0.9, -9321.3427, -711.944, -8579.3080));
         }
        }
      }
     case 50:
     _GLF_IDENTITY(ivec3(62359, _GLF_IDENTITY(-28671, (1 ^ 1) ^ (-28671)), _GLF_IDENTITY(71217, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(71217, (_GLF_IDENTITY(true, ! (! (true))) ? 71217 : _GLF_FUZZED(-84882))), (71217) + 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(71217, (_GLF_IDENTITY(true, ! (! (true))) ? 71217 : _GLF_FUZZED(-84882))), (71217) + 0))), ~ (~ (int(int(_GLF_IDENTITY(_GLF_IDENTITY(71217, (_GLF_IDENTITY(true, ! (! (true))) ? 71217 : _GLF_FUZZED(-84882))), (71217) + 0))))))), 71217, 71217), (clamp(_GLF_IDENTITY(71217, _GLF_IDENTITY((71217) + 0, ((71217) + 0) + 0)), 71217, 71217)) | (clamp(_GLF_IDENTITY(71217, (71217) + 0), 71217, 71217))))), min(_GLF_IDENTITY(ivec3(62359, _GLF_IDENTITY(-28671, (1 ^ 1) ^ (-28671)), _GLF_IDENTITY(71217, clamp(_GLF_IDENTITY(71217, (71217) + 0), 71217, 71217))), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(62359, _GLF_IDENTITY(-28671, (1 ^ 1) ^ (-28671)), _GLF_IDENTITY(71217, clamp(_GLF_IDENTITY(71217, (71217) + 0), 71217, 71217))), ivec3(0, 0, 0) + (ivec3(62359, _GLF_IDENTITY(-28671, (1 ^ 1) ^ (-28671)), _GLF_IDENTITY(71217, clamp(_GLF_IDENTITY(71217, (71217) + 0), 71217, 71217))))))), ivec3(62359, _GLF_IDENTITY(-28671, (1 ^ 1) ^ (-28671)), _GLF_IDENTITY(71217, clamp(_GLF_IDENTITY(_GLF_IDENTITY(71217, clamp(71217, _GLF_IDENTITY(71217, max(71217, 71217)), _GLF_IDENTITY(71217, (71217) | 0))), (71217) + 0), 71217, 71217)))));
     case 0:
     case 47:
     if(_GLF_DEAD(false))
      return;
     case 53:
     case 99:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     case 85:
     case 20:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(_GLF_IDENTITY(false, true && (false)));
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     break;
     case 26:
     ivec3 _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
     case 87:
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       while(_GLF_IDENTITY(true, (true) || false))
        {
        }
      }
     default:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(337.209), clamp(_GLF_FUZZED(337.209), _GLF_FUZZED(337.209), _GLF_FUZZED(337.209))), _GLF_FUZZED(-9602.9011)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           switch(_GLF_SWITCH(0))
            {
             case 23:
             ivec4(14633, 82072, 39843, 62346);
             case 54:
             mat3(2.5, _GLF_IDENTITY(2857.8893, (true ? _GLF_IDENTITY(2857.8893, clamp(2857.8893, _GLF_IDENTITY(2857.8893, mix(float(_GLF_FUZZED(6.6)), float(2857.8893), bool(true))), 2857.8893)) : _GLF_FUZZED(-8.0))), _GLF_IDENTITY(489.376, (_GLF_IDENTITY(489.376, clamp(489.376, 489.376, 489.376))) - 0.0), -9.9, 5.3, -0.8, -981.585, -9.4, 840.756);
             case 0:
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
             if(_GLF_DEAD(false))
              return;
             1;
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) >> 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 69:
     clamp(bitCount(uvec2(17131u, 46157u)), 78030, -96560);
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 28:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false))))
            return;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(false)
              {
               float _GLF_SWITCH_1_0v;
               {
                mat2x4(-62.13, _GLF_IDENTITY(2.4, clamp(2.4, 2.4, _GLF_IDENTITY(2.4, max(_GLF_IDENTITY(2.4, (2.4) - 0.0), 2.4)))), -6611.6765, 93.82, 3.2, 354.837, _GLF_IDENTITY(-0.8, (true ? -0.8 : _GLF_FUZZED(_GLF_SWITCH_1_0v))), 353.335);
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                   return;
                 }
                vec2(5908.9997, -367.147);
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_SWITCH_1_0v)))))))))
                   return;
                 }
                if(isnan(-6755.9424))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-108.352)))))))
                   return;
                  switch(_GLF_SWITCH(0))
                   {
                    case 25:
                    mat4x2(mat3x4(-9.1, 945.935, 82.69, 6875.0615, 9705.5267, -2.7, 1979.6217, 3.2, 9.6, -6.6, 1889.0947, -3.6));
                    case 0:
                    for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                       {
                       }
                      else
                       {
                        mat3(-758.111, -5494.0168, -7.6, 2.3, _GLF_IDENTITY(3.3, _GLF_IDENTITY(float(mat2x4(3.3, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0))), _GLF_IDENTITY(min(float(mat2x4(3.3, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))), float(mat2x4(3.3, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0)))), (true ? min(float(mat2x4(3.3, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(56.41)), bool(false))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(56.41)), bool(false))), 0.0, 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(56.41)), bool(false))), 0.0, 1.0, 0.0))) + 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0))), float(mat2x4(3.3, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_SWITCH_1_0v)))) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))) / 1.0)), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0)))) : _GLF_FUZZED(-6007.8313))))), -121.924, -4.0, _GLF_IDENTITY(0.7, min(0.7, 0.7)), -542.390);
                       }
                     }
                    case 30:
                    case 96:
                    (workgroup_base ^ uvec4(198708u, 180278u, 17250u, 103942u));
                    ;
                    ivec2 _GLF_SWITCH_1_1v;
                    case 6:
                    uvec4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[30], _GLF_SWITCH_1_4v;
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0) && true))))); _injected_loop_counter --)
                         {
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            ;
                           }
                         }
                        if(_GLF_DEAD(false))
                         return;
                       }
                      else
                       {
                       }
                     }
                    else
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    break;
                    case 24:
                    mat3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[85];
                    if(_GLF_DEAD(false))
                     return;
                    default:
                    1;
                   }
                 }
                (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) , mat3x4(-267.964, 3467.1965, 72.02, -262.808, 5.0, 2.1, -8.8, -7884.5928, 7064.4535, -5.6, 8.3, _GLF_IDENTITY(82.85, mix(float(82.85), float(_GLF_FUZZED(6.2)), bool(false)))));
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y))))
                   return;
                 }
                if(_GLF_DEAD(false))
                 return;
                mat4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      return;
                     }
                   }
                  return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    return;
                   }
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      return;
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                   }
                 }
                mat2x4(8.5, -637.464, -98.19, _GLF_IDENTITY(-5374.4583, clamp(-5374.4583, -5374.4583, _GLF_IDENTITY(-5374.4583, (false ? _GLF_FUZZED(-42.86) : _GLF_IDENTITY(-5374.4583, float(float(-5374.4583))))))), 8.6, 74.84, 546.167, -511.686);
                ivec4(-15629, 78194, -71606, -96173);
               }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 24:
                         bvec4(false, false, true, false);
                         case 38:
                         min(subgroup_id, next_virtual_gid);
                         case 0:
                         return;
                         break;
                         case 4:
                         (- ivec2(-77813, -39775));
                         default:
                         1;
                        }
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                return;
               notEqual(_GLF_IDENTITY(min(uvec3(193098u, 12473u, 165076u), uvec3(730u, 192898u, 111496u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u), (_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u), (uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))) | (uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u), (_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u), (uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))) | (uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY(uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u), (uvec3(158959u, 150375u, 46133u) & uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), float(mat4(float(mat3x4(float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x))))) ^ uvec3(0u, 0u, 0u)) + (min(uvec3(193098u, 12473u, 165076u), uvec3(730u, 192898u, 111496u)))), _GLF_IDENTITY(uvec3(131351u, 165408u, 65147u), min(uvec3(131351u, 165408u, 65147u), uvec3(131351u, 165408u, 65147u))));
               for(mat3x2 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v; false; ivec4(-53138, 12945, 30918, -35864).ywz)
                {
                 {
                  vec4 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[37];
                  _GLF_SWITCH_1_0v;
                  bvec4 _GLF_SWITCH_1_12v;
                  isnan(vec4(11.39, -74.56, _GLF_IDENTITY(728.527, _GLF_IDENTITY((true ? 728.527 : _GLF_FUZZED(2176.8992)), ((true ? 728.527 : _GLF_FUZZED(2176.8992))) / round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(844.535, mix(float(844.535), float(_GLF_IDENTITY(_GLF_FUZZED((-6.6)), float(float(_GLF_FUZZED((-6.6)))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), max(_GLF_IDENTITY(844.535, mix(float(844.535), float(_GLF_FUZZED((-6.6))), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(844.535, mix(float(844.535), float(_GLF_FUZZED((_GLF_IDENTITY(-6.6, min(-6.6, _GLF_IDENTITY(-6.6, mix(float(_GLF_FUZZED(-4.5)), float(-6.6), bool(true)))))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(844.535, mix(float(844.535), float(_GLF_FUZZED((-6.6))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false)))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))));
                  equal(ivec3(_GLF_IDENTITY(-4599, (_GLF_IDENTITY(-4599, _GLF_IDENTITY(0 ^ (-4599), (0 ^ (-4599)) >> 0))) | (-4599)), 73366, 47698), _GLF_IDENTITY(ivec3(68666, -66234, _GLF_IDENTITY(_GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923)))), clamp(_GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923)))), _GLF_IDENTITY(_GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923)))), (_GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923))))) | (_GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923)))))), _GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923))))))), min(_GLF_IDENTITY(ivec3(68666, -66234, _GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923))))), ~ (~ (ivec3(68666, -66234, _GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(5923, min(5923, 5923)))))))), ivec3(68666, -66234, _GLF_IDENTITY(5923, min(_GLF_IDENTITY(5923, (5923) - 0), _GLF_IDENTITY(_GLF_IDENTITY(5923, int(ivec4(5923, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), min(5923, 5923))))))));
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(14.39)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(float(_GLF_FUZZED(14.39)), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 1.0, cos(0.0)), transpose(transpose(mat4(float(_GLF_FUZZED(14.39)), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 1.0, cos(0.0)))))), mix(float(float(_GLF_IDENTITY(mat4(float(_GLF_FUZZED(14.39)), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 1.0, cos(0.0)), transpose(transpose(mat4(float(_GLF_FUZZED(14.39)), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 1.0, cos(0.0))))))), float(_GLF_FUZZED(-1037.9490)), bool(false)))), float(injectionSwitch.y), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(14.39)), float(injectionSwitch.y), bool(true)), float(vec3(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(14.39)), _GLF_IDENTITY(float(mat2x4(float(_GLF_FUZZED(14.39)), exp(0.0), round(length(normalize(1.0))), 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), sin(0.0), 1.0)), max(float(mat2x4(float(_GLF_FUZZED(14.39)), exp(0.0), round(length(normalize(1.0))), 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), sin(0.0), 1.0)), float(mat2x4(float(_GLF_FUZZED(14.39)), exp(0.0), round(length(normalize(1.0))), 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), sin(0.0), 1.0))))), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(14.39), (_GLF_FUZZED(14.39)) - 0.0)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(-7.2)), bool(false))), 0.0, 1.0))), mix(float(_GLF_FUZZED(14.39)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-2.7)), float(float(injectionSwitch.y)), bool(true))), bool(true))))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.39)), float(injectionSwitch.y), bool(true)))))))))
                     {
                      greaterThanEqual(_GLF_SWITCH_1_10v, _GLF_SWITCH_1_10v);
                     }
                    else
                     {
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   break;
                 }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
                  continue;
                 mat3x4(642.183, -3.0, 1.3, -7730.1248, 186.926, -8.9, -2.5, 3.1, -935.100, -173.453, -1.4, 2246.5847);
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 ;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  return;
                }
               else
                {
                }
               while(((_GLF_IDENTITY(ivec2(-56583, 88198), (ivec2(-56583, 88198)) / ivec2(1, 1)) * ivec2(-99597, 70165)) != _GLF_IDENTITY(ivec2(23913, -74033), ivec2(0, 0) | (ivec2(23913, -74033)))))
                {
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 83:
                    do
                     {
                      ivec4(-74701, 57765, -18013, -40584);
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    case 57:
                    mat4x3 _GLF_SWITCH_3_0v;
                    case 0:
                    if(_GLF_DEAD(false))
                     return;
                    case 5:
                    case 77:
                    case 45:
                    uvec4 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v[76];
                    vec3 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
                    break;
                    default:
                    1;
                   }
                 }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(ivec4 _GLF_SWITCH_1_18v[65], _GLF_SWITCH_1_19v; bvec2(true, false).x; 23981)
                    {
                     uint _GLF_SWITCH_1_20v[7], _GLF_SWITCH_1_21v;
                     vec3 _GLF_SWITCH_1_22v;
                     mat2x3(78.29, -33.53, -7.8, -8119.4658, 213.729, _GLF_IDENTITY(_GLF_IDENTITY(3164.1560, max(_GLF_IDENTITY(3164.1560, _GLF_IDENTITY((3164.1560), mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY((3164.1560), clamp((3164.1560), (3164.1560), (3164.1560)))), bool(true))) - 0.0), _GLF_IDENTITY(3164.1560, (3164.1560) * 1.0))), max(_GLF_IDENTITY(3164.1560, max(_GLF_IDENTITY(3164.1560, _GLF_IDENTITY((3164.1560), mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY((3164.1560), clamp((3164.1560), (3164.1560), (3164.1560)))), bool(true))) - 0.0), _GLF_IDENTITY(3164.1560, (3164.1560) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(3164.1560, max(_GLF_IDENTITY(3164.1560, _GLF_IDENTITY((3164.1560), mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY((3164.1560), clamp((3164.1560), (3164.1560), (3164.1560)))), bool(true))) - 0.0), _GLF_IDENTITY(3164.1560, (3164.1560) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(3164.1560, max(_GLF_IDENTITY(3164.1560, _GLF_IDENTITY((3164.1560), mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY((3164.1560), clamp((3164.1560), (3164.1560), (3164.1560)))), bool(true))) - 0.0), _GLF_IDENTITY(3164.1560, (3164.1560) * 1.0))), 1.0 * (_GLF_IDENTITY(3164.1560, max(_GLF_IDENTITY(3164.1560, _GLF_IDENTITY((3164.1560), mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY((3164.1560), clamp((3164.1560), (3164.1560), (3164.1560)))), bool(true))) - 0.0), _GLF_IDENTITY(3164.1560, (3164.1560) * 1.0)))))) * abs(1.0)))));
                     if(_GLF_DEAD(false))
                      break;
                     mat3x4 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
                     ivec2(25480, 8274);
                    }
                  }
                 else
                  {
                  }
                 (next_virtual_gid / next_virtual_gid);
                 if(_GLF_DEAD(false))
                  continue;
                 ivec3 _GLF_SWITCH_1_25v;
                 if(_GLF_DEAD(false))
                  break;
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    case 68:
                    vec2(_GLF_IDENTITY(-5.5, max(-5.5, -5.5)));
                    case 57:
                    ;
                    case 39:
                    mat2x4(2.0, _GLF_IDENTITY(_GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, clamp(7.1, 7.1, 7.1)), 7.1)), (_GLF_IDENTITY(_GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, clamp(7.1, _GLF_IDENTITY(7.1, (7.1) / cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 7.1)), _GLF_IDENTITY(7.1, (7.1) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, clamp(7.1, 7.1, 7.1)), 7.1)), float(vec2(_GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, clamp(7.1, 7.1, 7.1)), 7.1)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7147.2513)), bool(false))), 1.0)))))) - 0.0)) / 1.0), -59.45, -8991.3546, _GLF_IDENTITY(0.7, float(_GLF_IDENTITY(mat3(0.7, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(0.7, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(769.717, max(769.717, 769.717)), 2661.5086, 9.9);
                    case 21:
                    case 3:
                    bvec3 _GLF_SWITCH_1_26v;
                    (uvec3(164361u, 45372u, 46405u) * _GLF_IDENTITY(uvec3(7086u, 114678u, 40513u), (uvec3(7086u, 114678u, 40513u)) | (uvec3(7086u, 114678u, 40513u))));
                    case 49:
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      mat2x4(-13.46, _GLF_IDENTITY(5944.8984, min(5944.8984, _GLF_IDENTITY(5944.8984, (5944.8984) - 0.0))), 3970.1987, 6.0, -5.2, 39.31, -4.3, -97.99);
                     }
                    else
                     {
                      if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                     }
                    break;
                    case 79:
                    uvec4(_GLF_IDENTITY(96304u, 1u * (96304u)), 168524u, 34859u, 162533u);
                    case 5:
                    (- mat2x4(_GLF_SWITCH_1_0v));
                    default:
                    _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1));
                    if(_GLF_DEAD(false))
                     break;
                   }
                 }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) || false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), true, true))))))), ! (! (_GLF_DEAD(false)))))), bool(bool(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))) || false)))))))
                  continue;
                 vec2 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v[44];
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = ((-72539 & _GLF_IDENTITY(0, min(0, 0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1, true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), min(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) < 1))); _injected_loop_counter ++)
                  {
                   bvec2(false, false);
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    continue;
                   mat3x2 _GLF_SWITCH_1_29v[65];
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                  }
                 bvec4 _GLF_SWITCH_1_30v, _GLF_SWITCH_1_31v;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 0:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28010)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           else
            {
            }
          }
        }
      }
     case 21:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       return;
      }
     case 56:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 19:
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         break;
         case 55:
         uvec2(uvec4(174947u, 179787u, 151281u, 161725u));
         case 29:
         for(ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v; (_GLF_SWITCH_3_1v != _GLF_SWITCH_3_1v); bvec4(false, true, false, true))
          {
           (ivec3(-9742, -94253, -40208) | 9230);
           uvec4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
           ivec4 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[10], _GLF_SWITCH_3_6v;
          }
         default:
         1;
        }
      }
     case 15:
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 23:
     case 17:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 42:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.2)), bool(false))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.53), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-994.560, 35.40).x)), bvec2(true, false))).x), float(_GLF_FUZZED(-4.2)), bool(false))) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     case 59:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       (3.6 - mat3x2(-8.5, _GLF_IDENTITY(6995.6616, (true ? _GLF_IDENTITY(6995.6616, 1.0 * (_GLF_IDENTITY(6995.6616, mix(float(6995.6616), float(_GLF_FUZZED(-2.8)), bool(false))))) : _GLF_FUZZED(vec3(2.4, 4381.6210, 6.0).y))), -563.941, _GLF_IDENTITY(_GLF_IDENTITY(-727.464, (true ? _GLF_IDENTITY(-727.464, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-727.464, clamp(-727.464, -727.464, -727.464)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0))), mix(float(_GLF_FUZZED(float(false))), float(float(mat2x4(_GLF_IDENTITY(-727.464, clamp(-727.464, -727.464, -727.464)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0)))), bool(true)))) : _GLF_FUZZED(494.453))), clamp(_GLF_IDENTITY(-727.464, (true ? _GLF_IDENTITY(-727.464, clamp(-727.464, _GLF_IDENTITY(-727.464, mix(float(-727.464), float(_GLF_FUZZED(86.95)), bool(false))), -727.464)) : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), max(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), clamp(min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453)))), min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))))))) / 1.0), min(_GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))), _GLF_IDENTITY(-727.464, (true ? -727.464 : _GLF_FUZZED(494.453))))))))), _GLF_IDENTITY(-6877.8169, clamp(-6877.8169, -6877.8169, -6877.8169)), -5508.9231));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     case 98:
     for(vec2 _GLF_SWITCH_1_32v[13], _GLF_SWITCH_1_33v; true; _GLF_IDENTITY(uvec3(59017u, 48757u, 128602u), (uvec3(59017u, 48757u, 128602u)) ^ uvec3(0u, 0u, 0u)))
      {
       switch(_GLF_SWITCH(0))
        {
         case 26:
         ivec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[34];
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0)) | (0 << _GLF_IDENTITY(int(1), int(1)))))
          {
           while(_GLF_IDENTITY(true, (true) || false))
            {
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), false))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 bvec2(false, true);
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         case 14:
         mat2x4 _GLF_SWITCH_1_34v[47], _GLF_SWITCH_1_35v;
         ;
         case 71:
         bvec2 _GLF_SWITCH_1_36v, _GLF_SWITCH_1_37v[88], _GLF_SWITCH_1_38v;
         length(vec4(7.4, -889.833, -4018.3917, -71.68));
         while(true)
          {
           if((_GLF_IDENTITY(-3.3, _GLF_IDENTITY(min(-3.3, -3.3), min(min(-3.3, -3.3), _GLF_IDENTITY(min(-3.3, -3.3), (false ? _GLF_FUZZED(mix(-31.61, 8432.9095, true)) : min(-3.3, -3.3)))))) == 31.10))
            {
             ;
             (mat2x3(9187.4491, 5181.5223, _GLF_IDENTITY(-378.230, mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(-378.230, float(mat4(_GLF_IDENTITY(-378.230, clamp(-378.230, -378.230, -378.230)), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))), bool(true))), -4791.8654, 296.834, 4.4) / mat2x3(-5.8, -3.1, -7.8, -59.65, 4.9, -852.346));
             if(_GLF_DEAD(false))
              break;
             ivec2 _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v;
             mat2(_GLF_IDENTITY(2182.9128, min(2182.9128, _GLF_IDENTITY(2182.9128, min(2182.9128, 2182.9128)))), -4760.6661, -3.8, 6667.3472);
             _GLF_IDENTITY(vec4(-33.40, -97.75, _GLF_IDENTITY(-3.5, min(-3.5, -3.5)), -9.6), (true ? _GLF_IDENTITY(vec4(-33.40, -97.75, _GLF_IDENTITY(-3.5, min(-3.5, -3.5)), -9.6), (vec4(-33.40, -97.75, _GLF_IDENTITY(-3.5, min(-3.5, -3.5)), -9.6)) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(0.7, 23.14, -9.5, -1.1))));
             -9.3;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             ;
             bvec4 _GLF_SWITCH_1_41v, _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v;
             ivec3(-49445, -71955, 46512).psst;
            }
           else
            {
             ivec2 _GLF_SWITCH_1_44v;
             vec3 _GLF_SWITCH_1_45v;
             int _GLF_SWITCH_1_46v, _GLF_SWITCH_1_47v[79];
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             do
              {
               mat4x3(-488.372, -2.1, -14.25, 5519.6354, -5.9, _GLF_IDENTITY(-5.0, min(-5.0, -5.0)), -891.098, -4.1, -0.3, -9.8, 675.757, -9882.9375);
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             mat4x3 _GLF_SWITCH_1_48v;
             (_GLF_SWITCH_1_48v --);
             if(_GLF_DEAD(false))
              break;
             do
              {
               ivec3(_GLF_IDENTITY(94138, (_GLF_IDENTITY(94138, ~ (~ (94138)))) | (94138)), 79632, -98151);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
              continue;
             mat3 _GLF_SWITCH_1_49v[80], _GLF_SWITCH_1_50v[13], _GLF_SWITCH_1_51v;
            }
           for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4)), clamp((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4)), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), (int(ivec4(4, 1, 0, 0))) | (int(ivec4(4, 1, 0, 0))))))))), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) * 1)) >> _GLF_IDENTITY(int(4), int(4))))), 1, 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-4892))) ^ 0), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != (0 ^ 0)), (! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != _GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 0 ^ (0 ^ 0))), ((0 ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))))) / 1))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != (0 ^ 0)), (! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != _GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 0 ^ (0 ^ 0))), ((0 ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))))) / 1))) && true)), (! (_GLF_IDENTITY(! (_injected_loop_counter != (0 ^ 0)), (! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != _GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 0 ^ (0 ^ 0))), ((0 ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, (0 | (0 & -28282)), 0), clamp(ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, (0 | (0 & -28282)), 0), clamp(ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0)))), 0 + (int(_GLF_IDENTITY(ivec3(1, (0 | (0 & -28282)), 0), clamp(ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0), ivec3(1, (0 | (0 & -28282)), 0)))))))))))))) / 1))) && true))) || false)) && true))); _injected_loop_counter --)
            {
             switch(_GLF_IDENTITY(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))) : _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))) / 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY((0 | 0) >> _GLF_IDENTITY(int(0), int(0)), min((0 | 0) >> _GLF_IDENTITY(int(0), int(0)), (0 | 0) >> _GLF_IDENTITY(int(0), int(0)))))), ~ (~ (_GLF_IDENTITY(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), max(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(0), int(0))))))))))))
              {
               case 19:
               bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 0:
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)));
               case 61:
               case 26:
               case 76:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 27:
               case 8:
               while((_GLF_SWITCH_1_35v != mat2x4(9.4, -396.598, 6103.0346, -27.96, 216.904, 939.496, -170.807, _GLF_IDENTITY(3251.4229, clamp(3251.4229, 3251.4229, 3251.4229)))))
                {
                 mat3 _GLF_SWITCH_1_52v;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                    {
                     ;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   ;
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))
                  {
                   ;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                  }
                }
               break;
               case 80:
               (ivec4(23977, _GLF_IDENTITY(-83272, _GLF_IDENTITY(int(ivec4(-83272, 0, 0, 1)), (int(ivec4(-83272, 0, 0, 1))) | (int(ivec4(-83272, 0, 0, 1))))), 98834, -403) | ivec4(34381, 8894, -91184, _GLF_IDENTITY(-79206, (true ? -79206 : _GLF_FUZZED(_injected_loop_counter)))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 50:
               ivec3 _GLF_SWITCH_2_0v;
               default:
               _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63458) : _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))));
              }
            }
           if(_GLF_SWITCH_1_38v[0])
            {
             if(_GLF_DEAD(false))
              return;
             uvec3 _GLF_SWITCH_1_53v;
            }
           else
            {
             _GLF_SWITCH_1_35v;
             if(_GLF_DEAD(false))
              continue;
             float _GLF_SWITCH_1_54v, _GLF_SWITCH_1_55v, _GLF_SWITCH_1_56v[99];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               ;
              }
            }
          }
         break;
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           1;
          }
        }
      }
     default:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     do
      {
       1;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
