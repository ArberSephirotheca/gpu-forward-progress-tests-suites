#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 mat2x3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 vec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
} ;

struct _GLF_struct_23 {
 mat3 _f0;
 mat2x4 _f1;
 vec3 _f2;
 int _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_22 {
 mat2x3 _f0;
 vec4 _f1;
 bvec3 _f2;
 bvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
} ;

struct _GLF_struct_20 {
 bool _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 vec2 _f1;
 bvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_19 {
 float _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 vec4 _f3;
 mat2x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 float _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 bvec3 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 uvec4 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 vec2 _f1;
 int _f2;
 uvec4 _f3;
 vec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 uvec3 _f1;
 ivec4 _f2;
 mat2 _f3;
 _GLF_struct_9 _f4;
 ivec4 _f5;
 int _f6;
} ;

struct _GLF_struct_27 {
 _GLF_struct_10 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_24 _f5;
 uint num_workgroup;
 _GLF_struct_26 _f6;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat2x3 _f1;
 uint _f2;
 mat2 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec4 _f1;
 vec3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_id;
 vec4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 float _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_7 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(_GLF_struct_0(mat4(1.0), ivec4(1), mat2x3(1.0), 1u, bvec4(true)), _GLF_struct_1(vec2(1.0), bvec4(true), vec3(1.0), bvec3(true), bvec2(true)), gl_SubgroupID, vec4(1.0)), 1.0, _GLF_struct_5(_GLF_struct_3(bvec4(true), mat3x2(1.0)), _GLF_struct_4(vec2(1.0), mat2x3(1.0), _GLF_IDENTITY(1u, (1u) * 1u), mat2(1.0), bvec3(true), mat4x2(1.0))), _GLF_struct_7(_GLF_struct_6(mat3x2(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-6868.6248)))), mat3x4(1.0)), mat2(1.0)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), true, true))))))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), true, true))))))), true, _GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bool(! ((false)))), ! (! (bool(bool(! ((false)))))))))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))), true, true), bvec3(bvec3(bvec3((false) || false, true, true))))))), true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-5360.9544, -6.2, 962.523).z)), vec2(_GLF_FUZZED(-3.9), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])))[0], _GLF_FUZZED(18.44)), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_10(bvec3(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) | (_GLF_IDENTITY(clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) << 0u)))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (false ? _GLF_FUZZED(subgroup_size) : max(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), clamp(1u, 1u, 1u)), 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> (22425u & 0u)))), 1u), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), uint(uvec2(max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), clamp(1u, 1u, 1u)), 1u), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), 1u)))) | 0u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), 0u ^ (_GLF_IDENTITY(clamp(1u, 1u, 1u), 0u ^ (clamp(1u, 1u, 1u)))))), 1u))), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), min(_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec4(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 0u, 1u))), clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u))), 0u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))))))))), (uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), min(_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec4(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 0u, 1u))), clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u))), 0u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u)))))))))) | (uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), min(_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(uvec4(clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u, 0u, 1u))), clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u))), 0u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u)))))))))))))), ivec4(1), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_struct_9(vec4(1.0), vec2(1.0), 1, uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * vec2(1.0, 1.0)), (vec2(1.0)) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(vec2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), mat2x3(1.0)), ivec4(1), 1), _GLF_struct_13(_GLF_struct_11(mat3x4(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0)))), mat4x3(1.0)), bvec3(true), mat3x4(1.0), mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((subgroup_local_id))))))))), _GLF_struct_12(mat2x3(1.0))), _GLF_struct_16(_GLF_struct_14(ivec4(1), mat2x4(1.0), vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(sinh((vec4(-6.1, 6985.6566, -86.46, -3.3) * vec4(-4.2, -81.91, 96.90, 7.1)))) : _GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0))))), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), mat2x3(1.0), uvec4(1u)), _GLF_struct_15(vec4(1.0))), _GLF_struct_19(1.0, _GLF_struct_17(bvec2(true), vec2(1.0), bvec3(true), true), _GLF_struct_18(ivec4(1), mat2x4(1.0))), _GLF_struct_21(_GLF_struct_20(true)), _GLF_struct_24(_GLF_struct_22(mat2x3(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)), bvec3(true), bvec4(true), 1.0), _GLF_struct_23(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-26.47, 734.365, -84.54, 6564.1460, -6.8, _GLF_IDENTITY(-54.63, float(vec4(_GLF_IDENTITY(-54.63, (-54.63) / 1.0), 1.0, 0.0, 0.0))), -84.74, _GLF_IDENTITY(84.41, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(atanh(-2.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.6)), bool(false)))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), float(vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(84.41, _GLF_IDENTITY((84.41) / 1.0, clamp(_GLF_IDENTITY((84.41) / 1.0, (true ? (84.41) / 1.0 : _GLF_FUZZED(-3.8))), (84.41) / 1.0, (84.41) / 1.0))), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(84.41, (84.41) / 1.0), 1.0, 0.0, 1.0, 0.0, abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))) * sqrt(1.0))), -314.000)) : _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(401.561)), float(1.0), bool(true))))), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0) + (mat3(1.0))), (true ? transpose(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.825)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(roundEven(8.9)) : _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(mat3(-9.9, 1429.4754, 6.6, -228.042, -6.1, 9313.1752, -4417.0034, -8551.3809, -6.8), transpose(transpose(mat3(-9.9, 1429.4754, 6.6, -228.042, -6.1, 9313.1752, -4417.0034, -8551.3809, -6.8)))))))))))), mat2x4(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(vec3(vec3(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(vec3(vec3(1.0)))), vec3(mat3x4(_GLF_IDENTITY(vec3(1.0), vec3(vec3(vec3(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), _GLF_IDENTITY(vec3(1.0), vec3(vec3(vec3(1.0)))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 1 * (_GLF_IDENTITY((1), int(ivec4((1), 1, 0, 0))))), min(_GLF_IDENTITY((1), 1 * (_GLF_IDENTITY((1), int(ivec4((1), 1, 0, 0))))), _GLF_IDENTITY((1), 1 * (_GLF_IDENTITY((1), int(ivec4((1), 1, 0, 0))))))) - 0), mat4x2(1.0))), gl_NumWorkGroups.x, _GLF_struct_26(_GLF_struct_25(mat2x3(1.0), mat4x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), vec4(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, 1))), ivec2(0, _GLF_IDENTITY(0, min(0, 0))) | (ivec2(_GLF_IDENTITY(1, min(1, 1))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-728.842, _GLF_IDENTITY(-388.967, (-388.967) - 0.0))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-728.842, -388.967)) : injectionSwitch), vec2(mat3x2((false ? _GLF_FUZZED(vec2(-728.842, -388.967)) : injectionSwitch), 1.0, 1.0, abs(1.0), 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))).y)) && true)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool((false))), ((bool((false)))) && true), (! (bool((false)))) || false)))), (bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), (! (bool((false)))) || false))))) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_size)))) - 0u, (true ? (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) * 1u))))) - 0u : _GLF_FUZZED(172012u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.19, 615.271)) : injectionSwitch)).x > injectionSwitch.y, true))), _GLF_IDENTITY(false, false || (false)), true))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id * subgroup_size, 0u | _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), min((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((115706u * workgroup_id)) : subgroup_size)), uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) ^ 0u)))), clamp(~ (_GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), min((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) ^ 0u)))), ~ (_GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), min((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((workgroup_size ^ atomicCompSwap(workgroup_size, workgroup_size, subgroup_local_id))) : 0u)))))), _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) : _GLF_FUZZED(workgroup_size)))), ((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) ^ 0u)))), ~ (_GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), min((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) ^ 0u)))))), (false ? _GLF_FUZZED((+ workgroup_base)) : ~ (_GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)), 0u)))), min((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, (_GLF_struct_replacement_8._f0.subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ((_GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u)))))) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4((false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-92.95), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.82)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, min(_GLF_struct_replacement_8._f0.subgroup_id, _GLF_struct_replacement_8._f0.subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), uint(1u))), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), 1u * (~ (uint(1u))))))))), 0u + (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, min(_GLF_struct_replacement_8._f0.subgroup_id, _GLF_struct_replacement_8._f0.subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), uint(1u))), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), 1u * (~ (uint(1u))))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))) % subgroup_size), (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_id, 0u + (_GLF_struct_replacement_8._f0.subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u, uint(uvec4((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u, uint(uvec4((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u, 1u, 1u, 1u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (true ? uint(uint(subgroup_size)) : _GLF_FUZZED(workgroup_id))))) / 1u)) >> 0u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), min(1, 1)), max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-35.42)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) | 0u)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(63.71, 420.046, -2806.6334, 0.3))))))) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))))[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), (true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base))) | (next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) | ((2)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-48382) : _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0), max(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0), ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0)))))))))) / 1) | (2))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), (true ? (2) : _GLF_FUZZED(-62130)))) / 1) | (2))))))) << 0), 2))), 1u * (uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) | ((2)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-48382) : _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0), max(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0), ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0)))))))))) / 1) | (2))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), (true ? (2) : _GLF_FUZZED(-62130)))) / 1) | (2))))))) << 0), 2))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390))), clamp((4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390))), _GLF_IDENTITY((4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390))), 0 | (_GLF_IDENTITY((4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390))), int(ivec4((4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390))), 1, 1, 0))))), (4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29390)))))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), min(~ (~ (64)), ~ (~ (64))))), 64), 0 | (_GLF_IDENTITY(min(_GLF_IDENTITY(64, ~ (~ (64))), 64), (min(_GLF_IDENTITY(64, ~ (~ (64))), 64)) | (min(_GLF_IDENTITY(64, ~ (~ (64))), 64)))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_FUZZED(638.363)) + 0.0)) + 0.0)), bool(false))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_FUZZED(638.363)) + 0.0)) + 0.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_FUZZED(638.363)) + 0.0)) + 0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_IDENTITY(_GLF_FUZZED(638.363), (_GLF_FUZZED(638.363)) + 0.0)) + 0.0)), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(638.363, (false ? _GLF_FUZZED(mod(9.2, -1.1)) : _GLF_IDENTITY(638.363, (638.363) + 0.0))))), bool(false)), mix(float(_GLF_FUZZED(339.996)), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(638.363)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2183.3480) : mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))))))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(log(-0.1))))), float(_GLF_FUZZED(638.363)), bool(false)), mix(float(_GLF_FUZZED(339.996)), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))), bool(true)))) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false)), mix(float(_GLF_FUZZED(339.996)), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(638.363)), bool(false))), bool(true)))) > injectionSwitch.y, false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), false, false, false))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), bvec2(false, true))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))), ! (! (! (false))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
