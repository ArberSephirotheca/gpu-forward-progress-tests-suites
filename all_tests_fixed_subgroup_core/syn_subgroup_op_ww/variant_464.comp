#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 bvec4 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 vec4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_7 {
 int _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bvec3 _f1;
 vec3 _f2;
 mat4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 uint subgroup_size;
 mat2x3 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 vec2 _f1;
 mat3 _f2;
 int _f3;
 vec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_6 _f0;
 vec3 _f1;
 _GLF_struct_9 _f2;
 ivec3 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_0 {
 uint virtual_gid;
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 vec3 _f1;
 vec2 _f2;
 _GLF_struct_0 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))) || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))) || false)), true && _GLF_IDENTITY(((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), true && (((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.6) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -40.29 : -0.0))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), ((false)) && true)))))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_6(_GLF_struct_3(uvec4(1u), vec2(1.0), mat3(1.0), 1, vec2(1.0), bvec3(true)), _GLF_struct_4(gl_SubgroupSize, mat2x3(1.0), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_5(bvec2(true), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4(1.0), ivec3(1)), vec3(1.0)), vec3(1.0), _GLF_struct_9(_GLF_struct_7(1), _GLF_struct_8(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, 0.0 + (_GLF_IDENTITY((1.0) * 1.0, float(mat2x3((1.0) * 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0))))))))), (mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3x2(1.0), bvec2(true)), _GLF_IDENTITY(vec4(1.0), vec4(mat4x3(vec4(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))) / 1.0))))), ivec3(1), _GLF_struct_11(_GLF_struct_10(bvec4(true), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, log(sqrt(1.0)), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), min(float(mat4(1.0, 1.0, log(sqrt(1.0)), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), float(mat4(1.0, 1.0, log(sqrt(1.0)), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)))))), mat4(1.0)), vec4(1.0), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(8.3)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(85.78)), vec2(_GLF_FUZZED(575.033), (injectionSwitch)[1]), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(219.918)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))), bool(bvec3(! (_GLF_DEAD(false)), false, false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec4(0.0, 0.0, 0.0, 0.0))) < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))), injectionSwitch.y)), float(vec3(injectionSwitch.y, abs(1.0), 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.2, 8691.9902)))).y) - 0.0), injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true))))))), false, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(injectionSwitch, log(1.0), 1.0, 0.0, 1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))) / vec2(1.0, 1.0)), 0.0, 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(2.4, float(vec2(_GLF_IDENTITY(2.4, max(2.4, 2.4)), 1.0))))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(474.265), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-17.43)), bvec2(true, false)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5487.8866) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))) && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(7.9)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0))) * (0.0), float(mat4x2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0))) * (0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, 1.0)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4x2(1.0), _GLF_struct_1(bvec2(true), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), vec3(_GLF_FUZZED(-739.557), _GLF_FUZZED(-932.557), _GLF_FUZZED(3725.2555)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), vec2(1.0), _GLF_struct_0(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f1.subgroup_size + subgroup_local_id, uvec3(1u)), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_12._f0._f1.subgroup_size, 0u | (_GLF_struct_replacement_12._f0._f1.subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, uint(uint(_GLF_struct_replacement_2._f1._f3.virtual_gid))))), _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u))), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (0u & 160576u)), uvec2(uvec3(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (0u & 160576u)), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid))))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid))))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid))))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (true ? _GLF_struct_replacement_2._f1._f3.virtual_gid : _GLF_FUZZED(num_workgroup))), 0u)))) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u))), clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), min(max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) : _GLF_FUZZED(num_workgroup)))))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)), min(_GLF_IDENTITY(~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)), (~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))) + 0u), ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid)), clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid))))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)))))))), max(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)))))))), (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))) << 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), max(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), ~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), max(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), ~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) | (_GLF_IDENTITY(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), max(~ (_GLF_struct_replacement_2._f1._f3.virtual_gid), ~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))))), 0u ^ ((~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) + 0u) : _GLF_FUZZED((workgroup_base % num_workgroup)))))), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)), min((~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)), (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) : _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ _GLF_IDENTITY((_GLF_struct_replacement_2._f1._f3.virtual_gid), min((_GLF_struct_replacement_2._f1._f3.virtual_gid), (_GLF_struct_replacement_2._f1._f3.virtual_gid)))))) / 1u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u))), (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_2._f1._f3.virtual_gid))))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u), 1u, (1u ^ 0u))), min(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u), 1u, (1u ^ 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u, 0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u, uint(uint((_GLF_struct_replacement_2._f1._f3.virtual_gid) - 0u)))))), 1u, (1u ^ 0u)))))))))) / 1u)) | 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_2._f1._f3.virtual_gid), max((_GLF_struct_replacement_2._f1._f3.virtual_gid), (_GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | (0u ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, clamp(_GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_struct_replacement_2._f1._f3.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, (_GLF_struct_replacement_2._f1._f3.virtual_gid) << 0u), _GLF_struct_replacement_2._f1._f3.virtual_gid))))))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f3.virtual_gid, ~ (~ (_GLF_struct_replacement_2._f1._f3.virtual_gid)))) / 1u)) | 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, bool(bool((_GLF_IDENTITY(false, (false) || false)) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.07)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_12._f0._f1.subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(752.414), _GLF_FUZZED((901.327 * 77.12))), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (true ? _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED((vec3(-55.91, -856.331, _GLF_IDENTITY(-22.84, (true ? -22.84 : _GLF_FUZZED(asinh(-5.8))))) * mat2x3(9824.7496, 49.62, 326.044, -0.6, 13.46, _GLF_IDENTITY(-3.2, max(-3.2, _GLF_IDENTITY(-3.2, 0.0 + (-3.2)))))))))), max(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mix(vec2((sqrt(vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, log(1.0), tan(0.0)))), 1.0)))[0], _GLF_FUZZED(float(-14956))), vec2(_GLF_FUZZED(_GLF_IDENTITY(8856.4971, max(8856.4971, _GLF_IDENTITY(8856.4971, clamp(_GLF_IDENTITY(8856.4971, (false ? _GLF_FUZZED(65.87) : 8856.4971)), 8856.4971, 8856.4971))))), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (sqrt(vec2(1.0, 1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? 1 : _GLF_FUZZED(87573))))))))])) : _GLF_FUZZED((vec3(_GLF_IDENTITY(-55.91, float(_GLF_IDENTITY(vec3(-55.91, 1.0, 1.0), mat3(1.0) * (vec3(-55.91, 1.0, 1.0))))), -856.331, -22.84) * mat2x3(9824.7496, _GLF_IDENTITY(49.62, (49.62) / 1.0), 326.044, -0.6, _GLF_IDENTITY(13.46, (_GLF_IDENTITY(13.46, (13.46) + 0.0)) - log(1.0)), -3.2)))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)))))) : _GLF_FUZZED((_GLF_IDENTITY(vec3(-55.91, -856.331, -22.84), clamp(vec3(_GLF_IDENTITY(-55.91, min(_GLF_IDENTITY(-55.91, 1.0 * (-55.91)), -55.91)), -856.331, -22.84), vec3(-55.91, -856.331, -22.84), vec3(-55.91, -856.331, -22.84))) * mat2x3(9824.7496, 49.62, 326.044, -0.6, 13.46, -3.2))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) && true))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], mix(float(_GLF_FUZZED(2934.1068)), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bool(true)))), vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED((4.3 / 92.35))), bvec2(false, false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], mix(float(_GLF_FUZZED(2934.1068)), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bool(true)))), vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED((4.3 / 92.35))), bvec2(false, false))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)))) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))), 1.0, 1.0)))))), bool(true)))))), bool(bvec3((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((3.1 + -3937.2712)), clamp(_GLF_FUZZED((3.1 + -3937.2712)), _GLF_IDENTITY(_GLF_FUZZED((3.1 + -3937.2712)), clamp(_GLF_FUZZED((3.1 + -3937.2712)), _GLF_FUZZED((3.1 + -3937.2712)), _GLF_FUZZED((3.1 + -3937.2712)))), _GLF_IDENTITY(_GLF_FUZZED((3.1 + -3937.2712)), (_GLF_IDENTITY(_GLF_FUZZED((3.1 + -3937.2712)), clamp(_GLF_FUZZED((3.1 + -3937.2712)), _GLF_FUZZED((3.1 + -3937.2712)), _GLF_FUZZED((3.1 + -3937.2712))))) * 1.0)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false)))))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + -3937.2712))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.1 + _GLF_IDENTITY(-3937.2712, mix(float(-3937.2712), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true))))), false)))))), true, false)))))))))))), true, _GLF_IDENTITY(false, ! (! (false))))))), false))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), false || (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
