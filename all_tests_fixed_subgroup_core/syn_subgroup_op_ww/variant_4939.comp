#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec4 _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 float _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x3 _f2;
 mat3 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat4 _f1;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true), true && (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec3(false, false, true))) && true), true && (bool(bvec3(false, false, true)))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), false))))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(vec4(-4364.2742, 5.5, -3.6, -9015.3104), vec4(-5.6, 1.9, 80.07, -406.894))) : injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.2))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) || false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], min((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], _GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], ((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0]) - 0.0))), (vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))[1]), vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(2988.6383)), bvec2(false, false)))) * (injectionSwitch)).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-40.87), _GLF_FUZZED(float(43764))), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], max((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1])), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], max((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1])), (_GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], max((vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]))) + 0.0)), float(_GLF_FUZZED(float(58825u))), bool(false)))), bvec2(true, true)))) * (injectionSwitch)).y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y), (false ? _GLF_FUZZED(-59.01) : float(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))))), _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (1.0) + abs(0.0)), 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-26.19)), float(injectionSwitch.y), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0), clamp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0))))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), 0.0)), 0.0)))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-324.710)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.3))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3944.2341) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 0.0))))) * 1.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), min(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))))) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(9.0, 7840.7280)) : vec2(1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1729.2543) : 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), mix(vec4((vec4(0.0, 1.0, 1.0, 0.0))[0], (vec4(0.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(vec4(275.879, -999.759, 414.456, -1.7).r), _GLF_FUZZED(85.76)), vec4(_GLF_FUZZED((+ -9.0)), _GLF_FUZZED((+ 7503.3146)), (vec4(0.0, 1.0, 1.0, 0.0))[2], (vec4(0.0, 1.0, 1.0, 0.0))[3]), bvec4(false, false, true, true))))), mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(_GLF_FUZZED(-324.710)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, log(1.0), cos(0.0), 0.0, 0.0, cos(0.0), 1.0))))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-94.58) : _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.3))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(3944.2341) : 0.0), ((false ? _GLF_FUZZED(3944.2341) : 0.0)) / 1.0))) * 1.0))), length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-98.29, -995.272, -1.5, -698.311, 4.0, 89.69, 534.417, -26.56, -482.792, 96.32, 477.969, 7.0, 1662.4563, -9459.5047, 48.78, 3.7))))))))))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-324.710)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(-1.0))))) / round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.3))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3944.2341) : 0.0))) * 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3944.2341) : 0.0))) * 1.0), min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3944.2341) : 0.0))) * 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3944.2341) : 0.0))) * 1.0))))))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0))), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)), 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0)))))))), 0.0, 0.0))), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-413.482)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(4.9))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(true), _GLF_struct_1(mat4x2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))), mat3(1.0)), mat4x3(1.0), mat3(1.0), _GLF_struct_2(bvec4(true), mat2x3(1.0), mat2x3(1.0), 1.0, ivec3(1))), mat4(1.0), gl_NumWorkGroups.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (_GLF_DEAD(false)) || false), true, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false, false)))), bool(bool((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false, false)))))))), false || ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false, false)))), bool(bool((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false, false))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), min(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-70.87 + 9.6))), bool(false))), 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED((+ mat4(-9.6, -5.4, 105.591, -557.575, 9.8, -8.5, -9.4, 653.253, 0.5, -6684.6725, 6168.5548, -574.377, -904.938, -2.7, -40.55, -7.1))) : _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-70.87 + 9.6))), bool(false))), 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-70.87 + 9.6))), bool(false))), 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (transpose(mat4(injectionSwitch, 1.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-70.87 + 9.6))), bool(false))), 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0)), clamp(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0)), float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0)), float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0))))) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(true, (true) && true), true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true)), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, false))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), false || (bool(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true)))))))), false || (bool(_GLF_IDENTITY(! (false), true && (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true)))))))), false || (bool(_GLF_IDENTITY(! (false), true && (! (false)))))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), false || (bool(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, false || (false)))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.4), _GLF_FUZZED(_GLF_IDENTITY(-71.81, min(-71.81, -71.81)))), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))), true, false))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1]), float(_GLF_FUZZED(154.217)), bool(false))))), (true ? injectionSwitch[1] : _GLF_FUZZED(refract(8427.7490, 9.2, 306.993)))))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! ((false)), true, true, false)), ! (! (bool(bvec4(! ((false)), true, true, false))))))))), ! (! (! ((false))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), 0u))))), workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)))))) << 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), min(uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u)), uint(uvec2((~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), 1u))))))))))) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), bool(bool((! (false)))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)))), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(3.8) : 0.0)))), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(subgroup_local_id))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(subgroup_local_id))))), subgroup_size))) ^ 0u), 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))) << 0u)) / _GLF_IDENTITY(1u, 0u | (1u)))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))) << 0u)) / 1u))))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(3), int(3))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 0u | (uint(1u)))) | (uint(1u))))), uint(_GLF_IDENTITY(1u, (1u) | (1u))))))) ^ uvec2(0u, 0u))))), 0u | ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(93916) : 0 << _GLF_IDENTITY(int(3), int(3))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)))), (uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 0u)), (_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3((subgroup_local_id + 1), 1u, 0u))))) | (_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 0u)), uint(uint(uint(uvec3((subgroup_local_id + 1), 1u, 0u)))))))) % subgroup_size), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u + (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u))))))) ^ uvec2(0u, 0u))))))) / 1u), clamp(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, max((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u))), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> ((1u ^ 1u) | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) << 0u)))) / 1u)) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true))))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)), (mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)), min(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(507.635)), bool(false)))))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_FUZZED(507.635), (_GLF_FUZZED(507.635)) - 0.0)), bool(false))))) / 1u)), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))) | ((subgroup_local_id))) / 1u)) >> 0u), 1u, 0u, 0u))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), min((4), (4))))))) >> 0)) * 1)) | ((4))) | (4))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4))) | (4), max(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4))) | (4), _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4))) | (4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4))) | (4)) - 0))))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4))) | (4)))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4)), 0), (ivec2((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(74798) : 0)))) | ((4)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), 0)))) - ivec2(0, 0))))) | _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(71681))))), 0 + ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)) | ((4)), 0), (ivec2((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(74798) : 0)))) | ((4)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), 0)))) - ivec2(0, 0))))) | _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(71681))))))))) / 1));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, exp(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.5), _GLF_FUZZED(0.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), ! (! (false))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, ! (! (false))))), true && _GLF_IDENTITY((bool(bvec3(bool(false), _GLF_IDENTITY(false, (false) || false), false))), ((bool(_GLF_IDENTITY(bvec3(bool(false), false, false), bvec3(bvec4(bvec3(bool(false), false, false), false)))))) && true))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), false, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bool(false), false, false), false)))), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(bool(false), true && (bool(false))), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)) && true)), false, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)) && true)), false, false))), ((bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)) && true)), false, false)))) || false)))), ((bool(bvec3(_GLF_IDENTITY(bool(false), true && (bool(false))), false, false)))) || false)) || false))), false || (_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) && true)), false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), true))))), bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) && true)), false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) && true)), false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))), true, true, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true))), false, true))))))), false, false)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && (bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))), true, true, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true))), false, true))))))), false, false)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && (bool(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true))))), true, false)))))))))))), true, true, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), bool(bvec2(false, false))), true, true, true))), false, true))))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), (true) && true) && (bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), false, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && true)))), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && (bool(false))))))))))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(-7.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(4410.6634)), bool(false)))), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! (_GLF_IDENTITY(false, false || (false))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, false))))))), ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0))))) || false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0))))) || false)))))) || false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
