#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bool _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat2 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 mat4 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, int(int(6))), (_GLF_IDENTITY(6, int(int(6)))) >> 0)) ^ 0))), max(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))) << 0), 0 << _GLF_IDENTITY(int(6), int(6))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(1), int(1)))), (1) << 0), 0 | (_GLF_IDENTITY(1, (1) << 0))))))))))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - (0 | 0)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(57.44)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - (0 | 0))))))))))) && true)))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != 1)))))) && true, true && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0, 0.0))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0)))))), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) + 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-416.023) : 0.0))), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7343.6381) : 1.0)), 1.0)), 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(false))), bool(false)))))))))).x > injectionSwitch.y)) && _GLF_IDENTITY(true, true && (true)))) || (_injected_loop_counter != 1), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(vec2(-67.92, 6.7)) : vec2(0.0, 1.0))))), 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0)), float(_GLF_FUZZED(44.61)), bool(false))), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) + vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))))).x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), float(mat4(sin(0.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.9) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) / 1.0))))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(vec2(-67.92, 6.7)) : vec2(0.0, 1.0))))), 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(min(0.0, 0.0), float(mat4x3(min(0.0, 0.0), 1.0, length(tan(vec2(0.0, 0.0))), 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 0.0))))) - 0.0), 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0)), float(_GLF_FUZZED(44.61)), bool(false))), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), (true ? vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(vec2(-67.92, 6.7)) : vec2(0.0, 1.0))))), 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(min(0.0, 0.0), float(mat4x3(min(0.0, 0.0), 1.0, length(tan(vec2(0.0, 0.0))), 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), 0.0))))) - 0.0), 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0)), float(_GLF_FUZZED(44.61)), bool(false))), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), (true ? vec4(mat2x3(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) : _GLF_FUZZED(vec4(9491.1425, 13.96, 1766.8520, -2.3)))))))), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(44.41)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0))))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), true, false)))))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))) : _GLF_FUZZED(-437.422)))), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.7, max(_GLF_IDENTITY(-8.7, (-8.7) - 0.0), -8.7)))), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), float(mat2x4(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), (true ? clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-42.28)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-8.7)), (float(_GLF_FUZZED(-8.7))) * 1.0), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8360.0901) : determinant(mat2(1.0, 0.0, 0.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(61.91, 90.06, 5.0)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5797.4160)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(33.71)), bool(false))), 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))))).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), (true ? vec4(mat2x3(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) : _GLF_FUZZED(vec4(9491.1425, 13.96, 1766.8520, -2.3)))))))), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(44.41)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0))))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), true, false)))))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))) : _GLF_FUZZED(-437.422)))), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.7, max(_GLF_IDENTITY(-8.7, (-8.7) - 0.0), -8.7)))), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), float(mat2x4(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), (true ? clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-42.28)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-8.7)), (float(_GLF_FUZZED(-8.7))) * 1.0), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8360.0901) : determinant(mat2(1.0, 0.0, 0.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(61.91, 90.06, 5.0)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5797.4160)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(33.71)), bool(false))), 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))))).x > injectionSwitch.y))) && true) && true)) || (_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && true)))))))) && true))))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) << 0) != 1, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), tan(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0)), (float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-4081.1145))), 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(mat3(-6095.2966, 5.1, -5.3, 7.4, -83.96, 806.840, -26.49, -4.3, -59.11)))))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))))))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), tan(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0)), (float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-4081.1145))), 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(mat3(-6095.2966, 5.1, -5.3, 7.4, -83.96, 806.840, -26.49, -4.3, -59.11)))))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), tan(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0)), (float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-4081.1145))), 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(mat3(-6095.2966, 5.1, -5.3, 7.4, -83.96, 806.840, -26.49, -4.3, -59.11)))))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), tan(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0)), (float(mat3x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-4081.1145))), 0.0, 0.0, 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) - tan(0.0)), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(mat3(-6095.2966, 5.1, -5.3, 7.4, -83.96, 806.840, -26.49, -4.3, -59.11)))))) * mat2(1.0), max((vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))) * mat2(1.0), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * mat2(1.0))))) - vec2(0.0, 0.0))))))) * mat2(1.0))))).x > injectionSwitch.y)) || (_injected_loop_counter != 1)))))) && true)))))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))) || false) || (_injected_loop_counter != 1)))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true)))))))) || (_injected_loop_counter != 1), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))))) || (_injected_loop_counter != 1))))))))) && true)))))))), false || (bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) + 0))) | 0), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec2(_injected_loop_counter != 1, false)), ! (_GLF_IDENTITY(! (bool(bvec2(_injected_loop_counter != 1, false))), true && (! (bool(bvec2(_injected_loop_counter != 1, false)))))))))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).x > injectionSwitch.y)) || (_injected_loop_counter != 1)))))) && true))))))))))), false)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true)), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false))))))))))))), false, false))), (! (_GLF_IDENTITY(true, false || (true)))) || false))), (true) && true)))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((-90412 | 51078) ^ 57487) & _GLF_IDENTITY(_GLF_IDENTITY((-67080 & 0), min((-67080 & 0), (-67080 & 0))), (_GLF_IDENTITY(_GLF_IDENTITY((-67080 & 0), min((_GLF_IDENTITY(-67080 & 0, clamp(-67080 & 0, -67080 & 0, -67080 & 0))), (-67080 & 0))), (_GLF_IDENTITY((_GLF_IDENTITY(-67080 & 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(-67080 & 0, (0 | 1)), (ivec2(-67080 & 0, (0 | 1))) | _GLF_IDENTITY((ivec2(-67080 & 0, (0 | 1))), ivec2(0, 0) ^ ((ivec2(-67080 & 0, (0 | 1))))))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(ivec2(-67080 & 0, (0 | 1)), (ivec2(-67080 & 0, (0 | 1))) | _GLF_IDENTITY((ivec2(-67080 & 0, (0 | 1))), ivec2(0, 0) ^ ((ivec2(-67080 & 0, (0 | 1))))))))), 0 ^ (int(int(int(_GLF_IDENTITY(ivec2(-67080 & 0, (0 | 1)), (ivec2(-67080 & 0, (0 | 1))) | _GLF_IDENTITY((ivec2(-67080 & 0, (0 | 1))), ivec2(0, 0) ^ ((ivec2(-67080 & 0, (0 | 1)))))))))))))), min((-67080 & 0), (-67080 & 0)))) + 0)) + (0 | 0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-96.67)), float(0.0), bool(true))), injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) | (0 ^ _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) + 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5))), ! (_GLF_IDENTITY(! (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))), ! (! (! (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))))))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(bvec4(true), _GLF_struct_1(_GLF_struct_0(true, mat2x3(1.0), mat4x2(1.0), mat2(1.0), ivec2(1), mat2x4(1.0), mat4x3(1.0)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) >> ivec4(0, 0, 0, 0), ((ivec4(1)) >> ivec4(0, 0, 0, 0)) | ivec4(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))) : _GLF_FUZZED(-94278)))), 0, 0)), (_GLF_IDENTITY(false ? _GLF_FUZZED((ivec4(59040, 35411, _GLF_IDENTITY(-42292, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-42292, ~ (~ (-42292))), max(-42292, -42292)), -42292, -42292)), 64033))) : (ivec4(1)) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY(false ? _GLF_FUZZED((ivec4(59040, 35411, _GLF_IDENTITY(-42292, clamp(_GLF_IDENTITY(-42292, max(-42292, -42292)), -42292, -42292)), 64033))) : (ivec4(1)) >> ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED((ivec4(59040, 35411, _GLF_IDENTITY(-42292, clamp(_GLF_IDENTITY(-42292, max(-42292, -42292)), -42292, -42292)), 64033))) : (ivec4(1)) >> ivec4(0, 0, 0, 0)) >> ivec4(0, 0, 0, 0))) | (false ? _GLF_FUZZED((ivec4(59040, 35411, _GLF_IDENTITY(-42292, clamp(_GLF_IDENTITY(-42292, max(-42292, -42292)), -42292, -42292)), 64033))) : (_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), ivec4(1)))) >> ivec4(0, 0, 0, 0)))))), mat4(1.0), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(max(int(5), int(5)), ((5296 & 0) >> _GLF_IDENTITY(int(4), int(4))) | (max(int(5), int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))) && true)))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   barrier();
                  }
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true))))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && true, true), true, false))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : 3u))))) | (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : 3u))))) | (workgroup_base)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : 3u))))) | (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : 3u))))) | (workgroup_base)) + subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) << 0u) * subgroup_size))))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)), (_GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)), clamp(_GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), ((subgroup_local_id + 1)) << 0u)), uint(uvec3(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (true ? ((subgroup_local_id + 1)) << 0u : _GLF_FUZZED(subgroup_id))))), 1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)), ~ (~ (min((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))), ((subgroup_local_id + 1)) << 0u))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED((subgroup_size - workgroup_size)) : _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(13618u) : (subgroup_local_id + 1)))))) << 0u))))) >> 0u)) % subgroup_size);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     atomicStore(buf[_GLF_struct_replacement_2._f1.virtual_gid], uint(1), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(78906)), ~ (~ ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))) ? (4) : _GLF_FUZZED(78906)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(78906)), ~ (~ ((true ? (4) : _GLF_FUZZED(78906)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(78906)), ~ (~ ((true ? (4) : _GLF_FUZZED(78906)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(78906)), ~ (~ ((true ? (4) : _GLF_FUZZED(78906)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0), _GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(78906)), 1 * ((true ? (4) : _GLF_FUZZED(_GLF_IDENTITY(78906, (78906) | (78906)))))), ~ (~ ((true ? (4) : _GLF_FUZZED(78906)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0))), 64, 4);
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u)), max(uint(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u)))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(length(vec2(0.0, 0.0)), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(length(vec2(0.0, 0.0)), 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec4((false) && true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))), int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(90103) : _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, ~ (~ (0)))))))) & 4146); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 ^ 1) ^ 1))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, 0 ^ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)), false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1)) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) >> 0), 0, 0))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)), false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1)) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) >> 0), 0, 0)))))), (~ (((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)), false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1)) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) >> 0), 0, 0))))))) | (~ (((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)), false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1)) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) >> 0), 0, 0)))))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), int(ivec4((int(6)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))) ^ 0)) - 0))))))), _GLF_IDENTITY(((((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), clamp(((1)), _GLF_IDENTITY(((1)), (((1))) | (((1)))), ((1))))) | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(ivec4(int(0), _GLF_IDENTITY(0, (0) >> 0), 0, 0))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0))), min(((((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), clamp(((1)), _GLF_IDENTITY(((1)), (((1))) | (((1)))), ((1))))) | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(ivec4(int(0), _GLF_IDENTITY(0, (0) >> 0), 0, 0))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0))), _GLF_IDENTITY(((((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), clamp(((1)), _GLF_IDENTITY(((1)), (((1))) | (((1)))), ((1))))) | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(ivec4(int(0), _GLF_IDENTITY(0, (0) >> 0), 0, 0))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0))), (((((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), clamp(((1)), _GLF_IDENTITY(((1)), (((1))) | (((1)))), ((1))))) | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(ivec4(int(0), _GLF_IDENTITY(0, (0) >> 0), 0, 0))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0), (_GLF_IDENTITY(int(6), (int(6)) ^ 0)) - 0)))) ^ 0))) - 0))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) > 0); _injected_loop_counter --)
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), false)))) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))
                            barrier();
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                            {
                             do
                              {
                               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(uint(2), min(uint(2), uint(2)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(uint(2), min(uint(2), uint(2)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, (0 >> _GLF_IDENTITY(int(4), int(4))), 0), (ivec4(2, 0, (0 >> _GLF_IDENTITY(int(4), int(4))), 0)) >> ivec4(0, 0, 0, 0))))), min(uint(2), uint(2))), _GLF_IDENTITY(uint(2), min(uint(2), uint(2))))))) | (min(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(uint(2), min(uint(2), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) / 1)))))))), 4, 64, 4);
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = (0 & 68557); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0)) ^ 0)]), bvec2(false, true)))) - vec2(0.0, 0.0)).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x) : _GLF_FUZZED(2.6))))))))))); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
                                  {
                                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))))))))))))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)), 1 * (int(0)))) | 0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)), 1 * (int(0)))) | 0)) << 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-18118))) < (((1 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec4(int(7), 1, 1, 0)))))); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                }
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))))))
                                  {
                                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(83904))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               else
                                {
                                }
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (false)), false)), bvec2(bvec4(bvec2(bvec2(! (! (false)), false)), true, false))))))))))))))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
            }
           subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true))))));
          }
         else
          {
           do
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), (int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(7, (7) >> 0))))) - 0))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0))) != 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) && true))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               subgroupAll(true);
              }
             else
              {
              }
            }
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
          }
        }
       else
        {
        }
      }
    }
  }
}
