#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), true, false, false))), bool(bool(! (bool(bvec4(_GLF_DEAD(false), true, false, false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(53.14, 4.4)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bool(bool(true))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-7.8) : float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], min(injectionSwitch[1], injectionSwitch[1])))).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), min(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))), max(vec2(_GLF_IDENTITY(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), min(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), min(vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))))))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch) : _GLF_FUZZED(vec2(-9.4, -9.3)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0)))), 1.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch) : _GLF_FUZZED(vec2(-9.4, -9.3)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0)))), 1.0)))[0], 1.0 * ((vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch) : _GLF_FUZZED(vec2(-9.4, -9.3)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0)))), 1.0)))[0])), _GLF_FUZZED(5790.9379)), vec2(_GLF_FUZZED(6.1), (vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch) : _GLF_FUZZED(vec2(-9.4, -9.3)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0)))), 1.0)))[1]), bvec2(false, true))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY((~ (workgroup_id)) | 0u, ((1u ^ 0u) | 1u) * ((~ (workgroup_id)) | 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), true, false))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ 1u)), (0u | 0u) + (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ 1u)), (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u) + (subgroup_id * subgroup_size)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u), 0u)))), 1u * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u), 0u))))))), (0u | 0u) + _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / (1u ^ 0u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)) + (subgroup_id * subgroup_size))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (0u | 0u) + (subgroup_id * subgroup_size))) >> 0u)) << 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (0u | 0u) + (subgroup_id * subgroup_size))) >> 0u)) << 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u), 0u)))), 1u * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u, ((_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u))), 0u))))))), (0u | 0u) + _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u)) / (1u ^ 0u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), clamp(min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)) + (subgroup_id * subgroup_size))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), uint(uvec4((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), 1u, (1u & 1u)))))) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, max(0u, 0u)))), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u) + _GLF_IDENTITY((subgroup_id * subgroup_size), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (0u | 0u) + (subgroup_id * subgroup_size))) >> 0u)) << 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))), (0u | 0u) + (subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (0u | 0u) + (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) | ((subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (0u | 0u) + (subgroup_id * subgroup_size))) >> 0u)) << 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u)))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(0u | ((subgroup_id * subgroup_size)), 0u | (0u | ((subgroup_id * subgroup_size)))))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id)))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u)))) / 1u), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), _GLF_IDENTITY(((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u, (((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u) << 0u))))) / 1u), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u)))) / 1u), 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u)) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u)) ^ 0u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) - 0u)) ^ 0u)))))))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u)))) / 1u), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), max(uvec3((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec3((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))) ^ (1u ^ _GLF_IDENTITY(1u, (1u) * 1u)), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) * 1u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) ^ (1u ^ 1u)) / 1u)))) / 1u), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) | 0u) ^ (1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))))))))) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ (1u ^ 1u), ((subgroup_id * subgroup_size) ^ (1u ^ 1u)) / 1u)))) / 1u), 0u)))))))), (0u | 0u) + (subgroup_id * subgroup_size)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) | (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)), clamp((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)), _GLF_IDENTITY((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)), ~ (~ ((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))))), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))) | uvec4(0u, 0u, 0u, 0u), ((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY((uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u), (true ? (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(182650u, _GLF_IDENTITY(22221u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(22221u, max(_GLF_IDENTITY(22221u, 0u + (22221u)), 22221u)))), 28295u, 30087u))))))), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | (1)), int(ivec3(_GLF_IDENTITY(int(0 | (1)), (int(0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(64349, -17308)[0]) : _GLF_IDENTITY(1, 0 + (1))))))) * 1), 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | (1)), int(ivec3(_GLF_IDENTITY(int(0 | (1)), (int(0 | (1))) * 1), 0, 0)))), (int(_GLF_IDENTITY(int(0 | (1)), int(ivec3(_GLF_IDENTITY(int(0 | (1)), (int(0 | (1))) * 1), 0, 0))))) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (_GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ((0u & 44376u) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (uint(1u))), uint(1u))), 0u, 0u)))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) - 0u)), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 0u | (uint(1u)))) | (uint(1u))))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(subgroup_local_id)))))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))))))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), (false ? _GLF_FUZZED(84045u) : _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size))))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))) | (1)))))) % subgroup_size), ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) ^ 0u))) << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(0u, max(0u, 0u)), 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec4(uint(3u), (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec4(uint(3u), (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), _GLF_IDENTITY(uvec4(uint(3u), (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (true ? uvec4(uint(3u), (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u) : _GLF_FUZZED(uvec4(52236u, 93674u, 57088u, 61891u)))), uvec4(uint(3u), (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) : _GLF_FUZZED(workgroup_base)))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), int(ivec3(~ (~ (1)), 1, 0)))) - 0)), 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ 0) | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) | (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec3(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 1u)))))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))), (uvec4((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size) | 0u))))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (true ? 0 | (1) : _GLF_FUZZED(-39890))))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8)))) | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) | 0u)))), 0u, 0u)))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (true ? uint(_GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(num_workgroup))))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (true ? uint(_GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(num_workgroup))))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (true ? uint(_GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(num_workgroup))))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (true ? uint(_GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(num_workgroup))))), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u), (uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))))), (uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u))) - 0u)) | 0u)))) << 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, log(cos(0.0)), 0.0, sin(0.0), 0.0, 0.0, cos(0.0), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0)))), abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, tan(0.0), 0.0, 1.0)))))), 1.0), mat3(1.0) * (mat4x3(injectionSwitch, log(cos(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(535.285)), float(0.0), bool(true))), 0.0, cos(0.0), abs(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(1390.2890, float(mat3x2(1390.2890, 1.0, 1.0, 1.0, 1.0, 0.0))))), vec2(_GLF_FUZZED(6285.4302), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), (mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1390.2890)), vec2(_GLF_FUZZED(6285.4302), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4587.6093)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(1390.2890, float(mat3x2(1390.2890, 1.0, 1.0, 1.0, 1.0, 0.0))))), vec2(_GLF_FUZZED(6285.4302), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), (mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1390.2890)), vec2(_GLF_FUZZED(6285.4302), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4587.6093)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), max(uvec4(next_virtual_gid, 1u, 0u, 0u), uvec4(next_virtual_gid, 1u, 0u, 0u)))))) ^ 0u)], uint(_GLF_IDENTITY(2, (2) * 1)), 4, 64, _GLF_IDENTITY(4, (4) * _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(37717) : _GLF_IDENTITY(1, max(1, 1)))), min(1, 1))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(43.21)), bvec2(_GLF_IDENTITY(false, true && (false)), false)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.9))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(-808.822) : 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-6.5))))) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, sin(0.0))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))) || false)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) && true), bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(5629.3205, 73.03, -9.0, 1.7))))) / mat2(1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), float(_GLF_FUZZED(6.3)), bool(false)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(763.544, mix(float(_GLF_FUZZED(2095.8615)), float(763.544), bool(true))))), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-8.5)), float(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))) < injectionSwitch.y))))))), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(((- 54.12) - -0.1))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.6, mix(float(_GLF_IDENTITY(-9.6, clamp(-9.6, -9.6, -9.6))), float(_GLF_FUZZED((-73.43 / -3.0))), bool(false)))), (vec2(0.0, 1.0))[1]), bvec2(false, true))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(934.593) : float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(763.544)), float(injectionSwitch.y), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat2(5.4, -9928.1084, 2.7, 8.1))) : 0.0)), 0.0, 0.0))))) : _GLF_FUZZED(1.7)))) + 0.0))) / 1.0))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bvec3(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bvec3(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))))))), true))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
