#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-93031) : int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4516.9767)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       for(int _injected_loop_counter = (0 | ((0 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) ^ 0), ~ (~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3), ~ (_GLF_IDENTITY(~ ((3)), (_GLF_IDENTITY(~ ((3)), (~ ((3))) ^ 0)) | (~ ((3)))))) ^ 0))))), int(3)), _GLF_IDENTITY(min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3))))), min(min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(int(3), int(3))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), clamp(_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), (true ? (~ (int(5))) : _GLF_FUZZED(-81321)))) / 1), (~ (int(5))), (~ (int(5)))))) | 0))), (~ (_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 | (int(5)))) >> 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)) << 0) | (int(5)))))))) << (0 | 0))), _GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0)))) << 0))))), (~ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))) << _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))))), 0 ^ (0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0)))) << 0))))), (~ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))) << _GLF_IDENTITY((0 | 0), 1 * ((0 | 0))))))))))), 0 | ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) ^ 0), ~ (~ (_GLF_IDENTITY(3, _GLF_IDENTITY((3), ~ (_GLF_IDENTITY(~ ((3)), (_GLF_IDENTITY(~ ((3)), (~ ((3))) ^ 0)) | (~ ((3)))))) ^ 0))))), int(3)), _GLF_IDENTITY(min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3))))), min(min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(int(3), int(3))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), clamp(_GLF_IDENTITY((~ (int(5))), (_GLF_IDENTITY((~ (int(5))), (true ? (~ (int(5))) : _GLF_FUZZED(-81321)))) / 1), (~ (int(5))), (~ (int(5)))))) | 0))), (~ (_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 | (int(5)))) >> 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)) << 0) | (int(5)))))))) << (0 | 0))), _GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0)))) << 0))))), (~ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))) << _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))))), 0 ^ (0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, max(0, 0)), 1)) << ivec2(0, 0)))) << 0))))), (~ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))) << _GLF_IDENTITY((0 | 0), 1 * ((0 | 0))))))))))))))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 26.55))), vec2(_GLF_FUZZED(-15.71), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.6))), _GLF_FUZZED((_GLF_IDENTITY(- 26.55, clamp(- 26.55, _GLF_IDENTITY(- 26.55, (_GLF_IDENTITY(- 26.55, float(mat2x4(- 26.55, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(- 26.55, max(- 26.55, - 26.55))))))), vec2(_GLF_FUZZED(-15.71), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 26.55))), vec2(_GLF_FUZZED(-15.71), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))))))))))))), 0.0, sqrt(0.0)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 26.55))), vec2(_GLF_FUZZED(-15.71), (injectionSwitch)[1]), bvec2(false, true))))).x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), _GLF_IDENTITY(int(0), min(int(0), int(0)))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), (int(_GLF_IDENTITY(0, 0 + (0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), max(int(_GLF_IDENTITY(0, 0 + (0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))), 0)), ~ (~ (int(ivec2(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))), 0)))))) : _GLF_FUZZED(_injected_loop_counter))))), (int(_GLF_IDENTITY(0, 0 + (0)))) | (int(_GLF_IDENTITY(0, 0 + (0)))))) * 1))), _GLF_IDENTITY(int(0), min(int(0), int(0)))))), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))), _injected_loop_counter)) != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(min(int(0), int(0)), (min(int(0), int(0))) | (min(int(0), int(0)))))))), true)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       for(int _injected_loop_counter = (_GLF_IDENTITY(1 | 0, (_GLF_IDENTITY(1 | 0, (_GLF_IDENTITY(1, (1) | (1)) | 0) ^ 0)) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, sqrt(cos(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))).y))));
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(57.64), _GLF_FUZZED(243.618)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 1u)));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))))))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u);
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))), uint(uvec3(((uint(1))), ((1u | 1u) & 1u), 0u))) * 1u)), 4, 64, 4);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), max((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-75080))), _GLF_IDENTITY(4, (4) | (1 ^ 1)))))) << 0)))), (_GLF_IDENTITY(int(4), (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), max((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-75080))), _GLF_IDENTITY(4, (4) | (1 ^ 1)))))) << 0)))), (_GLF_IDENTITY(int(4), (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), max((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-75080))), _GLF_IDENTITY(4, (4) | (1 ^ 1)))))) << 0)))), (_GLF_IDENTITY(int(4), (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), max((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-75080))), _GLF_IDENTITY(4, (4) | (1 ^ 1)))))) << 0)))), (_GLF_IDENTITY(int(4), (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), max((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-75080))), _GLF_IDENTITY(4, (4) | (1 ^ 1)))))) << 0)))), (_GLF_IDENTITY(int(4), (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, min((int(4)) << 0, (int(4)) << 0)))) >> 0) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, clamp(0, 0, 0)))), min((_GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(4), int(4)))) - 0)) << 0)))) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0))))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 4)))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(64019))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), (int(4)) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, 0))))) << 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(int(4), (int(4)) << 0)))))) >> 0) | 0)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(int(int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0)))), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0)), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0)))))))))), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, ~ (~ (0))))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | 0))), (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, _GLF_IDENTITY(((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)), 1 * (int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))))), (false ? _GLF_FUZZED(-22952) : ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)), 1 * (int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))))))) | 0)))) >> 0))))), 0, 1, 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), 0 | (int(4)))) << 0)) >> 0, min((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, 0, 0))), _GLF_IDENTITY(4, max(4, 4)))), (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << _GLF_IDENTITY(0, ~ (~ (0)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << 0), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(num_workgroup))))), (int(4)) << 0), 1, 1)))) << 0)))) << 0)) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, ((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), (int(4)) << 0)) >> 0), ((_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0, (true ? (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0 : _GLF_FUZZED(floatBitsToInt(27.35)))))) ^ 0))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4), int(4)))) << 0), 0 ^ (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), max(_GLF_IDENTITY(~ (int(4)), 0 | (_GLF_IDENTITY(~ (int(4)), 0 ^ (~ (int(4)))))), ~ (int(4))))))) << 0)) >> 0)), ((_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, (0 << _GLF_IDENTITY(int(8), int(8))) | ((int(4)) << 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))) | ((int(4)) << 0), ((0 << _GLF_IDENTITY(int(8), int(8))) | ((int(4)) << 0)) | 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, (0 << _GLF_IDENTITY(int(8), int(8))) | ((int(4)) << 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4)))) >> 0)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 | (_GLF_IDENTITY(int(4), (int(4)) << 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 | (_GLF_IDENTITY(int(4), (int(4)) << 0))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(int(4), (int(4)) << 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)), (false ? _GLF_FUZZED(-32223) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-26533) : _GLF_IDENTITY(4, (4) | (4))))), (int(4)) << 0)) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))))) : _GLF_FUZZED(40784)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) << 0)), ((_GLF_IDENTITY(int(4), (int(4)) << 0))) | ((_GLF_IDENTITY(int(4), (int(4)) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, 0 ^ ((int(4)) << 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) << 0)) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-38716))))))))) : _GLF_FUZZED(40784))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(int(4)))), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, (0) << 0)), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(-91920))) : _GLF_FUZZED(40784)))), 0 | (~ (~ _GLF_IDENTITY(((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(81794), (_GLF_FUZZED(81794)) | (_GLF_FUZZED(81794)))), max((true ? 4 : _GLF_FUZZED(81794)), (true ? 4 : _GLF_FUZZED(81794))))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, ((int(4)) << 0) ^ _GLF_IDENTITY(0, int(ivec2(0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(40784))), 0 + (_GLF_IDENTITY(((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(81794), (_GLF_FUZZED(81794)) | (_GLF_FUZZED(81794)))), max((true ? 4 : _GLF_FUZZED(81794)), (true ? 4 : _GLF_FUZZED(81794))))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, ((int(4)) << 0) ^ _GLF_IDENTITY(0, int(ivec2(0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(40784))), (((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(81794), (_GLF_FUZZED(81794)) | (_GLF_FUZZED(81794)))), max((true ? 4 : _GLF_FUZZED(81794)), (true ? 4 : _GLF_FUZZED(81794))))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, ((int(4)) << 0) ^ _GLF_IDENTITY(0, int(ivec2(0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(40784)))) / 1))))))), (~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(89745, max(_GLF_IDENTITY(89745, (_GLF_IDENTITY(89745, min(89745, 89745))) | (89745)), 89745))))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)) | 0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(-91920))) : _GLF_FUZZED(40784)))), 0 | (~ (~ ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(81794)), max((true ? 4 : _GLF_FUZZED(81794)), (true ? 4 : _GLF_FUZZED(81794))))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(40784)))))))) << 0)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4)))) >> 0)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(_GLF_IDENTITY(4, (4) | 0))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 | (_GLF_IDENTITY(int(4), (int(4)) << 0))))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), 0 | (_GLF_IDENTITY(int(4), (int(4)) << 0))))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))))) : _GLF_FUZZED(40784)), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, max(0, 0)))) >> 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, max(0, 0)))) >> 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << _GLF_IDENTITY(0, max(0, 0)))) >> 0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(89745, (_GLF_IDENTITY(89745, max(89745, 89745))) | (89745))), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, 0 ^ ((int(4)) << 0))), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) << 0)) >> 0)))))) : _GLF_FUZZED(40784))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4))), (false ? _GLF_FUZZED(-71139) : int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))))), int(ivec2((_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4))), (false ? _GLF_FUZZED(-71139) : int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81794))), 4)))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))), 0 | (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))))))))) : _GLF_FUZZED(-91920))) : _GLF_FUZZED(40784)))), 0 | (~ (~ ((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(81794)), max((true ? 4 : _GLF_FUZZED(81794)), (true ? 4 : _GLF_FUZZED(81794))))), 4)))) << 0), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, ~ (~ ((int(4)) << 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), max((int(4)), (int(4)))) << 0), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(89745), 0 ^ (_GLF_FUZZED(89745))) : (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) * 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) * 1)) << 0, 0 ^ ((_GLF_IDENTITY(int(4), (int(4)) * 1)) << 0))) << 0)), (_GLF_IDENTITY(int(4), (int(4)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) - 0)) ^ 0), (int(4)) << 0)) >> 0)))))) : _GLF_FUZZED(40784))))))))))) << 0)))) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y)) - 0.0))); _injected_loop_counter ++)
      {
       do
        {
         subgroupAll(false);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 | (2)), 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 | (2)), 2)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, _GLF_IDENTITY(0, 0 + (0))))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0 | (2), _GLF_IDENTITY(int(ivec3(0 | (2), 0, 0)), clamp(int(ivec3(0 | (2), 0, 0)), int(ivec3(0 | (2), 0, 0)), int(ivec3(0 | (2), 0, 0))))), ~ (~ (0 | (2))))), 2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))))) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, _GLF_IDENTITY(0, (0) / 1)))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))))) - 0)), (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))))) - 0))) << 0)) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), max(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2)))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))))))), 2))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), 2)))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), 0 | (int(ivec3(2, 1, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), ~ (~ (0 | (2)))))) - 0), 2))))) - 0)))))))) >> 0)), 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY(true ? (1 << _GLF_IDENTITY(int(7), int(7))) : _GLF_FUZZED(_injected_loop_counter), max(true ? (1 << _GLF_IDENTITY(int(7), int(7))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (true ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))), true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) << (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), int(ivec2(int(0), 0)))) << 0)))) : _GLF_FUZZED(_injected_loop_counter))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 ^ (7))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(true);
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
}
