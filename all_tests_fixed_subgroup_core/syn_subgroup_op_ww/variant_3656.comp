#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_injected_loop_counter != (0 | int(_GLF_ONE(1.0, injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED((_GLF_IDENTITY(68283u, (_GLF_IDENTITY(68283u, (true ? 68283u : _GLF_FUZZED((+ subgroup_id))))) | (68283u)) % 28001u)) : _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_local_id), 0u | (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))) || false, true)), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))) || false, true)), (bool(bvec2((_GLF_IDENTITY(false, false || (false))) || false, true))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -98543)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec4((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, true, false))), false)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec4((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, true, false))), false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.6)), vec2(_GLF_FUZZED((-111.149 / -3.2)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(577.664) : (injectionSwitch)[1]))), bvec2(false, true))).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) < ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec4(~ (1), 0, 1, 1), ~ (~ (ivec4(~ (1), 0, 1, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec4(~ (1), 0, 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(~ (1), 0, 1, 1), (ivec4(~ (1), 0, 1, 1)) + ivec4(0, 0, 0, 0))))))), min(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec4(~ (1), 0, 1, 1), ~ (~ (ivec4(~ (1), 0, 1, 1)))))), _GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec4(~ (1), 0, 1, 1), ~ (~ (ivec4(~ (1), 0, 1, 1))))))))))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(int(7), int(7))) << 0))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)) ^ 0))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) / 1u)) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)), (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))) / 1))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
        }
       return;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, int(int(2))), 2, 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, 1.0, log(1.0), 0.0, sqrt(1.0), 0.0, exp(0.0), sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, 1.0, log(1.0), 0.0, sqrt(1.0), 0.0, exp(0.0), sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))) - 0.0))))))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | 0)), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / 1.0)), float(_GLF_FUZZED(-986.279)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), max(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))], _GLF_FUZZED(-7.0)), bvec2(true, false)))))[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))), (true ? vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))) : _GLF_FUZZED(vec2(93.79, _GLF_IDENTITY(-5148.1051, (-5148.1051) + _GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0))), vec2(0.0, 0.0) + (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0)))))))) / vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 1)), 1, 1))])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), float(mat4(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-9.9, -63.33)) : vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])))), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-29.68)))) + 0.0) : _GLF_FUZZED(8.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, clamp(2.3, 2.3, _GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)))), 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, mix(float(_GLF_FUZZED(-0.8)), float(-801.489), bool(true))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_IDENTITY(2.3, 1.0 * (2.3))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))) : _GLF_FUZZED(-52.78))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) / 1)))])), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)], injectionSwitch[1])), sin(0.0)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), length(0.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), min(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0) : _GLF_FUZZED(vec3(-913.160, 8856.7293, -7.2))))) - vec3(0.0, 0.0, 0.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, (true ? _GLF_IDENTITY(-801.489, (false ? _GLF_FUZZED(sinh(-9.3)) : -801.489)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), clamp(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, (true ? 2.3 : _GLF_FUZZED(-4.8))), 1.0 * (2.3)), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, max(2.3, 2.3)), float(vec3(_GLF_IDENTITY(2.3, 1.0 * _GLF_IDENTITY((2.3), (_GLF_IDENTITY((2.3), 0.0 + (_GLF_IDENTITY((2.3), (true ? (2.3) : _GLF_FUZZED(-6.6)))))) - 0.0)), 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (true ? _GLF_IDENTITY(2.3, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2561.5129))) * (2.3)) : _GLF_FUZZED(-2.5))), 0.0, 1.0))))), (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))))) / vec2(1.0, 1.0)))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), max(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(vec2(13.55, 2763.9109))) : 1.0))))))))), injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED((+ injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), mix(vec2((_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[0], (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[1]), vec2(_GLF_FUZZED(8469.3187), _GLF_FUZZED(16.64)), bvec2(false, false))) : vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y)))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / 1.0)), float(_GLF_FUZZED(-986.279)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), max(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))], _GLF_FUZZED(-7.0)), bvec2(true, false)))))[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))), (true ? vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))) : _GLF_FUZZED(vec2(93.79, _GLF_IDENTITY(-5148.1051, (-5148.1051) + _GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0))), vec2(0.0, 0.0) + (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0)))))))) / vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 1)), 1, 1))])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), float(mat4(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-9.9, -63.33)) : vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])))), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-29.68)))) + 0.0) : _GLF_FUZZED(8.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, clamp(2.3, 2.3, _GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)))), 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, mix(float(_GLF_FUZZED(-0.8)), float(-801.489), bool(true))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_IDENTITY(2.3, 1.0 * (2.3))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))) : _GLF_FUZZED(-52.78))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) / 1)))])), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)], injectionSwitch[1])), sin(0.0)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), length(0.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), min(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0) : _GLF_FUZZED(vec3(-913.160, 8856.7293, -7.2))))) - vec3(0.0, 0.0, 0.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, (true ? _GLF_IDENTITY(-801.489, (false ? _GLF_FUZZED(sinh(-9.3)) : -801.489)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), clamp(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, (true ? 2.3 : _GLF_FUZZED(-4.8))), 1.0 * (2.3)), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, max(2.3, 2.3)), float(vec3(_GLF_IDENTITY(2.3, 1.0 * _GLF_IDENTITY((2.3), (_GLF_IDENTITY((2.3), 0.0 + (_GLF_IDENTITY((2.3), (true ? (2.3) : _GLF_FUZZED(-6.6)))))) - 0.0)), 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (true ? _GLF_IDENTITY(2.3, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2561.5129))) * (2.3)) : _GLF_FUZZED(-2.5))), 0.0, 1.0))))), (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))))) / vec2(1.0, 1.0)))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), max(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(vec2(13.55, 2763.9109))) : 1.0))))))))), injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED((+ injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), mix(vec2((_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[0], (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[1]), vec2(_GLF_FUZZED(8469.3187), _GLF_FUZZED(16.64)), bvec2(false, false))) : vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y)))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / 1.0)), float(_GLF_FUZZED(-986.279)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), max(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))], _GLF_FUZZED(-7.0)), bvec2(true, false)))))[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))), (true ? vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))) : _GLF_FUZZED(vec2(93.79, _GLF_IDENTITY(-5148.1051, (-5148.1051) + _GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0))), vec2(0.0, 0.0) + (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-23.17) : injectionSwitch[1])))))), sin(0.0)))))))) / vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 1)), 1, 1))])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), float(mat4(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-9.9, -63.33)) : vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])))), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-29.68)))) + 0.0) : _GLF_FUZZED(8.0))))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, clamp(2.3, 2.3, _GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)))), 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0))), _GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY(((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0), (((_GLF_IDENTITY(true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch))) - vec2(0.0, 0.0)))) * mat2(1.0)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, mix(float(_GLF_FUZZED(-0.8)), float(-801.489), bool(true))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (_GLF_IDENTITY(2.3, 1.0 * (2.3))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(2.3, 1.0 * (2.3)))) : _GLF_FUZZED(-52.78))), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) / 1)))])), sin(0.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)], injectionSwitch[1])), sin(0.0)))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), length(0.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), min(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0) : _GLF_FUZZED(vec3(-913.160, 8856.7293, -7.2))))) - vec3(0.0, 0.0, 0.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-801.489, (true ? _GLF_IDENTITY(-801.489, (false ? _GLF_FUZZED(sinh(-9.3)) : -801.489)) : _GLF_FUZZED(7.3))), _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), clamp(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, (true ? 2.3 : _GLF_FUZZED(-4.8))), 1.0 * (2.3)), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), min(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, max(2.3, 2.3)), float(vec3(_GLF_IDENTITY(2.3, 1.0 * _GLF_IDENTITY((2.3), (_GLF_IDENTITY((2.3), 0.0 + (_GLF_IDENTITY((2.3), (true ? (2.3) : _GLF_FUZZED(-6.6)))))) - 0.0)), 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(2.3, 1.0 * (2.3)), (true ? _GLF_IDENTITY(2.3, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2561.5129))) * (2.3)) : _GLF_FUZZED(-2.5))), 0.0, 1.0))))), (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)))))) / vec2(1.0, 1.0)))), _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), max(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], 1.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(vec2(13.55, 2763.9109))) : 1.0))))))))), injectionSwitch[1])), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))) : _GLF_IDENTITY(_GLF_FUZZED((+ injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED((+ injectionSwitch)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))), mix(vec2((_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[0], (_GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(_GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6.6)), float(2.3), bool(true))), float(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0))))))[1]), vec2(_GLF_FUZZED(8469.3187), _GLF_FUZZED(16.64)), bvec2(false, false))) : vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], injectionSwitch[1])), sin(0.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), sin(0.0))), (true ? vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0))) : _GLF_FUZZED((+ injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-801.489, _GLF_IDENTITY(2.3, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0), (vec3(_GLF_IDENTITY(2.3, 1.0 * (2.3)), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! ((_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), false, false))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6689.4493, 9.3)) : injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6689.4493, 9.3)) : injectionSwitch)).y), float(_GLF_FUZZED(-0.1)), bool(false)))))))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(821.859) : injectionSwitch.x))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, clamp(-6.0, -6.0, _GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(-4939.2581))))))), float(float(injectionSwitch.x)), bool(true))), float(_GLF_FUZZED(4102.2149)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
          }
         else
          {
           return;
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))), true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))), true)))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), bool(bvec2(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), false)))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ((false)) || false))))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))), _GLF_IDENTITY(true, ! (! (true)))))))))) || false))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), false, true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))), _GLF_IDENTITY(true, true && (true)), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))), false, true)))))), true, false), true))))))))))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), bool(bool(false)))))
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
              }
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true))))) || false)))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.7, 808.652)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true))), true))))) || false)))), false, false))) && true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 return;
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               break;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(exp(length(_GLF_IDENTITY(vec4(-4086.0515, -67.24, -42.33, -2586.4857), mix(vec4(_GLF_FUZZED(9169.4061), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[1], _GLF_FUZZED(-2.8), _GLF_FUZZED(524.713)), vec4((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[0], _GLF_FUZZED(-45.81), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[2], _GLF_IDENTITY((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3], mix(float(_GLF_FUZZED(613.117)), float((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3]), bool(true)))), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(exp(length(_GLF_IDENTITY(vec4(-4086.0515, -67.24, -42.33, -2586.4857), mix(vec4(_GLF_FUZZED(9169.4061), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[1], _GLF_FUZZED(-2.8), _GLF_FUZZED(524.713)), vec4((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[0], _GLF_FUZZED(-45.81), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[2], (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3]), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), max(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(exp(length(_GLF_IDENTITY(vec4(-4086.0515, -67.24, -42.33, -2586.4857), mix(vec4(_GLF_FUZZED(9169.4061), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[1], _GLF_FUZZED(-2.8), _GLF_FUZZED(524.713)), vec4((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[0], _GLF_FUZZED(-45.81), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[2], (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3]), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(exp(length(_GLF_IDENTITY(vec4(-4086.0515, -67.24, -42.33, -2586.4857), mix(vec4(_GLF_FUZZED(9169.4061), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[1], _GLF_FUZZED(-2.8), _GLF_FUZZED(524.713)), vec4((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[0], _GLF_FUZZED(-45.81), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[2], (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3]), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(exp(length(_GLF_IDENTITY(vec4(-4086.0515, -67.24, -42.33, -2586.4857), mix(vec4(_GLF_FUZZED(9169.4061), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[1], _GLF_FUZZED(-2.8), _GLF_FUZZED(524.713)), vec4((vec4(-4086.0515, -67.24, -42.33, -2586.4857))[0], _GLF_FUZZED(-45.81), (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[2], (vec4(-4086.0515, -67.24, -42.33, -2586.4857))[3]), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) / 1.0))))))))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY(false, false || (false))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(vec2(-449.458, -922.312))) : injectionSwitch)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-63.38)), float(float(mat3x4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0))), bool(true)))))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (_GLF_IDENTITY(1.0, (1.0) + abs(0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4435.9534)), bool(false)))), 1.0, 1.0) : _GLF_FUZZED(mat2x3(48.59, 7.1, _GLF_IDENTITY(-793.557, (-793.557) / 1.0), -3.9, -9786.7374, 4.4)))))).x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
        return;
      }
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 ^ (_GLF_IDENTITY(int(3), int(3))))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) || false)) && true), false, false, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false, _GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (((0 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       return;
      }
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), ~ (~ (int(ivec3(4, 0, 0)))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 1.4 : -94.29))), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) || false))) ? _GLF_FUZZED(56857) : _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7.3, -54.56, 9106.6405, -7.7)) : mat2(1.0))) * (mat2(1.0) * (injectionSwitch))), 1.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))).y))) | 0, clamp(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))).y))) | 0, ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))), mix(vec2(_GLF_FUZZED(81.03), _GLF_FUZZED(-7.3)), vec2((vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[0], (vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[1]), bvec2(true, true)))), min(vec2(_GLF_IDENTITY(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))), mix(vec2(_GLF_FUZZED(81.03), _GLF_FUZZED(-7.3)), vec2((vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[0], (vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[1]), bvec2(true, true)))), vec2(_GLF_IDENTITY(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))), mix(vec2(_GLF_FUZZED(81.03), _GLF_FUZZED(-7.3)), vec2((vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[0], (vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5.3 * -7.9)), _GLF_FUZZED(-3.3)), bvec2(false, false))))[1]), bvec2(true, true)))))))).y))) | 0) / 1), _GLF_IDENTITY((int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))) | 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) - 0), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, log(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, log(1.0)))), (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, log(1.0))))) * 1.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, log(1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))[1])).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-185.114) : injectionSwitch[0])), injectionSwitch[1])).y))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))], injectionSwitch[1])).y))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))) ^ 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))], injectionSwitch[1])).y))), min((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))) ^ 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))], injectionSwitch[1])).y))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))) ^ 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) * (0))))], injectionSwitch[1])).y)))))) - 0)), (~ ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) << 0))) | 0)))))); _injected_loop_counter ++)
      {
       subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), bool(bvec2((true), true))), false, true), false))))) || false)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = (1 ^ (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))), true)))))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false))))))
    return;
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat4(max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 0.0), (mat4(max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 0.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 1.0, 1.0, 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.623)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(uintBitsToFloat(workgroup_size)) : (0.0))), (0.0))) / 1.0), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y : _GLF_FUZZED(396.256)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))).y : _GLF_FUZZED(396.256)))), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.1))), 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(5.3)), bool(false)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(49.59))))))), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930)))))).y : _GLF_FUZZED(396.256))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))))), (1.0) * determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 1.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat4(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat4(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(8.0)))), 1.0, 1.0)), 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), bool(true))), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930)))))).y : _GLF_FUZZED(396.256))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 0.0, 0.0), (true ? vec3((0.0), 0.0, 0.0) : _GLF_FUZZED(vec3(9.2, 5.7, 556.683)))))))) / 1.0), 1.0, 0.0, _GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 0.0, 0.0), (true ? vec3((0.0), 0.0, 0.0) : _GLF_FUZZED(vec3(9.2, 5.7, 556.683)))))))) / 1.0), 1.0, 0.0, _GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 0.0, 0.0), (true ? vec3((0.0), 0.0, 0.0) : _GLF_FUZZED(vec3(9.2, 5.7, 556.683)))))))) / 1.0), 1.0, 0.0, _GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 0.0, 0.0), (true ? vec3((0.0), 0.0, 0.0) : _GLF_FUZZED(vec3(9.2, 5.7, 556.683)))))))) / 1.0), 1.0, 0.0, _GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930)))))))))) / vec2(1.0, 1.0))).y : _GLF_FUZZED(396.256))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(-5.0)), 1.0, abs(1.0), 0.0, 1.0, 0.0), (mat3x2(float(_GLF_FUZZED(-5.0)), 1.0, abs(1.0), 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(274.010)), float(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(-5.0)), 1.0, abs(1.0), 0.0, 1.0, 0.0), (mat3x2(float(_GLF_FUZZED(-5.0)), 1.0, abs(1.0), 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (true ? mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(11.43, -9615.8687, 4016.8322, 7.9, -1327.1270, -2.3, 5.0, -6624.4315, -789.930)))))).y : _GLF_FUZZED(396.256)))), bool(true))))))) * 1.0), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(9239.7067)))), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0))))), 1.0, 1.0, 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(1.5, 6778.2845).x), _GLF_FUZZED(-2.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), clamp(vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))))).y : _GLF_FUZZED(_GLF_IDENTITY(396.256, (true ? 396.256 : _GLF_FUZZED((- length(vec4(-4296.8770, 7407.6281, -72.14, -1327.8876))))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(36.08, (_GLF_IDENTITY(36.08, min(_GLF_IDENTITY(36.08, (36.08) / 1.0), 36.08))) / abs(1.0)))), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)))))) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(vec4(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y : _GLF_FUZZED(396.256)))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (vec4(1.0, 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 1.0, 0.0)))), (0.0) / 1.0), 1.0, 0.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * 1.0))))))), 1.0, 1.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-850.897)), float(1.0), bool(true))), 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-850.897)), float(1.0), bool(true))), 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat4x3(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x3(float(mat4x3(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))), 1.0, 1.0, 1.0))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0))))).y, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, abs(1.0) * (1.0))), 1.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))))), (vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))))) / vec4(1.0, 1.0, 1.0, 1.0)))))))), 1.0, 1.0, 1.0))).y)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(396.256, max(396.256, 396.256)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(396.256, max(396.256, 396.256)), mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(396.256, max(396.256, 396.256))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-5903.5639)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true))))) && true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
