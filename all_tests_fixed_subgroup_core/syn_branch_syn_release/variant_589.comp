#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (false ? _GLF_FUZZED(3990.9283) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (false ? _GLF_FUZZED(-879.705) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, _GLF_IDENTITY(1u, (0u ^ 0u) | (_GLF_IDENTITY(1u, 0u | (1u))))))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), 1u, 0u, 0u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), 1u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), clamp(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))))))) : _GLF_FUZZED(subgroup_size))), uint(0u))))) | 0u)), _GLF_IDENTITY(uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u))))) / 1u)) + 0u))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), 0u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u))))) / 1u)) + 0u))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), 0u, 0u))))))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), 1u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), clamp(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))))))) : _GLF_FUZZED(subgroup_size))), uint(0u))))) | 0u)), _GLF_IDENTITY(uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u))))) / 1u)) + 0u))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), 0u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec4(uint(1u), 0u, 1u, 1u)), (uint(uvec4(uint(1u), 0u, 1u, 1u))) | 0u), 1u)))))) ^ (uint(0u))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), min(uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u), uvec4(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u)))))), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 1u, 1u)))), 0u, 0u, 0u))))) / 1u)) + 0u))) ^ (uint(0u))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), 1u))))) ^ (uint(0u))), uint(0u))))) | 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), 0u, 0u))))))))))).x) << 0u)) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)), (true ? float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(18.40), (_GLF_FUZZED(18.40)) / 1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((-81559 | -71270))), _GLF_FUZZED(9453.2832)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])).x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])).x, 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])).x, 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])).x, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, false, false)), true, true, true)))), bool(bvec3(false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false))))), false || (true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false)))))))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((70.78 / -7.9))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - sin(0.0)), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0))))), exp(0.0))), float(mat4x2(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), exp(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)), subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), bvec2(false, true)), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0), (mat3x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 1.0)), clamp(vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 1.0)), vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 1.0)), vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-153.511)), vec2(_GLF_FUZZED(752.965), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
