#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, true, false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false, true, false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false, true, false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)])), injectionSwitch)).x, (injectionSwitch.x) * 1.0), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))) < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.3))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup, 1u * (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(188168u, 162783u, 192812u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (subgroup_id), (0u + (subgroup_id)) / 1u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) >> 0u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))), (1u) << 0u)) + subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_id)))) ^ 0u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_id)))) ^ 0u)) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_id)))) ^ 0u))), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) ^ 0u) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) * subgroup_size + subgroup_local_id), ~ _GLF_IDENTITY((~ (clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), max(~ ((subgroup_id)), ~ ((subgroup_id))))))), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id))))))))))) * subgroup_size + subgroup_local_id))), min((~ (clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u + (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u), ~ (subgroup_size)))))) / 1u))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) | 0u) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id))), 0u))))))))) * subgroup_size + subgroup_local_id))), (~ (clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u))), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(0u, ~ (~ (0u))) + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))))) ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(8576u)))), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)))))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))), max(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (subgroup_id)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id))))), (subgroup_id) | (subgroup_id)))))))) * subgroup_size + subgroup_local_id))))))) - 0u));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (0u | 0u), 0u))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (0u | 0u), 0u)))) ^ 0u), (subgroup_local_id + 1) % subgroup_size))), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 1u))), subgroup_local_id + 1))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) | 0u)))) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))))))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))))))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 0u, 1u), ~ _GLF_IDENTITY((~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))), min((~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))), (~ (uvec4(subgroup_local_id + 1, 1u, 0u, 1u))))))))))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_local_id + 1) % subgroup_size)))))))) / 1u, (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) * 1u)))) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u))) : _GLF_FUZZED(floatBitsToUint(29.74)))), 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))))) % subgroup_size) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u | 0u))) / 1u, 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u) / 1u, 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)) | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))))) % subgroup_size) / 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))))) % subgroup_size) / 1u), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))))) % subgroup_size) / 1u)), (~ ((((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))), ((_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id))))) | (_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))), max((_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), 0u | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) / 1u))) * 1u))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) >> 0u))))))) / 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))) + 1 : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))) + 1 : _GLF_FUZZED(subgroup_id), min(true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))) + 1 : _GLF_FUZZED(subgroup_id), true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) / 1u)))) % subgroup_size) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u), ((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)) >> 0u))), clamp((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u), ((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u), ((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)) >> 0u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u), ((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)) >> 0u)))) | (0u | 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u), ((((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)) >> 0u)))))) - 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u, max(((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u, ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u)), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (subgroup_local_id) / 1u))) + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u)))) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) ^ 0u)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91298)))) ^ 0) : _GLF_FUZZED(subgroup_id)))) % subgroup_size) / 1u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) / 1u, 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)), ((true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id))) - 0u))) % subgroup_size) / 1u)))) - 0u))))))))) - 0u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4845.7868)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, cos(0.0), round(length(normalize(1.0))), sin(length(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4845.7868)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, cos(0.0), round(length(normalize(1.0))), sin(length(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))).x > injectionSwitch.y))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-396.009), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, false), true)), true))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), true, false))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) || false), false, false, true)), (bool(bvec4(! (! (_GLF_DEAD(false))), false, _GLF_IDENTITY(false, (false) && true), true))) || false)), _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3((! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3((! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(bool(bvec3((! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec3((! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(bool(bvec3((! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-128.347) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y)), false)))))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true))))))
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x) | 0u), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x) | (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x))) | 0u)], uint(2), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(678.677)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((~ 42811u)))), vec2(_GLF_FUZZED(399.463), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))))[1], float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))))))), bvec2(false, true)), (true ? mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((~ 42811u)))), vec2(_GLF_FUZZED(399.463), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))))[1], float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))))))), bvec2(false, true)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(0, int(int(0))))), (int(ivec2(64, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))))) ^ 0)), 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
