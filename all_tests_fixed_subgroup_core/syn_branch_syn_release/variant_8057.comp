#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(651.831))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - 72.99)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(_GLF_IDENTITY(651.831, mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(651.831, (651.831) - 0.0)), bool(true)))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(651.831), (true ? _GLF_FUZZED(651.831) : _GLF_FUZZED(4.8))))) > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))) || false)), false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.8))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.2, 2.9)))).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.2, 2.9)))).y))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(339.717))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(680.516), _GLF_FUZZED(-47.22)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(680.516), _GLF_FUZZED(-47.22)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(680.516), _GLF_FUZZED(-47.22)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true), true), true)))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5514.5107)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true)))), bool(true))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))) << (126253u & 0u)) * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))), _GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u))), (~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))) | (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 1u, _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(0u, min(0u, 0u)))), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))), uint(uvec3(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, false))) ? 1u : _GLF_FUZZED(101632u))))), 1u, 0u))), (~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))) | (~ (_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 0u), min(uvec4(subgroup_local_id, 1u, 1u, 0u), uvec4(subgroup_local_id, 1u, 1u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(171194u, 13350u, 119967u, 45630u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))))))))) + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) + 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u))), (~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))) | (~ (_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))))))))) + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 0u), (uvec4(subgroup_local_id, 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(101632u))))), 1u, 0u))), (~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), max(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), max(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), max(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) / 1u))))))))) + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec3(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 0u), (uvec4(subgroup_local_id, 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(101632u))))), 1u, 0u))), (~ (uint(uvec4(subgroup_local_id, 1u, 1u, 0u)))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), max(uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u)), 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4((_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), (uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u), uvec4(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), 1u, 1u, 1u))))), uint(uvec4(subgroup_local_id, 1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicOr(workgroup_id, subgroup_id))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) / 1u))))))) + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u)) - 0u);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-196.885, 155.810)), mix(vec2(_GLF_FUZZED(-6878.1113), (_GLF_FUZZED(vec2(-196.885, 155.810)))[1]), vec2((_GLF_FUZZED(vec2(-196.885, 155.810)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false))))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-196.885, 155.810)), mix(vec2(_GLF_FUZZED(-6878.1113), (_GLF_FUZZED(vec2(-196.885, 155.810)))[1]), vec2((_GLF_FUZZED(vec2(-196.885, 155.810)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false))))).x > injectionSwitch.y))), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6.7))) > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(int(2)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) - (0 >> _GLF_IDENTITY(int(6), int(6))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (! (_GLF_DEAD(false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
