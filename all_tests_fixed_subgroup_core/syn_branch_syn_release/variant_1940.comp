#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) || false)))), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))) || (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(9322.5981)), bvec2(true, false)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), (vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1])) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(mat4x3(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, exp(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(mat4x3(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, exp(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(9322.5981)), bvec2(true, false)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(9322.5981)), bvec2(true, false)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(124.377)), bool(false))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4539.6026)), bool(false))), 1.0)), 1.0))), mix(vec2(_GLF_FUZZED(39.71), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(9322.5981)), bvec2(true, false)))).y)) : _GLF_FUZZED(-1.9)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(46.18) : injectionSwitch.x), min((false ? _GLF_FUZZED(46.18) : injectionSwitch.x), (false ? _GLF_FUZZED(46.18) : injectionSwitch.x))))), float(_GLF_FUZZED(58.67)), bool(false))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(46.18) : injectionSwitch.x), min((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, max(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x)))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, max(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x)))), _GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, max(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x, false ? _GLF_FUZZED(46.18) : injectionSwitch.x))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(46.18), (_GLF_FUZZED(46.18)) * 1.0) : injectionSwitch.x))))), float(_GLF_FUZZED(58.67)), bool(false))) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-159.000)), float(1.0), bool(true))), round(length(normalize(vec2(1.0, 1.0))))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-159.000)), float(1.0), bool(true))), round(length(normalize(vec2(1.0, 1.0))))), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-159.000)), float(1.0), bool(true))), round(length(normalize(vec2(1.0, 1.0))))))))) * mat2(1.0)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! _GLF_IDENTITY((! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(85.81))), injectionSwitch.x), 0.0))))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(58119u) : 1u)) * _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((64015u & 0u) ^ _GLF_IDENTITY(((workgroup_size)), 0u + (((workgroup_size)))), uint(uvec2((64015u & 0u) ^ ((workgroup_size)), (0u | 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-415.071)))), float(_GLF_FUZZED(-8.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) : _GLF_FUZZED(subgroup_size)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size))), max(uint(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size))), uint(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size))))), uint(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size)))))), max(uint(uint(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))), uint(uint(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))))) : _GLF_FUZZED(workgroup_size))), workgroup_size)))), max(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), _GLF_IDENTITY(uint(uint(workgroup_size)), (true ? _GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), (uint(uint(workgroup_size))) / 1u), _GLF_IDENTITY(uint(uint(workgroup_size)), (uint(uint(workgroup_size))) - 0u))) : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))))) : _GLF_FUZZED(workgroup_size))), workgroup_size)))), max(((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), uint(_GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(workgroup_size), ~ (~ (uint(workgroup_size)))))))))), max(~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), (0u & 37325u) ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), ~ (~ (~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ((_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))) >> 0u))))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))) << 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u | ((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))))) >> 0u))))) : _GLF_FUZZED(workgroup_size))), workgroup_size)))), ((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))))), (true ? ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u | (uint(workgroup_size))))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))))) : _GLF_FUZZED(num_workgroup)))) : _GLF_FUZZED(workgroup_size))), workgroup_size)))))), ((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))) - 0u) : _GLF_FUZZED(bitfieldInsert(workgroup_size, subgroup_size, _GLF_IDENTITY(int(num_workgroup), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(num_workgroup) : _GLF_FUZZED(-9190))), -54669)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (workgroup_size))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))) - 0u)))), uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), ((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))) * 1u))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), ((~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))) * 1u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), (uint(uint(workgroup_size))) ^ 0u))))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), workgroup_size)))))) | ((workgroup_size)))))), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-83.12)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 1, 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) + 0)), 1, 0)))), clamp((_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) + 0)), 1, 0)))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) + 0)), 1, 0)))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) + 0)), 1, 0))))))), 0 | (_GLF_IDENTITY(((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))), 0 | (((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))))))), _GLF_IDENTITY(0, min(0, 0))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) - 0)) | (0)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))) | (0)) - 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) ^ 0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))), 0)), 0)), 1, 0)), (int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0), (ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))), 0)), 0)), 1, 0))) | (_GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))) + 0), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) ^ 0)), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0), (ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))), 0)), 0)), 1, 0)), max(_GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-590) : 0))) | (0))) | (0), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(int((_GLF_IDENTITY(0, (0) | (0))) | (0))))) - 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, _GLF_IDENTITY(0, 0 | (0)), 0), _GLF_IDENTITY((ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0)) | ((ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))))), 0)), 0)), 1, 0)), 1 * (int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0)))) ^ 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0), (ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))), (true ? (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0), (ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))) : _GLF_FUZZED(-43452))))), 0)), 0)), 1, 0)))), int(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), ((_GLF_IDENTITY(0, (0) | (0))) | (0)) - 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | (0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, _GLF_IDENTITY(0, (0) << 0)), (ivec4((_GLF_IDENTITY(0, (0) | (0))) | (0), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))))))), 0)), 0)), 1, 0)))))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))), ~ (~ ((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))), 0))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) - _GLF_IDENTITY(0, min(0, 0)))) | (0)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) | (0))))))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 1, 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, 0 | (0)), 1, 0)))) ^ 0)), ~ (~ ((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))), 0))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) - 0)) | (0))))), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(43487) : ~ (1))))))) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) | (0))))))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))), 0)), 0)), 1, 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))), (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) ^ 0)), ~ (~ ((_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))), 0))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) - 0)) | (0)))))) | 0u) | 0u)) ^ 0u), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(61108)) : 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (1 * (1)) ^ 0)), 1))))))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, 0))), ~ (1), ~ (1)))), clamp((~ (1)), (~ (1)), (~ (1)))))))), 1 * ((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(1, 1)))), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), ((_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1)))))) * (1 | 1)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), 1)))), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(clamp(~ (1), ~ (1), ~ (1)), ~ (_GLF_IDENTITY(~ (clamp(~ (1), ~ (1), ~ (1))), ~ (~ (_GLF_IDENTITY(~ (clamp(~ (1), ~ (1), ~ (1))), ~ (~ (~ (clamp(~ (1), ~ (1), ~ (1))))))))))))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(clamp(~ (1), ~ (1), ~ (1)), ~ (_GLF_IDENTITY(~ (clamp(~ (1), ~ (1), ~ (1))), ~ (~ (_GLF_IDENTITY(~ (clamp(~ (1), ~ (1), ~ (1))), ~ (~ (~ (clamp(~ (1), ~ (1), ~ (1))))))))))))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1))))))))) + (0 >> _GLF_IDENTITY(int(0), int(0)))), 1 * ((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), (~ (1)), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) | (~ (1)))), (~ (1))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), clamp((~ (1)), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), (~ (1))))), ~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1))))))))))))), min((~ (1)), (~ (1)))), 0 | (~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ~ (~ ((1)))))))), min((_GLF_IDENTITY(~ (1), ~ (~ (~ (_GLF_IDENTITY(1, 0 + (1))))))), (~ (1))))))), (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(0, 0))) | (0))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, int(ivec2(4, 0))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), ((4)) | ((4))))) | _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((4), max((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (4))))), clamp((4) | (4), (4) | (_GLF_IDENTITY(4, (4) << 0)), (4) | (4))), (_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((4), ((4)) | ((4)))), int(ivec4(0 ^ (_GLF_IDENTITY((4), ((4)) | ((4)))), ((0 >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(7), int(7))), 0, 1)))) | _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0))) + (_GLF_IDENTITY((4), max((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1294.8986)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(-1294.8986)), mix(float(float(_GLF_FUZZED(-1294.8986))), float(_GLF_FUZZED(-66.24)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), clamp(float(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(-1294.8986)), mix(float(float(_GLF_FUZZED(-1294.8986))), float(_GLF_FUZZED(-66.24)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), float(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(-1294.8986)), mix(float(float(_GLF_FUZZED(-1294.8986))), float(_GLF_FUZZED(-66.24)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), float(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(-1294.8986)), mix(float(float(_GLF_FUZZED(-1294.8986))), float(_GLF_FUZZED(-66.24)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))))), float(0.0), bool(true))), injectionSwitch.x))))))), (4))))), clamp((4) | (4), (4) | (_GLF_IDENTITY(4, (4) << 0)), (4) | (4)))) * (1 | 1))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec4((4) | (4), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))) ^ 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), 0 ^ ((int(0)))) / 1)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * (1 | 0)), (_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))) ^ 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1))))), 0 ^ ((int(0)))) / 1)) / 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))) ^ 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), 0 ^ ((int(0)))) / 1)) / 1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((_GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY(1, ~ (~ (1))) & 1))))))), 1, 1), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((_GLF_IDENTITY(1, int(ivec2(1, (1 & 1))))))), 1, 1)) - ivec3(0, 0, 0)))) ^ 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), 0 ^ ((int(0)))) / 1)) / 1))))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(1, (1) | (1)), 1)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | _GLF_IDENTITY(0, 0 | (0)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | ((4))), ((4)) | 0)) << 0), ((4) | _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), ((4)) * 1)))) | 0)) << 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), (0 ^ 0) | (_GLF_IDENTITY((4), int(ivec3((4), 1, 0)))))) | ((4))), ((4)) | 0)) << 0)))) | _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), clamp(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), ~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), 1 * (~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))))))))) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | 0)) << 0)), int(ivec2(((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | 0)) << 0)), (1 ^ _GLF_IDENTITY(1, (1) >> 0)))))), ~ (~ (_GLF_IDENTITY((4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | ((4))), ((4)) | 0)) << 0), ((4) | _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(min((4), _GLF_IDENTITY((4), ((4)) * 1)), (min((4), _GLF_IDENTITY((4), ((4)) * 1))) - 0))) | 0)) << 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), (0 ^ 0) | (_GLF_IDENTITY((4), int(ivec3((4), 1, 0))))), ~ (~ (_GLF_IDENTITY((4), _GLF_IDENTITY((0 ^ 0) | (_GLF_IDENTITY((4), int(ivec3((4), 1, 0)))), ((0 ^ 0) | (_GLF_IDENTITY((4), int(ivec3((4), 1, 0))))) - 0)))))) | (_GLF_IDENTITY((4), ((4)) >> 0))), ((4)) | 0)) << 0)))) | _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), clamp(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), ~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))), 1 * (~ (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4))), min(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4))), _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec2((4), 0))), (4), (4)))))))))))) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | 0)) << 0)), int(ivec2(((4) | _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ~ (~ ((4)))))), (_GLF_IDENTITY((4), ((4)) | 0)) << 0)), (1 ^ _GLF_IDENTITY(1, (1) >> 0)))))))))) | ((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | 0), 0 | (_GLF_IDENTITY((4), ((4)) | 0)))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int((4))))))) | (4), (_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(int(int((4))), (_GLF_IDENTITY(int(int((4))), (int(int((4)))) + 0)) + 0), ~ (~ (int(int(_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int(_GLF_IDENTITY((4), int(int((4)))))), (int(int(_GLF_IDENTITY((4), int(int((4))))))) << 0)), ((4)) ^ 0))))))) | (4)) >> 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int((4))))))) | (4), (_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int(_GLF_IDENTITY((4), ((4)) ^ 0))))))), max(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int(_GLF_IDENTITY((4), ((4)) ^ 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int(_GLF_IDENTITY((4), ((4)) ^ 0))))))), (false ? _GLF_FUZZED(-93195) : _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int(_GLF_IDENTITY((4), ((4)) ^ 0))))))))))) | (4)) >> 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), ((4)) - 0))), _GLF_IDENTITY(int(int((4))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(int((4)))), (~ (int(int((4))))) - 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(int((4)))), (~ (int(int((4))))) - 0)), max((_GLF_IDENTITY(~ (int(int((4)))), (~ (int(int((4))))) - 0)), (_GLF_IDENTITY(~ (int(int((4)))), (~ (int(int((4))))) - 0)))), 0, 0, 0))))) | (4), (_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), ~ (~ (int(int(_GLF_IDENTITY((4), ((4)) ^ 0))))))) | (4)) >> 0))) - 0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / cos(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))), false, true))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), false), true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0)).y, false, true, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, false, true, true))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0)).y, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0)))), 1.0 * (1.0)), 0.0)), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(false, (false) || false), true, true))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0)).y, false, true, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, false, true, true))) && true)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0)).y, false, true, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), 1.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), 0.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, false, true, true))) && true))))) || false)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bool(! (! (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))), false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(582.922, (true ? _GLF_IDENTITY(582.922, (_GLF_IDENTITY(582.922, float(vec2(582.922, 1.0)))) / 1.0) : _GLF_FUZZED(54.71))))), vec2(_GLF_FUZZED(5.4), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[1])))))[1], mix(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), float(_GLF_FUZZED(-5.1)), bool(false))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], mix(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0), 1, 0), clamp(ivec3(_GLF_IDENTITY(1, (1) - 0), 1, 0), ivec3(_GLF_IDENTITY(1, (1) - 0), 1, 0), ivec3(_GLF_IDENTITY(1, (1) - 0), 1, 0)))))]), float(_GLF_FUZZED(-5.1)), bool(false)))), float(_GLF_FUZZED(-38.98)), bool(false)))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(6.9, 75.20)))), ((injectionSwitch)) - sqrt(vec2(0.0, 0.0)))[1]) - 0.0, mix(float(((injectionSwitch)[1]) - 0.0), float(_GLF_FUZZED(24.61)), bool(false))))), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(582.922)), vec2(_GLF_FUZZED(5.4), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], mix(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), float(_GLF_FUZZED(-5.1)), bool(false))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)))[1], mix(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-5.1, max(_GLF_IDENTITY(-5.1, min(_GLF_IDENTITY(-5.1, max(-5.1, -5.1)), -5.1)), _GLF_IDENTITY(-5.1, 1.0 * (-5.1)))))), bool(false)))), float(_GLF_FUZZED(-38.98)), bool(false)))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sqrt(vec2(0.0, 0.0)))[1]) - _GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))[1]) - 0.0), float(_GLF_FUZZED(24.61)), bool(false))))), bvec2(false, true))) - vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), float(_GLF_FUZZED(2.4)), bool(false))) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) && true))))))))) && true)), false || (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false)) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false)) && true)))))), bool(bvec2(! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false)) && true)))))), true)))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), 0.0))), tan(0.0), 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0)), 0.0))))) * (injectionSwitch), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(max(0.5, -44.54)) : _GLF_ONE(1.0, injectionSwitch.y))), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(max(0.5, -44.54)) : _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(5.2)))) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false))), false), true, true)))))) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false), ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false, false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), bool(_GLF_IDENTITY(bvec2(! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), false), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))) || false), false))), false, false))))), false)))), false)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(mat4(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0))))))), clamp(vec2(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(mat4(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0))))))), vec2(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(mat4(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0))))))), vec2(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(mat4(_GLF_IDENTITY(mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(max(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-869.095)), float(1.0), bool(true)))) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0), 1.0)))))))))))).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-36.65) : injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))), false, true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-18.51)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), 1.0, 0.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0) : _GLF_FUZZED(vec3(-565.014, -69.30, 8.7)))))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.4)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, sqrt(0.0), 0.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-58.21, 5.5, 6529.2532).x)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(injectionSwitch, sqrt(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))) : _GLF_FUZZED(mat4(128.936, 1083.6794, -8.8, 5944.6957, -4767.3749, -74.22, 8.2, -4415.4660, -480.353, -94.97, 91.11, 3.1, -7748.0770, 70.01, -94.82, -249.028))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0), (true ? mat4(injectionSwitch, sqrt(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat4(128.936, 1083.6794, -8.8, 5944.6957, -4767.3749, -74.22, 8.2, -4415.4660, -480.353, -94.97, 91.11, 3.1, -7748.0770, 70.01, -94.82, -249.028)))))) + vec2(0.0, 0.0))).y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.8) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))), min((uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))), (uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) && true))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || ((false))), true))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((false))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-47.60)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) && true)) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false, true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false || ((_GLF_IDENTITY(false, (false) || false)))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true))), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))), false || ((false))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)))) && true)))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))), false || ((false))) || false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false || ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))), false || ((false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))), false || ((false))) || false), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))), false || ((false))) || false)))))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true), true))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, true, true))) || false, ((bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true))) || false) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))))) || false)), true, true, true)))))))), bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (false))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (false)), false, true, true)), false || (bool(bvec4(! (! (false)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), false, true, true)), bool(bvec4(bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), false, true, true)), true, true, false))), false || (bool(bvec4(! (! (false)), false, true, true))))) || false)) || false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), ! (! (false)))))) || false), true, false)))))) || false)), true, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ _GLF_IDENTITY(0, (0) * 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), (int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0)))) ^ 0), ~ (~ (_GLF_IDENTITY(int(int(4)), (int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0)))) ^ 0)))))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) && true, (((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), true)))))), _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), true)))))))) && true) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false)) || false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (false)))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec2(0.0, 0.0)) + (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
