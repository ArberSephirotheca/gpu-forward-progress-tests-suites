#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0))) + (injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0))) + (injectionSwitch)))).x) + 0.0), mix(float(_GLF_FUZZED((- vec2(51.36, -8.5)).x)), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-539.115)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5612.9855, 8.5)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, sqrt(1.0), 0.0, cos(abs(0.0)), 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)))), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-66.02), _GLF_FUZZED(5.5)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))).y) - 0.0))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), true && (! (_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, sin(0.0), 0.0, abs(1.0), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, sin(0.0), 0.0, abs(1.0), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), false, false))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))) && true)), false, false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6567.2624))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(88.07, -0.1, 42.53, 9895.8836)) : mat2(1.0))) * (injectionSwitch)))).y)) || (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), bool(bvec3(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))))), false, true)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), bool(bvec3(bool(bool((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))), false, true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) || false))))) || false)))))), bool(bvec3(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))))), false, true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (! (! (false))) && true))))) || false)), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) || false)))))), bool(bvec3(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))))), false, true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6842.9155)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), max(float(mat2(1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), float(mat2(1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))), float(mat2x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 1.0)), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (0.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, injectionSwitch)) : injectionSwitch)).y, true && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))), false, false))) ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(subgroup_local_id))) + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec2((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uvec2((subgroup_id), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), injectionSwitch.x))))))), uint(uint(~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec2((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uvec2((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), ~ (subgroup_id))))))) : _GLF_FUZZED(workgroup_size))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)), ~ (~ (clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid))))))) | ((next_virtual_gid))), _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))), (false ? _GLF_FUZZED(virtual_gid) : 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid)))))))), (~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))), (false ? _GLF_FUZZED(virtual_gid) : 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))), (false ? _GLF_FUZZED(virtual_gid) : 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid)))))))), 1u * (~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid))))), (false ? _GLF_FUZZED(virtual_gid) : 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) + 0u) ^ (next_virtual_gid)), ~ (~ ((_GLF_IDENTITY(0u, (0u) + 0u) ^ (next_virtual_gid)))))))))))))))), min(_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), (0u ^ (next_virtual_gid)) ^ ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_FUZZED(subgroup_size)))))), next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true))))), (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), true && (! (false))))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ((! (false))) && true)) && true) && true), true, true)))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ((! (false))) && true)) && true) && true), true, true)))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false)))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false, ! (! ((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true))), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), true && ((false))))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)))), true, true), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false, ! (! ((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true))), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), true && ((false))))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)))), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false, ! (! ((bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true))), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), true && ((false))))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)))), true, true), false))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))), false)))))))), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true)))))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))))))), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false || (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(true, (true) && true), true))))) && true))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) && true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))) && true) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) && true), true, true)))))))))), _GLF_IDENTITY(true, (true) || false))), bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), _GLF_IDENTITY(((! (false))) && true, false || (((! (false))) && true)))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (! ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) && true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec3(bool(bvec4(false, false, true, false)), false, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec3(bool(bvec4(false, false, true, false)), false, false)))), true, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec3(bool(bvec4(false, false, true, false)), false, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec3(bool(bvec4(false, false, true, false)), false, false)))), true, true)))))))))), ((! (false))) && true)), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))), ((! (false))) && true))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), false || ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), true && (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))), true, false))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) && true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), bool(bvec4(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true, false))))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false))), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), false)))))))))))) && true) && true), true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), bool(bvec4(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true, false))))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false))), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), false)))))))))))) && true) && true), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), bool(bvec4(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, true, false))))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false))), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false || (bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ((! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true), false)), false)))))))))))) && true) && true), true, true))), false))))))))))))), true)))))) || false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (! (! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && true)))) && true, ((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true) && true), true, true)))), true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ((! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) && true, bool(bvec3(_GLF_IDENTITY(((! (false))) && true, (((! (false))) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true) && true), true, true)))), true))) || false)))), true, true), false))))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(atan(injectionSwitch, injectionSwitch))) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-208.998) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
