#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat4x2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 uint num_workgroup;
 int _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 float _f1;
 bvec3 _f2;
 _GLF_struct_4 _f3;
 mat2 _f4;
 uvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_1 {
 uint _f0;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bool _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))
    {
     return;
    }
   else
    {
    }
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(1u, mat4x2(1.0), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_struct_1(1u)), mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0)))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (false ? _GLF_FUZZED(-82584) : ~ (_GLF_IDENTITY(0, (0) | 0)))), ~ (_GLF_IDENTITY(0, (0) | 0))))))), 0 | (clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (false ? _GLF_FUZZED(-82584) : ~ (_GLF_IDENTITY(0, (0) | 0)))), ~ (_GLF_IDENTITY(0, (0) | 0)))))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(mat3x4(1.0), 1.0, bvec3(true), _GLF_struct_4(mat4x2(1.0), mat4x3(1.0), _GLF_IDENTITY(ivec4(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec4(1) : _GLF_FUZZED(ivec4(-73606, -90864, -44865, -4889)))), gl_NumWorkGroups.x, 1, uvec3(1u)), mat2(1.0), uvec2(1u), mat3x4(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), exp(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))) : _GLF_FUZZED(84.17))), abs(1.0))), (float(vec3(injectionSwitch.y, 0.0, abs(1.0)))) - 0.0))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_id * subgroup_size, (_GLF_struct_replacement_3.subgroup_id * subgroup_size) | (_GLF_struct_replacement_3.subgroup_id * subgroup_size)))) + subgroup_local_id) | (workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u))), _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u ^ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 1u * (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), (true ? clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(workgroup_base))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), ~ (~ (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 1u * (0u)) | (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))) / 1u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))) / 1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), ((_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))))) / 1u)) ^ 0u)))) + 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), ((0u) / (1u & 1u)) ^ 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u))), min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) | 0u), 1u * (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ (66497u & 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))) : _GLF_FUZZED(workgroup_base)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ (66497u & 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))) : _GLF_FUZZED(workgroup_base))) * 1u)))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) - (0u | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 1u * (0u)) | (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_local_id))) | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))) / 1u) | ((_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))))))))) + 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (_GLF_IDENTITY(0u, (0u) / (1u & 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u))), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u ^ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 1u * (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) : _GLF_FUZZED(workgroup_base))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 1u * (0u)) | (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) / 1u)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), 1u * (0u | (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))) / 1u) | ((_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((subgroup_local_id)), 0u | (_GLF_IDENTITY(uint((subgroup_local_id)), max(uint((subgroup_local_id)), _GLF_IDENTITY(uint((subgroup_local_id)), min(uint((subgroup_local_id)), uint((subgroup_local_id))))))))))))))) + 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (_GLF_IDENTITY(0u, (0u) / (1u & 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) | 0u)) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 1u * (0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 1u, 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 1u, 0u)))))))))))) * 1u))))), 0u, 1u))))))))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) >> 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) : _GLF_FUZZED(85582u)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), clamp(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))), clamp(0u, 0u, 0u)))) | (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1)), (1u ^ 1u) ^ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u)))))))), clamp(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u)))))))), uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u)))))))), uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u))))))))))) * 1u)) | (uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) - 0u))), 0u, 1u), ~ (~ (uvec3(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(_GLF_IDENTITY(0u | (subgroup_local_id), 0u ^ (0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), uint(uvec2(0u | (subgroup_local_id), 0u)))) * 1u))))), 0u, 1u))))))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))) : _GLF_FUZZED(85582u)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uint((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) + 1)))) << 0u) % subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1)) >> 0u)) << 0u) % subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) - 0u), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packHalf2x16(vec2(4.8, -9.6))) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1)))))) << 0u) % subgroup_size))), ~ (~ (workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(uint(89502)) : (subgroup_local_id))) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)), min(uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)))))), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, _GLF_IDENTITY((true ? 2u : _GLF_FUZZED(178723u)), ((true ? 2u : _GLF_FUZZED(178723u))) + 0u)), 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(178723u))), 1u, 1u)))))))))), uint(2u))))), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), clamp((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), ((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))) >> 0u), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), 1u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))) - 0u)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)) | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((-- workgroup_base)))), 0u | (subgroup_local_id))), uint(uvec2(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 1u)))) | (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + _GLF_IDENTITY(1, max(1, 1)), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(uvec2(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 1u)))) | (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))), (uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u)))) | 0u), uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))), uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))) | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + _GLF_IDENTITY(1, max(1, 1)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))))), uint(uvec2(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 1u)))) | (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) >> 0u))))))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) >> 0u)))) ^ 0u))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) + _GLF_IDENTITY(1, max(1, 1)), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), uint(uvec2(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | (1u)))))))) | (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), uint(uint(~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 1u, 1u)))))), max(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), ~ (~ ((0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) >> 0u)))) ^ 0u))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))) : _GLF_FUZZED(workgroup_id))))))))))))) + _GLF_IDENTITY(1, max(1, 1)))))))) << 0u) % subgroup_size)))), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))), ~ (~ (uvec2(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u))) : _GLF_FUZZED(virtual_gid))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u))) : _GLF_FUZZED(virtual_gid))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) - 0u), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u))) : _GLF_FUZZED(virtual_gid))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u))) : _GLF_FUZZED(virtual_gid))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) - 0u), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) ^ 0u)) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), min(0u | (subgroup_local_id), 0u | (subgroup_local_id)))))))), min(uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), 0u ^ (0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) ^ 0u)))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))), 0u | _GLF_IDENTITY(((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), max(((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), ((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))))))) | (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))), ((uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))))))))))) - (64994u & 0u)))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u)))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 0u))))))))) + 1)) << 0u) % subgroup_size), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), (int(ivec3(0, 1, 0))) / 1));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 ^ (4)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * _GLF_IDENTITY(1, (1) * 1))) / 1))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y)))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              continue;
             continue;
            }
          }
        }
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(2.8)), float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(2.8)), 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))), clamp(_GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))), vec2(mat2x3(clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))), 1.0, sin(0.0), 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))))))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))), mix(vec2(_GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))))[0], float(mat4x3(_GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))))[0], (((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))))[0]) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))), ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))))[1]), vec2(_GLF_FUZZED(4.6), _GLF_FUZZED((-7.2 / vec4(-704.005, -5.0, 21.38, 8662.8927).w))), bvec2(false, false))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, tan(0.0)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, tan(0.0))))))))))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(float(198981u))), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true)), false, false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), _GLF_IDENTITY(false, (false) && true), false)))))), true, true)))))).y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true && ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, false || (true))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)))) || false)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), true, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
            }
           break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
}
