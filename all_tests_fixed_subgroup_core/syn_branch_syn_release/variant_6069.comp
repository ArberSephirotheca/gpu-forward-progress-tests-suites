#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), length(0.0), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || ((! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / sqrt(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * mat2(1.0)) : _GLF_FUZZED(vec2(393.614, 757.409)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], mix(float(_GLF_FUZZED(-96.59)), float((vec2(injectionSwitch[0], injectionSwitch[1]))[0]), bool(true))), _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, int(int(0)))))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED((_GLF_IDENTITY(-3971.3518 / -5.7, min(-3971.3518 / -5.7, _GLF_IDENTITY(-3971.3518 / -5.7, mix(float(_GLF_FUZZED(-0.3)), float(-3971.3518 / -5.7), bool(true)))))))), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true))))))), vec2(injectionSwitch[0], injectionSwitch[1])))))).y)) ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(-18044)))], float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) + 0), 0))) ^ 0)], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))]))[0], _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), float(injectionSwitch[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))))).y)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (1)) : _GLF_FUZZED(-18044)))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], (true ? (vec2(injectionSwitch[0], injectionSwitch[1]))[1] : _GLF_FUZZED(0.1)))), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), float(injectionSwitch[1]), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), float(injectionSwitch[1]), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)))))) : _GLF_FUZZED(vec2(-8.3, -2099.6926)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], injectionSwitch[1])))))).y)) ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(-18044)))]), float(_GLF_FUZZED(-6079.9985)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(15.75, -2.1))))))[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0)))[0], _GLF_FUZZED((_GLF_IDENTITY(+ 1017.6508, clamp(+ 1017.6508, _GLF_IDENTITY(+ 1017.6508, (+ 1017.6508) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), + 1017.6508))))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), float(injectionSwitch[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))]))), vec2(injectionSwitch[0], injectionSwitch[1])))))).y)) ? _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) | 0)) | ((1)))) : _GLF_FUZZED(-18044)))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(1188.2080)), (float(_GLF_FUZZED(1188.2080))) / cos(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), float(injectionSwitch[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(347.156)), bool(false))), injectionSwitch[1])))))).y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(1188.2080)), (float(_GLF_FUZZED(1188.2080))) / cos(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), float(injectionSwitch[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(347.156)), bool(false))), injectionSwitch[1])))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(1188.2080)), (float(_GLF_FUZZED(1188.2080))) / cos(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), float(injectionSwitch[1]), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(347.156)), bool(false))), injectionSwitch[1])))))).y)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), abs(0.0), 1.0)), dot(vec4(0.0, tan(0.0), 0.0, 1.0), vec4(0.0, tan(0.0), abs(0.0), 1.0))), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(-18044)))]), float(_GLF_FUZZED(-6079.9985)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)) * mat3(1.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(56.72)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], max((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], mix(float((vec2(injectionSwitch[0], injectionSwitch[1]))[0]), float(_GLF_FUZZED(-7.2)), bool(false))))), _GLF_FUZZED((+ 1017.6508))), vec2(_GLF_FUZZED(float(178136u)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(6019.1295)), float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), bool(true)))), float(_GLF_FUZZED(-3650.8855)), bool(false)))))[1]), bvec2(false, true))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1188.2080)), _GLF_IDENTITY(float(injectionSwitch[1]), mix(float(_GLF_FUZZED(-89.05)), float(float(injectionSwitch[1])), bool(true))), bool(true)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))), clamp(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(15.74)), vec2((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))))[0], (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))))[1]), bvec2(true, true))))))[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))))).y)) ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(-18044)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(56.72)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), false || (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(true, false || (true)))))))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8814.3789)), vec2(_GLF_FUZZED(-5.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(409.499), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0), clamp(_GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0), int(ivec3(clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0), 1, 1))), clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(-5663) : (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), 0), _GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(7114) : _GLF_IDENTITY(int(1), int(1))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(7114) : _GLF_IDENTITY(int(1), int(1)))))) >> 0))))), 0), (clamp(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 0)) / 1))))], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], cos(0.0) * ((injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(26.35, float(mat4x2(26.35, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(26.35, float(mat4x2(26.35, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) - abs(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(26.35, float(mat4x2(26.35, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(26.35, float(mat4x2(26.35, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) - abs(0.0))), float(_GLF_FUZZED(-85.53)), bool(false))))), bvec2(true, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(160.579), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - length(vec2(0.0, 0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), float(mat4x2((injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(180.330)), float(1.0), bool(true))))), 1.0, 0.0, 1.0))), (injectionSwitch.x), (injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-20.36), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.16)), bvec2(true, false))).y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, log(1.0), sin(0.0)), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, log(1.0), sin(_GLF_IDENTITY(0.0, float(vec2(0.0, round(length(normalize(1.0))))))))))))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-645.366))), 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-645.366, (false ? _GLF_FUZZED(379.103) : -645.366))))), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-645.366))), 0.0))), min(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-645.366, (false ? _GLF_FUZZED(379.103) : -645.366))))), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-645.366))), 0.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-645.366, (false ? _GLF_FUZZED(379.103) : -645.366))))), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-645.366))), _GLF_IDENTITY(0.0, (0.0) / exp(0.0)))))))), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4761.6645))), (_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4761.6645)))) * 1.0), injectionSwitch[1])), float(vec2(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(vec3(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0))))[1] : _GLF_FUZZED(4761.6645))), injectionSwitch[1])), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float((52150u >> 178481u))), _GLF_FUZZED(49.64)), bvec2(false, false)))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-301.127))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-9.4 * float(80648)))), float(injectionSwitch[1]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4761.6645))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4761.6645))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4761.6645))), injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-984.345)), float(injectionSwitch[1]), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))).x), float(_GLF_FUZZED(_GLF_IDENTITY(917.723, (917.723) / 1.0))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-95.16 / _GLF_IDENTITY(95.03, (_GLF_IDENTITY(95.03, (95.03) * 1.0)) / 1.0)))), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(28160) : 0))], injectionSwitch[1]))) * vec2(1.0, 1.0)), 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec3(-3760.9961, 483.296, -460.411), vec3(1.9, 914.355, -716.462))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, true, false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-74.75)), bool(false)))) - 0.0) > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (109880u & 0u)), 1u * (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u)))), uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u))))))), 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (109880u & 0u)), 1u * (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u)))), uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11594u) : min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u))))))), 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) + ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) && true))) && true) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, true, true)), bool(bvec2(bool(bvec4(bool(false), true, true, true)), true))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-31.36))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))), clamp((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)), ((true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size))) ^ 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))), 1u * ((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(workgroup_size)))))))))], uint(_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (64) << 0) : _GLF_FUZZED(-63624))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false)))))), true, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))), true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, _GLF_IDENTITY(true, false || (true)), true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), false, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), false, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), false, true)))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))).x : _GLF_FUZZED(8004.7658))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.4) : injectionSwitch.y))) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(bvec3(false || (bool(false)), true, false)), (bool(bvec3(false || (bool(false)), true, false))) || _GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(bvec3(false || (bool(false)), true, false)), (bool(bvec3(false || (bool(false)), true, false))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (bool(_GLF_DEAD(false)))))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))), clamp(~ _GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(((_GLF_IDENTITY(uint(2), uint(uvec2(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u) - (0u ^ 0u)), uint(uint(((_GLF_IDENTITY(uint(2), uint(uvec2(uint(2), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u) - (0u ^ 0u)))))))), ~ (uint(2)), ~ (uint(2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(_GLF_IDENTITY(2, max(2, 2))))))), min(~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(_GLF_IDENTITY(2, max(2, 2))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / (1 | 1))), ~ (~ (uint(_GLF_IDENTITY(2, max(2, 2)))))), (false ? _GLF_FUZZED(bitfieldReverse((+ subgroup_local_id))) : _GLF_IDENTITY(uint(2), ~ (~ (uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) >> (0 & -3080)), 2))))))))))), clamp(~ _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u), 0u ^ (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u))))), ~ (uint(2)), ~ (uint(2)))))), clamp(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) - 0u), ~ (~ (uint(2))))), clamp(~ _GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u))), ~ (uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) << 0) ^ 0), 2)))), ~ (uint(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))) ^ 0u)))))), max(uint(2), _GLF_IDENTITY(uint(2), uint(uvec2(uint(2), 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))), clamp(~ _GLF_IDENTITY((uint(2)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) >> _GLF_IDENTITY((0u & 41030u), clamp((0u & 41030u), (0u & 41030u), (0u & 41030u)))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) >> 0u)), max(0u + (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) >> 0u)), 0u + (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) >> 0u))))) : _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1))))))))))), max((uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), max(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1)))))))))))))) - 0u))), ~ (uint(2)), ~ (uint(2)))))), _GLF_IDENTITY(uint(2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(ivec3(2, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) | (uint(2)))), 0u | (~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) | (uint(2))))))))), clamp(~ _GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u))), _GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u)), max(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY((~ (uint(2))) / 1u, ((~ (uint(2))) / 1u) ^ 0u)), (~ (uint(2))) << 0u)), (0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))) | (0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u)))), 0u | (_GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY((~ (uint(2))) << 0u, ((~ (uint(2))) << 0u) | (_GLF_IDENTITY((~ (uint(2))) << 0u, max((~ (uint(2))) << 0u, (~ (uint(2))) << 0u))))))))), ~ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2)))), clamp(max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), 1u * (uint(2)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | 0)), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2)))), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2))))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, _GLF_IDENTITY(1 * (2), 0 | (1 * (2))))))), uint(2)))) | (uint(2))))))), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) - 0u), uint(uvec2(_GLF_IDENTITY((uint(2)), ((uint(2))) - 0u), 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u))), uint(uint(_GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))), ((_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED((-- subgroup_size)) : uint(2)))))))) - 0u)))))), _GLF_IDENTITY((uint(2)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((uint(2)), ((uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 0 + (2))))))) - 0u))), _GLF_IDENTITY((uint(2)), (false ? _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) >> 0u) : _GLF_IDENTITY((uint(2)), ((uint(2))) - 0u))))), _GLF_IDENTITY(~ (uint(2)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u)), max(_GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u)), (0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))) | _GLF_IDENTITY((0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))), ~ _GLF_IDENTITY((~ ((0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))))), min((~ ((0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))))), (~ ((0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))))))))), 0u | (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) << 0u))))), ~ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2)))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2)))), (max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), 1u * (uint(2))))) ^ 0u), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(1u * (uint(2)), max(_GLF_IDENTITY(1u * (uint(2)), (1u * (uint(2))) >> 0u), 1u * (uint(2)))))), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u + (uint(2))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), uint(2)))))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 | (64)), 64)), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true)), false || (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true)), ! (! (bool(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-51.66, -1714.9983)) : injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (0 | 0)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false, true, true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))) || false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false || ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
}
