#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[0], _GLF_FUZZED(-152.972)), vec2(_GLF_FUZZED(-40.26), _GLF_IDENTITY((false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1], clamp((false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1], clamp((false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1], (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1], (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1])), (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)[1]))), bvec2(false, true))))), injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-826.265))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (false)) || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), bool(bvec3(bool((false) || false), true, true)))))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), (! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))) && true))))), false || _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (false) || false), ! (! (false)))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), false))), (false) || false), ! (! (false)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), bool(bvec3(bool((false) || false), true, true)))))), ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))), false || _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (false) || false), ! (! (false)))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (false) || false), ! (! (false))))))))))))) || false)))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, (true) && true), false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), (true ? uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))) : _GLF_FUZZED(subgroup_size)))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), max(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)))))))) >> 0u))) | _GLF_IDENTITY((0u), ((0u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))))))))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u)))), (true ? (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u)) / 1u)), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u, _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))) | 0u))))))))) | _GLF_IDENTITY((0u), ((0u)) - 0u)))) : _GLF_FUZZED(subgroup_id))))) >> 0u)) ^ (_GLF_IDENTITY(0u & 42255u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) & 42255u), clamp((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec2((0u), (0u ^ 0u))), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec2((0u), (0u ^ 0u)))))), _GLF_IDENTITY((0u), ((0u)) ^ 0u), (0u))))))) & 42255u), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) & 42255u), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) & 42255u))) << _GLF_IDENTITY(0u, (0u) * 1u)))), 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec2((false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), true, false)))))))) && true, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), true, false)))))))) && true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u))), _GLF_IDENTITY(0u ^ (uint((workgroup_size * workgroup_id))), min(0u ^ (uint((workgroup_size * workgroup_id))), 0u ^ (uint((workgroup_size * workgroup_id)))))))) >> 0u), 0u))))), 0u | (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) | ((true ? 146066u : 153928u) & 0u)), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), (true ? _GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) | ((true ? 146066u : 153928u) & 0u))) | 0u))), 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))) * workgroup_id), max((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))) * workgroup_id), (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))) * workgroup_id))), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | (_GLF_IDENTITY((workgroup_size * workgroup_id), (true ? _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) >> 0u) : _GLF_FUZZED(subgroup_id))))), (workgroup_size * workgroup_id), (workgroup_size * workgroup_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8734.7241)), vec2(_GLF_FUZZED(-783.478), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_DEAD(false), true, false))), (bool(bool(bvec3(_GLF_DEAD(false), true, false)))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false || (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2((bool(bvec3(_GLF_DEAD(false), true, true))), false))) && true)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0))).x > injectionSwitch.y, false)))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(vec3(-6422.9512, -926.812, 9938.1141).t), _GLF_FUZZED(9.5)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))))))).y) * 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(vec3(-6422.9512, -926.812, 9938.1141).t), _GLF_FUZZED(9.5)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))))))).y) * 1.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat2x4(20.36, 0.3, -7.0, 527.080, -8.5, -5039.9083, 64.30, 5.6)) : mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(float(-37300))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-40.95, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-40.95, max(-40.95, -40.95)), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0))), 0.0 + (float(mat4x3(_GLF_IDENTITY(-40.95, max(-40.95, -40.95)), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], ((injectionSwitch)[1]) + _GLF_IDENTITY(0.0, (0.0) - 0.0))), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, _GLF_IDENTITY((1 & 1) * ((1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))) ? _GLF_FUZZED(int((vec2(9539.1140, -8.5) == injectionSwitch))) : _GLF_IDENTITY((1 & 1) * ((1) >> 0), ((1 & 1) * ((1) >> 0)) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))) ? _GLF_FUZZED(int((vec2(9539.1140, -8.5) == injectionSwitch))) : _GLF_IDENTITY((1 & 1) * ((1) >> 0), ((1 & 1) * ((1) >> 0)) << 0)), (~ (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))) ? _GLF_FUZZED(int((vec2(9539.1140, -8.5) == injectionSwitch))) : _GLF_IDENTITY((1 & 1) * ((1) >> 0), ((1 & 1) * ((1) >> 0)) << 0))) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(14305) : 1 & 1))) * ((1) >> 0))))))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(14305) : 1 & 1))) * ((1) >> 0))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(14305) : 1 & 1))) * ((1) >> 0))))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1) >> 0, (1 & 1) * ((1) >> 0))), 0 ^ (int(_GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(14305) : 1 & 1))) * ((1) >> 0))))))) >> 0)))))) << 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || _GLF_IDENTITY((bool(bvec3(true, false, false))), ((bool(bvec3(true, false, false)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(3204.2082)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(3204.2082)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(3204.2082)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(3204.2082)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 1.0, 0.0, 1.0, 1.0, 1.0))))), false, true))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), true, false, false)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), true, false, false)))))))))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(11.65)), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-587.644), _GLF_FUZZED(-0.1)), bvec2(false, false)))))).x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true))))))), (! (true)) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.9))))) < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(69.85), _GLF_FUZZED((+ -98.54))), bvec2(false, false))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(6.3, -2.9, 6020.3708, 1.2).gb) : injectionSwitch))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! _GLF_IDENTITY((! (_GLF_IDENTITY((true), bool(bool((true)))))), true && ((! (_GLF_IDENTITY((true), bool(bool((true))))))))), (! (true)) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), false, true)))))))), (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((true))))))))), bool(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), false, true))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)) || false, _GLF_IDENTITY(bool(bvec3((! (true)) || false, true, false)), (bool(bvec3((! (true)) || false, true, false))) || false)), ! (! (_GLF_IDENTITY((! (true)) || _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3((! (true)) || false, true, false)), (_GLF_IDENTITY(bool(bvec3((! (true)) || false, true, false)), ! (! (bool(bvec3((! (true)) || false, true, false)))))) || false))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && true), false), false))), false))))), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((85.50 / 4.7))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true))))))), (! (true)) || false)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712)))) : injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712))), ((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712)))) * mat2(1.0))) : injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((reflect(vec2(3055.7855, _GLF_IDENTITY(-1.3, min(-1.3, -1.3))), vec2(_GLF_IDENTITY(-39.48, min(-39.48, -39.48)), 9860.6712)))) : injectionSwitch, vec2(mat2x3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((reflect(vec2(3055.7855, _GLF_IDENTITY(-1.3, min(-1.3, -1.3))), vec2(_GLF_IDENTITY(-39.48, min(-39.48, -39.48)), 9860.6712)))) : injectionSwitch, 0.0, 0.0, 0.0, determinant(mat2(1.0, sqrt(0.0), 1.0, 1.0)))))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712)))), _GLF_IDENTITY((_GLF_FUZZED((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712))))) * mat2(1.0), mix(vec2(((_GLF_FUZZED((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712))))) * mat2(1.0))[0], ((_GLF_FUZZED((reflect(vec2(3055.7855, -1.3), vec2(-39.48, 9860.6712))))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-2896.5883), _GLF_FUZZED(14.05)), bvec2(false, false)))) : injectionSwitch)))) - vec2(0.0, 0.0)))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (mat2(1.0) * (injectionSwitch))))), min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) + log(1.0))) * (injectionSwitch)))).x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), bool(bvec3(true, true, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.2)), bool(false))) > injectionSwitch.y)), false))) && true))) && true)) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((true), bool(bool((true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((true), bool(bool((true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4((_GLF_IDENTITY((true), bool(bool((true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), true, false)))) && true), false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7244.1028, -580.046, -815.312, 8.2)) : mat2(1.0))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true))))))), (! (true)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true)), false, false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), bool(bool((true))))))), (! (true)) || false)))))))))))) && true)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), ! (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), (bool(bvec4(_GLF_DEAD(false), false, false, false))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(685.853) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false)))), true)))))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false)))), true)))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false)))), true)))))), true)), true, true))), false, false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true)), ! (! (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), clamp(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), clamp(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), clamp(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((false), false || ((false)))))) && true) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))) < subgroup_size, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(subgroup_local_id + 1, 1u)) | (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ (~ (uvec2(subgroup_local_id + 1, 1u)))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(subgroup_local_id + 1, 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u), (uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u), (uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), clamp((_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u), (uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u), (uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ _GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u), (uvec4(_GLF_IDENTITY((~ (uvec2(subgroup_local_id + 1, 1u))), ((~ (uvec2(subgroup_local_id + 1, 1u)))) / uvec2(1u, 1u)), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))))) | uvec2(0u, 0u))))))) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))) < subgroup_size)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (uint(uvec2(subgroup_local_id + 1, 1u))) | (uint(uvec2(subgroup_local_id + 1, 1u))))) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - (-68187 & 0)) ^ 0), 0))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u))))) < subgroup_size)), true), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(-36937) : 0), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36937) : 0)) << 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, sqrt(1.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), clamp(float(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), (true ? float(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(-1.6))), float(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) * 1.0))) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), abs(1.0), 0.0, 0.0, 0.0, 0.0, abs(0.0))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * uint(_GLF_ONE(1.0, injectionSwitch.y)))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ ((uint(2))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u ^ (uint(2)), 0u | (0u ^ (uint(2))))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), uint(uvec2(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 1u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(packUnorm4x8(vec4(-7.0, 3109.7778, 6.2, -206.472))))), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 1u))))))) - (0u | 0u), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u ^ (uint(2)), 0u | (0u ^ (uint(2))))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), uint(uvec2(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 1u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(packUnorm4x8(vec4(-7.0, 3109.7778, 6.2, -206.472))))), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 1u))))))) - (0u | 0u), 0u, 0u, 1u), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u ^ (uint(2)), 0u | (0u ^ (uint(2))))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), uint(uvec2(clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(uvec4(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 1u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(packUnorm4x8(vec4(-7.0, 3109.7778, 6.2, -206.472))))), 0u ^ (uint(2))), _GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))), 1u))))))) - (0u | 0u), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false))), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), sqrt(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))))), 1.0, 1.0, 1.0, cos(0.0), 1.0))).x > injectionSwitch.y))), true)))), true, true))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.98), _GLF_FUZZED(-287.433)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), (_GLF_IDENTITY(false, (false) || false) || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))))))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
