#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(36758) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), (true && (false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)))), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9109.5853), _GLF_FUZZED(-2.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))))))) || false)), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, 0.0)))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, 0.0)))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, 0.0)))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(exp(0.0), 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)))), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(exp(0.0), 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)))), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))))), (! ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(exp(0.0), 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)))), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y), float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))))))) && true))) || false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3590.6720)), float(injectionSwitch.y), bool(true)))) - 0.0)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3590.6720)), float(injectionSwitch.y), bool(true)))) - 0.0)))), false, true, false)), (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3590.6720)), float(injectionSwitch.y), bool(true)))) - 0.0)))), false, true, false))) && true)))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), bool(bool(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false))))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false))))))))))))))), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false))))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.4, -318.281)), (true ? _GLF_FUZZED(vec2(2.4, -318.281)) : _GLF_FUZZED(vec2(-72.34, -6219.6943)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-6078.9469, 42.55, 780.909, 5.7), transpose(_GLF_IDENTITY(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)), mat2(mat4x3(transpose(mat2(-6078.9469, 42.55, 780.909, 5.7)))))))) : mat2(1.0))))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-6078.9469, (-6078.9469) + 0.0), 42.55, 780.909, 5.7)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))))))))))))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, _GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false))))))))))))))), true)))))))), false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, false || (false)))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bool(bvec2((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false)))), _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bool(bool(bvec3(true, false, _GLF_IDENTITY(false, (false) && true))))), (bool(bool(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))) && true))), false, _GLF_IDENTITY(false, (false) && true)))))) || false)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), injectionSwitch.y))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / (1 & 1))) | (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3x2(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9310.1726)), bool(false)))))), ((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(9310.1726)), bool(false)), sqrt(0.0) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(9310.1726)), bool(false))))))))) * 1.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2375.7938)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false)))));
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow((vec3(4.3, 16.91, -1779.9645) * mat2x3(-35.98, _GLF_IDENTITY(-776.446, (true ? -776.446 : _GLF_FUZZED(-55.72))), -30.25, 421.500, 1.5, -90.49)), vec2(220.805, -1.6))))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | 0u)) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), ~ (~ (max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec4(max(workgroup_base, workgroup_base), 0u, 1u, 0u), min(uvec4(max(workgroup_base, workgroup_base), 0u, 1u, 0u), uvec4(max(workgroup_base, workgroup_base), 0u, 1u, 0u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_id * subgroup_size))))))))) + _GLF_IDENTITY(subgroup_local_id, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))) | _GLF_IDENTITY((subgroup_local_id), uint(uvec3((subgroup_local_id), (0u ^ 0u), 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))) + 0u) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << ((0 ^ 0) >> _GLF_IDENTITY(int(8), int(8)))), 1))) % subgroup_size))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.3)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.3)), bool(false))) / 1.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 do
  {
   if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u | (subgroup_size))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec4(bool((! (false))), false, false, false)))))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))), mix(float(_GLF_FUZZED((- 5.4))), float(0.0), bool(true)))))))), 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.2) : 0.0))), float(_GLF_FUZZED(-2.6)), bool(false))), 0.0, 0.0))), round(length(normalize(1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((80973 >= 62835) ? 3382.9668 : 86.95))), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-15.83) : float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-778.755))), sin(0.0), round(length(normalize(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / abs(1.0)), float(mat2x4(1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))) * 1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-49.38))), 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(-965.568)), bool(false)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-778.755))), sin(0.0), round(length(normalize(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED(vec4(89.24, 3517.5075, -9.1, 391.590).t)), float((1.0) - 0.0), bool(true)))), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)) / _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0)))), float(mat2x4(1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))), 0.0))), 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))), 0.0))), 0.0))), (false ? _GLF_FUZZED(vec4(-3.3, 43.02, -0.3, -973.207)) : vec4(mat2(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))), 0.0))), 0.0))))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), length(vec2(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)), ((_GLF_IDENTITY(0.0, (0.0) - 0.0))) + 0.0)), 0.0)), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(sinh(578.544)))), 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2853.0621)), bool(false))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1864.3432)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6852.4802) : 0.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-5662.9692))))) - 0.0), 0.0, 0.0, 1.0, 0.0)))) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(517.003)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)).x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-70.99)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       barrier();
      }
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-7.2) : _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false)))) || false); _injected_loop_counter --)
          {
           do
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(91977)))) - 0)), max(uint(2), uint(2))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) << 0u)) * 1u), max(uint(2), uint(2))))), ~ (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(int(2))), 2))), max(uint(2), uint(2))))), clamp(uint(uint(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) ^ 0), 0 ^ ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(false)))) - 0.0)), (false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) ^ 0), 0 ^ ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(false)))) - 0.0)), (false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))), 1u)), (uint(uvec2(uint(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) ^ 0), 0 ^ ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(false)))) - 0.0)), (false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))), 1u))) | (uint(uvec2(uint(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) ^ 0), 0 ^ ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(false)))) - 0.0)), (false ? _GLF_FUZZED(5.7) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))), 1u))))))))), uint(uint(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(2), uint(2)), (max(uint(2), uint(2))) | 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(max(uint(2), uint(2)), (max(uint(2), uint(2))) | _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) + 0))))), max(uint(2), uint(2))))))))))) ^ 0u)), 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, abs(0.0), 1.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))), 0.0, 0.0, log(1.0), 1.0, 1.0, exp(0.0))), float(mat3(float(mat3x4(injectionSwitch.y, abs(0.0), 1.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))), 0.0, 0.0, log(1.0), 1.0, 1.0, exp(0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0)))), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(53.04), _GLF_FUZZED(4404.2866)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.2, 9.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)), 1.0, 1.0)))).y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-108.114)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(-4.3)), bool(false))) / 1.0), 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(887.638), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(887.638)) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.32)), float(0.0), bool(true)))), float(_GLF_FUZZED(-7.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(1.0), 1.0, 0.0), (mat3x4(1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(0.0), bool(true))))) * mat3(1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0)), 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-108.114)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(-4.3)), bool(false))) / 1.0), 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(887.638), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(887.638)) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.32)), float(0.0), bool(true)))), float(_GLF_FUZZED(-7.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(1.0), 1.0, 0.0), (mat3x4(1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(0.0), bool(true))))) * mat3(1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0)), 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).y)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9808.7889)), bool(false)))) * 1.0), 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
