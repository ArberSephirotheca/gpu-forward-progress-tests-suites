#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bvec4 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 bvec4 _f3;
 vec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 float _f1;
 mat3x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 uint virtual_gid;
 mat4x3 _f1;
} ;

struct _GLF_struct_5 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 _GLF_struct_5 _f1;
 mat4x2 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 mat3 _f0;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 _GLF_struct_0 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 vec4 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bvec3 _f2;
 bvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), _GLF_IDENTITY(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED(9.3), _GLF_FUZZED(8.1), (vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(3.6)), vec4((vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[0], (vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((6.0)), (vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[3]), bvec4(true, true, false, true))))))), vec2(mat3x2(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * cos(0.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ -5916.0969))), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(max(68.24, -7.4)) : 0.0))), _GLF_IDENTITY(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, _GLF_IDENTITY(-70.66, min(-70.66, -70.66)), -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(9.3), clamp(_GLF_FUZZED(9.3), _GLF_FUZZED(9.3), _GLF_FUZZED(9.3))), _GLF_IDENTITY(_GLF_FUZZED(8.1), max(_GLF_IDENTITY(_GLF_FUZZED(8.1), min(_GLF_FUZZED(8.1), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) / 1.0))), _GLF_FUZZED(8.1))), (vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0, log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(1.0, log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))), (transpose(_GLF_IDENTITY(mat4(1.0, log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(1.0, log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-32.64))))), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(3.6)), vec4((vec4(mat4x3(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, _GLF_IDENTITY(2.0, mix(float(2.0), float(_GLF_FUZZED(-5.8)), bool(false))), -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[0], (vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, _GLF_IDENTITY(2.0, mix(float(_GLF_IDENTITY(2.0, clamp(2.0, 2.0, _GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(72.11)), float(2.0), bool(true)))))), float(_GLF_FUZZED(-719.370)), bool(false))), -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.4))), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((6.0)), (_GLF_IDENTITY(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), max(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), min(vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), vec4(mat4x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-944.773, -7.1, 3.6, -70.66, -7012.6859, 2.0, -517.117, 9.3, -674.766, 9.7, 86.46, -0.2)) : mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0)), 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))))))[3]), bvec4(true, true, false, true))))))), vec2(mat3x2(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * cos(0.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0)))))))) || false)))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(bvec2(true), _GLF_struct_0(gl_SubgroupID, mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / cos(0.0)))), mat2x3(1.0), bvec4(true), vec4(1.0), _GLF_struct_1(mat3x2(1.0), mat2x3(1.0), mat3x2(1.0))), _GLF_struct_3(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), bvec3(true), bvec2(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(386.503, -3.7)))), (injectionSwitch) - vec2(0.0, 0.0)).x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch.y)), 0.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch.y)), 0.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)), false), bvec2(bvec4(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(mat4x3(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0)).x < injectionSwitch.y)), true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), true, false))))), false, false))))))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) && _GLF_IDENTITY(true, (true) || false), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) && _GLF_IDENTITY(true, (true) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-5.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, false, true), false))))))) || false), true, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, (true) && true)))))), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y)))))), false, true))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)))), false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(true))), true)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-60.55)), bool(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0) * 1.0)) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_5(1u), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.9)), float(1.0), bool(true)))) / sqrt(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec3(uvec3(gl_WorkGroupSize))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u & 144917u)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u & 144917u)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u & 144917u))))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u & 144917u)))))) >> 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))), min(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-52.94)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0, 0.0))), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, abs(1.0)))), 0.0, 0.0)))) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5348.7048)), bool(false))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat4(1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, -5.3)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(-2.4), (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), min((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(4507.7256)), bvec2(true, false))) : injectionSwitch)), injectionSwitch)))).x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1121.0799), _GLF_FUZZED(8443.7295)), bvec2(false, false))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0))[0], injectionSwitch[1])).y))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)) && true), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)) && _GLF_IDENTITY(true, (true) && true))) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), (! (_GLF_IDENTITY((! (false)), false || ((! (false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), (! (_GLF_IDENTITY((! (false)), false || ((! (false)))))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), (! (_GLF_IDENTITY((! (false)), false || ((! (false)))))) && true))))))), bool(bvec2(! (! (false)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))), bvec3(bvec3(bvec3(false, true, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true)))))), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), bvec3(bvec3(bvec3(false, true, false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(bvec3(((false)), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))) || false), true, false)))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), false || (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.5)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ((true)) && _GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))), true, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), true, false)))))))) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0))))))), float(_GLF_FUZZED(632.457)), bool(false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0))))))), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(1.0))))))), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), max(_GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))))), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), (_GLF_FUZZED(abs(2.7))) / 1.0))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), min(_GLF_FUZZED(abs(2.7)), _GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), clamp(_GLF_IDENTITY(_GLF_FUZZED(abs(2.7)), mix(float(_GLF_FUZZED(abs(2.7))), float(_GLF_FUZZED(-270.090)), bool(false))), _GLF_FUZZED(abs(2.7)), _GLF_FUZZED(abs(2.7)))))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))) && true, ! (! ((_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))))), true), true)))))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))))))), true, false)))), true, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))))) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_6.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (true ? injectionSwitch.y : _GLF_FUZZED(asin(-2.8))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (false ? _GLF_FUZZED(-170.327) : 1.0 * (injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), true && (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-93.43))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(141303u))), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (false ? _GLF_FUZZED(-170.327) : 1.0 * (injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(236.525, 541.970)) : injectionSwitch)))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false, true)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (true ? injectionSwitch.y : _GLF_FUZZED(asin(-2.8))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (false ? _GLF_FUZZED(-170.327) : 1.0 * (injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), true && (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-93.43))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(141303u))), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (false ? _GLF_FUZZED(-170.327) : 1.0 * (injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(236.525, 541.970)) : injectionSwitch)))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false, true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), (! (((false)))) && true)))))), ! (! ((_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false))) && true)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), true && (! ((! ((false)))))))))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), (! (((false)))) && true)))))), ! (! ((_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false))) && true)), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))))))))))), true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.08) : 0.0)))))))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))), exp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(1.0), mix(vec2(_GLF_FUZZED(859.209), ((vec2(0.0, 0.0)) * mat2(1.0))[1]), vec2(((vec2(0.0, 0.0)) * mat2(1.0))[0], _GLF_FUZZED(-4.0)), bvec2(true, false))))))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(vec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))), 1.0, 1.0)), vec2(vec2(vec2(vec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))), 1.0, 1.0)))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(859.209), ((vec2(0.0, 0.0)) * mat2(1.0))[1]), vec2(((vec2(0.0, 0.0)) * mat2(1.0))[0], _GLF_FUZZED(-4.0)), bvec2(true, false))))))), 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), 1.0)), vec2(0.0, 0.0) + (vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.05)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.6))), 0.0))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 0.0)), exp(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, cos(abs(0.0)), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat3(abs(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), cos(0.0))))), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(859.209), ((vec2(0.0, 0.0)) * mat2(1.0))[1]), _GLF_IDENTITY(vec2(((vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) * mat2(1.0))[0], _GLF_FUZZED(-4.0)), (vec2(((vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) * mat2(1.0))[0], _GLF_FUZZED(-4.0))) * mat2(1.0)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(_GLF_struct_7(bvec4(true), mat3x4(1.0), mat4x2(1.0), bvec4(true), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), tan(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.6)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))) : _GLF_FUZZED(floor(sqrt(-97.68))))))), mat4(1.0)), 1.0, mat3x4(1.0), bvec4(true)), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4._f0._f1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f1.subgroup_id, (true ? _GLF_struct_replacement_4._f0._f1.subgroup_id : _GLF_FUZZED(workgroup_id)))) << 0u) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), subgroup_local_id, subgroup_local_id)), mat4x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(1.0), float(vec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(1.0), float(mat2x4(true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false))), true && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4._f0._f1.subgroup_id, min(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f1.subgroup_id, max(_GLF_struct_replacement_4._f0._f1.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4._f0._f1.subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4._f0._f1.subgroup_id, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u))), uint(uvec2(0u, 0u))))))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_struct_replacement_4._f0._f1.subgroup_id, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u))), uint(uvec2(0u, 0u))))))), 0u))))))), _GLF_struct_replacement_4._f0._f1.subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false)))) && true), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(-3.3)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(-3.3)), (vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(-3.3))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(6.1, 4208.0102)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))))), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), true && ((true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-731.580), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0))))))))).y)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), min(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || false), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(false)))), false))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.9)), vec2(_GLF_FUZZED(-881.881), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))) || false), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y)), true)), true, false)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))) || false), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, false), true)), true))))))) && true))))) && true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-8815.8639, (false ? _GLF_FUZZED(0.2) : -8815.8639)), -6772.7424)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-8815.8639, (false ? _GLF_FUZZED(0.2) : -8815.8639)), -6772.7424)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false)))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-8815.8639, (false ? _GLF_FUZZED(0.2) : -8815.8639)), -6772.7424)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false)))))), false))))))))), true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(94.03), (_GLF_FUZZED(94.03)) * 1.0), _GLF_FUZZED((6.7 / 8.3))), bvec2(false, false))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false), true))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), false, false))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true, true)), false, false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true, true)), false, false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false))))))))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (! (! (! (false))))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (! (! (! (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true)))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ((! _GLF_IDENTITY((false), ((false)) || false))) || _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))))))))) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(61.26)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-47.60)), bool(false))), injectionSwitch.y)))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! (_GLF_IDENTITY((! (! (true))), bool(bvec2((! (! (true))), false))))))))), true && ((false) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! (_GLF_IDENTITY((! (! (true))), bool(bvec2((! (! (true))), false))))))))), true && ((false) && true)), bool(bvec2(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! (_GLF_IDENTITY((! (! (true))), bool(bvec2((! (! (true))), false))))))))), true && ((false) && true)), false))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((4.4))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(73.53))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_9.virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.virtual_gid, ~ (~ (_GLF_struct_replacement_9.virtual_gid))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) & 48761u) | (_GLF_IDENTITY(_GLF_struct_replacement_9.virtual_gid, (_GLF_struct_replacement_9.virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_9.virtual_gid, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_struct_replacement_9.virtual_gid)))))), _GLF_struct_replacement_9.virtual_gid))], uint(1), _GLF_IDENTITY(4, (4) << 0), 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), ~ (~ ((_GLF_IDENTITY(1, 1 * (1))))))), 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), min((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 1 * (1))))), (0 | 0) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), max((_GLF_IDENTITY(1, 1 * (1))), (_GLF_IDENTITY(1, 1 * (1))))))))), 1 * ((_GLF_IDENTITY(1, 1 * (1))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) >> (0 >> _GLF_IDENTITY(int(2), int(2)))))), 1 * ((_GLF_IDENTITY(1, 1 * (1)))))))), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 1 * ((_GLF_IDENTITY(1, 1 * (1)))))), 1), (min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 1 * ((_GLF_IDENTITY(1, 1 * (1)))))), 1)) / 1), min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))))) ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(84340)))))), 1 * ((_GLF_IDENTITY(1, 1 * (1)))))), 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 1 * ((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(92992) : 1)))))))), 1)))))) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))), max(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) - _GLF_IDENTITY(0u, 0u ^ (0u))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.6), _GLF_FUZZED((+ vec3(1.1, -53.72, -1.1).z))), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), ! (! ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])).x > injectionSwitch.y)))))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])).x > injectionSwitch.y)))))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7681.1801)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.5)))))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), (0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))) | (0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), 0u, 0u, 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), (0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))) | (0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), 0u, 0u, 1u)))))))), next_virtual_gid, next_virtual_gid))], uint(2), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), min(ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i))), 4)), 4)), 0), ivec2(4, 0))))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-6.5)), vec2(_GLF_FUZZED(37.76), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), _GLF_IDENTITY(true && (true && (false)), bool(bvec3(_GLF_IDENTITY(true && (true && (false)), bool(bool(_GLF_IDENTITY(true && (true && (false)), true && (true && (true && (false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 ^ (2))), 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
