#version 460
struct _GLF_struct_3 {
 float _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 int _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bvec2 _f1;
 int _f2;
 uint subgroup_size;
 int _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 ivec2 _f1;
 _GLF_struct_4 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(vec4(1.0), ivec2(1), _GLF_struct_4(_GLF_struct_0(mat4x3(1.0), bvec2(true), 1, gl_SubgroupSize, 1), _GLF_struct_1(1), _GLF_struct_2(mat4x2(1.0)), vec2(1.0), _GLF_struct_3(1.0)), mat4x2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f2._f0.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f2._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_5._f2._f0.subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_5._f2._f0.subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}
