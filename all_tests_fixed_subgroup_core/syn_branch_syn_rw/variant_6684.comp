#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.1) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))))), true, false, false))), true, false)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), max(_GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat2(1.0)))), mat2(_GLF_IDENTITY(mat4(transpose(transpose(transpose(mat2(1.0))))), mat4(1.0) * (mat4(transpose(transpose(transpose(mat2(1.0)))))))))))), max((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0)))))), _GLF_IDENTITY(mat2(1.0) * (transpose(transpose(mat2(1.0)))), (mat2(1.0) * (transpose(transpose(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))) / mat2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8797.9673)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4790.8859) : 1.0)))), 1.0, 1.0))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))))) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.6))))), (false ? _GLF_FUZZED(mat2(565.805, 463.384, -27.51, -0.8)) : _GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), log(1.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(6.8))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-2.0, min(-2.0, _GLF_IDENTITY(-2.0, (-2.0) + 0.0))))) : _GLF_IDENTITY(transpose(transpose(mat2(1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(6873.8639, -1.4, 5.1, -444.761))))), (false ? _GLF_FUZZED(mat2(-7.5, -9.0, 0.7, -99.55)) : transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(6873.8639, -1.4, 5.1, -444.761)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(6873.8639, -1.4, 5.1, -444.761))))), mat2(mat3x4(transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(6873.8639, -1.4, 5.1, -444.761)))))))))))))))))))))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_id * subgroup_size) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((0 ^ 0) | (1), clamp((0 ^ 0) | (1), _GLF_IDENTITY((0 ^ 0) | (1), min((0 ^ 0) | (1), (0 ^ 0) | (1))), _GLF_IDENTITY((0 ^ 0) | (1), ((0 ^ 0) | (1)) - 0))))) % subgroup_size) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 6.4))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-97.74), _GLF_FUZZED(-8.3)), bvec2(false, false))))).x), bool(true))) : _GLF_FUZZED(-2.1))))))) >> 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) - 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) + 0u), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldInsert(69644, 67453, 44385, 11959)) : (1))))))) % subgroup_size)), (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) - 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) + 0u), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldInsert(69644, 67453, 44385, 11959)) : (1))))))) % subgroup_size)), min((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) - 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) + 0u), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldInsert(69644, 67453, 44385, 11959)) : (1))))))) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) - 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) + 0u), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldInsert(69644, 67453, 44385, 11959)) : (1))))))) % subgroup_size))))) | 0u), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)))), max(~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0), (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))))) % subgroup_size)), ~ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))))), (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 ^ 0, max(0 ^ 0, _GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0)))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0))), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)), (false ? _GLF_FUZZED((workgroup_base + subgroup_size)) : _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))))), (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0))), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)), max((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))))), (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0))), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))))), (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)))))))), ~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) >> 0) : _GLF_FUZZED(ivec2(45714, -40361).s)))) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), ~ (~ (int(ivec2(1, 0))))))))))) % subgroup_size)), ~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id)))), ~ (subgroup_local_id)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id)))), ~ (subgroup_local_id)))), 1u)), (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id)))), ~ (subgroup_local_id)))), 1u)), ~ (~ (uint(uvec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id)))), ~ (subgroup_local_id)))), 1u)))))) << (83562u & 0u)))) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))))) % subgroup_size)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))), (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(0, (0) << (0 | 0)) ^ 0) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))), max((_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))), 0 ^ ((_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))))), 0, 0))))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), _GLF_IDENTITY(0u | (~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))), (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (_GLF_IDENTITY(0u | (~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))), (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (0u | (~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, (0 ^ 0) | (1)), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))), (0 ^ 0) | (1)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), (_GLF_IDENTITY(1, (0 ^ 0) | (1))) | (_GLF_IDENTITY(1, (0 ^ 0) | (1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | 0u)) | 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size))), ~ (~ ((~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size))))))), 1u, 1u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))))))), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 ^ 0) | (1), min((0 ^ 0) | (1), (0 ^ 0) | (1))))) % subgroup_size)))), 1u, 1u, 0u))), ~ (~ (~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, (1) | 0)))) % subgroup_size)))), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, (1) | 0)))) % subgroup_size)))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), ~ (~ (~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)), (_GLF_IDENTITY(~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)), ~ (~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))))) - 0u))), 1u, 1u, 0u))), ~ (~ (~ (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1)))) * 1u) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | _GLF_IDENTITY((1), max((1), (1))))) % subgroup_size)))), 1u, 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u))), ~ (~ (~ (uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size)))), 1u, 1u, 0u))))))))))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) | (1))) % subgroup_size), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 ^ (0 | (0)))) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) | (0)) | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) | (0)) | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) * 1u)) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size))), ~ (~ (_GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1))) + (0 << _GLF_IDENTITY(int(0), int(0))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ _GLF_IDENTITY((~ (0 ^ 0)), ((~ (0 ^ 0))) | (_GLF_IDENTITY((~ (0 ^ 0)), min((~ (0 ^ 0)), (~ (0 ^ 0))))))))))) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / 1))) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size) | 0u)) - 0u)))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size)), 0u ^ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size))))))))) | ((~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(int(subgroup_local_id)))), 0)) | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) ^ 0, ~ (~ (_GLF_IDENTITY(0 ^ 0, ~ (~ (0 ^ 0))))))) | (1)))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 1u)))))) % subgroup_size)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))))) && true), true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(! ((injectionSwitch.x > injectionSwitch.y))), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) / 1.0) > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false) || false), false, _GLF_IDENTITY(false, (false) || false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-246.102)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false))) && true)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec3(-9419.5837, -32.01, 3724.7073), vec3(6576.7283, -3669.7593, 4366.3402))))))), true, true))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false, true))))))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec3(-9419.5837, -32.01, 3724.7073), vec3(6576.7283, -3669.7593, 4366.3402))))))), true, true))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false, true))))))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), false)))) && true))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-709.457) : injectionSwitch.x)) : _GLF_FUZZED(-3634.0062))) > injectionSwitch.y)), false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(92.66, 301.659))) : injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true, false))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))), false, false), false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)) || false)))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 0.0))[0], _GLF_FUZZED(-49.30), (vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 0.0))[2]), vec3(_GLF_FUZZED(-597.292), (vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 0.0))[1], _GLF_FUZZED(1.3)), bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false))), false), false)))))), true, true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, false))))))), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true && (bool(bvec2(false, false))), bool(bvec4(true && (bool(bvec2(false, false))), false, false, true)))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)) > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) << 0u), min(read, _GLF_IDENTITY(read, max(read, read)))), max(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) << 0u), min(read, _GLF_IDENTITY(read, max(read, read)))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) << 0u), min(read, _GLF_IDENTITY(read, max(read, read)))))), ~ (~ (read))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, true && (true))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), ~ (~ (uvec4(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))))), (_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), clamp(_GLF_FUZZED(uint(9.8)), _GLF_FUZZED(uint(9.8)), _GLF_FUZZED(uint(9.8))))) | 0u) : read)), max(_GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_FUZZED(uint(9.8))) | 0u) : read)), _GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (_GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(uint(9.8)), min(_GLF_FUZZED(uint(9.8)), _GLF_FUZZED(uint(9.8))))))) | (_GLF_FUZZED(uint(9.8)))), (_GLF_FUZZED(uint(9.8))) | 0u) : read)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, 1.0)), (mat2x3(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
    barrier();
   barrier();
  }
}
