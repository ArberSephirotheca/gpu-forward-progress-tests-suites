#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0)))), true)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ _GLF_IDENTITY((gl_NumWorkGroups.x), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec3((gl_NumWorkGroups.x), 0u, 0u))), (gl_NumWorkGroups.x)))))) ^ (_GLF_IDENTITY(1u, max(1u, 1u)) ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), (~ ((gl_NumWorkGroups.x))) * 1u))))), ((gl_NumWorkGroups.x)) << 0u)))), clamp(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ ((uvec3(29592u, 76870u, 169845u) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) ^ ((uvec3(29592u, 76870u, _GLF_IDENTITY(169845u, ~ (~ (_GLF_IDENTITY(169845u, 0u | (_GLF_IDENTITY(169845u, clamp(169845u, 169845u, 169845u)))))))) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))).x, 0u, (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))) << 0u)))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)).x), ((gl_NumWorkGroups.x)) << 0u)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | 0u) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)))), ~ (~ (~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), clamp((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))))), 1u * ((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), min((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(49353u) : gl_NumWorkGroups.x)))), (~ (gl_NumWorkGroups.x)))), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))))), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), min(uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u))))) + (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), clamp(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))) - 0u)))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u))), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), clamp((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)))) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))), min((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(107152u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups)).x))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(_GLF_IDENTITY(154517u, (_GLF_IDENTITY(154517u, max(154517u, 154517u))) | (154517u)))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) | ((~ (gl_NumWorkGroups.x))))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), uint(uvec2((~ (gl_NumWorkGroups.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(154517u)))) - 0u)), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id)))))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u))))))) >> 0u)) << 0u) / 1u)) / 1u), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) + 0u)))))))))) - 0u) ^ 0u, (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) | ((~ (gl_NumWorkGroups.x)))) ^ 0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), (~ ((gl_NumWorkGroups.x))) * 1u))))), ((gl_NumWorkGroups.x)) << 0u)))), clamp(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ ((uvec3(29592u, 76870u, 169845u) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) ^ ((uvec3(29592u, 76870u, _GLF_IDENTITY(169845u, ~ (~ (_GLF_IDENTITY(169845u, 0u | (_GLF_IDENTITY(169845u, clamp(169845u, 169845u, 169845u)))))))) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))).x, 0u, (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))) << 0u)))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)).x), ((gl_NumWorkGroups.x)) << 0u)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | 0u) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)))), ~ (~ (~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(0u, 0u, 0u))).x))) / 1u), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u), _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))).x))) / 1u)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), clamp((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))))), 1u * ((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), min((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(49353u) : gl_NumWorkGroups.x)))), (~ (gl_NumWorkGroups.x)))), max(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))))), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), min(uint(uvec3(0u, 1u, 1u)), uint(uvec3(0u, 1u, 1u))))) + (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), clamp(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))) - 0u)))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u))), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), clamp((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)))) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))), min((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(107152u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups)).x))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(_GLF_IDENTITY(154517u, (_GLF_IDENTITY(154517u, max(154517u, 154517u))) | (154517u)))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) | ((~ (gl_NumWorkGroups.x))))) - 0u)), max((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), uint(uvec2((~ (gl_NumWorkGroups.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(154517u)))) - 0u)), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), (true ? (~ (gl_NumWorkGroups.x)) : _GLF_FUZZED(154517u)))) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) - 0u)), (true ? (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id)))))) - 0u)) : _GLF_FUZZED(subgroup_size)))) - 0u), 0u + ((_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))) - 0u))))))) >> 0u)) << 0u) / 1u)) / 1u), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) + 0u)))))))))) - 0u) ^ 0u, (_GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) | ((~ (gl_NumWorkGroups.x)))) ^ 0u) / 1u)) >> 0u))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true)), true && (bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))) || false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), (~ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), max((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | 0u))) | (gl_WorkGroupID.x)))) - 0u))), (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, bool(bvec3((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, false, true))))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(800.392) : injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))) && true))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.4, -3.2)))) : _GLF_FUZZED(vec2(51.16, 9921.2858)))))), injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch))) * mat2(1.0), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) + vec2(0.0, 0.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(((vec4(injectionSwitch, 1.0, 1.0))) * mat4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (((vec4(injectionSwitch, 1.0, 1.0))) * mat4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(139.498), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-12.84)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0)) - vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4165.2357)), float(0.0), bool(true))), 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))))), injectionSwitch), _GLF_IDENTITY(min(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)))))), injectionSwitch)), min(min(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))], injectionSwitch[1]))))) - vec2(0.0, 0.0)))))), injectionSwitch)), min(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)))))))), injectionSwitch)))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u ^ 0u)) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), max(uint(uvec2(subgroup_id, 0u)), uint(uvec2(subgroup_id, 0u))))))), ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec3(_GLF_IDENTITY(~ (subgroup_id), uint(uvec4(~ (subgroup_id), 0u, 1u, 0u))), 0u, 1u))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(packHalf2x16(vec2(-5.0, -7.8))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4667.3368), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(428.362)), (float(_GLF_FUZZED(428.362))) - 0.0), float(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))[0], _GLF_FUZZED(-233.600)), vec2(_GLF_FUZZED(977.393), (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4667.3368), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(428.362)), (float(_GLF_FUZZED(428.362))) - 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))))[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4667.3368), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -0.4))), bvec2(true, false))))))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(428.362)), (float(_GLF_FUZZED(428.362))) - 0.0), float(_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))) / vec2(1.0, 1.0))[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))).y))))), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) || false)))))) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? (uvec4(subgroup_id * subgroup_size, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(774u, (774u) >> 0u), 166914u, 172477u, 132480u)))) | (_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u, 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(2183.4391)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))), clamp(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) - 0.0, max((_GLF_ONE(1.0, injectionSwitch.y)) - 0.0, (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))), uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u, 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), tan(0.0), 0.0)), float(mat3x4(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-7.0 * vec3(-0.5, 7.8, -25.57).t))), bool(false))), 1.0, 0.0, abs(1.0), tan(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), 1u * (uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), tan(0.0), 0.0)), float(mat3x4(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-7.0 * vec3(-0.5, 7.8, -25.57).t))), bool(false))), 1.0, 0.0, abs(1.0), tan(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))), uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))))))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))), ((subgroup_local_id + 1)) << 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_size) : 4u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u, ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) / 1u) - 0u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), uint(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) + 0u)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 1u, 1u)))) * 1u))), 0u ^ ((~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), min(_GLF_IDENTITY(min(subgroup_size, subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (min(subgroup_size, subgroup_size))), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) >> 0u))))), uint(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), min(_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) << 0u), min(subgroup_size, subgroup_size))))) / 1u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 1u, 1u)))) * 1u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
  }
}
