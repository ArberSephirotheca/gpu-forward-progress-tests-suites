#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true), true))))) || false)), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-87.02)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true), bvec3(bvec3(bvec3(false, false, true)))))) || false)), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), true))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), false, true), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), false || (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), false || (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))))))))))))) || false)))))), true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sign(-3536.2452)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), true, false))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7342.0080), _GLF_FUZZED((true ? -7758.4298 : -8.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7342.0080), _GLF_FUZZED((true ? -7758.4298 : -8.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7342.0080), _GLF_FUZZED((true ? -7758.4298 : -8.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7342.0080), _GLF_FUZZED((true ? -7758.4298 : -8.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(52.65)), bool(false))) > injectionSwitch.y) || false)), false))), true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))), true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))[1])).y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * exp(0.0))), (false ? _GLF_FUZZED(-3288.3433) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))))) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * exp(0.0))), (false ? _GLF_FUZZED(-3288.3433) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))))) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9009.0994)), float(injectionSwitch.x), bool(true)))) + 0.0)) / 1.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true))), false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))) + 0.0), false || (injectionSwitch.x > injectionSwitch.y))))))))))))) && true, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, exp(0.0), abs(0.0), 1.0, abs(1.0), 0.0, sin(0.0), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true, false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) : _GLF_FUZZED(unpackHalf2x16(144168u)))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) : _GLF_FUZZED(unpackHalf2x16(144168u)))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) : _GLF_FUZZED(unpackHalf2x16(144168u)))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size), 0u + (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size), uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size), 0u + (max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size))))))))))) * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size))) << 0u)))) + (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | 0u)), uint(7u)), 1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), min((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)))), ((subgroup_local_id + 1) % subgroup_size))))), (false ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 0u), min(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 0u), uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 0u), (uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 0u)) << uvec3(0u, 0u, 0u)))))))))) | ((~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (subgroup_size))) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)) - 0u), uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), uint(uvec2(uint(subgroup_local_id + 1), 0u)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, 1u * (4u)), clamp(4u, 4u, 4u))), uint(4u))) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14493)))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14493)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14493)))))) ^ 0, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) - 0)))), uint(uint(subgroup_local_id + 1)))))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), uint(uint(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))))))))))) >> ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), uint(uint(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))))))))))) >> ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))), uint(uint(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))))))))))) >> ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> (0u ^ 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1)))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))))))) ^ 0u)) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))))), (~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))))) | (0u | 0u))))) ^ 0u)) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) / 1u) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))))))) ^ 0u)) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))))))))) ^ 0u)) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))))))))))), (~ (subgroup_size)) | _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)) | 0u, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY((~ (subgroup_size)) | 0u, ((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)) | 0u) << 0u), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((~ (subgroup_size)) | 0u, ((~ (subgroup_size)) | 0u) << 0u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), uint(uint(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))) / 1u))))))), ((~ (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))))) / 1u), (true ? ~ (~ (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))) : _GLF_FUZZED(workgroup_size))))) - 0u)), min(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u) | 0u, ((~ (subgroup_size)) | 0u) >> 0u))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), ~ (~ ((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | ((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 1u * (uint(4u))))) | ((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))), (~ (subgroup_size)) | 0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | ((~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) | 0u)))))) - 0u))))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))), 0u, 1u))), (~ (subgroup_size)) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(25081u) : subgroup_size))), (~ (subgroup_size)) | 0u)))))) - 0u)), 0u | (uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)) << (0u ^ 0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))))))) - 0u)))))))))))))), 1u * (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))) ^ 0u) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))))))) - 0u)) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.9))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((487.779 + -4.2))), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((false), ((false)) && true))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.1)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true)), false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (subgroup_local_id) >> 0u)) / _GLF_IDENTITY(1u, ~ (~ (1u)))) + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, int(ivec2(0, 1)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED((-9.5 / 25.05))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, max(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, false ? _GLF_FUZZED(-2.3) : injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), (true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED((-9.5 / 25.05))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, max(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, false ? _GLF_FUZZED(-2.3) : injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false))))))))))) || false))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED((-9.5 / 25.05))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, max(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, false ? _GLF_FUZZED(-2.3) : injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), (true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED((-9.5 / 25.05))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, max(false ? _GLF_FUZZED(-2.3) : injectionSwitch.x, false ? _GLF_FUZZED(-2.3) : injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(563.775)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false))))))))))) || false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, false)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, false))))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-899.237) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))) * mat3(1.0))))))), false || (_GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))) * mat3(1.0))))))), bool(bvec2(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 0.0), vec3(mat2x4(vec3(injectionSwitch.y, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))) * mat3(1.0))))))), true))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
