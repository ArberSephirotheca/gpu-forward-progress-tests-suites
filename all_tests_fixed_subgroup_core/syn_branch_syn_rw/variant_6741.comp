#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), max(vec2((injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 0.0, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), abs(1.0), abs(abs(1.0)), 1.0, 0.0, 1.0))))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true), _GLF_IDENTITY(! (! ((bool(bool(false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(false)))), (((bool(bool(false))))) || false), (! _GLF_IDENTITY(((bool(bool(false)))), (((bool(bool(false))))) || false)) || false))), (! (! (! ((bool(bool(false))))))) && true)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, true)))) && true)))), false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(66113u)), _GLF_FUZZED(-2.6)), bvec2(false, false))).x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(830.025), _GLF_FUZZED(vec4(-123.292, 8.2, -9.7, 518.825).a)), bvec2(false, false))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(66113u)), _GLF_IDENTITY(_GLF_FUZZED(-2.6), (true ? _GLF_FUZZED(-2.6) : _GLF_FUZZED(-30.23)))), bvec2(false, false))).x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(830.025), _GLF_FUZZED(vec4(-123.292, 8.2, -9.7, 518.825).a)), bvec2(false, false))).y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) && true)))
      barrier();
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))) / sqrt(vec2(1.0, 1.0)))).y))))
  return;
 _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x = subgroup_local_id, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x = subgroup_local_id) << 0u);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  barrier();
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && _GLF_IDENTITY(true, (true) && true), ! (! (((false)) && true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true), false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.y = workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(1.0))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(1.0))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz, _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_local_id ^ _GLF_IDENTITY(uvec3(104859u, 125873u, _GLF_IDENTITY(64900u, uint(uvec4(64900u, 0u, 0u, 1u)))), (false ? _GLF_FUZZED(uvec3(158630u, 43621u, 7942u)) : uvec3(104859u, 125873u, _GLF_IDENTITY(64900u, uint(uvec4(64900u, 0u, 0u, 1u)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)) : _GLF_FUZZED(((uvec3(192105u, 41458u, 134044u) - uvec3(125262u, 22518u, 191544u))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(9156u, 61159u, 187367u)) : (false ? _GLF_FUZZED((subgroup_local_id ^ uvec3(104859u, 125873u, _GLF_IDENTITY(64900u, uint(uvec4(64900u, 0u, 0u, 1u)))))) : _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((false ? _GLF_FUZZED(uvec3(9156u, 61159u, 187367u)) : (false ? _GLF_FUZZED((subgroup_local_id ^ uvec3(104859u, 125873u, _GLF_IDENTITY(64900u, uint(uvec4(64900u, 0u, 0u, 1u)))))) : _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)))))))).z * GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.z = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.z), min(~ (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.z), ~ (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.z))))) + _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, max(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size)) + GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x;
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size + ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) | (next_virtual_gid));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(read, 0u | (read));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * exp(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) : _GLF_FUZZED(-2.7)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))
  barrier();
 atomicStore(buf[GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.w], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(uint(1), uint(1)), (max(uint(1), uint(1))) >> 0u))), (uint(uint(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), uint(1)), (max(uint(1), uint(1))) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(uint(1), uint(1)), (max(uint(1), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_id) : uint(1))))) >> 0u))))))), 4, _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x + _GLF_IDENTITY(1, (1) >> (1 ^ 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), sqrt(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(680.025, -32.72, 52.35, -4315.2343, 391.031, -7.0)) : mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), sqrt(0.0), 1.0, 1.0, 1.0)))))).y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) * 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0)))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) * 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0)))))))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0)))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, log(1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0)))).y, injectionSwitch.y))), mix(float(_GLF_FUZZED((- 1.0))), float((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, log(1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0)))).y, injectionSwitch.y)))), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0)))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0)))) - vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0)))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(996.038)), bool(false)))) + 0.0) > injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-18.55)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(2.6)), bool(false)))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(2.6)), bool(false))))))) || false))))))) && true), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-18.55)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(2.6)), bool(false)))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))), mix(vec2(_GLF_FUZZED(-40.38), _GLF_FUZZED(22.58)), vec2((vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[0], (vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0))))))[1]), bvec2(true, true))))) - 0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(2.6)), bool(false))))))) || false))))))) && true), false, false, true)), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(65.02))), injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(7.2, -649.580)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.x, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.x) - 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readsubgroup_idworkgroup_baseworkgroup_size.x, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
