#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_base;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))), false), true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false)))), ! (! (bool((! (false)))))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))))))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0)), min(float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0)), float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0, 1.0)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6568.7871)), float(injectionSwitch.y), bool(true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)), true)))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7659.2577))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7659.2577))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true)))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(771.537)), vec2(_GLF_FUZZED(945.541), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))))))) || false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, 0u, (1u & 1u)), (uvec3(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, 0u, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (1u & 1u) - (0u & 26246u))) ^ 0u)))) - uvec3(0u, 0u, 0u)))) * workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED((subgroup_size % num_workgroup)) : _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : workgroup_id)))))), min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size)))) | uvec2(0u, 0u)))).y * workgroup_id))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (true ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0] : _GLF_FUZZED(subgroup_size))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))).y, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y)))) * workgroup_id)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y) / 1u) * workgroup_id)) | 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : 0u, (false ? _GLF_FUZZED(subgroup_size) : 0u) * 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, (true ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y)))) * workgroup_id, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), uint(uvec4(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id))) / 1u)) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(6u))))), (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)) | 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) | 0u)) ^ 0u))), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id))))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) * uvec2(1u, 1u)).y * workgroup_id))), (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)) | 0u) : _GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) | 0u)) ^ 0u))), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id))))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) * uvec2(1u, 1u)).y * workgroup_id))), (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)) | 0u) : _GLF_FUZZED(workgroup_id)) >> 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) / 1u), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) / 1u), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) << 0u)))), min(max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) << 0u)))), max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id) << 0u))))))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id)) | 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.y = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), max(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))), (0u ^ 0u) | (~ (~ (workgroup_base))))), min(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) * (1u ^ 0u)))))), workgroup_base));
 uint virtual_gid = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), 0u | (_GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))))));
 uint next_virtual_gid = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size);
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), false, false, true)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(2.5), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_FUZZED(2.5))), _GLF_FUZZED(2.5))) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), true)), true, false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))), false)))), true)), true, false))))), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) + 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))))) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))))) > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))), true))))), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false, true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec3(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), true, true)))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))), true)))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true))))))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false)), false, false, true)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) && true), false)), false, false, true)))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), true)))), true)), false, false)))))))))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, -6.5)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), dot(vec2(abs(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, determinant(mat3(1.0, sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 0.0, 1.0)))))), 0.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(377.993) : 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581)))], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-429.503), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1])), (false ? _GLF_FUZZED(vec2(0.9, -41.18)) : mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-429.503), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1])))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))] : _GLF_FUZZED(exp(-7.1)))), injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.3))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -894.764)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0])), injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1))), (int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)))) >> 0))])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(3.3)))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((-3.2))), bool(false)))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) * 1.0), injectionSwitch[1]), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(1.7, -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, -4.4, 8.6, 813.355, -6.2)))))), injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[0], _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED(-78.17), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), sqrt(vec2(1.0, 1.0)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, -6.5)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(_GLF_IDENTITY(0.9, mix(float(_GLF_FUZZED(6394.6107)), float(_GLF_IDENTITY(0.9, (true ? 0.9 : _GLF_FUZZED(-6.8)))), bool(true))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, false)))), true && (! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, false)))))))))), true && _GLF_IDENTITY((true), ! (! ((true))))))))))), true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(1.0, 1.0, 1.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(1.0, 1.0, 1.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-1.7)), bool(false))))), 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), dot(vec2(abs(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, determinant(mat3(1.0, sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 1.0)))))), 0.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(377.993) : 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), 1.0 * (0.0)))), 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581))), (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581))), min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-45581)))))))], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-429.503), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), bvec2(true, true)))[1])), (false ? _GLF_FUZZED(vec2(0.9, -41.18)) : _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2658.4245, -2616.4930, -59.41, 59.89)) : mat2(1.0))) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-429.503), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1])))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))] : _GLF_FUZZED(exp(-7.1)))), injectionSwitch[_GLF_IDENTITY(1, 0 | (1))]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.3))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -894.764), max(_GLF_IDENTITY((+ -894.764), _GLF_IDENTITY(float(float((+ -894.764))), clamp(float(float((+ -894.764))), float(float((+ -894.764))), float(float((+ -894.764)))))), (+ -894.764)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]), float(vec2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]), 1.0)))), injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)), 0), (ivec4(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)), 0)) ^ ivec4(0, 0, 0, 0)))) : _GLF_FUZZED(ivec3(-55975, -82743, -56613)))))) >> 0))])))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(_GLF_IDENTITY(3.3, _GLF_ONE(1.0, injectionSwitch.y) * (3.3)))))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((-3.2))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED((-3.2)), float(vec3(_GLF_IDENTITY(_GLF_FUZZED((-3.2)), mix(float(_GLF_FUZZED(-936.706)), float(_GLF_FUZZED((-3.2))), bool(true))), 1.0, sin(0.0))))), bool(false))) : _GLF_FUZZED(-4103.2817)))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) * (injectionSwitch))[0], (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) * (injectionSwitch))[0]) / 1.0), injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) * 1.0), injectionSwitch[1]), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, (1.7) - 0.0)) / abs(1.0)), 1.7)), -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, _GLF_IDENTITY(-4.4, float(mat2(-4.4, 1.0, 1.0, 0.0))), 8.6, _GLF_IDENTITY(813.355, clamp(_GLF_IDENTITY(813.355, (false ? _GLF_FUZZED(-2.8) : 813.355)), 813.355, 813.355)), -6.2)))))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, (1.7) - 0.0)) / abs(1.0)), 1.7)), -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, _GLF_IDENTITY(-4.4, float(mat2(-4.4, 1.0, 1.0, 0.0))), 8.6, _GLF_IDENTITY(813.355, clamp(_GLF_IDENTITY(813.355, (false ? _GLF_FUZZED(-2.8) : 813.355)), 813.355, 813.355)), -6.2)))))), injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, (1.7) - 0.0)) / abs(1.0)), 1.7)), -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, _GLF_IDENTITY(-4.4, float(mat2(-4.4, 1.0, 1.0, 0.0))), 8.6, _GLF_IDENTITY(813.355, clamp(_GLF_IDENTITY(813.355, (false ? _GLF_FUZZED(-2.8) : 813.355)), 813.355, 813.355)), -6.2)))))), injectionSwitch[1]), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, (1.7) - 0.0)) / abs(1.0)), 1.7)), -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, _GLF_IDENTITY(-4.4, float(mat2(-4.4, 1.0, 1.0, 0.0))), 8.6, _GLF_IDENTITY(813.355, clamp(_GLF_IDENTITY(813.355, (false ? _GLF_FUZZED(-2.8) : 813.355)), 813.355, 813.355)), -6.2)))))), injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, (1.7) - 0.0)) / abs(1.0)), 1.7)), -2255.2069, 7.5, -826.555, -834.287, -5.6, 19.34, -995.377, _GLF_IDENTITY(-4.4, float(mat2(-4.4, 1.0, 1.0, 0.0))), 8.6, _GLF_IDENTITY(813.355, clamp(_GLF_IDENTITY(813.355, (false ? _GLF_FUZZED(-2.8) : 813.355)), 813.355, 813.355)), -6.2)))))), injectionSwitch[1]))) : _GLF_FUZZED(vec2(570.323, 7843.0509))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))]), clamp(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))]))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[0], _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED(-78.17), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[0], _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED(-78.17), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), bvec2(false, true)))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), sqrt(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_FUZZED(9454.7012), _GLF_FUZZED(-89.11)), bvec2(false, false)))))).y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true)))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-355.806) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))), (false ? _GLF_FUZZED(-8.0) : float(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))))))))) - sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.9) : 0.0))), vec2(0.0, 1.0))))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)) || false)); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) - uvec2(0u, 0u)).x, _GLF_IDENTITY(min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x), (min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x)) * (0u ^ 1u)))], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, true), false)))), true))))))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))) && (bool(bool(! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read, _GLF_IDENTITY((GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read) << 0u, ((GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read) << 0u) + 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read, (GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read) << 0u), (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read, (GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read) << 0u)) >> 0u))) / 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (1 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) / 1)))])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? 0 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (-40956 & 0), (0 >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (-40956 & 0), (0 >> _GLF_IDENTITY(int(5), int(5)))), clamp(ivec4(_injected_loop_counter, 0, (-40956 & 0), (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec4(_injected_loop_counter, 0, (-40956 & 0), (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec4(_injected_loop_counter, 0, (-40956 & 0), (0 >> _GLF_IDENTITY(int(5), int(5))))))) >> ivec4(0, 0, 0, 0)))))))))], injectionSwitch[1])).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, min(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)), _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, max(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)))).x, max(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, max(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, uint(uvec4(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, _GLF_IDENTITY(0u, max(0u, 0u)), (0u ^ 0u), _GLF_IDENTITY(0u, min(0u, 0u))))), GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x))))))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (64) ^ 0), 64, 64)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)))) : _GLF_FUZZED(-80584)), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))))) ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 + (max(64, 64)))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)))) : _GLF_FUZZED(-80584))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64), (false ? _GLF_FUZZED(9238) : clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64))), 1, (0 | (1 ^ 1)), 1), (true ? ivec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64), (false ? _GLF_FUZZED(9238) : clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64))), 1, (0 | (1 ^ 1)), 1) : _GLF_FUZZED(ivec4(-78070, 91334, 69030, 82140))))))))) : _GLF_FUZZED(-80584)), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ _GLF_IDENTITY(0, max(0, 0))), 64, 64)))) : _GLF_FUZZED(-80584))), ~ (~ (~ ((true ? _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)))) : _GLF_FUZZED(-80584))))))))))), 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), sin(sqrt(0.0)) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), true, false, true))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) : max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))))) << (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u)))), _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, 1u, 0u)), max(_GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, 1u, 0u)), (uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) ^ uvec2(0u, 0u)), 1u, _GLF_IDENTITY(0u, (0u) - 0u)))) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, 1u, 0u)), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, 1u, 0u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, 1u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / uvec2(1u, 1u))))).x], GLF_merged2_0_1_4_1_1_14readworkgroup_base.x, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), 4, 4)), max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), (false ? _GLF_FUZZED(-26623) : _GLF_IDENTITY(4, max(4, 4)))))), 4)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((- 51454)) : _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), clamp(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) ? _GLF_FUZZED(-68847) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), int(ivec2((4), 1)))), ~ (~ (~ (~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4)))))))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))))))), max(_GLF_IDENTITY(4, (4) ^ (0 ^ 0)), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, min(4, 4))))))), (_GLF_IDENTITY((60878 & _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(i) : int(6))), int(6)))), max((60878 & _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(i) : int(6))), int(6)))), _GLF_IDENTITY((60878 & _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(i) : int(6))), int(6)))), int(ivec3((60878 & _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(i) : int(6))), int(6)))), 0, 1)))))) ^ (_GLF_IDENTITY(4, max(4, 4)))))), 4)))), 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))));
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0)))) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED((-8.4 / 1098.2095)), _GLF_FUZZED(8404.1648), _GLF_FUZZED(-37.63)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true)))))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, length(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(20.92)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, sin(0.0), 0.0, 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(86.08), _GLF_FUZZED(2.4)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(true, ! (! (true))) ? normalize(vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(min(vec3(-556.845, -720.073, 347.442), vec3(3.5, 9072.6876, -2.8))))))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(mat4(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(-7969.9380), _GLF_FUZZED(793.037), _GLF_FUZZED(-1386.9939)), bvec3(false, false, false))), 0.0, sqrt(0.0), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-96.58), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], float(mat3x2((_GLF_FUZZED(injectionSwitch))[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, true))) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))))))), 1.0))))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))).x)) > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(ceil(-86.46)) : injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-162.880) : injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       else
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), false || ((_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), false || ((_GLF_IDENTITY(! (false), true && (! (false))))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], GLF_merged2_0_1_4_1_1_14readworkgroup_base.x, _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
