#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) || false)) || false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x), min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)), gl_WorkGroupSize.x), (false ? _GLF_FUZZED(85380u) : min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), gl_WorkGroupSize.x))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, uint(uvec4(gl_WorkGroupSize.x, 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), gl_WorkGroupSize.x), ~ (~ (min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ 0u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), 0.0)), injectionSwitch.x)) + (uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(1u ^ 0u, (true ? 1u ^ 0u : _GLF_FUZZED(subgroup_id))))))))), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ 0u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1u ^ 0u), clamp(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | 0u), (1u ^ 0u), (1u ^ 0u))))))))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), (uint(uvec3(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) + 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << (0u | 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base)))))), (workgroup_base)), (max((workgroup_base), (workgroup_base))) | _GLF_IDENTITY(0u, 0u ^ (0u))))), max((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), (max((workgroup_base), (workgroup_base))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), (max((workgroup_base), (workgroup_base))) | 0u))), clamp((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), _GLF_IDENTITY((max((workgroup_base), (workgroup_base))) | 0u, ((max((workgroup_base), (workgroup_base))) | 0u) | ((max((workgroup_base), (workgroup_base))) | 0u))))), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(max((workgroup_base), (workgroup_base)), (max((workgroup_base), (workgroup_base))) | 0u), (max((workgroup_base), (workgroup_base))) | 0u))), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), (max((workgroup_base), (workgroup_base))) | 0u))))))))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), clamp(_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) << 0u), _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) << 0u), ((workgroup_base)))) >> 0u))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) + subgroup_id * subgroup_size) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec3(uint(0u), 1u, 1u)))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) >> 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) >> 0u))))) ^ 0u) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id))), virtual_gid)), 0u, 1u, 1u)))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) >> 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u)), max(0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u))))) | ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : (0u) | 0u))), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) >> 0u))) ^ 0u) ^ 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) >> 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) >> 0u))))) ^ 0u) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id))), virtual_gid)), 0u, 1u, 1u)))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) >> 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u)), max(0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) >> 0u))))) | ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : (0u) | 0u))), _GLF_IDENTITY(0u, (0u) / 1u))) ^ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) >> 0u))) ^ 0u) ^ 0u))))))) ^ 0u));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), clamp(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), max(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))), _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid)))))) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (true ? _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) : _GLF_FUZZED(subgroup_size)))) - 0u))))))) | ((virtual_gid))))))) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))), virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), true, false)))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.1)), bvec2(true, false))).x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(68227))), min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(68227))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(68227)))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec4(4, 0, 1, (0 ^ 1)))), _GLF_IDENTITY(4, min(4, 4)))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-73.44, 0.5, -8163.3034, 4.9).a)), bool(false))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.5) : injectionSwitch.x))))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y, false))))))) || false)))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, -387.926)) : _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))) : injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, false)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, false)))) - vec2(0.0, 0.0)) - sqrt(vec2(0.0, 0.0)))))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))), vec2(mat3(vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0))), vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).x : _GLF_FUZZED(8140.7594))) > injectionSwitch.y, true, false, false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))))[0], _GLF_FUZZED(38.75)), vec2(_GLF_FUZZED(-56.56), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))))[1]), bvec2(false, true)))), vec2(mat4(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))))[0], _GLF_FUZZED(38.75)), vec2(_GLF_FUZZED(-56.56), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), bvec2(false, true)))))[1]), bvec2(false, true)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(455.389)), bool(false))), (true ? injectionSwitch.y : _GLF_FUZZED(acosh(vec4(-9.0, -8.1, -4150.4266, 47.43).r)))), injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))) && true))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0)), (mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0)), (mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0)), (mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))))))), float(_GLF_FUZZED((98.28 - 6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])), abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (false ? _GLF_FUZZED(atan(-242.857, 638.671)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])), cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1]), clamp(clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])), clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), 1.0 * (_GLF_FUZZED(-9.0)))), float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1]))) / round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], clamp(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]) * 1.0), injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])), min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]) * 1.0), injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]) * 1.0), injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])))), injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], cos(0.0) * (injectionSwitch[1])))), injectionSwitch[1])), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))) | 0))), 4)), _GLF_IDENTITY(4, 1 * (4)), 4))))))) ^ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0 | _GLF_IDENTITY(0, max(0, 0)), 1, 1), (ivec3(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), ~ (~ (~ (_GLF_IDENTITY(0, (0) << 0) | 0)))))), 1, 1)) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0 | 0, 1, 1), (_GLF_IDENTITY(ivec3(0 | 0, 1, 1), ivec3(ivec3(ivec3(0 | 0, 1, 1))))) ^ ivec3(0, 0, 0)), ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0) | (_GLF_IDENTITY(ivec3(0 | 0, 1, 1), (_GLF_IDENTITY(ivec3(0 | 0, 1, 1), ivec3(1, 1, 1) * (ivec3(0 | 0, 1, 1)))) ^ ivec3(0, 0, 0))))) | (_GLF_IDENTITY(ivec3(0 | 0, 1, 1), (ivec3(0 | 0, 1, _GLF_IDENTITY(1, min(1, 1)))) ^ ivec3(0, 0, 0))))), (int(_GLF_IDENTITY(ivec3(0 | 0, 1, 1), (ivec3(0 | 0, 1, 1)) ^ ivec3(0, 0, 0)))) | (int(_GLF_IDENTITY(ivec3(0 | 0, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))))), (ivec3(0 | 0, 1, 1)) ^ ivec3(0, 0, 0))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((0 | 0) + (64), clamp((0 | 0) + (64), (0 | 0) + (64), (0 | 0) + (64))))) ^ (0 | _GLF_IDENTITY(0, max(0, 0))), (true ? (_GLF_IDENTITY(64, (0 | 0) + (_GLF_IDENTITY(64, (64) + 0)))) ^ (0 | 0) : _GLF_FUZZED(77092))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-28498, _GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0)) | ((-28498))) | 0), max(_GLF_IDENTITY(-28498, _GLF_IDENTITY((_GLF_IDENTITY(-28498, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (_GLF_IDENTITY(-28498, 0 + (-28498))))), (_GLF_IDENTITY(_GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0), clamp(_GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0), _GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0), _GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0)))) | ((-28498))) | 0), _GLF_IDENTITY(-28498, _GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), (_GLF_IDENTITY((-28498), 0 ^ ((-28498)))) >> 0)) | (_GLF_IDENTITY((-28498), clamp((-28498), (-28498), (-28498))))) | 0)))), 0 | (_GLF_IDENTITY(true ? (64) ^ (0 | 0) : _GLF_FUZZED(-28498), (true ? (_GLF_IDENTITY(64, ~ (~ (64)))) ^ (0 | 0) : _GLF_FUZZED(-28498)) | 0)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(36.22) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
