#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, true && (false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))))), true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false)))))), true)))), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(false, (false) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)), true))))))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, true && (false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))))), true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false)))))), true)))), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(false, (false) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(6801.6588)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(467.794)), float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), bool(true)))) > injectionSwitch.y)), false, false, false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(467.794)), float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), bool(true)))) > injectionSwitch.y)), false, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) && true)), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED((6.6)) : cos(0.0))), _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-4.7))))), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec2(bvec2(bool(bvec3(true, true, true)), true)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec2(bvec2(bool(bvec3(true, true, true)), true)))), false)), false, false)))), false, true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), true && (bool(bool(true))))))), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, ! (! (true))), true, true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(true))))))))), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, ! (! (true))), true, true))))))), false))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(884.243)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.5)), float(0.0), bool(true)))), bool(true))), 0.0)), 1.0))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, (false ? _GLF_FUZZED(70.49) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, max((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-109.607), 0.0 + (_GLF_FUZZED(-109.607)))))))))), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, (false ? _GLF_FUZZED(70.49) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, max((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0 * (1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0 : _GLF_FUZZED(-109.607)))))))), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true && (true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, (false ? _GLF_FUZZED(70.49) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, max((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false))) ? (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0 : _GLF_FUZZED(-109.607)))))))), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))))))), bool(bvec2(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))) || false) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))), true)))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(822.834)), vec2(_GLF_FUZZED(-3.7), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)), false))), true), false, true)))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, false), true))))), true))))), false))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true))), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), _GLF_IDENTITY(true, true && (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))), true, true, true))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true, true, true), false))))))), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false)))))))))), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), true, true, true))))))), false))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, false))))), _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, _GLF_IDENTITY(true, (true) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), true, true, true))))), false))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(5090.4021)), vec2(_GLF_FUZZED(-5.2), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))))[1], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-79.06)), bool(false))), cos(0.0))), (_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-79.06)), bool(false))), cos(0.0)))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))))[1], (false ? _GLF_FUZZED(8.8) : (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-79.06)), bool(false))), cos(0.0))), (_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-79.06)), bool(false))), cos(0.0)))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))))[1]))) / 1.0)), bvec2(false, true))).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))), true && (bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))), true && (bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))), true && (bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false)))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true))) && (bool(bool(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false, false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(true, true, true)), true), false, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true))))), ! (! (! ((_GLF_IDENTITY(true, ! (! (true)))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), true))))), false)))))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))))))))) || false)))))), _GLF_IDENTITY(true, (true) || false)))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.0) : 0.0)), 1.0))).x > injectionSwitch.y))))), bool(bvec2(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(false, (false) || false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(false, (false) || false), true))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(false, (false) || false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(false, (false) || false), true)))))))))) && true) || false) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x, abs(0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(_GLF_IDENTITY(0.0, abs(0.0) + (0.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x)) > injectionSwitch.y))))), true)))))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))), mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0), injectionSwitch.y)))) && true)))), ! (! (true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)), (mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((63.04 / matrixCompMult(mat2(4210.0244, -6.5, -491.037, -47.23), mat2(-82.15, 7.9, 46.42, -5.0)))) : _GLF_IDENTITY((mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat3x4((mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)), (mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)), (mat2(1.0) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, 0.0)))))))), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, abs(1.0), 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))) && true)))))))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED((95.86 + 1.2))), mix(float(float(_GLF_FUZZED((95.86 + 1.2)))), float(_GLF_FUZZED((3.5 - -0.7))), bool(false))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 0.0, 1.0)), max(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 0.0, 1.0)), (float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.8))), 0.0, 0.0))) * 1.0), 1.0))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 0.0, 1.0)), max(float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 0.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 0.0, 1.0))))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))))).x > injectionSwitch.y)), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((95.86 + 1.2))), bool(false)))) / 1.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true), false))))))))))))), bool(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true))))) * 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(vec3(7.0, -363.548, -1548.1763).s)), _GLF_IDENTITY(float(min(1.0, 1.0)), min(_GLF_IDENTITY(float(min(1.0, 1.0)), mix(float(_GLF_FUZZED(8.7)), float(float(min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(min(1.0, 1.0)))), bool(true)))))))))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.8)), bool(false))), 0.0, 0.0)), (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))), bool(bvec4(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), max(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(cos(0.0), float(mat4x3(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(61.95) : cos(0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), exp(0.0))), sqrt(0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, exp(0.0), sqrt(0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0))), 0.0, sqrt(1.0), 0.0, tan(0.0), 0.0, abs(1.0), round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0)))))))), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(670.728))))), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), float(float(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))))), (true ? clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(23.38)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(float(mat2(clamp(1.0, 1.0, 1.0), 1.0, length(abs(vec2(0.0, 0.0))), 0.0)), float(mat2x4(float(mat2(clamp(1.0, 1.0, 1.0), 1.0, length(abs(vec2(0.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (true ? clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(23.38)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec2(89.75, 2.7)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (true ? clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(23.38)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (true ? clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(23.38)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), (_GLF_IDENTITY(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), float(_GLF_IDENTITY(vec2(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), 1.0), clamp(vec2(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), 1.0), vec2(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), 1.0), vec2(dot(vec3(9.3, -424.894, -1.2), vec3(34.32, -7.5, -40.91)), 1.0)))))) - 0.0)) : _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-120.831) : cos(0.0))))), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), (true ? clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(23.38)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 0.0, 0.0, 1.0))).x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))), false, true, false))), true))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false)))))) || false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)))) && true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) >> 0u))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) | ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - (uvec3(172770u, 150604u, 157416u).y & 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) << 0u)))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true), true, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), (_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), bool(bool(! (! (subgroup_local_id + 1 < subgroup_size)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat2x4(float(injectionSwitch.y), sqrt(1.0), exp(0.0), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-20.62)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-67.00) : normalize(1.0)))))), mat4(1.0) * (mat2x4(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), sqrt(1.0), exp(0.0), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6314.9199))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, round(length(normalize(1.0)))))))), float(_GLF_FUZZED(float(2199u))), bool(false))) : _GLF_FUZZED((-0.6 * -8148.2146))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) && true) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)) && true)))
      barrier();
    }
   int i = 0;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))))
    barrier();
  }
}
