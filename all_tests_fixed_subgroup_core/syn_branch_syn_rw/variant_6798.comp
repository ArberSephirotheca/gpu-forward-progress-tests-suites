#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat3x4 _f0;
 int i;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 bvec2 _f1;
 bvec3 _f2;
 mat4 _f3;
 bvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 int _f1;
 float _f2;
 ivec4 _f3;
 uint _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat3x4 _f1;
 uint _f2;
 mat4x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 vec3 _f3;
 uint virtual_gid;
 bvec3 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 vec2 _f1;
 vec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(-4.9, -589.360)))), vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 0.0, 0.0))), injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 0.0, 0.0))), injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_base;
 _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_base, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_base))) + ((uvec3(108823u, 16024u, 25719u) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, false, true))) && true))) || _GLF_IDENTITY(false, true && (false))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, false, true))) && true))) || _GLF_IDENTITY(false, true && (false))))), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, false, true))) && true))) || _GLF_IDENTITY(false, true && (false))))), true), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, false, true))) && true))) || _GLF_IDENTITY(false, true && (false))))), true), false), false)), false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))) && true)) && true)) || false)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))) && true)) && true)) || false)))), true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sin(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), false, false))))))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), false || (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))))))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))), float(_GLF_FUZZED(-951.192)), bool(false))))) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))), float(_GLF_FUZZED(-951.192)), bool(false))))) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, false))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))), ! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((- -7276.9534)))))))) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(-171.976)), bvec2(false, false))).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) && _GLF_IDENTITY(true, ! (! (true))))))))))))), false, false))))))) || false)) && true) || false))))))) && true))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)))) / 1u) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), _GLF_FUZZED(subgroup_id))) : workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(subgroup_id), 0u, 1u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid) : uvec4(_GLF_FUZZED(subgroup_id), 0u, 1u, 0u))))) : workgroup_size)))) / 1u) * 1u), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)))) / 1u) * 1u)) + (1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id))) : workgroup_size)))) / 1u) * 1u), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) : workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)))) / 1u) * 1u)) >> 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))) >> uvec2(0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, uint(uvec4(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u)))) << 0u)) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))) >> uvec2(0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, uint(uvec4(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u)))) << 0u)) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))) >> uvec2(0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, uint(uvec4(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u)))) << 0u)) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))) >> uvec2(0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, uint(uvec4(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u)))) << 0u)) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) * _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x) - 0u);
 GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(true, mat3x4(1.0), 1u, mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY((true ? uvec4(1u) : _GLF_FUZZED(uvec4(189680u, subgroup_id, uvec2(52692u, 65664u)))), ~ (~ ((true ? uvec4(1u) : _GLF_FUZZED(uvec4(189680u, subgroup_id, uvec2(52692u, _GLF_IDENTITY(65664u, min(_GLF_IDENTITY(65664u, uint(uvec3(65664u, 1u, 1u))), 65664u))))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((true ? uvec4(1u) : _GLF_FUZZED(uvec4(189680u, subgroup_id, uvec2(52692u, 65664u)))), ~ (~ ((true ? uvec4(1u) : _GLF_FUZZED(uvec4(189680u, subgroup_id, uvec2(52692u, _GLF_IDENTITY(65664u, min(_GLF_IDENTITY(65664u, uint(uvec3(65664u, 1u, 1u))), 65664u))))))))))))), mat2x3(1.0), _GLF_struct_1(mat4(1.0), 1, 1.0, ivec4(1), 1u, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), ! (! (! ((true) || false))))))))), vec3(1.0), GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))) * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_local_id)))))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, subgroup_id)))) * subgroup_size), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_local_id)))))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + 0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + 0u, ((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + 0u) / 1u)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u + (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) ^ 0u))), clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), uint(uvec2(clamp(subgroup_id, subgroup_id, subgroup_id), 0u)))))), min(subgroup_id, subgroup_id)))) * subgroup_size)) << 0u)) + subgroup_local_id, bvec3(true), _GLF_struct_2(ivec3(1), bvec2(true), bvec3(true), mat4(1.0), bvec2(true), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), false)), true)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), false)), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), true)))), true)))))))))))))), vec2(1.0), vec3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size))) - (68452u & 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.w = next_virtual_gid, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), max((_GLF_FUZZED(subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), 1u * ((_GLF_FUZZED(subgroup_size)))))) << 0u) : GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.w = next_virtual_gid, ~ (~ (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), max((_GLF_FUZZED(subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), 1u * ((_GLF_FUZZED(subgroup_size)))))) << 0u) : GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.w = next_virtual_gid)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.x = GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint read = atomicLoad(buf[_GLF_struct_replacement_4._f0.virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)), 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)), min(clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)), 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)), 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0, (((4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0) ^ (0 << _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY(4, (4) - 0)))))) | 0)) >> 0), 64, 0);
 GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, _GLF_IDENTITY(max(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid), (max(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)) << uvec4(0u, 0u, 0u, 0u))).xyz.x], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, sqrt(0.0), 1.0), vec3(vec4(_GLF_IDENTITY(vec3(injectionSwitch.y, sqrt(0.0), 1.0), vec3(mat3(vec3(injectionSwitch.y, sqrt(0.0), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat3x4(1.0), 0);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) || false))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_4._f0.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)), max(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)), _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)))).xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz) >> uvec3(0u, 0u, 0u)).y, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, uvec4(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid[0], GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid[1], GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid[2], GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid[3]))) | uvec4(0u, 0u, 0u, 0u)), GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)), (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).xyz.y, 0u)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, 1u * (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, 0u), min(uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, max(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz) | (_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz)))))).y, 0u)) / uvec2(1u, 1u))))))) - 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz.y, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid)).xyz, (true ? _GLF_IDENTITY(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, _GLF_IDENTITY(min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid), (_GLF_IDENTITY(min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid), ~ (~ (min(GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid, GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid))))) - uvec4(0u, 0u, 0u, 0u))).xyz : _GLF_FUZZED((GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_base | workgroup_base)))).y, 0u)))) - 0u))) >> 0u)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.5, _GLF_IDENTITY(-859.731, (true ? _GLF_IDENTITY(-859.731, clamp(-859.731, -859.731, -859.731)) : _GLF_FUZZED(-856.174))))))).x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_4._f0.virtual_gid], GLF_merged2_0_3_65_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_basenext_virtual_gid.xyz.y, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 1))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
}
