#version 460
struct _GLF_struct_2 {
 uvec4 _f0;
 mat2x3 _f1;
 int i;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 ivec2 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 ivec4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, ivec4(1));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(1u, ivec2(1), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + _GLF_struct_replacement_1.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + ((_GLF_struct_replacement_1.subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_struct_replacement_1.subgroup_local_id + 1 < _GLF_struct_replacement_0.subgroup_size)
  {
   _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(uvec3(1u), _GLF_struct_2(uvec4(1u), mat2x3(1.0), 0));
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
