#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-8.0), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2161.5930)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.0, min(-8.0, -8.0))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz = GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false)))), ((bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false))))) || false) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y = GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, sqrt(0.0))), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), float(mat3x2(exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-65.00))), 1.0, sqrt(0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(-87.18, 0.0 + (_GLF_IDENTITY(-87.18, mix(float(_GLF_FUZZED(-3449.1942)), float(_GLF_IDENTITY(-87.18, _GLF_IDENTITY(clamp(-87.18, -87.18, _GLF_IDENTITY(-87.18, float(mat4x2(_GLF_IDENTITY(-87.18, mix(float(-87.18), float(_GLF_FUZZED(-1541.2350)), bool(false))), sqrt(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), max(clamp(-87.18, -87.18, _GLF_IDENTITY(-87.18, float(mat4x2(_GLF_IDENTITY(-87.18, mix(float(-87.18), float(_GLF_FUZZED(-1541.2350)), bool(false))), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), _GLF_IDENTITY(clamp(-87.18, -87.18, _GLF_IDENTITY(-87.18, float(mat4x2(_GLF_IDENTITY(-87.18, mix(float(-87.18), float(_GLF_FUZZED(-1541.2350)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.1) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-1173.1655)))))), 1.0)))), mix(float(_GLF_FUZZED(6069.9352)), float(_GLF_IDENTITY(clamp(-87.18, -87.18, _GLF_IDENTITY(-87.18, float(mat4x2(_GLF_IDENTITY(-87.18, mix(float(-87.18), float(_GLF_FUZZED(-1541.2350)), bool(false))), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), (clamp(-87.18, -87.18, _GLF_IDENTITY(-87.18, float(mat4x2(_GLF_IDENTITY(-87.18, mix(float(-87.18), float(_GLF_FUZZED(-1541.2350)), bool(false))), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))))) * 1.0)), bool(true))))))), bool(true))))))), mat2(1.0) * (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-87.18, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-809.319))) + (_GLF_IDENTITY(-87.18, mix(float(_GLF_FUZZED(-3449.1942)), float(-87.18), bool(true))))))), _GLF_IDENTITY(vec2(mat3x4(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-87.18, 0.0 + (_GLF_IDENTITY(-87.18, mix(float(_GLF_FUZZED(-3449.1942)), float(-87.18), bool(true))))))), 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-3730.2731, -49.78)) : vec2(mat3x4(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-87.18, 0.0 + (_GLF_IDENTITY(-87.18, mix(float(_GLF_FUZZED(-3449.1942)), float(-87.18), bool(true))))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))) * _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (true ? _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.7), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(446.288)), vec2(_GLF_IDENTITY(((vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)))), max(_GLF_IDENTITY(((vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)))), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(6262.0939)), vec2((((vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)))))[0], (((vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)))))[1]), bvec2(true, true))), ((vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0))))))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1)))))), mix(vec2((_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (_GLF_IDENTITY(true ? _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.7), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1)), (true ? _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.7), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1))) / vec2(1.0, 1.0)))))))[0], _GLF_FUZZED(84.90)), vec2(_GLF_FUZZED((-1.2 - 1.2)), _GLF_IDENTITY((_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (true ? _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.7), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], _GLF_IDENTITY(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1], (_GLF_IDENTITY(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1], 0.0 + (((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]))) * 1.0)), bvec2(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) : _GLF_FUZZED(vec2(6349.4048, 2.1)))))))[1], float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)])), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])) * mat2(1.0))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) - tan(0.0)), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)])), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])) * mat2(1.0))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) - tan(0.0)), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1))))))), (true ? (_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)])), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])) * mat2(1.0))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) - tan(0.0)), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1))))))) : _GLF_FUZZED(vec2(3.2, -26.87)))), (_GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), clamp((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)])), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])) * mat2(1.0))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) - tan(0.0)), mix(float(_GLF_FUZZED(-1556.5334)), float(_GLF_FUZZED(1.7)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(446.288)), vec2(((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1])))[0], ((vec2(_GLF_FUZZED(3.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)])))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(vec2(6349.4048, 2.1)))))))))[1], 1.0, 1.0, 1.0, 1.0, 0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0))).y)), true)))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0))).y)), true)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))) && true)), (bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false)))), (true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true, false))), ! (! (! (false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y)))))))))), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) && true), true))) && true)), (bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)))) && true))) || false))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))))))), ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(29.35)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.99))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.99))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.99))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true))))))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))), ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)))) && true)) && true) || false)))))))))) || false)) && true, false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false, ((false) || false) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true)))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(44.99)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true))))))))), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), false)))))))))))))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true)))))), true), bvec2(bvec4(bvec2(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))))))))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (injectionSwitch.x > injectionSwitch.y)))), true)))))), true), true, false)))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.z = _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.7) : injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.7) : injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.7) : injectionSwitch.y)))))) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))), (false ? _GLF_FUZZED(8.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76)), max((true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76)), clamp((true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76)), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76)), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) : _GLF_FUZZED(50.76))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7590.3454), _GLF_FUZZED((+ -5032.9671))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(round(length(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED((true ? -1844.4191 : 9012.6108))), float(normalize(1.0)), bool(true)))))))), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, log(1.0), sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)))))) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))) : _GLF_FUZZED(mat2(650.553, -134.018, -63.44, -439.501))))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(69.86)), vec2(_GLF_FUZZED(6911.0135), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(198945u))), bool(false))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(round(length(normalize(1.0)))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[0], _GLF_FUZZED(3014.9902)), vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) - 0)], mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0]), float(_GLF_FUZZED(73.29)), bool(false))), _GLF_FUZZED((2201.5349))), vec2(_GLF_FUZZED(-38.61), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]), bvec2(false, true)))[1]), bool(true)))), bvec2(false, true))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_FUZZED(8.9)), float(round(length(normalize(1.0)))), bool(true)))))), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[0], _GLF_FUZZED(3014.9902)), vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) - 0)], mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0]), float(_GLF_FUZZED(73.29)), bool(false))), _GLF_FUZZED((2201.5349))), vec2(_GLF_FUZZED(-38.61), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]), bvec2(false, true)))[1]), bool(true)))), bvec2(false, true))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_FUZZED(8.9)), float(round(length(normalize(1.0)))), bool(true)))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[0], _GLF_FUZZED(3014.9902)), vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) - 0)], mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0]), float(_GLF_FUZZED(73.29)), bool(false))), _GLF_FUZZED((2201.5349))), vec2(_GLF_FUZZED(-38.61), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]), bvec2(false, true)))[1]), bool(true)))), bvec2(false, true))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_FUZZED(8.9)), float(round(length(normalize(1.0)))), bool(true)))))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(49.64)), (float(_GLF_FUZZED(49.64))) + 0.0), float(injectionSwitch.x), bool(true)))) - tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), 0.0), (false ? _GLF_FUZZED(mat3x2(-8.1, -11.64, -0.4, 474.701, 32.11, 28.38)) : mat3x2(1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec3(554.960, -243.174, -2262.2539), cosh(vec3(1.4, -8.5, 4.8))))))), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), 0.0)))))) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x)))), injectionSwitch.x))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0)), (false ? _GLF_FUZZED(4.5) : clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0)))))), abs(round(length(normalize(1.0))))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), false, true, false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5878.6168) : injectionSwitch.y)) : _GLF_FUZZED(0.7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5878.6168) : injectionSwitch.y)) : _GLF_FUZZED(0.7))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5878.6168) : injectionSwitch.y)) : _GLF_FUZZED(0.7))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5878.6168) : injectionSwitch.y)) : _GLF_FUZZED(0.7))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (false ? _GLF_FUZZED(5878.6168) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-752.345) : injectionSwitch.y)))))) : _GLF_FUZZED(0.7)))))))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup, (true ? GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup : _GLF_FUZZED(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup))).w, 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(uvec3(3u, 1u, 1u)))))))), (uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | _GLF_IDENTITY((uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), min(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))))), min(uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(_GLF_IDENTITY(3u, (3u) - 0u)))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))), uint(_GLF_IDENTITY(uint(((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), (uint(((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))))) * 1u))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (~ (uint(3u))), ~ (~ (~ (~ (uint(3u)))))))))))), uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(167573u, min(167573u, 167573u)), clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))))))))))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, _GLF_IDENTITY(167573u, (167573u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 167573u))) : _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (~ (uint(3u))), uint(_GLF_IDENTITY(uvec3(~ (~ (uint(3u))), _GLF_IDENTITY(1u, (1u) | 0u), 0u), min(uvec3(~ (~ (uint(3u))), _GLF_IDENTITY(1u, (1u) | 0u), 0u), _GLF_IDENTITY(uvec3(~ (~ (uint(3u))), _GLF_IDENTITY(1u, (1u) | 0u), 0u), (uvec3(~ (~ (uint(3u))), _GLF_IDENTITY(1u, (1u) | 0u), 0u)) / uvec3(1u, 1u, 1u))))))))))) * 1u))))))), uint(uint((uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ _GLF_IDENTITY((~ (uint(3u))), ((~ (uint(3u)))) | ((~ (uint(3u)))))))) | 0u)))))))))), (true ? GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup, (true ? GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup : _GLF_FUZZED(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup))).w, 1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), uint(_GLF_IDENTITY(3u, uint(uvec3(_GLF_IDENTITY(3u, uint(uvec3(3u, 0u, 1u))), 1u, _GLF_IDENTITY(1u, (0u ^ 0u) + (1u)))))))))), (uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | _GLF_IDENTITY((uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(3u, (3u) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ~ (_GLF_IDENTITY(~ (~ (~ (uint(_GLF_IDENTITY(3u, (3u) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), (~ (~ (~ (uint(_GLF_IDENTITY(3u, (3u) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))) << 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), min(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), ~ (~ (uint(3u))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))))), min(uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(167573u, max(167573u, 167573u)), clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(167573u, max(167573u, 167573u)), clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(167573u, max(167573u, 167573u)), _GLF_IDENTITY(clamp(167573u, 167573u, 167573u), (true ? clamp(167573u, 167573u, 167573u) : _GLF_FUZZED(77377u))))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))))))))))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(167573u, clamp(167573u, 167573u, 167573u))) : _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (~ (uint(3u))), uint(uvec3(~ (~ (uint(3u))), 1u, 0u)))))))) * 1u))))))), uint(uint((uint(uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w, 1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ _GLF_IDENTITY((~ (uint(3u))), ((~ (uint(3u)))) | ((~ (uint(3u)))))))) | 0u, ((_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ _GLF_IDENTITY((~ (uint(3u))), ((~ (uint(3u)))) | ((~ (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), min((uint(3u)), _GLF_IDENTITY((uint(3u)), clamp((uint(3u)), _GLF_IDENTITY((uint(3u)), uint(uvec4((uint(3u)), 0u, 1u, 0u))), (uint(3u)))))) / 1u)))))))) | 0u) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))))))))))) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(0.0), 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, length(tan(vec2(0.0, 0.0))), cos(0.0)))).x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), false, false), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.z = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(192.613), clamp(_GLF_IDENTITY(_GLF_FUZZED(192.613), clamp(_GLF_FUZZED(192.613), _GLF_FUZZED(192.613), _GLF_FUZZED(192.613))), _GLF_FUZZED(192.613), _GLF_FUZZED(192.613))) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(192.613), clamp(_GLF_IDENTITY(_GLF_FUZZED(192.613), clamp(_GLF_FUZZED(192.613), _GLF_FUZZED(192.613), _GLF_FUZZED(_GLF_IDENTITY(192.613, (192.613) / 1.0)))), _GLF_FUZZED(192.613), _GLF_FUZZED(192.613))) : injectionSwitch.y))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3156.5192 / 8.0))), float(injectionSwitch.y), bool(true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(73.69)), bool(false))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(73.69)), bool(false))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(947.470)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)) : _GLF_FUZZED(tanh(-2329.0742)))) : _GLF_FUZZED(3.3)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id))).y, GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y)) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (false ? _GLF_FUZZED(workgroup_size) : (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))))) | (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (1u ^ 1u) | ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))))))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, min(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, ~ (~ (GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y))))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])).y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])).y) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])).y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])).y) / 1u))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))))))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, (GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id) | _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id)), (((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id))) + uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id), uvec3(0u, 0u, 0u) | ((GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id))))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, (GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id) | (GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id))) ^ uvec3(0u, 0u, 0u)))))), GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id)).z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y, clamp(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y, GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y, max(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y, GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.y)))) + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, max(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, min(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y, GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.y)))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))))) + ((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, max(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id)), GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, clamp(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id, GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id)))).z + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0))))))) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), false))), false, false))))) && ((false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)) && true)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), true, true, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))], 4, _GLF_IDENTITY(64, (64) ^ 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED((+ 65.82))), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz.x = read;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.x = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup, uvec4(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup[0], GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup[1], GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup[2], GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup[3])).xyz.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))) / cos(0.0)) > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))) / cos(0.0)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))) / cos(0.0)) > injectionSwitch.y)))))) && true))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3473.7140))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bool(((false)) && true)))))))), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), false, true, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(true, false, false, true))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(true, false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, false, true)), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, false, true)), false, true, false)), (bool(bvec4(bool(bvec4(true, false, false, true)), false, true, false))) && true), false, false, true))))))))), true, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))) && true)), false, false, false))), bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))), false, true, true))))), true, true, true))) && true)))
  barrier();
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.z + 1 < GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2063.5256)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0)).y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(refract(vec2(-7.4, 1929.3340), vec2(-690.979, 1.2), 594.465)))))[0], _GLF_FUZZED(0.6)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-273.867) : injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), true))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-273.867) : injectionSwitch.y))))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6352.2083))), injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid))], GLF_merged3_0_1_4_1_1_11_2_1_17readsubgroup_idsubgroup_local_id.x, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))) * 1));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-66.68))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(5298.4046) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false, true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((7.0 - 44.39)), _GLF_FUZZED(6.1)), bvec2(false, false))).x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)) && _GLF_IDENTITY((! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))).x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))), true)), false))))), false, _GLF_IDENTITY(true, false || (true)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((7.0 - 44.39)), _GLF_FUZZED(6.1)), bvec2(false, false))).x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)) && _GLF_IDENTITY((! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))).x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))), true)), false))))), false, _GLF_IDENTITY(true, false || (true)), true))) || false))) || false)) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), false, true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)))) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))) || false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y)) && _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y)) && (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))), true)), false))))), false, true, true)))) || false)) && true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.4) : injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.6) : injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), true)))))), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))))), false, true))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true)))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), true, true)))))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true)), true))), true)), true, true))))))), false), false))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)))), false), false, true)), _GLF_IDENTITY(true, true && (true))))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(false, false), false, true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false)), true)))), false, true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, true))))))))))), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), true, false)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))), true))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2263.7930), 1.0 * (_GLF_FUZZED(-2263.7930))) : injectionSwitch.y)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9821.7886) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
