#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat3 _f0;
 uint read;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_3 {
 bool _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_4 {
 float _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat3 _f1;
 mat2x3 _f2;
 uint _f3;
 float _f4;
 vec4 _f5;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bvec4 _f1;
 vec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 uint workgroup_base;
 ivec4 _f2;
 int _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.y = subgroup_id;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.y = _GLF_IDENTITY(num_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : num_workgroup));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.w = workgroup_id;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(_GLF_struct_0(bvec4(true), bvec4(true), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9262.8722)), bool(false))))), bvec2(true)), _GLF_struct_1(1.0, mat3(1.0), mat2x3(1.0), 1u, 1.0, vec4(1.0)), 1), _GLF_struct_4(1.0, _GLF_struct_3(true, bvec4(true))), GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.w * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.w, ivec4(1), 1);
 uint virtual_gid = _GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.y * subgroup_size + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z;
 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_5.workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.y * subgroup_size + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.x = next_virtual_gid;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x = GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(mat3(1.0), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z) | 0u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z) | 0u)) | (0u | 0u))], 4, 64, 0)), mat3x2(1.0));
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.x], uint(1), 4, 64, 4);
 if(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_12next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_id.z + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(checker[GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z], _GLF_struct_replacement_7._f0.read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_size.z], _GLF_struct_replacement_7._f0.read, 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) >> (0 & -87013)))));
  }
}
