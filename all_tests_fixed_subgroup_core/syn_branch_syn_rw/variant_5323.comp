#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 bool _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 vec2 _f1;
 mat2 _f2;
 mat2 _f3;
 mat2x3 _f4;
 mat2x3 _f5;
 float _f6;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 mat2 _f1;
 mat3x2 _f2;
 vec2 _f3;
 bvec2 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 ivec4 _f3;
 bvec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 mat2x3 _f1;
 _GLF_struct_19 _f2;
 mat4 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 uvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat2x3 _f1;
 vec3 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 mat3x2 _f1;
 uint workgroup_base;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 mat3 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 mat2 _f4;
 uint _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 uint _f1;
 mat3x2 _f2;
 bvec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_7 _f1;
 bool _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat3 _f1;
 mat3 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 int _f2;
 uint subgroup_size;
 mat4 _f3;
 vec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 vec3 _f1;
 bvec3 _f2;
 ivec2 _f3;
 uint _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat3x4 _f1;
 int _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_3 {
 bool _f0;
 uvec2 _f1;
 mat4x3 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_12 _f4;
 uvec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-32.49)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((! (_GLF_DEAD(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) && true, true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((! (_GLF_DEAD(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (bool(bvec4((! (_GLF_DEAD(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(step(58.13, -3.5)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), injectionSwitch.x)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / 1.0) - 0.0))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(uvec2(1u), _GLF_struct_3(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true))), uvec2(1u), mat4x3(1.0), _GLF_struct_0(mat3x2(1.0), vec3(1.0)), _GLF_struct_1(true, mat3x4(1.0), 1, mat4x3(1.0)), _GLF_struct_2(vec4(1.0), vec3(1.0), bvec3(true), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 | (~ (1)))))), max(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)))))), ivec2(1))), 1u, bvec2(true))), _GLF_struct_6(_GLF_struct_4(1.0, mat3(1.0), mat3(1.0), bvec2(true), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), max(vec3(1.0), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), mat2x3(1.0)), _GLF_struct_5(mat3x2(1.0), mat2x4(1.0), uvec2(1u), uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))), true), 1, gl_SubgroupSize, mat4(1.0), vec2(1.0), mat3x4(1.0)), _GLF_struct_8(mat2(1.0), _GLF_struct_7(bvec3(true), 1u, mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), mat2x3(1.0)), true, vec3(1.0)), _GLF_struct_12(_GLF_struct_9(vec2(1.0), mat3(1.0), mat2x3(1.0), mat3x4(1.0), mat2(1.0), 1u), _GLF_struct_10(mat4x2(1.0)), _GLF_struct_11(mat2x3(1.0)), bvec3(true)), uvec3(1u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-30.75) : (injectionSwitch.x))) / cos(0.0)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ ((gl_WorkGroupSize)), (false ? _GLF_FUZZED(mix(uvec3(118400u, 159373u, 18968u), (subgroup_id / uvec3(149135u, 97131u, 165185u)), bvec3(false, false, true))) : (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ ((gl_WorkGroupSize)))))) + uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), (uvec2(0u, 0u)) | _GLF_IDENTITY((uvec2(0u, 0u)), min((uvec2(0u, 0u)), (uvec2(0u, 0u)))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))))))))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y))), false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_IDENTITY(uvec3(1u), ~ _GLF_IDENTITY((~ (uvec3(1u))), ~ (~ ((~ (uvec3(1u))))))), mat3x2(1.0), workgroup_size * workgroup_id, _GLF_struct_16(mat2x3(1.0), _GLF_struct_14(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat2x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.6))), 1.0))), vec3(1.0), mat2x3(1.0), mat2x4(1.0)), _GLF_struct_15(mat4x3(1.0), uvec4(1u), 1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 617.190))), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), true, false)), true, false, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true)) && true) && (false)), true, _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || false)))))), true, false, false))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)), true, false, false))))) || false, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), bool(bvec4(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(5071.1548, -257.793, 8769.6879, -13.40, 8.1, -1815.4878, 6707.8755, 9.1)) : mat2x4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))).x)) > injectionSwitch.y))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))) || false)))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat2x3(1.0), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4768.9195)), float(1.0), bool(true)))), _GLF_struct_19(_GLF_struct_18(uvec2(1u), mat3x4(1.0), bvec3(true), ivec4(1), bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), 1u)), mat4(1.0), _GLF_struct_21(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat2(1.0), mat3x2(1.0), vec2(1.0), bvec2(true), _GLF_struct_20(bvec2(true), vec2(1.0), mat2(1.0), mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2x3(1.0), 1.0)), _GLF_struct_22(true, _GLF_struct_replacement_17.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_13._f2.subgroup_size, 0u ^ (_GLF_struct_replacement_13._f2.subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size, max(subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size, subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size))) ^ _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((1u ^ 1u), 0u ^ ((1u ^ 1u))), clamp((1u ^ 1u), (1u ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) / 1u), min(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) / 1u), _GLF_IDENTITY((1u ^ 1u), _GLF_IDENTITY(((1u ^ 1u)) / 1u, max(_GLF_IDENTITY(((1u ^ 1u)) / 1u, (((1u ^ 1u)) / 1u) | (((1u ^ 1u)) / 1u)), _GLF_IDENTITY(((1u ^ 1u)) / 1u, (((1u ^ 1u)) / 1u) + 0u))))))))) | (_GLF_IDENTITY((1u ^ 1u), uint(uvec2((1u ^ 1u), 0u)))))) + subgroup_local_id), uvec2(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_17.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(_GLF_IDENTITY((num_workgroup), (false ? _GLF_FUZZED(subgroup_local_id) : (num_workgroup))), (_GLF_IDENTITY((num_workgroup), (false ? _GLF_FUZZED(subgroup_local_id) : (num_workgroup)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) + 38583u) + workgroup_id, _GLF_IDENTITY(clamp((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, (_GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u) >> 0u)) | ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, (_GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u) >> 0u)) | ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, (_GLF_IDENTITY((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u, ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u) >> 0u)) | ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u))))))), (num_workgroup + 38583u) + workgroup_id), min(clamp((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY(((num_workgroup + 38583u) + workgroup_id) << 0u, (((num_workgroup + 38583u) + workgroup_id) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), min(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), ~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, (_GLF_IDENTITY((num_workgroup + 38583u), clamp((num_workgroup + 38583u), (num_workgroup + 38583u), (num_workgroup + 38583u))) + workgroup_id) << 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), max((_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))))) | 0u)), ((~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)))) * 1u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup)) + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)), min(~ (_GLF_IDENTITY((num_workgroup + 38583u) + _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), ((num_workgroup + 38583u) + workgroup_id) << 0u)), ~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u)))), (~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u)) | 0u))), (num_workgroup + 38583u) + workgroup_id), _GLF_IDENTITY(clamp((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, 0u + (num_workgroup)) + 38583u) + workgroup_id, (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, (false ? _GLF_FUZZED((-- workgroup_id)) : (num_workgroup + 38583u) + workgroup_id))) << 0u)), (~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((_GLF_IDENTITY(num_workgroup + 38583u, min(_GLF_IDENTITY(num_workgroup + 38583u, min(num_workgroup + 38583u, num_workgroup + 38583u)), _GLF_IDENTITY(num_workgroup + 38583u, ~ (_GLF_IDENTITY(~ (num_workgroup + 38583u), ~ (~ (~ (num_workgroup + 38583u))))))))) + workgroup_id) << 0u))) - 0u))), (num_workgroup + 38583u) + workgroup_id), (clamp((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup + 38583u) + _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((num_workgroup + 38583u) + workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup + 38583u, 1u * (_GLF_IDENTITY(num_workgroup + 38583u, min(num_workgroup + 38583u, num_workgroup + 38583u))))) + workgroup_id, uint(uint((num_workgroup + 38583u) + workgroup_id))), (num_workgroup + 38583u) + workgroup_id)), (_GLF_IDENTITY((num_workgroup + 38583u), 0u ^ ((num_workgroup + 38583u))) + _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) - (1u ^ 1u))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, (_GLF_IDENTITY((num_workgroup + 38583u), ((num_workgroup + 38583u)) << 0u) + workgroup_id) << 0u)), (~ (_GLF_IDENTITY((num_workgroup + 38583u) + workgroup_id, ((num_workgroup + 38583u) + workgroup_id) << 0u))) - 0u))), (num_workgroup + 38583u) + workgroup_id)) ^ 0u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size) | (subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size)), max(subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size, subgroup_id * _GLF_struct_replacement_13._f2.subgroup_size)))) + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) + 0)) % _GLF_struct_replacement_13._f2.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_23._f5.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(51950)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0))) / 1.0), dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), vec2(1.0, 0.0)) : _GLF_FUZZED(-595.745))))), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))), sqrt(0.0), 1.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), sqrt(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f2.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2.subgroup_size))), _GLF_IDENTITY((_GLF_struct_replacement_13._f2.subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), (_GLF_IDENTITY((_GLF_struct_replacement_13._f2.subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), uint(uvec3((_GLF_struct_replacement_13._f2.subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))), 0u, 1u)))) ^ 0u)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_struct_replacement_23._f5.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! (false))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_struct_replacement_23._f5.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
