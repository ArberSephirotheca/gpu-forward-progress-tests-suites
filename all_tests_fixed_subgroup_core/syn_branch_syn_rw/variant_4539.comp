#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(179894u, 79027u, 149606u)) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(119102u, 144601u, 198286u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(-7830.2901) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)))))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true))))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true)))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(sin(vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(sin(vec2(0.0, 0.0)))).x) * sqrt(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(886.735), max(_GLF_FUZZED(886.735), _GLF_FUZZED(886.735)))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || _GLF_IDENTITY(false, ! (! (false)))))) > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))), false))))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (10406 & 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | 1) & 1)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)) && true)))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-7.9))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-7.9))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-7.9))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-7.9))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true)))), true, true, false)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), false))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(float(144633u))), float(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), bool(true))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2995.0980, -3.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2995.0980, _GLF_IDENTITY(-3.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(trunc(183.289)) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), (false ? _GLF_FUZZED(598.917) : float(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0), mix(vec3(_GLF_FUZZED(18.12), _GLF_FUZZED(9.5), _GLF_FUZZED(-9492.0869)), vec3((vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0))))), 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))[0], (vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-613.124) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))[_GLF_IDENTITY(1, (1) ^ 0)], (_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(282.681)))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0), (_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(282.681)))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0), min(vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(282.681)))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0), vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(282.681)))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)))[2]), bvec3(true, true, true)))), (float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((1875.2287 / 394.241))), bool(false))), exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0), mix(vec3(_GLF_FUZZED(18.12), _GLF_IDENTITY(_GLF_FUZZED(9.5), _GLF_IDENTITY(float(mat3x2(_GLF_FUZZED(9.5), 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-8.8) : float(mat3x2(_GLF_FUZZED(9.5), 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_FUZZED(-9492.0869)), vec3((vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(true, (true) || false) ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, abs(0.0)))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))[0], (vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-7.9)), bool(false))) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3563.5746))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), sin(0.0))), (false ? _GLF_FUZZED(-189.304) : _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), sin(0.0))), clamp(float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), sin(0.0))), float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), sin(0.0))), float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), sin(0.0)))))))), 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))[1], (vec3(float(_GLF_IDENTITY(mat2x3(-3.0, sin(0.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0))))), (mat2x3(-3.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(0.0)))))) + mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0))), 0.0, 0.0))[2]), bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), true))))) + 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + abs(0.0)) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))))))) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 1u))) + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size))) ^ 0u), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 1u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 1u)), min(uint(uvec3(workgroup_base, 1u, 1u)), uint(uvec3(workgroup_base, 1u, 1u))))) + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id))))) | (subgroup_id)))) * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size))) ^ 0u), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * uvec2(1u, 1u))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), ((188588u & 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u), min(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), ((188588u & 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u), uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), ((188588u & 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))) * subgroup_size) ^ _GLF_IDENTITY(0u, (0u) | (0u))), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(14469u) : subgroup_id)))) * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u)), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u)), ~ (~ (clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u)), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u))), (~ (clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) ^ 0u)))) / 1u)))))), workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) - (0u | 0u))) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (0 & 36841); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))))))
        barrier();
       if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2197.0424), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(0.0, 0.0))) + (injectionSwitch)), log(1.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), log(1.0), 0.0, _GLF_IDENTITY(tan(0.0), float(mat4x3(tan(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0)))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0)))), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(4.2)), bool(_GLF_IDENTITY(false, true && (false)))))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), float(mat4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))) : _GLF_FUZZED(4096.3124))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), cos(0.0), 0.0, sin(0.0), 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))))), 1.0)))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), min(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0))))))), 0.0, 1.0, 0.0))))))[1], max((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0)))), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(4.2)), bool(_GLF_IDENTITY(false, true && (false)))))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), float(mat4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))) : _GLF_FUZZED(4096.3124))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), cos(0.0), 0.0, sin(0.0), 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))))), 1.0)))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), min(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0))))))), 0.0, 1.0, 0.0))))))[1], (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0))), mix(float(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), round(length(normalize(1.0))))), 1.0)))), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(4.2)), bool(_GLF_IDENTITY(false, true && (false)))))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), float(mat4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(6757.3322)), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))) : _GLF_FUZZED(4096.3124))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), cos(0.0), 0.0, sin(0.0), 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))))), 1.0)))) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-6.5), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), log(1.0), 0.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), min(float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0)))), float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 0.0), clamp(vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0), vec3(0.0, abs(0.0), 0.0))))))), 0.0, 1.0, 0.0))))))[1]))), vec2(_GLF_FUZZED(580.593), _GLF_FUZZED(6327.6929)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(8.4), max(_GLF_FUZZED(8.4), _GLF_FUZZED(8.4)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) > injectionSwitch.y)))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((5.6 * 5.0))), float(_GLF_IDENTITY(1.0, (1.0) - abs(0.0))), bool(true))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > ((-2184 * 41056) & _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         int i = 0;
         atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) << 0));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))) - 0.0)))))
              barrier();
            }
           else
            {
            }
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 + (4))), clamp(int(_GLF_IDENTITY(4, 0 + (4))), int(_GLF_IDENTITY(4, 0 + (4))), int(_GLF_IDENTITY(4, 0 + (4))))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
                        barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), ! (! (bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, false))))))))) || false), (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) * 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(4.0)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true))))))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
}
