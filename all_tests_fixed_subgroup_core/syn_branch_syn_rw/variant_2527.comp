#version 460
struct _GLF_struct_10 {
 vec2 _f0;
 int _f1;
 float _f2;
 vec3 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 uvec4 _f1;
 int _f2;
 uvec4 _f3;
 uint subgroup_local_id;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat2 _f1;
 _GLF_struct_5 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 vec3 _f1;
 _GLF_struct_9 _f2;
 uvec3 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 bvec3 _f1;
 mat3 _f2;
 vec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 bool _f0;
 _GLF_struct_2 _f1;
 uvec2 _f2;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_6(_GLF_struct_4(mat3(1.0), mat4x2(1.0)), mat2(1.0), _GLF_struct_5(mat2x4(1.0), mat2(1.0)), uvec4(1u)), vec3(1.0), _GLF_struct_9(_GLF_struct_7(uvec2(1u), uvec4(1u), 1, uvec4(1u), gl_SubgroupInvocationID, 1, mat2x4(1.0)), _GLF_struct_8(bvec3(true), mat2x3(1.0), uvec3(1u), ivec2(1))), uvec3(1u), _GLF_struct_10(vec2(1.0), 1, 1.0, vec3(1.0)));
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = _GLF_struct_replacement_11._f2._f0.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(true, _GLF_struct_2(_GLF_struct_0(mat4x2(1.0), bvec3(true), mat3(1.0), vec4(1.0), mat2x3(1.0)), _GLF_struct_1(mat2x3(1.0), uvec2(1u), mat3x4(1.0))), uvec2(1u), workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_3.workgroup_base + subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 uint next_virtual_gid = _GLF_struct_replacement_3.workgroup_base + subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1 < GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)
  {
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
