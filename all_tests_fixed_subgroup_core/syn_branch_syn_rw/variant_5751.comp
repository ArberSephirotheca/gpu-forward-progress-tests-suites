#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 uvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat2x3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 uvec3 _f1;
 mat4 _f2;
 float _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 vec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint _f1;
 mat3 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_4 _f2;
 int _f3;
 _GLF_struct_5 _f4;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && true)))), (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && true))))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || (_GLF_IDENTITY((true), bool(bvec3((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))))))) || false)))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), ((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), ((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(subgroup_size), (_GLF_IDENTITY(uvec3(subgroup_size), ~ (~ (uvec3(subgroup_size))))) << uvec3(0u, 0u, 0u))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), uvec3(uvec3(false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), ((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), ((uvec3(gl_WorkGroupSize)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(subgroup_size), (_GLF_IDENTITY(uvec3(subgroup_size), ~ (~ (uvec3(subgroup_size))))) << uvec3(0u, 0u, 0u))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), uvec3(uvec3(false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), 1u)))))) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize)).x, 1u, 1u, 1u)), 0u + (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(subgroup_size), (uvec3(subgroup_size)) << uvec3(0u, 0u, 0u))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))))), ~ (_GLF_IDENTITY(~ (~ ((false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))))))), (~ (~ ((false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))))))) >> uvec3(0u, 0u, 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(subgroup_size)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))))) - uvec3(0u, 0u, 0u)))))) | (gl_WorkGroupSize)).x, 1u, 1u, 1u)))));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(bvec2(true), 1u, _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-7547.9207))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))) + (_GLF_IDENTITY(float(_GLF_FUZZED((-7547.9207))), (float(_GLF_FUZZED((-7547.9207)))) - 0.0))), float(1.0), bool(true)))))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)), (false ? _GLF_FUZZED(-1823.6542) : _GLF_IDENTITY(mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)), (true ? mix(float(_GLF_FUZZED((_GLF_IDENTITY(-7547.9207, max(-7547.9207, -7547.9207))))), float(1.0), bool(true)) : _GLF_FUZZED(-9675.8143))))))))))), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-953.126)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), mix(float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))), float(_GLF_FUZZED(7.6)), bool(false))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))))))), 1.0))), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))))))))), transpose(transpose(_GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-7547.9207), mix(float(_GLF_FUZZED(-817.750)), float((-7547.9207)), bool(true))))), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(mat3x4(float(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat3x4(float(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), bool(true)))), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), mix(float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))), float(_GLF_FUZZED(_GLF_IDENTITY(7.6, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-95.60) : 7.6)))), bool(false))), 1.0, 0.0, 1.0))), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))))))))), (_GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-7547.9207))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-7547.9207))), mix(float(float(_GLF_FUZZED((-7547.9207)))), float(_GLF_FUZZED(-40.62)), bool(false))), float(_GLF_FUZZED((-7547.9207))))), float(1.0), bool(true)))), max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), mix(float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-7547.9207)), (_GLF_FUZZED((-7547.9207))) * 1.0)), float(1.0), bool(true))))), float(_GLF_FUZZED(7.6)), bool(false))), 1.0, 0.0, 1.0))), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))))))))), ((mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), mix(float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))), float(_GLF_FUZZED(7.6)), bool(false))), 1.0, 0.0, 1.0))), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))), (true ? max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), mix(float(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(_GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0))), min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))))), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true))))), float(_GLF_FUZZED(7.6)), bool(false))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), float(1.0), bool(true)))), (true ? max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-7547.9207))), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec2(float(1.0), abs(1.0))), (float(vec2(float(1.0), abs(1.0)))) + 0.0)), bool(true)))) : _GLF_FUZZED(mix(-1339.9030, 735.371, false))))) : _GLF_FUZZED(float(num_workgroup))))))))))) * mat3(1.0))) * mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4666.1838)), bool(false))), 0.0, 0.0, 0.0))) - _GLF_IDENTITY(mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-6.7)), bool(false)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-63.60)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), mat2x4(1.0), _GLF_struct_4(mat4(1.0), vec4(1.0), _GLF_struct_1(mat2x3(1.0)), _GLF_struct_2(mat4(1.0), uvec3(1u), mat4(1.0), 1.0, mat3x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(sign(57.05))), min((true ? 1.0 : _GLF_FUZZED(sign(57.05))), (true ? 1.0 : _GLF_FUZZED(sign(57.05)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(sign(57.05))), min((true ? 1.0 : _GLF_FUZZED(sign(57.05))), (true ? 1.0 : _GLF_FUZZED(sign(57.05)))))), float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(sign(57.05))), min((true ? 1.0 : _GLF_FUZZED(sign(57.05))), (true ? 1.0 : _GLF_FUZZED(sign(57.05)))))), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_struct_3(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0 + (max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), ivec3(1)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93))))) ? _GLF_FUZZED(94756u) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) * 1.0))), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93))))) ? _GLF_FUZZED(94756u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), clamp(1u, 1u, 1u))))) | (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93)))), ! _GLF_IDENTITY((! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93)))))), false || ((! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93)))))))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93)))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(-855.841))), (injectionSwitch.y))) / 1.0)), float(_GLF_FUZZED(2619.7587)), bool(false))) : _GLF_FUZZED(-56.93))))))))))))) ? _GLF_FUZZED(94756u) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), 1, _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65965u, (true ? 65965u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(9.6), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), min(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(9.6), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), min(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), clamp(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), _GLF_IDENTITY(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), (_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6)))) - (1u ^ 1u)), _GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))))), 1u, 0u, (0u | 0u))))))))))), 107955u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65965u, (true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))), 107955u), (true ? uvec2(_GLF_IDENTITY(65965u, (_GLF_IDENTITY(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), clamp(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), _GLF_IDENTITY(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), (true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6))) * 1u), true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))))), 107955u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(109281u, 17644u), (true ? uvec2(109281u, 17644u) : _GLF_FUZZED(uvec2(139264u, 44844u))))))), uvec2(_GLF_IDENTITY(65965u, _GLF_IDENTITY((true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6))), _GLF_IDENTITY(1u, (1u) | 0u) * ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))))), 107955u))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65965u, (true ? 65965u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(9.6), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), min(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(9.6), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), min(uvec4(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), 1u, 0u, (0u | 0u)), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), clamp(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), _GLF_IDENTITY(_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))), (_GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6)))) - (1u ^ 1u)), _GLF_IDENTITY(floatBitsToUint(9.6), 0u | (floatBitsToUint(9.6))))), 1u, 0u, (0u | 0u))))))))))), 107955u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65965u, (true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))), 107955u), (true ? uvec2(_GLF_IDENTITY(65965u, (_GLF_IDENTITY(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), clamp(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), _GLF_IDENTITY(true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)), (true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6))) * 1u), true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))))), 107955u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(109281u, 17644u), (true ? uvec2(109281u, 17644u) : _GLF_FUZZED(uvec2(139264u, 44844u))))))), uvec2(_GLF_IDENTITY(65965u, _GLF_IDENTITY((true ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6))), _GLF_IDENTITY(1u, (1u) | 0u) * ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 65965u : _GLF_FUZZED(floatBitsToUint(9.6)))))), 107955u)))))) / uvec2(1u, 1u))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))))), max(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u & 1u) * (1u)), _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u))))))), uvec2(1u))), bvec4(true)), gl_WorkGroupID.x);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (_GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))) ^ 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) ^ 0u)) ^ 0u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (~ (min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) >> ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (true ? _GLF_IDENTITY(uint(8u), min(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, 0u + _GLF_IDENTITY((8u), uint(uvec4((8u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), (_GLF_FUZZED(workgroup_size)) * 1u))))) | (_GLF_FUZZED(workgroup_size))))))), uint(8u))))), 0u + (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(120197u)))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY((uint(subgroup_size)), 1u * ((uint(subgroup_size)))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(subgroup_size, subgroup_size))), ~ (~ (min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), min(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY((uint(subgroup_size)), 1u * ((uint(subgroup_size)))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(subgroup_size, subgroup_size))), ~ (~ (min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), min(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) + 0u))) >> (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (~ ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (true ? _GLF_IDENTITY(uint(8u), min(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, 0u + (8u))))))) : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (true ? _GLF_IDENTITY(uint(8u), min(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, 0u + (8u))))))) : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (true ? _GLF_IDENTITY(uint(8u), min(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, 0u + (8u))))))) : _GLF_FUZZED(workgroup_size)))))) >> 0u)) >> 0u), uint(8u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, false, true)), true && (bool(bvec4(bool(false), true, false, true)))))))) || false)))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))])), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, ~ (~ (4))))), 4))) ^ 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (true ? _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4)) | (-95559 & 0)) : _GLF_FUZZED(42304)))), 4, 4)))))) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, ~ (~ (4))))), 4))) ^ 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (true ? _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4)) | (-95559 & 0)) : _GLF_FUZZED(42304)))), 4, 4)))))) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, ~ (~ (4))))), 4))) ^ 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (true ? _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) >> 0) | (4)) | (-95559 & 0)) : _GLF_FUZZED(42304)))), 4, 4)))))) * 1))) ^ 0)) << 0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), max(subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))), subgroup_local_id)) + 1)) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true) && (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))) && true))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false)))))))))))))), (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false))))))))))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false)))))))))))))), (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false))))))))))))))) || false))), (! (! (_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y))), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true))), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || false), false)), true, false, true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false)))))))))))))), (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(106.619)), bool(false))), injectionSwitch[1])).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, bool(bvec2(_GLF_IDENTITY((bool(injectionSwitch.x < injectionSwitch.y)) && true, ((bool(injectionSwitch.x < injectionSwitch.y)) && true) && true), false))))))))))))))) || false)))) || false)))))))
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
