#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) | (gl_WorkGroupID)), max(gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(38819u, 171837u, _GLF_IDENTITY(49377u, (false ? _GLF_FUZZED(subgroup_id) : 49377u)))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (0u & 182495u) | (max(subgroup_id, subgroup_id))))) - 0u) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (0u & 182495u) | (max(subgroup_id, subgroup_id))))) - 0u) * subgroup_size + subgroup_local_id, 0u)), clamp(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (0u & 182495u) | (max(subgroup_id, subgroup_id))))) - 0u) * subgroup_size + subgroup_local_id, 0u)), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (0u & 182495u) | (max(subgroup_id, subgroup_id))))) - 0u) * subgroup_size + subgroup_local_id, 0u)), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (0u & 182495u) | (max(subgroup_id, subgroup_id))))) - 0u) * subgroup_size + subgroup_local_id, 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(87.73)), bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), clamp((subgroup_id) | (subgroup_id), (subgroup_id) | (subgroup_id), (subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(0u ^ (subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (subgroup_id), uint(uvec2(0u ^ (subgroup_id), 1u)))) / 1u, max((_GLF_IDENTITY(0u ^ (subgroup_id), uint(uvec2(0u ^ (subgroup_id), 1u)))) / 1u, (_GLF_IDENTITY(0u ^ (subgroup_id), uint(uvec2(0u ^ (subgroup_id), 1u)))) / 1u)))), min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), bool(bool((! (_GLF_IDENTITY(true, (true) || false))))))) && true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 1u)) ^ uvec2(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))))) : _GLF_FUZZED(virtual_gid))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))))) * subgroup_size))))) ^ 0u)))) + 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3236.8090) : 0.0)), injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y)) && true)) ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size)), uint(_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, 1u), (uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)) ^ uvec2(0u, 0u)))) : _GLF_FUZZED(virtual_gid))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) << 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))))), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size), ~ (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) ^ 0u)), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size))), (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size)))) | 0u))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), min(~ (~ (workgroup_base + subgroup_id * subgroup_size)), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))))) >> 0u), 0u), clamp(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), min(~ (~ (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) >> 0u), 0u), uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (~ (~ (workgroup_base + subgroup_id * subgroup_size))) | (~ (~ (workgroup_base + subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), min(~ (~ (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) >> 0u), 0u), uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) ^ 0u), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), min(~ (~ (workgroup_base + subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) >> 0u), 0u)))))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (subgroup_size)))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)) ^ 0u, ((_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)) ^ 0u) | ((_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)) ^ 0u)))))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)))))) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-453.877)))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.8, determinant(mat2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)) + (-5.8)))), bool(false))), abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).y))) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))))) * subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))), 1u)) ^ uvec2(0u, 0u)))) : _GLF_FUZZED(virtual_gid))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)) >> _GLF_IDENTITY(0u, 0u | (0u)))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u))))))) | 0u), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)) ^ 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u))))) | (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u))), clamp(clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u))), (true ? ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (~ (workgroup_base + subgroup_id * subgroup_size)) | (~ (workgroup_base + subgroup_id * subgroup_size))))))) << 0u))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)), 0u ^ (((workgroup_base + subgroup_id * subgroup_size)))) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)) * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u))), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) + (0u ^ 0u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base + subgroup_id * subgroup_size)))) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) / 1u) * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (workgroup_base + subgroup_id * subgroup_size))), ~ (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))))) ^ 0u))), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))) : _GLF_FUZZED(23353u))), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), 0u | (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u | 0u))) >> 0u) + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u)))))))) + 0u) ^ 0u)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))) ^ 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))) << 0u))) * 1u) + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) >> 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u | 0u)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> (0u | 0u), ((subgroup_size) >> (0u | 0u)) << 0u)), subgroup_size, subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))))) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))) || false)), false || (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2510.0181)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(929.253, 333.799)))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), bool(bvec2(_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false, false, true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true)), ! (! ((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true)), ! (! ((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true)), ! (! ((_GLF_IDENTITY(false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))) || false)))), false, true)))) && true))))), false, true), true)))))))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(42.49) : injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))) || false)))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(7327.2541), (true ? _GLF_FUZZED(7327.2541) : _GLF_FUZZED(81.89)))), bool(false)))) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))), false, false, false)), false, true))))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))))), true, true)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true)) || false), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, true)))))) && true)) || false), true, true, false))))))) || false))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 1u, _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (0u ^ 1u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : (0u ^ 1u))))))) / (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), min(uint(uint(virtual_gid)), uint(uint(virtual_gid)))), (false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), (true ? _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))) : _GLF_FUZZED(workgroup_size)))) | 0u)))))), (123209u & 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 1u, _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_size) : (0u ^ 1u)))) / (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), min(uint(uint(virtual_gid)), uint(uint(virtual_gid)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), (0u ^ 0u), 0u), uvec3(0u, 0u, 0u) + (uvec3(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), (0u ^ 0u), 0u)))))))))), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 1u, _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_size) : (0u ^ 1u)))) / (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), min(uint(uint(virtual_gid)), uint(uint(virtual_gid)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & subgroup_size)))) * (uint(uint(virtual_gid)))), uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((floatBitsToUint(1721.3190) & _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) * (uint(uint(virtual_gid)))), (0u ^ 0u), 0u), uvec3(0u, 0u, 0u) + (uvec3(false ? _GLF_FUZZED(17490u) : _GLF_IDENTITY(uint(uint(virtual_gid)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((_GLF_IDENTITY(floatBitsToUint(1721.3190), (floatBitsToUint(1721.3190)) | (floatBitsToUint(1721.3190))) & subgroup_size)))) * (uint(uint(virtual_gid)))), (0u ^ 0u), 0u)))))))))))))))) + 0u)], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + (0 >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(int(ivec3(64, 1, 0)), 0 ^ (int(ivec3(64, 1, 0))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) * 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))) ^ (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 1u), min(uvec4(subgroup_local_id, 0u, 0u, 1u), uvec4(subgroup_local_id, 0u, 0u, 1u)))) | uvec4(0u, 0u, 0u, 0u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 1u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 1u, 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, 0u, 1u))) * 1u)))) + 1)))) | 0u) < subgroup_size, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), 0u ^ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))), min((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, (subgroup_local_id + 1) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).y)) * (~ (~ (subgroup_local_id + 1)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).y)) * (~ (~ (subgroup_local_id + 1)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u)), ~ (~ (uvec3(_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).y)) * (~ (~ (subgroup_local_id + 1)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) * 1.0)))))) < subgroup_size, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (0u & (117746u % 109510u)) ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 0u), max(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 0u), uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 0u)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1)))) | 0u) < subgroup_size, true), true, true))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) >> 0u)), uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u))), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (~ (~ (subgroup_local_id + 1))) << 0u)) < subgroup_size, true), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(92.02)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (bool(false))), ! (! (_GLF_IDENTITY(! (! (bool(false))), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (false || (! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))) && _GLF_IDENTITY(true, (true) || false))))))), (bool(false)) || false)) || false))), bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
}
