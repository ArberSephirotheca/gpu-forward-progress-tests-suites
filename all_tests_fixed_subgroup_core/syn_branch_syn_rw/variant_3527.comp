#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-8268.2316, _GLF_IDENTITY(-8.3, min(-8.3, -8.3)), -7608.2365).g)), float(injectionSwitch.y), bool(true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-6101.4472) : (injectionSwitch)[0])), _GLF_FUZZED(0.9)), bvec2(true, false))).y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
            break;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)))) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), false, false)))))))), bool(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), true && (_GLF_IDENTITY(bool(bvec2(! (! (false)), false)), ! (! (bool(bvec2(! (! (false)), false))))))))))), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
         return;
        }
      }
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(80.88)), bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(80.88)), bool(false))))))), false, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (_GLF_IDENTITY(-46996 * -9945, min(_GLF_IDENTITY(-46996 * -9945, 0 | (-46996 * -9945)), _GLF_IDENTITY(-46996 * -9945, (true ? -46996 * -9945 : _GLF_FUZZED(7039))))))), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (_GLF_IDENTITY(-46996 * -9945, (-46996 * -9945) | (-46996 * -9945)))))) & 0), (_injected_loop_counter != (_GLF_IDENTITY((-32056 << _GLF_IDENTITY((-46996 * -9945), ((-46996 * -9945)) + 0)), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0)) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(-32056, (_GLF_IDENTITY(-32056, (-32056) ^ 0)) ^ 0) << (-46996 * -9945)), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (~ (-46996 * -9945)) - 0))))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0)) && true)))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (_GLF_IDENTITY(-46996 * -9945, min(_GLF_IDENTITY(-46996 * -9945, 0 | _GLF_IDENTITY((-46996 * -9945), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((-46996 * -9945)))), _GLF_IDENTITY(-46996 * -9945, (true ? -46996 * -9945 : _GLF_FUZZED(7039))))))), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), (true ? _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(43097)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)), (-32056 << (_GLF_IDENTITY(-46996 * -9945, (-46996 * -9945) | (-46996 * -9945)))))) & 0), (_injected_loop_counter != (_GLF_IDENTITY((-32056 << _GLF_IDENTITY((-46996 * -9945), ((-46996 * -9945)) + 0)), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), min(~ (-46996 * -9945), ~ (-46996 * -9945))))))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0)) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * _GLF_IDENTITY(-9945, min(-9945, -9945)))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), min((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), (_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)))), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (_GLF_IDENTITY(~ (-46996 * -9945), 1 * (~ (-46996 * -9945)))) - 0))))), (-32056 << _GLF_IDENTITY((-46996 * -9945), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-46996 * -9945) : _GLF_FUZZED(-95388)))), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, max(0, 0)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * _GLF_IDENTITY(-9945, min(-9945, -9945)))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), min((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), (_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)))), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (_GLF_IDENTITY(~ (-46996 * -9945), 1 * (~ (-46996 * -9945)))) - 0))))), (-32056 << _GLF_IDENTITY((-46996 * -9945), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-46996 * -9945) : _GLF_FUZZED(-95388)))), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, max(0, 0)))) && true)), bool(bvec4((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * _GLF_IDENTITY(-9945, min(-9945, -9945)))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), min((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), (_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)))), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (_GLF_IDENTITY(~ (-46996 * -9945), 1 * (~ (-46996 * -9945)))) - 0))))), (-32056 << _GLF_IDENTITY((-46996 * -9945), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-46996 * -9945) : _GLF_FUZZED(-95388)))), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, max(0, 0)))) && true)), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * _GLF_IDENTITY(-9945, min(-9945, -9945)))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), min((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), (_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)))), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (_GLF_IDENTITY(~ (-46996 * -9945), 1 * (~ (-46996 * -9945)))) - 0))))), (-32056 << _GLF_IDENTITY((-46996 * -9945), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-46996 * -9945) : _GLF_FUZZED(-95388)))), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, max(0, 0)))) && true)), bool(bvec4((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((-32056 << (-46996 * -9945)), clamp((-32056 << (-46996 * _GLF_IDENTITY(-9945, min(-9945, -9945)))), (-32056 << (-46996 * -9945)), (-32056 << (-46996 * -9945)))) & 0), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), min((_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)), (_GLF_IDENTITY(-32056, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), clamp(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), min(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), (false ? _GLF_FUZZED(14450) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(-32056, (-32056) ^ 0), max(_GLF_IDENTITY(-32056, (-32056) ^ 0), _GLF_IDENTITY(-32056, (-32056) ^ 0))))) / 1))), 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))))))) ^ 0) << (-46996 * -9945)))), clamp((-32056 << (_GLF_IDENTITY(-46996 * -9945, ~ (_GLF_IDENTITY(~ (-46996 * -9945), (_GLF_IDENTITY(~ (-46996 * -9945), 1 * (~ (-46996 * -9945)))) - 0))))), (-32056 << _GLF_IDENTITY((-46996 * -9945), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-46996 * -9945) : _GLF_FUZZED(-95388)))), (-32056 << (-46996 * -9945)))) & _GLF_IDENTITY(0, max(0, 0)))) && true)), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))) || false); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), true)))))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false || (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))))))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, uint(uint(1u)))))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((130009u & 0u), ((130009u & 0u)) | ((130009u & _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(130009u, (130009u) | 0u) & 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint((130009u & 0u)), min(uint((130009u & 0u)), uint((130009u & 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((_GLF_IDENTITY(uint((130009u & 0u)), min(uint((130009u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - (0u & 121048u)))), uint((130009u & 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u, (((_GLF_IDENTITY(uint((130009u & 0u)), min(uint((130009u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - (0u & 121048u)))), uint((130009u & 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u) << 0u)))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) - (0u ^ 0u)) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) << 0u)))) | 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u, 1u * ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u))) : _GLF_FUZZED(workgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ (130009u & 0u)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u))) | _GLF_IDENTITY(0u, (0u) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ (130009u & 0u)))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), 1u * (~ ((subgroup_size)))))) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u, 1u * ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(130009u & 0u, (true ? 130009u & 0u : _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_local_id))))))) - 0u))) : _GLF_FUZZED(workgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ (130009u & _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (130009u & 0u))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, 130009u & 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, _GLF_IDENTITY(130009u, clamp(130009u, 130009u, _GLF_IDENTITY(130009u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 130009u : _GLF_FUZZED(subgroup_local_id))))) & 0u)))), (((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, _GLF_IDENTITY(130009u, clamp(130009u, 130009u, _GLF_IDENTITY(130009u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 130009u : _GLF_FUZZED(subgroup_local_id))))) & 0u))))) / 1u) / 1u))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, 130009u & 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, _GLF_IDENTITY(130009u, clamp(130009u, 130009u, _GLF_IDENTITY(130009u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 130009u : _GLF_FUZZED(subgroup_local_id))))) & 0u)))), (((_GLF_IDENTITY(130009u & 0u, min(130009u & 0u, _GLF_IDENTITY(130009u, clamp(130009u, 130009u, _GLF_IDENTITY(130009u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 130009u : _GLF_FUZZED(subgroup_local_id))))) & 0u))))) / 1u) / 1u)))) ^ 0u) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, (0u ^ 1u))), (uint(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, (0u ^ 1u)))) ^ 0u)))) : _GLF_FUZZED(subgroup_size)))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))))))) / 1u)) | (subgroup_local_id)) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1) * 1u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1))), 0u + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)) | (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(uvec4(~ (~ (subgroup_local_id)), 1u, 0u, 1u)))))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))), 0u), max(uvec3(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))), 0u), _GLF_IDENTITY(uvec3(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))), 0u), (uvec3(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))), 0u)) << uvec3(0u, 0u, 0u)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) * 1u), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (false ? _GLF_FUZZED(min(uvec2(67961u, 144282u)[1], virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))), subgroup_local_id)))))) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(995.171) : injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(995.171) : injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0)))))), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(995.171) : injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))), abs(0.0), cos(0.0), 0.0))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), (! ((_GLF_IDENTITY(false, (false) && true)))) && true), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), (! ((_GLF_IDENTITY(false, (false) && true)))) && true), false, false, false))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))) && true), true, false, false))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && (! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       else
        {
        }
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5878.2716), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 1.5))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, false))))) || false))) || false)) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) && true)))))))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, 0 + (0))) ^ (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) || false) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(74.47, -575.206)) : mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(74.47, -575.206)) : mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(74.47, -575.206)) : mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(74.47, -575.206)) : mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), true, false))))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
            break;
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false)))) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), false)))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat3(1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fract(-6082.8005)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + tan(0.0), min((injectionSwitch.x) + tan(0.0), (injectionSwitch.x) + tan(0.0)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(vec3(_GLF_IDENTITY(0.7, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0)) * (_GLF_IDENTITY(0.7, mix(float(0.7), float(_GLF_FUZZED(76.88)), bool(false))))), 262.360, 188.882).z)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-4.7) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     barrier();
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))) || false)))), true))))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_local_id + 1))))) << 0u), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u), subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), true))) || false)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(631.281) : 1.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-543.092 * -4523.0649)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-31.93)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-44.15, float(vec4(-44.15, 1.0, 1.0, 1.0)))) : injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) ^ 0u)) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, uint(_GLF_IDENTITY(uvec4((uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, (0u | 0u), 0u, (6530u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec4((uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, (0u | 0u), 0u, (6530u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec4((uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, (0u | 0u), 0u, (6530u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec4((uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, (0u | 0u), 0u, (6530u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u)) << 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u))), uint(_GLF_IDENTITY(4u, min(4u, 4u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 0u ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), uint(_GLF_IDENTITY(uint(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), ~ (~ (uint(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u)))) / 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9390.7938) : 0.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, _GLF_IDENTITY(-1515.0464, (-1515.0464) - 0.0)))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((ivec2(-98952, -55655) != ivec2(-30964, -3165)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((41.29 * -57.03))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (injectionSwitch.x) + 0.0)))) << 0u)) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-8723.6656))))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)))))) / 1u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), 1.0, abs(1.0)))))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u)) << 0u) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))), max(vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(98.71, 0.9, -5436.5098, -22.29, -2.4, -1515.0464))))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) << 0u) << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (true ? 1 * (64) : _GLF_FUZZED(((58169) + -15976))))))) / 1))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), ~ (~ (~ (_GLF_IDENTITY(64, 1 * (64))))))) << 0), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), 1 * _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), ~ (~ (((64))))) >> 0)))) / 1)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, false))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, false))))) && true)) && true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
        continue;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
}
