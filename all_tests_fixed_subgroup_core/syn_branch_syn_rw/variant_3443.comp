#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uint workgroup_base;
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 bvec3 _f1;
 uvec3 _f2;
 ivec2 _f3;
 int _f4;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 ivec4 _f3;
 uvec3 _f4;
 bvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec2 _f1;
 uint _f2;
 ivec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 uvec3 _f1;
 vec2 _f2;
 mat4 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 mat2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 uint _f1;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 bvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat3x2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_3 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
 uvec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 mat4x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, true))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))).x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-477.849)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-315.325)), bool(false)))), bool(true))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))), false))))), bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false))))))))))))), ! (! (((! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))), false))))), bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false))))))))))))))))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) || false))) || false))))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) || false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) || false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false, true), true))))))))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 1.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), vec2(_GLF_FUZZED(8068.0000), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups)))) | ((gl_NumWorkGroups))) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u), (false ? _GLF_FUZZED(uvec3(172537u, 4059u, 180304u)) : _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) * 1u))))))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)) | ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))), 1u)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))), (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u)))))) | (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))), (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u)))))) | (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))))), 0u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))), (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u)))))) | (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))), (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u)))))) | (max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))))), 0u))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(158081u, 1574u, 8345u)))), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), _GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(158081u, 1574u, 8345u)))), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), 0u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(158081u, 1574u, 8345u)))), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), 0u)), min(uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(158081u, 1574u, 8345u)))), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), 0u)), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(158081u, 1574u, 8345u)))), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), 0u)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(135292u, 101208u, 146653u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u))))), 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(195526u, 90896u, 73166u)) : (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(195526u, 90896u, 73166u)) : (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u)))))) | uvec4(0u, 0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u))))), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))))))))) - uvec3(0u, 0u, 0u)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), 1u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), 1u), (true ? uvec4(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), 1u) : _GLF_FUZZED(uvec4(18039u, 83391u, 16525u, 182816u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u)))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), 1u))))) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << _GLF_IDENTITY(0u, max(0u, 0u)), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(uint(uvec4(1u, 0u, 0u, 1u)), 0u, 1u, 1u)))) - 0u), uint(uvec4(1u, 0u, 0u, 1u))))), 1u))) << 0u))), 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(190066u, 50630u, 194490u), (true ? uvec3(190066u, 50630u, 194490u) : _GLF_FUZZED(uvec2(86980u, 183324u).grg))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(190066u, 50630u, 194490u), (true ? uvec3(190066u, 50630u, 194490u) : _GLF_FUZZED(uvec2(86980u, 183324u).grg))), (false ? _GLF_FUZZED(uvec3(21745u, 96341u, 97810u)) : _GLF_IDENTITY(uvec3(190066u, 50630u, 194490u), (true ? uvec3(190066u, 50630u, 194490u) : _GLF_FUZZED(uvec2(86980u, 183324u).grg)))))))) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(75621u, 139439u, 55597u))))) / uvec3(1u, 1u, 1u)), 1u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(uvec4((~ (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))))), 1u), (uvec4((~ (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))))), 1u)) ^ uvec4(0u, 0u, 0u, 0u))))) / uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)))), 1u))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), max((1u), (1u)))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | (1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | (1u))) >> 0u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(1u, (1u) ^ 0u)))) << 0u), 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u))))))))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) + 0u))))), ~ (~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u))))))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u))) << 0u), 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u)), 1u)))))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups)))))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 1u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) ^ (64756u & 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) ^ (64756u & 0u)))))) >> uvec3(0u, 0u, 0u))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), max((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(0u)) | 0u))), 0u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), uvec3(uvec3(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) / uvec3(1u, 1u, 1u))))))))), 1u))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), max(0u, 0u)) | (1u)), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 0u | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 0u | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 0u | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u))))) << 0u), 1u, 1u)), 1u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(57468u, 36268u, 40418u)) : gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(190066u, 50630u, 194490u)) : gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), 1u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) * uvec3(_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u)), (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u)), 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u)))), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) - 0u))) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), _GLF_IDENTITY(~ (1u), ~ (~ (~ (1u))))))))), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))), 1u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), (uvec3(1u, 1u, 1u)) * uvec3(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u))) - _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u), max(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u)) << uvec3(0u, 0u, 0u)))), uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u))))) ^ uvec3(0u, 0u, 0u))), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)) >> uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)) >> uvec4(0u, 0u, 0u, 0u))))), uvec3(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(1u, ~ (~ (1u)))))))))), uvec3(uvec4(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), 1u)))), 1u))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), max((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(174090u, 109962u, 191835u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)))))), 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), 1u))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u)))), 1u)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (uvec4(1u, 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u)))))), 1u)), 1u, 1u), min(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))), uint(uvec4(1u, 0u, 0u, 1u))), 1u)), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u))), 1u)), _GLF_IDENTITY(1u, (1u) - 0u), 1u), clamp(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), (0u & (~ 194335u)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), (min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)) | 0u))), (min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)) / 1u)), 1u))), 1u)), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))))), 1u)), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))))), 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))))), 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), 1u))))), 1u)), 1u, 1u))), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u), min(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u), uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u))))), 1u)), 1u, 1u)))))), 1u))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u), 0u | (min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (1u) | (1u)))))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u)))) - 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u), (min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), clamp(uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u), uvec4(1u, 0u, 0u, 1u))), uvec4(1u, 0u, 0u, 1u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))))), 1u)) << (0u & (90823u >> 16837u)))), 1u, 1u)) | uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u)) << 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u)), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (uvec4(1u, 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(1u, 0u, 0u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 1u))))), 1u)), 1u, 1u)) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec4(1u, 0u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u)) << 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u)), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (uvec4(1u, 0u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(1u, 0u, 0u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) - 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 1u))))), 1u)), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (1u) << 0u)))), 1u)), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), 1u, 1u)) | (uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), 1u)), 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) | (0u)))), 1u))), 1u)), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), (min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) / 1u)), 1u))), 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u))), 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), 1u))), 1u)), 1u, 1u)))))), 1u))))))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u + (gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u)))))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), ~ (~ (_GLF_IDENTITY((0u) | (0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) - 0u), max(_GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) - 0u), _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) - 0u))))))))) << 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) << 0u)), 0u, 0u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(-6990.1009)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6990.1009)), clamp(float(_GLF_FUZZED(-6990.1009)), float(_GLF_FUZZED(-6990.1009)), float(_GLF_FUZZED(-6990.1009))))) / 1.0), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), (0 + (1)) / int(_GLF_ONE(1.0, injectionSwitch.y))))])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) && true)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) || ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bool(bvec4(! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), false, true, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))))))) && true), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(gl_WorkGroupID.x, _GLF_struct_0(vec4(1.0), mat3x2(1.0), mat4x3(1.0)), uvec4(1u), _GLF_struct_1(mat3x4(1.0), bvec4(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.1)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(mat4x3(-27.78, -721.867, -6717.3075, -950.342, -668.556, 4.9, 60.46, 3.4, 9365.2891, 9348.0408, -275.515, 64.07))) : mat4(1.0))), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(61.50, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(61.50, (false ? _GLF_FUZZED(_GLF_IDENTITY(asinh(-7.2), min(asinh(-7.2), asinh(-7.2)))) : 61.50))))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -9.9))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), _GLF_struct_2(mat3(1.0), 1u)), mat4x3(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(((~ (1))) | 0, (_GLF_IDENTITY(((~ (1))) | 0, int(_GLF_IDENTITY(ivec2(((~ (1))) | 0, 1), ivec2(0, 0) ^ (ivec2(((~ (1))) | 0, 1)))))) + (0 << _GLF_IDENTITY(int(8), int(8))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), (~ ((~ (1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(int(int((~ (_GLF_IDENTITY(1, max(1, 1)))))), (int(int((~ (_GLF_IDENTITY(1, max(1, 1))))))) - 0))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), (~ ((~ (1)))) >> 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), (~ ((~ (1)))) >> 0))))))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), min((1), (1)))))))) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), clamp(_GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), (_GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0))) - 0), _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)))), (~ ((~ (1)))) >> 0))))), ~ (~ (ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1))))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))))) ^ 0))), 0))) >> 0)), (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, 0 ^ (1)))))) >> 0)))) >> 0)))))))), ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((_GLF_IDENTITY(~ (1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(45171) : ~ (1))))) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (true ? _GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(-9475) : ~ (0))) : _GLF_FUZZED(-26908)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << (0 | 0)), 1))), ~ (~ ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << (0 | 0)), 1)))))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)), (~ ((~ (1)))) >> 0))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0), (_GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2(((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0))), 0))) >> 0)) + 0)), (~ ((~ (1)))) >> 0))))), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), _GLF_IDENTITY((_GLF_IDENTITY((~ (1)), int(ivec2(_GLF_IDENTITY((~ (1)), ((~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1), 1)))), ((_GLF_IDENTITY((~ (1)), int(ivec2(_GLF_IDENTITY((~ (1)), ((~ (1))) * 1), 1))))) >> 0) | 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(int(ivec2(((~ (_GLF_IDENTITY(1, max(1, 1))))), 0)), (int(ivec2((_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 0 + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), int(ivec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 1, 1)))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 0 + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), int(ivec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 1, 1))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 0 + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), int(ivec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(1, max(1, 1)))) ^ 0), 1, 1))))))))), 0))) >> 0)), (~ ((~ (1)))) >> 0))))))))), mat4x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8211.0508)), float(injectionSwitch.y), bool(true)))), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8211.0508)), float(injectionSwitch.y), bool(true)))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(true, false || (true)), bool(bvec4((true) && _GLF_IDENTITY(true, false || (true)), false, true, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), false, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, determinant(mat3(tan(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 0.0, determinant(mat3(tan(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat3x2(6676.3561, -8.5, 964.633, 4.0, 983.034, -611.304)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9164.1692, 9.8)) : injectionSwitch)).x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(140.214) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true)))) - 0.0))), 1.0)))), 0.0, 0.0), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(140.214) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true)))) - 0.0))), 1.0)))), 0.0, 0.0), (vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(140.214) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true)))) - 0.0))), 1.0)))), 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(140.214) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true)))) - 0.0))), 1.0)))), 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, abs(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(vec3(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))), _GLF_struct_8(_GLF_struct_5(uvec2(1u), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5928.6501)), float(1.0), bool(true))), 0.0 + (1.0))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u ^ 0u)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) | ivec4(0, 0, 0, 0)) >> _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))), 0, _GLF_IDENTITY(0, max(0, 0)), 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, _GLF_IDENTITY(0, (0) - 0), 0), (ivec4(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, 0, 0)) | ivec4(0, 0, 0, 0)))), ivec4(0, 0, 0, 0) + (~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec2(0, 0)))) ^ 0, ((_GLF_IDENTITY(0, int(ivec2(0, 0)))) ^ 0) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), 0, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 0))), clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0)), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0)), (ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0))) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(-27632, -93775)) : _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0)), (ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0))) * ivec2(1, 1)))), ivec2(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) << 0)))))), _GLF_IDENTITY(0, int(ivec2(0, 0))))), 0, 0, 0)) | ivec4(0, 0, 0, 0), ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 0))), clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, int(ivec2(0, 0))))), 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(8), ivec4(8))))))))))), mat3x2(1.0)), uvec3(1u), vec2(1.0), mat4(1.0), _GLF_struct_6(mat4x2(1.0), mat3x2(1.0), uvec2(_GLF_IDENTITY(1u, (1u) * 1u)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0), 0 ^ (~ (~ (1))))) | (~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), min((1), (1)))))))))))), uvec3(1u), bvec4(true), bvec2(true)), _GLF_struct_7(mat3x4(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(1u, 0u, 1u, 1u), (uvec4(1u, 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)) : _GLF_FUZZED(uvec4(36084u, 59427u, 157889u, 94209u))))) / uvec4(1u, 1u, 1u, 1u))))))) << 0u)), ivec2(1), 1)), _GLF_struct_9(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))) * _GLF_struct_replacement_4._f0.workgroup_id, _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(115.913, 4.5)) : vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))).y), float(_GLF_FUZZED(-0.2)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.x), bool(true)))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.9) : injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_struct_replacement_10._f3.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)))), false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_10._f3.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u), ~ (~ (uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u)) >> uvec2(0u, 0u)))))), (~ (uvec2(_GLF_struct_replacement_10._f3.workgroup_base, 0u))) >> uvec2(0u, 0u))))))))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ (_GLF_IDENTITY(0u | 0u, (0u | 0u) ^ 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))) >> 0), int(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(1, min(1, 1)))), 1)))))) * 1)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).y), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), 1 * ((0) | (0)))), 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(25308) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 | (~ (1))))), 1)), (1) | _GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-25847))), max(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-25847))), _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-25847))), ~ (~ (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-25847)))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (~ ((1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1), ((1)) - 0))), min(~ (~ ((1))), ~ (~ ((1)))))) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(-63995) : ~ (0)))))), _GLF_IDENTITY(~ (~ ((1))), max(~ (~ ((1))), ~ (~ ((1))))), ~ (~ ((1)))), max(clamp(_GLF_IDENTITY(~ (~ ((1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1), ((1)) - 0))), min(~ (~ ((1))), ~ (~ ((1)))))) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(-63995) : ~ (0)))))), _GLF_IDENTITY(~ (~ ((1))), max(~ (~ ((1))), ~ (~ ((1))))), ~ (~ ((1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (~ ((1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1), ((1)) - 0))), min(~ (~ ((1))), ~ (~ ((1)))))) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(-63995) : ~ (0)))))), _GLF_IDENTITY(~ (~ ((1))), max(~ (~ ((1))), ~ (~ ((1))))), ~ (~ ((1)))), (clamp(_GLF_IDENTITY(~ (~ ((1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1), ((1)) - 0))), min(~ (~ ((1))), ~ (~ ((1)))))) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(-63995) : ~ (0)))))), _GLF_IDENTITY(~ (~ ((1))), max(~ (~ ((1))), ~ (~ ((1))))), ~ (~ ((1))))) >> 0)))))), ~ (~ (false ? _GLF_FUZZED(25308) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY((1) | _GLF_IDENTITY((1), ~ (~ ((1)))), int(ivec3((1) | _GLF_IDENTITY((1), ~ _GLF_IDENTITY((~ ((1))), (-62542 & 0) | ((~ ((1)))))), (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ((4) * 1) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(94981, -66014, -79674).p), int(int(_GLF_FUZZED(ivec3(_GLF_IDENTITY(94981, min(94981, _GLF_IDENTITY(94981, ~ (~ (94981))))), -66014, -79674).p)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(94981, -66014, -79674).p), int(int(_GLF_FUZZED(ivec3(_GLF_IDENTITY(94981, min(94981, _GLF_IDENTITY(94981, ~ (~ (94981))))), -66014, -79674).p)))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec3(94981, -66014, -79674).p), int(int(_GLF_FUZZED(ivec3(_GLF_IDENTITY(94981, min(94981, _GLF_IDENTITY(94981, ~ (~ (94981))))), -66014, -79674).p)))))))) | 0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), min(4, 4)), (4) / 1)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(94981, -66014, -79674).p), int(int(_GLF_FUZZED(ivec3(_GLF_IDENTITY(94981, min(94981, _GLF_IDENTITY(94981, ~ (~ (94981))))), -66014, -79674).p)))) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) / 1))) | ((false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(94981, -66014, -79674).p), int(int(_GLF_FUZZED(ivec3(_GLF_IDENTITY(94981, min(94981, _GLF_IDENTITY(94981, ~ (~ (94981))))), _GLF_IDENTITY(-66014, 1 * (-66014)), -79674).p)))) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) / 1))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || false, ((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7274.7186)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), bool(bvec2((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, exp(0.0), 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) + 1) * 1u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), (min(virtual_gid, virtual_gid)) >> 0u)), virtual_gid), min(min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)))), clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : virtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : virtual_gid), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u)) : virtual_gid)) << 0u)) ^ 0u)), virtual_gid)), virtual_gid)))), virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(73632), clamp(true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(73632), true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(73632), true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(73632))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, 0 ^ (64)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (_GLF_IDENTITY(64, 0 ^ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec3(0, 0, 0))))))) | (64)))), (_GLF_IDENTITY(64, max(64, 64))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
}
