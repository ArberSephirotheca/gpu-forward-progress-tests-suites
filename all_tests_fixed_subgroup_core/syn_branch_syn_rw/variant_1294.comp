#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.2) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-2003.4461), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[_GLF_IDENTITY(0, 1 * (0))], (((injectionSwitch))[0]) - 0.0), _GLF_FUZZED(-30.92)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(vec3(-43.57, -4499.0909, 830.247).t), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(-6.2))), _GLF_FUZZED(-4962.3102)), bvec2(true, false))) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), vec2(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(72.77), _GLF_FUZZED(486.923)), bvec2(false, false))), 0.0))))) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))).x, 0.0, 0.0, tan(0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y = subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y = subgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (true ? subgroup_id : _GLF_FUZZED((_GLF_IDENTITY(75581u, min(75581u, 75581u)) & subgroup_id))))), (true ? (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y = subgroup_id) : _GLF_FUZZED(119531u))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))) * 1u);
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.9)), bool(false))), injectionSwitch.x)) > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(vec3(injectionSwitch.x, 0.0, 0.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.27)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5591.4849)), bool(false)))) / 1.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)), (_GLF_IDENTITY(bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)), true && (bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false))))) && true))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)), (_GLF_IDENTITY(bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)), true && (bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false))))) && true))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec3(false || (injectionSwitch.x > injectionSwitch.y), false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false) || false)) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.x = num_workgroup;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0))))) && true), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0)), min(float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0)), float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0))))))) && true)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), (workgroup_id) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * ((0u))), (true ? ~ (0u) : _GLF_FUZZED(num_workgroup))))), 0u)))) / 1u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))), min(float(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))), float(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)))))) > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w) ^ 0u))) + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-325.773)), bool(false))))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-325.773)), bool(false)))))) - mat2(0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, false)))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))[0], _GLF_FUZZED(-5.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(22.84), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0), (true ? mat3((injectionSwitch), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-391.017, -2.7, 7.5, -637.867, -3827.0334, 6.7, -5.8, -34.90, -6148.1347)))))) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), (true ? (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(vec2(-70.06, 956.015)))))[1]), vec2(mat4x3(vec2(_GLF_FUZZED(22.84), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0), (true ? mat3((injectionSwitch), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-391.017, -2.7, 7.5, -637.867, -3827.0334, 6.7, -5.8, -34.90, -6148.1347)))))) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), (true ? (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(vec2(-70.06, 956.015)))))[1]), 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(22.84, max(22.84, 22.84))), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(vec2(-597.217, 691.904)))), (false ? _GLF_FUZZED((vec2(-6.8, -93.13))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(vec2(-597.217, 691.904)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))) : _GLF_FUZZED(-6.6)))), mix(vec2((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(false, true)))).x > injectionSwitch.y)))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)), mat2(1.0) * (mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-5.7))))), injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y)))) && true)), (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true))), abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(_GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(22.90) : _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)))))), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(-796.800)), vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), _GLF_IDENTITY(max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0))), (_GLF_IDENTITY(max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0))), min(max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0))), max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)))))) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(_GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(22.90) : _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)))))), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true))))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), max(vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0)), vec2(vec4((injectionSwitch), _GLF_IDENTITY(dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(tan(0.0), 1.0, 0.0))), 1.0))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(vec2((_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(22.90) : _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)))))), vec2(_GLF_FUZZED(22.84), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true))))[1]), bvec2(true, true)))).x > injectionSwitch.y)))) && true))) && true))))))), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY(vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)), clamp(vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat2x3(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(719.087), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8757.2014)), bvec2(true, false))).y, 1.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY(vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)), clamp(vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat2x3(vec2(injectionSwitch.y, 1.0), 0.0, 1.0, 0.0, 1.0))))))))) && true))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.35)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z], 4, _GLF_IDENTITY(64, min(64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - log(vec2(1.0, 1.0))))).y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(395.412)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(395.412)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)), false)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(395.412)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)), false)))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(97.74)), bool(false))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.0) : injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(false, true, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true)))))
      barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), clamp(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base[3])), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) >> uvec4(0u, 0u, 0u, 0u)), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, _GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)))))), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))))), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)))))).z], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}
