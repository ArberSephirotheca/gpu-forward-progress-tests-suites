#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(sinh(-1076.8374))) : 1.0)), 1.0)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-97.96), (vec4(injectionSwitch, 1.0, 0.0))[1], _GLF_FUZZED(-788.352), _GLF_FUZZED(1426.6168)), vec4((vec4(injectionSwitch, 1.0, 0.0))[0], _GLF_FUZZED(7.1), (vec4(injectionSwitch, 1.0, 0.0))[2], (vec4(injectionSwitch, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), ((injectionSwitch)) / cos(vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) >> 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))) + 1, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))))) ^ 0u)) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(25813))), _GLF_IDENTITY(64, 1 * (64)))), (64) - 0), 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))))))) | 0), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, clamp(6, 6, 6)))))))) * (0)), 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, (6) + 0), clamp(6, 6, 6)))))))) * (0)), 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, clamp(6, 6, 6))))))), (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6, clamp(6, 6, 6)))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(6, clamp(6, 6, 6)))), (~ (~ (_GLF_IDENTITY(6, clamp(6, 6, 6))))) << 0))))))) * 1)) * (0)), 1 * (0)), _GLF_IDENTITY((0) >> 0, ((0) >> 0) - 0)), _GLF_IDENTITY(0, max(0, 0)))) + ivec2(0, 0))) * ivec2(1, 1)), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))) + (ivec2(0, 0) << _GLF_IDENTITY(ivec2(4), ivec2(4))))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1 * _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0))))))), 0 | (_GLF_IDENTITY(1 * _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0))))))), int(int(1 * _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0))))))))))))), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))))) / 1), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(-6282, (-6282) >> 0)) : ~ (0))), ~ (0), ~ (0))))))))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, min((1) * 1, (1) * 1))) * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))))))), 0), max(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 | (1)) * _GLF_IDENTITY((0), ((0)) | ((0)))), (0) >> 0), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0))))), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), ((0)) << 0)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) - 0) * (0)), (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0))), _GLF_IDENTITY(0, max(0, 0)))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1) * (0), (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1) * (0), clamp(_GLF_IDENTITY(1, (1) / 1) * (0), _GLF_IDENTITY(1, (1) / 1) * (0), _GLF_IDENTITY(1, (1) / 1) * (0)))))), (0) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0)), (0) >> 0)) | 0), _GLF_IDENTITY(0, max(0, 0)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), clamp(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0)))))))), (0) >> 0), _GLF_IDENTITY(0, max(0, 0))))) / 1), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0)), (_GLF_IDENTITY(0, (0) | (0))) >> _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))), _GLF_IDENTITY(0, max(0, 0)))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY((0), 0 ^ ((0))) >> 0), _GLF_IDENTITY(0, max(0, 0))))))), 0), ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), clamp(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), 0 ^ (_GLF_IDENTITY(0, 1 * (0)))), _GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY(0, 0 | (0))) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) << ((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146)))), int(int(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146)))), int(int(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74458))), 0, 0)), 0, 0)), 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), 0))))) / 1), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0)))))) >> 0), _GLF_IDENTITY(0, max(0, 0)))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))))), 0 ^ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146)))), int(int(max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(76146)))))))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74458))), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74458)))) << 0), 0, 0)), 0, 0)), 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))) - (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), 0))))), ((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74458))), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-74458)))) << 0), 0, 0)), 0, 0)), 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))) - (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), 0)))))) - 0) / 1), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 0 | (1 * (0)))), _GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0)))))) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-39705) : 0))), _GLF_IDENTITY(0, max(0, 0)))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) >> 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))))))))), _GLF_IDENTITY(0, max(0, 0))))) ^ (ivec2(_GLF_IDENTITY(64, (64) >> 0), 0)))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) | ivec2(0, 0)), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, 64))))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) | (0 & 83767))), 0), ivec2(0, 0) | (ivec2(64, 0))), _GLF_IDENTITY(ivec2(64, 0), ~ (~ (ivec2(64, 0)))), ivec2(64, 0))), _GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), clamp(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), _GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), (ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0))))))) | ivec2(0, 0)), ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))))), (_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), clamp(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), _GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0)))))), (ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0))))))) | ivec2(0, 0)), ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 | (int(int(0))))))))) | ivec2(0, 0)), ivec2(0, 0), ivec2(0, 0)))) | ivec2(0, 0)) ^ (ivec2(64, 0)))), 0, _GLF_IDENTITY(1, (1) + 0))))), int(_GLF_IDENTITY(ivec3(64, 1, 1), (ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), min(0 ^ (0), 0 ^ (0))))) << 0))), (int(ivec3(64, 1, 0))) * 1)), 1, 1)) | ivec3(0, 0, 0)))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), max((0 >> _GLF_IDENTITY(int(7), int(7))), (0 >> _GLF_IDENTITY(int(7), int(7))))), 0, 1))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))))))))), (bool(bvec2(_GLF_DEAD(false), true))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true))), false))), false, true)), false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(false, (false) && true)))), false, true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), false, true)))))))))))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(892.896) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false, _GLF_IDENTITY(false || ((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false), (false || ((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false)) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false, false || ((_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), false || (_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), true && (bool(bvec2(bool(bvec3(true, false, false)), false))))))))))) || false)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false, false || ((_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), false || (_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), true && (bool(bvec2(bool(bvec3(true, false, false)), false))))))))))) || false)))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), (_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(bvec4(bool(bvec3(true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))) || false, false || ((_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), false || (_GLF_IDENTITY(bool(bvec2(bool(bvec3(true, false, false)), false)), true && (bool(bvec2(bool(bvec3(true, false, false)), false))))))))))) || false)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (bool(bvec2(_GLF_DEAD(false), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-34.24), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(52.42)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.9) : injectionSwitch.x)))))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, true))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true)))))))), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) : _GLF_FUZZED(2.7))) > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.y), bool(true)))))))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, uint(uvec4((virtual_gid) | 0u, 0u, 0u, ((_GLF_IDENTITY(false ? 3810u : 113226u, 0u | (false ? 3810u : _GLF_IDENTITY(113226u, ~ (~ (_GLF_IDENTITY(113226u, (113226u) << 0u))))))) & _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))))))], _GLF_IDENTITY(_GLF_IDENTITY(read, 0u | (read)), _GLF_IDENTITY(_GLF_IDENTITY(min(read, read), uint(uvec2(min(read, read), 1u))), _GLF_IDENTITY((min(read, read)) >> 0u, 0u ^ (_GLF_IDENTITY((min(read, read)) >> 0u, max((min(read, read)) >> 0u, (min(read, read)) >> 0u)))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(64814, ~ (~ (64814)))) : _GLF_IDENTITY(4, min(4, 4)))))), int(int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))), ! (! (false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((! (! (_GLF_DEAD(false)))), false || ((! (! (_GLF_DEAD(false))))))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (! (_GLF_DEAD(false))) || false))))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))))))) || false), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), false || (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), true && (! (! (! (! (_GLF_DEAD(false)))))))) || false))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, true, false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), false || (! (! (! (! (_GLF_DEAD(false))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), false || (! (! (! (! (_GLF_DEAD(false))))))), true, true))) || false))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false), ! _GLF_IDENTITY((! (! (! (_GLF_DEAD(false))))), ((! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
