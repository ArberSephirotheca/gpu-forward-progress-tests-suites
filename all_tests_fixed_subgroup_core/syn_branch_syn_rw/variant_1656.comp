#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 bvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 float _f1;
 mat2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 bool _f0;
 mat2x3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 float _f1;
 mat2x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 bool _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_0 _f1;
 vec4 _f2;
 ivec2 _f3;
 ivec4 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec4 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 _GLF_struct_6 _GLF_struct_replacement_6;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = subgroup_id;
  }
uint subgroup_size = 16;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_size;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
  }
 else
  {
  }
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y;
 uint virtual_gid = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
  }
 do
  {
   GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x;
 uint read = atomicLoad(buf[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = read;
 atomicStore(buf[_GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)
      {
       int i = 0;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           atomicStore(checker[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
          }
        }
      }
     else
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           atomicStore(checker[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], _GLF_struct_replacement_6.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
